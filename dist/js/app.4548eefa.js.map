{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/components/SVGTextBox.vue?835e","webpack:///./src/components/node_content/Index.vue?66a2","webpack:///./src/components/menu/Index.vue?84c3","webpack:///./src/components/node_content/Markdown.vue?6fbf","webpack:///./src/components/menu/Index.vue?425f","webpack:///./src/assets/images/discord-icon-svgrepo-com.svg","webpack:///./src/App.vue","webpack:///./src/store/pin/index.ts","webpack:///./src/store/precondition/index.ts","webpack:///./src/store/position_change_permits/index.ts","webpack:///./src/tools/errorkv.ts","webpack:///./src/tools/utils.ts","webpack:///./src/store/tree/helpers.ts","webpack:///./src/api/helpers.ts","webpack:///./src/api/api.ts","webpack:///./src/tools/graphics.ts","webpack:///./src/store/tree/index.ts","webpack:///./src/store/history/index.ts","webpack:///./src/store/zoom_pan/index.ts","webpack:///./src/store/user/index.ts","webpack:///./src/store/node_content/index.ts","webpack:///./src/store/search_result/index.ts","webpack:///./src/tools/textsearch.ts","webpack:///./src/store/helpers.ts","webpack:///./src/store/index.ts","webpack:///./src/App.vue?3acc","webpack:///./src/App.vue?dfb6","webpack:///./src/views/PasswordLogin.vue","webpack:///./src/views/PasswordLogin.vue?76a3","webpack:///./src/views/PasswordLogin.vue?e3c1","webpack:///./src/views/Home.vue","webpack:///./src/components/map/Map.vue","webpack:///./src/components/map_layer/MapLayer.vue","webpack:///./src/components/map_layer/MapLayer.ts","webpack:///./src/components/SVGTextBox.ts","webpack:///./src/components/map_layer/MapLayer.vue?1431","webpack:///./src/components/map_layer/MapLayer.vue?0796","webpack:///./src/components/map/MapPan.ts","webpack:///./src/components/pin_layer/PinLayer.vue","webpack:///./src/components/pin_layer/PinMarker.vue","webpack:///./src/components/pin_layer/PinMarker.vue?bbb0","webpack:///./src/components/pin_layer/PinMarker.vue?9aa1","webpack:///./src/components/SVGTextBox.vue","webpack:///./src/components/SVGTextBox.vue?ae08","webpack:///./src/components/SVGTextBox.vue?ec46","webpack:///./src/components/pin_layer/PinLayer.vue?738a","webpack:///./src/components/pin_layer/PinLayer.vue?8bd0","webpack:///./src/components/precondition_layer/PreconditionLayer.vue","webpack:///./src/components/precondition_layer/PreconditionArrow.vue","webpack:///./src/components/precondition_layer/PreconditionArrow.vue?e51e","webpack:///./src/components/precondition_layer/PreconditionArrow.vue?74c6","webpack:///./src/views/Home.ts","webpack:///./src/components/precondition_layer/PreconditionLayer.vue?6cdc","webpack:///./src/components/precondition_layer/PreconditionLayer.vue?73c2","webpack:///./src/components/map/Map.vue?b432","webpack:///./src/components/map/Map.vue?8505","webpack:///./src/components/node_content/Index.vue","webpack:///./src/components/node_content/Preconditions.vue","webpack:///./src/components/node_content/Preconditions.vue?b5b4","webpack:///./src/components/node_content/Preconditions.vue?c4ee","webpack:///./src/components/node_content/Markdown.vue","webpack:///./src/components/node_content/Markdown.vue?6e5c","webpack:///./src/components/node_content/Markdown.vue?9efd","webpack:///./src/components/node_content/ChangeLog.vue","webpack:///./src/store/change_log/index.ts","webpack:///./src/api/change_log.ts","webpack:///./src/components/node_content/ChangeLog.vue?ff01","webpack:///./src/components/node_content/ChangeLog.vue?5753","webpack:///./src/components/node_content/Index.vue?70b7","webpack:///./src/components/node_content/Index.vue?1dc7","webpack:///./src/components/menu/Index.vue","webpack:///./src/components/menu/PinNode.vue","webpack:///./src/components/menu/PinNode.vue?ca8f","webpack:///./src/components/menu/AddPrecondition.vue","webpack:///./src/components/menu/AddPrecondition.vue?f83e","webpack:///./src/components/menu/AddNode.vue","webpack:///./src/components/menu/AddNode.vue?9c98","webpack:///./src/components/menu/RemoveNode.vue","webpack:///./src/components/menu/RemoveNode.vue?2cae","webpack:///./src/components/menu/EditMode.vue","webpack:///./src/components/menu/EditMode.vue?1f8e","webpack:///./src/components/menu/UnpinNode.vue","webpack:///./src/components/menu/UnpinNode.vue?d34c","webpack:///./src/components/menu/CutPaste.vue","webpack:///./src/components/menu/CutPaste.vue?91c8","webpack:///./src/components/menu/Feedback.vue","webpack:///./src/components/menu/Feedback.vue?098b","webpack:///./src/components/menu/Textsearch.vue","webpack:///./src/components/menu/Textsearch.vue?1edb","webpack:///./src/components/menu/Textsearch.vue?31d6","webpack:///./src/components/menu/MapChangeLog.vue","webpack:///./src/components/menu/MapChangeLog.vue?c7fd","webpack:///./src/components/menu/MapChangeLog.vue?978e","webpack:///./src/components/menu/Index.vue?075d","webpack:///./src/views/Home.vue?d5e7","webpack:///./src/views/Home.vue?ab8c","webpack:///./src/views/Change.vue","webpack:///./src/views/Change.vue?708d","webpack:///./src/views/Change.vue?8302","webpack:///./src/views/NodeDescription.vue","webpack:///./src/views/NodeDescription.vue?fd3e","webpack:///./src/views/NodeDescription.vue?8bca","webpack:///./src/views/NotFound.vue","webpack:///./src/views/NotFound.vue?8fd3","webpack:///./src/router/index.ts","webpack:///./src/main.ts","webpack:///./node_modules/markdown-it-imsize/lib/imsize/types sync ^\\.\\/.*$","webpack:///./src/components/map_layer/MapLayer.vue?40ec"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","mutations","SET_PINS","ADD_TO_PINS","REMOVE_PIN","ADD_TO_PINS_REVERSE","AddPin","RemovePin","namespaced","state","pins","pinsReverse","actions","v","commit","rootState","currentParent","tree","nodeRecord","nodeId","parent","parentIds","id","parentId","pinId","index","indexOf","SET_PRECONDITIONS","UPDATE_PRECONDITIONS","preconditions","nodeID","preconditionIDs","PERMISSION_TIMEOUT","ADD_NODES","REMOVE_NODES","CheckNodeID","permittedNodeIDs","nodeIDs","Date","getTime","message","kv","code","err","Error","error","ROUND_EPSILON","mod","round","num","Math","pow","clone","printError","msg","console","kvArr","findMapNode","mapNodeLayers","level","layer","Number","findMapNodes","ids","createNewNode","title","center","position","children","getNewNodeCenter","addRandom","parentMapNode","fromCenterVectors","border","map","from","to","maxFromCenterVector","getVectorLength","coeff","random","x","y","maxDiagChild","maxDiagChildMapNode","maxDiagChildId","child","childMapNode","childId","getMaxDiagonal","childDiag","err1","maxDiag","err2","finalMaxDiag","newNodeCenter","vectorOnNumber","modifiedNode","updatePosition","item","convertPosition","normalizedPosition","node","layerLevel","treeToMapNodeLayers","ls","mergeMapNodeLayers","convertChildren","Array","isArray","filter","childID","sort","forEach","arr","toString","values","convertDBMapToTree","dbNodes","root","stack","pop","FUNCTION_DOMAIN","database","ref","update","debouncedUpdate","ROOT_WIDTH","innerWidth","ROOT_HEIGHT","innerHeight","ST_WIDTH","ST_HEIGHT","initFirebase","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","analytics","callFunction","method","params","currentUser","auth","getIdToken","idToken","a","response","e","getMapFromDB","snapshot","exists","val","getMapFromStorage","user","storage","uid","getDownloadURL","url","getMap","getPins","savePins","putString","btoa","unescape","encodeURIComponent","JSON","stringify","getPreconditions","savePreconditions","set","preconditionIds","subscribeMapNodeChange","cb","this","subscribeDBChange","snap","subscribeNodeContentChange","subscribePreconditionNodeChange","unsubscribeMapNodeChange","off","path","on","unsubscribeDBChange","transaction","setNode","setPublicUserData","userID","displayName","discordName","log","getNode","pr","generateKey","findKeyInList","orderByValue","equalTo","limitToFirst","findKeyOfChild","getUserComments","nodeComment","getNodeContent","NORMALIZED_BORDER","api","sqrt","polygonToTurf","pp","point","isInside","polygon","polygonToPCPolygon","abs","intersect","p1","p2","np1","np2","cf","tp1","tp2","polygonIntersect","intersection","resultPolys","poly","resultPoly","getBoundingBorders","minX","reduce","previousValue","currentValue","minY","maxX","maxY","leftBottom","rightTop","getVoronoiCellsInSquare","centers","turfPoints","collection","cells","bbox","cellMap","features","cell","cellBorder","geometry","coordinates","getVoronoiCells","outerBorder","bb","res","BoundingBorders","intersections","polygonFill","selectedNodeId","currentNodeId","selectedNodePreconditionIds","polygonFillOpacity","polygonToPath","join","treeToNodeRecord","transferToPoint","vector","addVector","b","bTransferred","aTr","transferPointOnVector","getVectorIntersection","v1","v2","x1","y1","x2","y2","x3","y3","x4","y4","denom","numeA","numeB","uA","uB","morphChildrenPoints","oldBorder","newBorder","oldPoints","oldCenterTf","newCenterTf","oldCenter","newCenter","maxDiameter","max","newPoints","oldPoint","centerToPoint","oldBorderIntersection","segment","newBorderIntersection","NewEmptyVector","diagonals","middle","maxDiagonal","diag","type","parentID","convertedPosition","morphedPositions","normalizedBorder","tmp","rootBorder","rootPosition","keys","treeLayers","lastTreeLayer","lastMapNodeLayer","newTreeLayer","newMapNodeLayer","treeNode","tmpMap","strPos","firstId","secondId","treeNodeChildren","denormalizedPosition","ch","recipientLayers","insertedLayers","startFromLevel","changeTypeEnum","XSkew","ROOT_BORDER","ROOT_CENTER","SET_SELECTED_NODE_ID","SET_TREE","UPDATE_NODE_POSITION","REMOVE_NODE","handleMapNodeUpdate","getters","selectedNode","dbNode","dispatch","dbNodeRecord","oldDBNode","newChildren","includes","removedChildren","returnError","addedDBNode","toProcess","inProcessNode","childNode","ind","findIndex","ADD_ZOOM","ADD_PAN","SET_PAN","SET_ZOOM_CENTER","zoomDebounce","debouncedZoom","panDebounce","debouncedPan","ZOOM_SENSITIVITY","PAN_SENSITIVITY","zoom","pan","zoomCenter","delta","newZoom","SET_USER","signIn","signOut","signInWithPopup","GoogleAuthProvider","ADD_CUT_PASTE","ADD_CREATE","ADD_REMOVE","ADD_POSITION_CHANGE","changeTypes","CUT_PASTE","CREATE","REMOVE","POSITION_CHANGE","stableChangeList","localChangeList","change","newParentID","firstOldPosition","oldPosition","newPosition","SET_CONTENTS","SET_USER_COMMENTS","SET_NODE_CONTENT","SET_NODE_COMMENT","setNodeContent","setNodeComment","EmptyNodeContent","content","createContentIfNotExist","nodeContents","EmptyNodeComment","comment","createCommentIfNotExist","userNodeComments","isAnonymous","SET_NODE_IDS","language","tokenize","text","add","search","initMap","convErr","fetchPins","initPreconditions","initNodeContents","nodeContent","userComments","initData","init","updateNodePosition","createNode","cutPasteNode","removeNode","setEditMode","confirmSignInPopup","SET_EDIT_MODE","SET_SUBSCRIBED_NODE_IDS","debouncedPositionSet","normalizedNewNodeCenter","editModeOn","subscribedNodeIDs","confirm","require","header","acceptLabel","rejectLabel","accept","reject","onAuthStateChanged","changedNode","newDBNode","newKey","updateMap","normalizedChangedCenter","oldParent","newParent","oldKey","allChildrenID","allChildrenIDMap","moveToTrash","precondition","parentNodeID","mapNode","args","pin","positionChangePermits","zoomPan","history","searchResult","useStore","setup","store","render","login","emailEl","document","getElementById","passwordEl","signInWithEmailAndPassword","show","clickedTitleId","setSelectPreconditionON","setSelectPreconditionOFF","layers","visibleZoomedPanedLayers","viewBox","pin-nodes","pinNodes","searchResultPinNodes","searchResultNodeIDs","nodeDragging","titleClick","titleOver","titleLeave","mapDragging","xmlns","mapID","style","map-nodes","border-color","borderColor","font-color","fontColor","font-size","fontSize","font-opacity","fontOpacity","map-id","draggingNode","visibleTitleIds","color","font-weight","text-decoration","mapNodes","stroke","fill","fill-opacity","stroke-width","points","pointer-events","TITLE_PREFIX","font-family","textWeight","textColor","textDecoration","class","splitLines","line","titleBox","alignment-baseline","width","height","titleMouseDown","cursor","mouseMoveListener","emit","event","mouseDownInfo","dragStart","movementX","movementY","mouseUpListener","nodeToTitleBox","nodes","titleIdPrefix","dom","getBoundingClientRect","mps","immediate","maxCharNum","words","split","lines","currLine","nextLine","emits","props","mapId","String","required","validator","prop","ctx","titleMouseDownInfo","mouseMove","mouseUp","addEventListener","removeEventListener","searchResultNodeIDsMap","methods","__scopeId","mouseDownBg","mouseDown","visiblePinNodes","useLineBreak","titleXY","line-height","max-char-per-line","fontWeight","titleBoxClick","transform","WIDTH","HEIGHT","fontFamily","lineHeight","Boolean","maxCharPerLine","components","SVGTextBox","PinMarker","allPinNodes","PIN_MARKER_HEIGHT","PIN_MARKER_WIDTH","alignedXY","markerWidth","markerHeight","refX","refY","orient","markerId","visibleTitleNodes","visibleTitleNodeBoxes","titleBoxOver","titleBoxLeave","marker-end","MIN_VISIBLE_NUM_IN_LAYER","zoomAndPanPoint","zoomAndPanPolygon","findCentralNode","viewport","zoomFactor","underCursorNodeId","viewportArea","nodesToCheck","borderToCheck","minDist","Infinity","nodeCenter","dist","underCursorNodeArea","floor","maxIntersectNodeId","filterNodesAndLayers","resultLayers","currentNode","upperLayer","firstLayer","secondLayer","childOfChild","thirdLayer","zoomAnPanLayers","PreconditionArrow","zoomPanState","zoomedPannedSelectedNode","PreconditionLayer","PinLayer","MapLayer","clientX","clientY","deltaY","passive","prevDist","prevPoint","touches","hypot","pageX","pageY","idx","size","levelSizes","0","1","2","3","levelColors","rows","autoResize","placeholder","changeNodeTitle","$event","selectedNodeContent","changeContent","changeComment","checkAuthorized","node-id","href","remove","icon","Button","renderedContent","setEditOn","editOn","target","mdKatex","mdImsize","mdContainer","md","use","output","validate","trim","match","tokens","info","nesting","utils","escapeHtml","txtarea","display","focus","visible","complainModalVisible","dismissableMask","closable","modal","closeOnEscape","footer","complainChangeLink","legend","toggleable","collapsed","toggle","isAuthorized","changes","timestamp","toLocaleDateString","toLocaleTimeString","action","subtitle","userDisplayName","showComplain","changeLogID","ActionType","Name","newName","Content","newContent","subscribeChangeLog","andConditions","q","changeLogs","doc","attributes","valueBefore","valueAfter","added","removed","getNodeName","nodeName","prTrash","getUserDisplayName","userName","getUserDisplayNames","userIDs","fetches","Promise","all","responses","getNodeNames","getPathFromNodeName","nodeNames","nodePath","subscribeChangeLogEnriched","userNames","changeLog","ParentID","then","resp","changeLogsEnriched","nodeIDPath","beforePath","afterPath","parentNodeIDBefore","parentNodeIDBeforePath","parentNodeBeforeName","parentNodeIDAfter","parentNodeIDAfterPath","parentNodeAfterName","isRemoved","isAdded","computed","Dialog","Fieldset","Card","unsubscribe","newArgs","oldArgs","Markdown","TextArea","SectionPreconditions","ChangeLog","preventDefault","$style","wrapper","email","isNodeSelected","$emit","isPinned","toggleAddDialog","addDialogVisible","label","cancelAdd","selectedParent","options","parents","optionLabel","Listbox","treeState","newNodeTitle","selectedNodeParents","showAddBanner","addBannerVisible","preconditionNode","targetNode","preconditionsIDs","selectedNodeTitle","Input","newNodeID","toggleDialog","disabled","cancel","unpin","cut","cutNodeID","paste","oldParentChildrenID","newParentChildrenID","alt","src","iconPos","send","open","doSearch","InputText","getActionDescription","Feedback","CutPaste","UnpinNode","PinNode","AddNode","AddPrecondition","RemoveNode","EditMode","TextSearch","MapChangeLog","undefined","cssModules","__cssModules","Map","Menu","NodeContent","ConfirmDialog","Toast","router","route","pinState","searchResultState","selectPreconditionIsOn","updateLayers","centralNodeId","filteredLayers","reverse","visibleLayers","isFirstPageLoad","firstNode","newCentralNodeId","deep","layersToZoomAndPan","pinNodeIDs","pinMapNodes","pinMapNode","cl","searchResultMapNodes","searchResultMapNode","hasDragPermit","initial","after","docRef","docSnap","once","script","routes","component","PasswordLogin","NodeDescription","Change","Home","NotFound","App","mount","webpackContext","req","webpackContextResolve","resolve"],"mappings":"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","file":"js/app.4548eefa.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./SVGTextBox.vue?vue&type=style&index=0&id=78117b36&scoped=true&lang=css\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Index.vue?vue&type=style&index=0&id=08de50d0&scoped=true&lang=css\"","export { default } from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-0-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-0-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-0-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Index.vue?vue&type=style&index=0&id=caef8148&module=true&lang=css\"; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-0-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-0-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-0-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Index.vue?vue&type=style&index=0&id=caef8148&module=true&lang=css\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Markdown.vue?vue&type=style&index=0&id=92fe9ff2&scoped=true&lang=css\"","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Index_wrapper_1nXRC\"};","module.exports = __webpack_public_path__ + \"img/discord-icon-svgrepo-com.147f41c9.svg\";","<template>\n  <router-view />\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from \"vue\";\nimport { useStore, actions } from \"@/store\";\nexport default defineComponent({\n  setup() {\n    const store = useStore();\n    store.dispatch(actions.init);\n  }\n});\n</script>\n","import { Commit } from \"vuex\";\nimport { NodeRecordItem } from \"@/store/tree\";\n\nexport type Pins = Record<\n  string /* node_id of pinned node */,\n  string[] /* list of parents where this node_id is visible */\n>;\n\nexport interface State {\n  pins: Pins;\n  pinsReverse: Record<\n    string /* node_id of parent whose children contain pinned nodes (that must be visible) */,\n    string[] /* array of pins (= node ids) that is visible in this node_id */\n  >;\n}\n\nexport const mutations = {\n  SET_PINS: \"SET_PINS\",\n  ADD_TO_PINS: \"ADD_TO_PINS\",\n  REMOVE_PIN: \"REMOVE_PIN\",\n  ADD_TO_PINS_REVERSE: \"ADD_TO_PINS_REVERSE\"\n};\n\nexport const actions = {\n  AddPin: \"AddPin\",\n  RemovePin: \"RemovePin\"\n};\n\nexport const store = {\n  namespaced: true,\n  state: {\n    pins: {},\n    pinsReverse: {}\n  },\n  actions: {\n    // had to use action instead of mutation to get access to rootState https://github.com/vuejs/vuex/issues/344\n    [actions.AddPin](\n      {\n        commit,\n        rootState\n      }: {\n        commit: Commit;\n        rootState: { tree: { nodeRecord: Record<string, NodeRecordItem> } };\n      },\n      v: { nodeId: string; parentId: string }\n    ) {\n      // get all parents of nodeId until parentID\n      let currentParent = rootState.tree.nodeRecord[v.nodeId].parent;\n      if (!currentParent) {\n        return;\n      }\n      const parentIds = [];\n      while (currentParent && currentParent.id != v.parentId) {\n        parentIds.push(currentParent.id);\n        currentParent = rootState.tree.nodeRecord[currentParent.id].parent;\n      }\n      parentIds.push(v.parentId);\n      // Set them to pins\n      commit(mutations.ADD_TO_PINS, { nodeId: v.nodeId, parentIds });\n\n      // And for each parent add pined node id to it\n      for (const parentId of parentIds) {\n        commit(mutations.ADD_TO_PINS_REVERSE, {\n          nodeId: parentId,\n          pinId: v.nodeId\n        });\n      }\n    },\n    [actions.RemovePin]({ commit }: { commit: Commit }, nodeId: string) {\n      commit(mutations.REMOVE_PIN, nodeId);\n    }\n  },\n  mutations: {\n    [mutations.SET_PINS](state: State, pins: Pins) {\n      state.pins = pins;\n      state.pinsReverse = {};\n      for (const pinId in pins) {\n        for (const parentId of pins[pinId]) {\n          if (!state.pinsReverse[parentId]) {\n            state.pinsReverse[parentId] = [];\n          }\n          state.pinsReverse[parentId].push(pinId);\n        }\n      }\n    },\n    [mutations.ADD_TO_PINS](\n      state: State,\n      v: { nodeId: string; parentIds: string[] }\n    ) {\n      state.pins[v.nodeId] = v.parentIds;\n    },\n    [mutations.ADD_TO_PINS_REVERSE](\n      state: State,\n      v: { nodeId: string; pinId: string }\n    ) {\n      if (!state.pinsReverse[v.nodeId]) {\n        state.pinsReverse[v.nodeId] = [];\n      }\n      state.pinsReverse[v.nodeId].push(v.pinId);\n    },\n    [mutations.REMOVE_PIN](state: State, nodeId: string) {\n      for (const parentId of state.pins[nodeId]) {\n        const index = state.pinsReverse[parentId].indexOf(nodeId);\n        state.pinsReverse[parentId].splice(index, 1);\n      }\n      delete state.pins[nodeId];\n    }\n  }\n};\n","\nexport type Preconditions = Record<\n  string /* id of node with premises */,\n  string[] /* ids of premise nodes (parent nodes) */\n>;\n\nexport interface State {\n  preconditions: Preconditions;\n}\n\nexport const mutations = {\n  SET_PRECONDITIONS: \"SET_PRECONDITIONS\",\n  UPDATE_PRECONDITIONS: \"UPDATE_PRECONDITIONS\",\n};\n\nexport const store = {\n  namespaced: true,\n  state: {\n    preconditions: {} as Record<string, string[]>\n  },\n  mutations: {\n    [mutations.SET_PRECONDITIONS](state: State, preconditions: Preconditions) {\n      state.preconditions = preconditions;\n    },\n    [mutations.UPDATE_PRECONDITIONS](\n      state: State,\n      v: { nodeID: string; preconditionIDs: Array<string> }\n    ) {\n      if (!state.preconditions[v.nodeID]) {\n        state.preconditions[v.nodeID] = [];\n      }\n      state.preconditions[v.nodeID] = v.preconditionIDs;\n    },\n  }\n};\n","/**\n * This store contains nodeIDs that is permitted to move (change positions)\n * The idea is to restrict position change only for just added nodes and its neighbours\n * Otherwise there is risk that everybody will to do little tweaks in node coordinates that will\n * sum up in constant map visual mess\n */\nimport {Commit, Dispatch} from \"vuex\";\nconst PERMISSION_TIMEOUT = 60*60*1000 // time after which permit is revoked (in milliseconds)\n\nexport const mutations = {\n  ADD_NODES: \"ADD_NODES\",\n  REMOVE_NODES: \"REMOVE_NODES\",\n};\n\nexport const actions = {\n  CheckNodeID: \"CheckNodeID\",\n};\n\nexport interface State {\n  permittedNodeIDs: Record<string, number> // key is nodeID, value is created_at\n}\n\nexport const store = {\n  namespaced: true,\n  state: {\n    permittedNodeIDs: {},\n  },\n  mutations: {\n    [mutations.ADD_NODES](state: State, nodeIDs: string) {\n      for (const nodeID of nodeIDs) {\n        state.permittedNodeIDs[nodeID] = (new Date()).getTime()\n      }\n    },\n    [mutations.REMOVE_NODES](state: State, nodeIDs: string) {\n      for (const nodeID of nodeIDs) {\n        delete state.permittedNodeIDs[nodeID]\n      }\n    },\n  },\n  actions: {\n    [actions.CheckNodeID](\n      { commit, state }: { commit: Commit; state: State },\n      nodeID: string\n    ) {\n      if (!!state.permittedNodeIDs[nodeID] && (new Date()).getTime() < state.permittedNodeIDs[nodeID] + PERMISSION_TIMEOUT) {\n        return true\n      }\n      if (state.permittedNodeIDs[nodeID]) {\n        commit(mutations.REMOVE_NODES, [nodeID])\n      }\n      return false\n    }\n  }\n};\n","/* eslint-disable  @typescript-eslint/no-explicit-any */\nimport { ErrorKV } from \"@/types/errorkv\";\n\nexport const UNAUTHORIZED = 401;\n\nexport default (\n  message: string,\n  kv: Record<string, any>,\n  code?: number\n): ErrorKV => {\n  const err = new Error(message);\n\n  return {\n    error: err,\n    kv: kv,\n    code\n  };\n};\n","import { cloneDeep } from \"lodash\";\nimport { Point, Tree, TreeSkeleton, Viewport } from \"@/types/graphics\";\nimport { ErrorKV } from \"@/types/errorkv\";\nimport NewErrorKV from \"../tools/errorkv\";\nimport { getBoundingBorders, getVoronoiCells } from \"../tools/graphics\";\n\nexport const ROUND_EPSILON = 0;\n\n/**\n * Correct modulo on negative numbers\n * @param n\n * @param m\n */\nexport function mod(n: number, m: number): number {\n  return ((n % m) + m) % m;\n}\n\nexport function round(num: number): number {\n  const t = Math.pow(10, ROUND_EPSILON);\n  return Math.round(num * t) / t;\n}\n\nexport function sleep(ms: number) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\n/* eslint-disable  @typescript-eslint/no-explicit-any */\nexport function clone(v: any): any {\n  return cloneDeep(v);\n}\n\nexport function generateTreeSkeleton(\n  levelsNum: number,\n  numOnLevel: number\n): TreeSkeleton {\n  let globalID = 0;\n  const root = { id: String(globalID), children: [] };\n  let toProcess: TreeSkeleton[] = [root];\n  for (let i = 1; i < levelsNum; i++) {\n    const nextToProcess = [];\n    while (toProcess.length) {\n      const node = toProcess.shift();\n      node!.children = [];\n      for (let j = 0; j < numOnLevel; j++) {\n        globalID++;\n        const child = { id: String(globalID) };\n        node!.children.push(child);\n        nextToProcess.push(child);\n      }\n    }\n    toProcess = nextToProcess;\n  }\n\n  return root;\n}\n\n/**\n * Fill TreeSkeleton with default values to make real Tree\n * @param sk\n */\nexport function skeletonToTree(sk: TreeSkeleton, idAsTitle: boolean): Tree {\n  const res = clone(sk);\n  const stack: TreeSkeleton[] = [res];\n  while (stack.length) {\n    const node = stack.pop();\n    if (!node) {\n      continue;\n    }\n    node.id = String(node.id);\n    if (!node.title) {\n      node.title = idAsTitle ? String(node.id) : \"\";\n    }\n    if (!node.position) {\n      node.position = { x: 0, y: 0 };\n    }\n    if (!node.children) {\n      node.children = [];\n    }\n    stack.push(...node.children);\n  }\n  return res;\n}\n\n/**\n * Traverse tree and fill position\n */\nexport function fillTreePositions(\n  tree: Tree,\n  rootWH: Viewport\n): ErrorKV | null {\n  if (tree.id !== \"0\") {\n    return NewErrorKV(\"fillTreePositions: root node id must be '0'\", { tree });\n  }\n  tree.position = { x: rootWH.width / 2, y: rootWH.height / 2 };\n  const nodeBorders: Record<string, { topLeft: Point; bottomRight: Point }> = {\n    0: {\n      topLeft: { x: 0, y: 0 },\n      bottomRight: { x: rootWH.width, y: rootWH.height }\n    }\n  };\n  const stack: Tree[] = [tree];\n  while (stack.length) {\n    const node = stack.pop();\n    if (!node || !node.children || !node.children.length) {\n      continue;\n    }\n    const borderBox = nodeBorders[node.id];\n    const height = borderBox.bottomRight.y - borderBox.topLeft.y;\n    const width = borderBox.bottomRight.x - borderBox.topLeft.x;\n    if (height > width) {\n      for (const i in node.children) {\n        node.children[i].position = {\n          x: node.position!.x,\n          y:\n            borderBox.topLeft.y +\n            (Number(i) + 1 / 2) * (height / node.children.length)\n        };\n      }\n    } else {\n      for (const i in node.children) {\n        node.children[i].position = {\n          x:\n            borderBox.topLeft.x +\n            ((Number(i) + 1 / 2) * width) / node.children.length,\n          y: node.position!.y\n        };\n      }\n    }\n\n    // compute children borders as voronoi cells bounding boxes\n    const [cells, err] = getVoronoiCells(\n      [\n        { x: borderBox.topLeft.x, y: borderBox.topLeft.y },\n        { x: borderBox.bottomRight.x, y: borderBox.topLeft.y },\n        { x: borderBox.bottomRight.x, y: borderBox.bottomRight.y },\n        { x: borderBox.topLeft.x, y: borderBox.bottomRight.y }\n      ],\n      node.children.map(ch => ch.position)\n    );\n    if (err) {\n      return NewErrorKV(\"fillTreePositions: error in getVoronoiCells\", { err });\n    }\n    for (const i in cells) {\n      const cellBBox = getBoundingBorders(cells[i].border);\n      nodeBorders[node.children[i].id] = {\n        topLeft: cellBBox.leftBottom,\n        bottomRight: cellBBox.rightTop\n      };\n    }\n\n    stack.push(...node.children);\n  }\n\n  return null;\n}\n\nexport function printError(msg: string, kv: any) {\n  if (!kv) {\n    console.error(msg);\n  }\n\n  // const callback = function(stackframes: StackFrame[]) {\n  //   const stringifiedStack = stackframes.map(function(sf) {\n  //     return sf.toString();\n  //   }).join('\\n');\n  //   console.error(msg, stringifiedStack);\n  // };\n  //\n  // const errBack = function(e: Error) { console.log(e.message); };\n  //\n  const kvArr = [];\n  for (const i in kv) {\n    kvArr.push(i, kv[i]);\n    // if (kv[i] instanceof Error) {\n    //   StackTrace.get({offline: true}).then(callback).catch(errBack);\n    // }\n  }\n\n  console.error(msg, ...kvArr);\n}\n\n","import { MapNode, Point, Tree } from \"@/types/graphics\";\nimport {\n  convertPosition,\n  getMaxDiagonal,\n  getVectorLength,\n  mergeMapNodeLayers,\n  treeToMapNodeLayers,\n  vectorOnNumber\n} from \"../../tools/graphics\";\nimport { ErrorKV } from \"@/types/errorkv\";\nimport NewErrorKV from \"../../tools/errorkv\";\nimport { clone } from \"../../tools/utils\";\nimport { NodeRecordItem } from \"@/store/tree/index\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nexport function findMapNode(\n  id: string,\n  mapNodeLayers: Array<Record<string, MapNode>>\n): [MapNode | null, number | null] {\n  for (const level in mapNodeLayers) {\n    const layer = mapNodeLayers[Number(level)];\n    if (layer && layer[id]) {\n      return [layer[id], Number(level)];\n    }\n  }\n\n  return [null, null];\n}\n\nexport function findMapNodes(\n  ids: string[],\n  mapNodeLayers: Array<Record<string, MapNode>>\n): MapNode[] {\n  const result: MapNode[] = [];\n  for (const layer of mapNodeLayers) {\n    if (!layer) {\n      continue;\n    }\n    for (const id of ids) {\n      if (layer[id]) {\n        result.push(layer[id]);\n      }\n    }\n  }\n\n  return result;\n}\n\nexport function createNewNode(title: string, center: Point): Tree {\n  return {\n    id: uuidv4(),\n    position: center,\n    title: title,\n    children: []\n  } as Tree;\n}\n\n/**\n * Вычисляет где можно поставить центр для нового подузла узла parent\n *\n * Логика добавления следующая.\n * Обозначим координаты центра узла parent как (Xc, Yc)\n * Если в узле нет ни одного подузла, то находим наибольшее расстояние между (Xc, Yc)\n * и вершинами границы, делим вектор соединяющий (Xc, Yc) и эту вершину пополам\n * и ставим там центр нового подузла\n *\n * Если в узле есть подузлы, берем подузел с наибольшей диагональю,\n * находим в нем наибольшую диагональ соединяющую 2 вершины границы,\n * делим ее пополам, старый центр ставим в центре одной половины, новый в центре другой.\n *\n * Добавляем рандом (см баг https://sci-map.atlassian.net/browse/SM-118)\n * @param parent\n * @param mapNodeLayers\n * @param addRandom\n */\nexport function getNewNodeCenter(\n  parent: Tree,\n  mapNodeLayers: Array<Record<number, MapNode>>,\n  addRandom: boolean,\n): [\n  Point | null, // new node center\n  Tree | null, // existing node with corrected center (if any)\n  ErrorKV // error (if any)\n] {\n  const [parentMapNode] = findMapNode(parent.id, mapNodeLayers);\n  if (parentMapNode === null) {\n    return [\n      null,\n      null,\n      NewErrorKV(\"getNewNodeCenter: cannot find mapNode for parent\", {\n        parentId: parent.id,\n        mapNodeLayers: mapNodeLayers\n      })\n    ];\n  }\n\n  if (parent.children.length === 0) {\n    const fromCenterVectors = parentMapNode.border.map(p => ({\n      from: parentMapNode.center,\n      to: p\n    }));\n    let maxFromCenterVector = fromCenterVectors[0];\n    for (const v of fromCenterVectors) {\n      if (getVectorLength(v) > getVectorLength(maxFromCenterVector)) {\n        maxFromCenterVector = v;\n      }\n    }\n\n    let coeff = 1/2\n    if (addRandom) {\n      coeff = Math.random() * (1/2) + 1/4\n    }\n\n    return [\n      {\n        x:\n          maxFromCenterVector.from.x +\n          coeff * (maxFromCenterVector.to.x - maxFromCenterVector.from.x),\n        y:\n          maxFromCenterVector.from.y +\n          coeff * (maxFromCenterVector.to.y - maxFromCenterVector.from.y)\n      },\n      null,\n      null\n    ];\n  } else {\n    const maxDiagChild = parent.children[0];\n    let [maxDiagChildMapNode] = findMapNode(maxDiagChild.id, mapNodeLayers);\n    if (maxDiagChildMapNode === null) {\n      return [\n        null,\n        null,\n        NewErrorKV(\"getNewNodeCenter: cannot find maxDiagChild in layers\", {\n          maxDiagChildId: maxDiagChild.id,\n          mapNodeLayers: mapNodeLayers\n        })\n      ];\n    }\n    for (const child of parent.children) {\n      const [childMapNode] = findMapNode(child.id, mapNodeLayers);\n      if (childMapNode === null) {\n        return [\n          null,\n          null,\n          NewErrorKV(\"getNewNodeCenter: cannot find child in layers\", {\n            childId: child.id,\n            mapNodeLayers: mapNodeLayers\n          })\n        ];\n      }\n\n      const [childDiag, err1] = getMaxDiagonal(childMapNode.border);\n      if (err1) {\n        return [\n          null,\n          null,\n          NewErrorKV(\"getNewNodeCenter: error getMaxDiagonal\", {\n            childMapNode,\n            err1\n          })\n        ];\n      }\n      const [maxDiag, err2] = getMaxDiagonal(maxDiagChildMapNode.border);\n      if (err2) {\n        return [\n          null,\n          null,\n          NewErrorKV(\"getNewNodeCenter: error getMaxDiagonal\", {\n            maxDiagChildMapNode,\n            err2\n          })\n        ];\n      }\n      if (getVectorLength(childDiag) > getVectorLength(maxDiag)) {\n        maxDiagChildMapNode = childMapNode;\n      }\n    }\n\n    let coeff = 3 / 4\n    if (addRandom) {\n      coeff = Math.random() * (1/4) + 2.5/4\n    }\n\n    const [finalMaxDiag] = getMaxDiagonal(maxDiagChildMapNode.border);\n    const newNodeCenter = vectorOnNumber(finalMaxDiag!, coeff).to;\n    const modifiedNode = clone(maxDiagChild);\n    modifiedNode.position = vectorOnNumber(finalMaxDiag!, 1 / 4).to;\n    return [newNodeCenter, modifiedNode, null];\n  }\n}\n\nexport function updatePosition(\n  state: {\n    tree: Tree | null;\n    nodeRecord: Record<string, NodeRecordItem>;\n    mapNodeLayers: Array<Record<string, MapNode>>;\n  },\n  v: { nodeId: string; position: Point }\n): ErrorKV {\n  if (state.tree == null) {\n    return NewErrorKV(\"state.tree == null\", {});\n  }\n\n  const item = state.nodeRecord[v.nodeId];\n  if (!item) {\n    return NewErrorKV(\"updateNodePosition: cannot find node in nodeRecord\", {\n      \"v.nodeId\": v.nodeId,\n      \"state.nodeRecord\": state.nodeRecord\n    });\n  }\n\n  if (!item.parent) {\n    return NewErrorKV(\"updateNodePosition: cannot move root of tree\", {\n      \"v.nodeId\": v.nodeId\n    });\n  }\n\n  const [normalizedPosition] = convertPosition(\n    \"normalize\",\n    v.position,\n    item.parent.id,\n    state.mapNodeLayers\n  );\n  item.node.position = normalizedPosition!;\n\n  // Если мы меняем один узел, то могут поменяться границы всех соседей\n  // так что надо действовать так как будто поменялись границы всех подузлов родителя узла\n  const [parentMapNode, layerLevel] = findMapNode(\n    item.parent.id,\n    state.mapNodeLayers\n  );\n  if (!parentMapNode || layerLevel === null) {\n    return NewErrorKV(\"updateNodePosition: cannot find mapNode for parent\", {\n      id: item.parent.id,\n      \"state.mapNodeLayers\": state.mapNodeLayers\n    });\n  }\n  const [ls, err] = treeToMapNodeLayers(\n    item.parent,\n    parentMapNode.border,\n    parentMapNode.center\n  );\n  if (ls == null || err != null) {\n    return NewErrorKV(\"updateNodePosition: create layers for parent\", {\n      id: item.parent.id,\n      parentMapNode: parentMapNode\n    });\n  }\n  return mergeMapNodeLayers(state.mapNodeLayers, ls, layerLevel);\n}\n","import { DBNode } from \"@/api/types\";\nimport { Tree } from \"@/types/graphics\";\nimport { ErrorKV } from \"@/types/errorkv\";\nimport NewErrorKV from \"../tools/errorkv\";\n\n// convert children object to array\nexport function convertChildren(children: any): string[] {\n  let result: string[];\n\n  if (!children) {\n    result = [];\n  } else if (Array.isArray(children)) {\n    result = children.filter(childID => !!childID).sort();\n    result.forEach((childID, i, arr) => (arr[i] = childID.toString()));\n  } else {\n    result = Object.values(children)\n      .filter(childID => !!childID)\n      .sort() as string[];\n    result.forEach((childID, i, arr) => (arr[i] = childID.toString()));\n  }\n  return result;\n}\n\nexport function convertDBMapToTree(\n  dbNodes: Record<string, DBNode>\n): [Tree | null, ErrorKV] {\n  const root: Tree = {\n    id: dbNodes[\"0\"].id.toString(),\n    title: dbNodes[\"0\"].name,\n    position: dbNodes[\"0\"].position,\n    children: []\n  };\n  const stack = [root];\n\n  while (stack.length > 0) {\n    const node = stack.pop();\n    if (!node) {\n      continue;\n    }\n    if (!dbNodes[node.id]) {\n      return [\n        null,\n        NewErrorKV(\"Cannot find id in dbNodes\", { \"node.id\": node.id, dbNodes })\n      ];\n    }\n    dbNodes[node.id].children = convertChildren(dbNodes[node.id].children);\n    if (!dbNodes[node.id].children.length) {\n      continue;\n    }\n    const children: Tree[] = [];\n    for (const childID of dbNodes[node.id].children) {\n      if (!dbNodes[childID]) {\n        return [\n          null,\n          NewErrorKV(\"Cannot find child id in dbNodes\", { childID, \"parentID\":node.id })\n        ];\n      }\n      children.push({\n        id: childID.toString(),\n        title: dbNodes[childID].name,\n        position: dbNodes[childID].position,\n        children: []\n      });\n    }\n\n    node.children = children;\n    stack.push(...children);\n  }\n\n  return [root, null];\n}\n","import firebase from \"firebase/compat\";\nimport {Tree} from \"@/types/graphics\";\nimport {ErrorKV} from \"@/types/errorkv\";\nimport NewErrorKV from \"../tools/errorkv\";\nimport axios from \"axios\";\nimport {Pins} from \"@/store/pin\";\nimport {Preconditions} from \"src/store/precondition\";\nimport {DBNode} from \"@/api/types\";\nimport {convertChildren} from \"./helpers\";\nimport {NodeComment, NodeContent} from \"@/store/node_content\";\nimport emulatorConfig from \"../../firebase.json\";\nimport {debounce} from \"lodash\";\n\nimport {\n  connectFirestoreEmulator,\n  getFirestore,\n} from \"firebase/firestore\";\nimport {QueryFilterConstraint} from \"@firebase/firestore\";\n\nconst MAP_FROM_STORAGE = false; // is storage is source for map (or database)\nlet FUNCTION_DOMAIN = \"https://us-central1-sci-map-1982.cloudfunctions.net/\";\n\nconst update = async (data: Record<string, any>): Promise<ErrorKV> => {\n  try {\n    await firebase\n      .database()\n      .ref()\n      .update(data);\n    return null;\n  } catch (e) {\n    return NewErrorKV(\"api: error in update\", { err: e });\n  }\n};\n\nconst debouncedUpdate = debounce(update, 400);\n\nexport default {\n  ROOT_WIDTH: window.innerWidth,\n  ROOT_HEIGHT: window.innerHeight - window.innerHeight/100,\n  ST_WIDTH: 1000,\n  ST_HEIGHT: 1000,\n  initFirebase() {\n    // Your web app's Firebase configuration\n    // For Firebase JS SDK v7.20.0 and later, measurementId is optional\n    const firebaseConfig = {\n      apiKey: \"AIzaSyCP50k-WOkTeG8BYvRtu4Bo_x3T2RnVsxU\",\n      authDomain: \"sci-map-1982.firebaseapp.com\",\n      databaseURL: \"https://sci-map-1982.firebaseio.com\",\n      projectId: \"sci-map-1982\",\n      storageBucket: \"sci-map-1982.appspot.com\",\n      messagingSenderId: \"340899060236\",\n      appId: \"1:340899060236:web:b136e9289e342a8bb62c29\",\n      measurementId: \"G-TV74Q61H9P\"\n    };\n\n    // Initialize Firebase\n    firebase.initializeApp(firebaseConfig);\n    firebase.analytics();\n\n    if (process.env.VUE_APP_IS_EMULATOR === \"true\") {\n      console.log(\"Starting in emulator mode\");\n      firebase\n        .auth()\n        .useEmulator(`http://localhost:${emulatorConfig.emulators.auth.port}`);\n      firebase\n        .database()\n        .useEmulator(\"localhost\", emulatorConfig.emulators.database.port);\n      firebase\n        .storage()\n        .useEmulator(\"localhost\", emulatorConfig.emulators.storage.port);\n      connectFirestoreEmulator(getFirestore(), 'localhost', emulatorConfig.emulators.firestore.port);\n      FUNCTION_DOMAIN = \"http://localhost:5001/sci-map-1982/us-central1/\";\n    }\n  },\n\n  async callFunction(\n    method: string,\n    params: Record<string, string>\n  ): Promise<[string, ErrorKV]> {\n    const currentUser = firebase.auth().currentUser;\n    if (!currentUser) {\n      return [\n        \"\",\n        NewErrorKV(\"callFunction: cannot determine current user\", {})\n      ];\n    }\n    const idToken = await currentUser.getIdToken(true);\n    params.idToken = idToken;\n    try {\n      const response = await axios.get(FUNCTION_DOMAIN + method, { params });\n      return [response.data, null];\n    } catch (e) {\n      return [\"\", NewErrorKV(\"Error in callFunction\", { method, params, e })];\n    }\n  },\n\n  async getMapFromDB(): Promise<[Record<string, DBNode> | null, ErrorKV]> {\n    const snapshot = await firebase\n      .database()\n      .ref(\"map\")\n      .get();\n    if (!snapshot.exists()) {\n      return [null, NewErrorKV(\"!snapshot.exists\", {})];\n    }\n    const map = snapshot.val();\n\n    return [map, null];\n  },\n\n  /**\n   * TODO: use it to cut costs on DB reads from read-only users\n   * @param user\n   */\n  async getMapFromStorage(\n    user: firebase.User | null\n  ): Promise<[Tree | null, ErrorKV]> {\n    const storage = firebase.storage().ref();\n    let ref = storage.child(`/map.json`);\n    if (user) {\n      ref = storage.child(`/user/${user.uid}/map.json`);\n    }\n    const url = await ref.getDownloadURL();\n\n    const response = await axios.get(url);\n    return [\n      {\n        id: \"0\",\n        title: \"\",\n        position: { x: this.ROOT_WIDTH / 2, y: this.ROOT_HEIGHT / 2 },\n        // children: apiTree.children\n        children: response.data\n      },\n      null\n    ];\n  },\n\n  async getMap(user: firebase.User | null): Promise<[Record<string, DBNode> | null, ErrorKV]> {\n    try {\n      return await this.getMapFromDB();\n    } catch (e) {\n      return [null, NewErrorKV(e.message, { e: e })];\n    }\n  },\n\n  async getPins(user: firebase.User | null): Promise<[Pins | null, ErrorKV]> {\n    try {\n      const storage = firebase.storage().ref();\n      let ref = storage.child(`/pins.json`);\n      if (user) {\n        ref = storage.child(`/user/${user.uid}/pins.json`);\n      }\n      const url = await ref.getDownloadURL();\n\n      const response = await axios.get(url);\n      return [response.data, null];\n    } catch (e) {\n      return [null, NewErrorKV(e.message, { e: e })];\n    }\n  },\n\n  async savePins(user: firebase.User, pins: Pins) {\n    if (!user) {\n      return;\n    }\n\n    const storage = firebase.storage().ref();\n    const ref = storage.child(`/user/${user.uid}/pins.json`);\n    await ref.putString(\n      btoa(unescape(encodeURIComponent(JSON.stringify(pins)))),\n      \"base64\"\n    );\n  },\n\n  async getPreconditions(\n    user: firebase.User | null\n  ): Promise<[Preconditions | null, ErrorKV]> {\n    try {\n      const snapshot = await firebase\n        .database()\n        .ref(\"precondition\")\n        .get();\n      if (!snapshot.exists()) {\n        return [null, NewErrorKV(\"!snapshot.exists\", {})];\n      }\n      const preconditions = snapshot.val();\n\n      return [preconditions, null];\n    } catch (e) {\n      return [null, NewErrorKV(e.message, { e: e })];\n    }\n  },\n\n  async savePreconditions(\n    user: firebase.User | null,\n    preconditions: { nodeId: string; preconditionIds: string[] }\n  ) {\n    if (!user) {\n      return;\n    }\n    await firebase\n      .database()\n      .ref(\"precondition/\" + preconditions.nodeId)\n      .set(preconditions.preconditionIds);\n  },\n\n  subscribeMapNodeChange(nodeID: string, cb: (a: DBNode) => any) {\n    this.subscribeDBChange(\n      `map/${nodeID}`,\n      (snap: firebase.database.DataSnapshot) => {\n        if (!snap.exists()) {\n          return;\n        }\n        const node = snap.val() as DBNode;\n        // console.log('got update for map node', node)\n        node.id = node.id.toString();\n        node.children = convertChildren(node.children);\n        cb(node);\n      }\n    );\n  },\n\n  subscribeNodeContentChange(nodeID: string, cb: (a: { nodeID: string; content: string }) => any) {\n    this.subscribeDBChange(\n      `node_content/${nodeID}`,\n      (snap: firebase.database.DataSnapshot) => {\n        if (!snap.exists()) {\n          return;\n        }\n        const node = snap.val() as { nodeID: string; content: string };\n        // console.log('got update for node content', node)\n        cb(node);\n      }\n    );\n  },\n\n  subscribePreconditionNodeChange(nodeID: string, cb: (nodeID: string, preconditionIDs: Array<string>) => any) {\n    this.subscribeDBChange(\n      `precondition/${nodeID}`,\n      (snap: firebase.database.DataSnapshot) => {\n        if (!snap.exists()) {\n          return;\n        }\n        const preconditionIDs = snap.val() as Array<string>;\n        // console.log('got update for node precondition', 'nodeID', nodeID, 'preconditionIDs', preconditionIDs)\n        cb(nodeID, preconditionIDs);\n      }\n    );\n  },\n\n  unsubscribeMapNodeChange(nodeID: string) {\n    firebase\n      .database()\n      .ref(`map/${nodeID}`)\n      .off(\"value\");\n  },\n\n  subscribeDBChange(\n    path: string,\n    cb: (a: firebase.database.DataSnapshot) => any\n  ) {\n    firebase\n      .database()\n      .ref(path)\n      .on(\"value\", cb);\n  },\n\n  unsubscribeDBChange(\n    path: string,\n    cb?: (a: firebase.database.DataSnapshot) => any\n  ) {\n    firebase\n      .database()\n      .ref(path)\n      .off(\"value\", cb);\n  },\n\n  async transaction(nodeID: string, update: (val: any) => any) {\n    await firebase\n      .database()\n      .ref(\"map/\" + nodeID)\n      .transaction(\n        update,\n        () => {\n          return;\n        },\n        false\n      );\n  },\n\n  async setNode(node: DBNode) {\n    await firebase\n      .database()\n      .ref(\"map/\" + node.id)\n      .set(node);\n  },\n\n  async setPublicUserData(userID: string, displayName: string | null, discordName: string | null) {\n    try {\n      const res = await firebase\n        .database()\n        .ref(\"public_user_data/\" + userID)\n        .set({\n          displayName,\n          discordName,\n        });\n    } catch(e) {\n      console.log(e)\n    }\n\n  },\n\n  async getNode(nodeID: string): Promise<DBNode | null> {\n    const pr = await firebase\n      .database()\n      .ref(\"map/\" + nodeID)\n      .get();\n    const node = pr.val();\n    node.id = node.id.toString();\n    node.children = convertChildren(node.children);\n    return node;\n  },\n\n  generateKey(): string | null {\n    return firebase\n      .database()\n      .ref()\n      .push().key;\n  },\n\n  async findKeyInList(path: string, value: string): Promise<string | null> {\n    const snap = await firebase\n      .database()\n      .ref(path)\n      .orderByValue()\n      .equalTo(value)\n      .limitToFirst(1)\n      .get();\n    return snap.key;\n  },\n\n  async findKeyOfChild(\n    nodeID: string,\n    childID: string\n  ): Promise<string | null> {\n    const pr = await firebase\n      .database()\n      .ref(\"map/\" + nodeID)\n      .get();\n    const node = pr.val();\n    if (!node.children) {\n      return null;\n    }\n\n    for (const key in node.children) {\n      if (node.children[key].toString() === childID) {\n        return key;\n      }\n    }\n    return null;\n  },\n\n  update,\n  debouncedUpdate,\n\n  async getUserComments(\n    user: firebase.User\n  ): Promise<[Record<string, NodeComment> | null, ErrorKV]> {\n    const userID = user.uid;\n    const snapshot = await firebase\n      .database()\n      .ref(`user_data/${userID}/comment`)\n      .get();\n    if (!snapshot.exists()) {\n      return [null, NewErrorKV(\"!snapshot.exists\", {})];\n    }\n    const nodeComment = snapshot.val();\n\n    return [nodeComment, null];\n  },\n\n  async getNodeContent(): Promise<\n    [Record<string, NodeContent> | null, ErrorKV]\n  > {\n    const snapshot = await firebase\n      .database()\n      .ref(`node_content`)\n      .get();\n\n    if (!snapshot.exists()) {\n      return [{}, null];\n    }\n\n    return [snapshot.val(), null];\n  },\n};\n","import {\n  Tree,\n  Point,\n  Polygon,\n  VoronoiCell,\n  MapNode,\n  Vector,\n  Rectangle\n} from \"@/types/graphics\";\nimport * as turf from \"@turf/turf\";\nimport { ErrorKV } from \"@/types/errorkv\";\nimport { default as NewErrorKV } from \"../tools/errorkv\";\nimport { NodeRecordItem } from \"@/store/tree\";\nimport { polygonArea } from \"d3-polygon\";\nimport polygonClipping from \"polygon-clipping\";\nimport { clone, mod, round } from \"../tools/utils\";\nimport { findMapNode } from \"../store/tree/helpers\";\nimport api from \"../api/api\";\n\nconst NORMALIZED_BORDER = [\n  { x: 0, y: 0 },\n  { x: 0, y: api.ST_HEIGHT },\n  { x: api.ST_WIDTH, y: api.ST_HEIGHT },\n  { x: api.ST_WIDTH, y: 0 }\n];\n\nexport function getVectorLength(v: Vector): number {\n  return Math.sqrt(\n    Math.pow(v.from.x - v.to.x, 2) + Math.pow(v.from.y - v.to.y, 2)\n  );\n}\n\nexport function polygonToTurf(\n  p: Polygon\n): turf.Feature<turf.Polygon, turf.Properties> {\n  if (!p) {\n    throw new Error(\"polygonToTurf: p is empty\");\n  }\n  const pp = p.map(point => [point.x, point.y]);\n  pp.push([p[0].x, p[0].y]);\n  return turf.polygon([pp]);\n}\n\nexport function isInside(point: Point, polygon: Polygon): boolean {\n  return turf.booleanPointInPolygon(\n    turf.point([point.x, point.y]),\n    polygonToTurf(polygon)\n  );\n}\n\nexport function polygonToPCPolygon(p: Polygon): polygonClipping.Polygon {\n  const pp = p.map(point => [point.x, point.y] as polygonClipping.Pair);\n  pp.push([p[0].x, p[0].y]);\n  return [pp];\n}\n\nexport function area(p: Polygon): number {\n  return Math.abs(polygonArea(p.map(point => [point.x, point.y])));\n}\n\nexport function intersect(\n  p1: Polygon,\n  p2: Polygon\n): [Polygon[] | null, ErrorKV] {\n  // polygonClipping.intersection does not like digits after point\n  // so we find the least multiplier that gives area > 1000 for polygon\n  // and then round coordinates\n  let np1: Polygon = clone(p1);\n  let np2: Polygon = clone(p2);\n  let cf = 1;\n  while (area(np1) < 1000 && area(np2) < 1000) {\n    cf = cf * 10;\n    np1 = p1.map(p => ({ x: p.x * cf, y: p.y * cf }));\n    np2 = p2.map(p => ({ x: p.x * cf, y: p.y * cf }));\n  }\n  np1 = np1.map(p => ({ x: round(p.x), y: round(p.y) }));\n  np2 = np2.map(p => ({ x: round(p.x), y: round(p.y) }));\n\n  const tp1 = polygonToPCPolygon(np1);\n  const tp2 = polygonToPCPolygon(np2);\n  if (tp1 == null || tp2 == null) {\n    return [\n      null,\n      NewErrorKV(\"intersect: error in polygonToPCPolygon\", { p1: p1, p2: p2 })\n    ];\n  }\n\n  // polygonClipping.intersection\n  const polygonIntersect = polygonClipping.intersection(tp1, tp2);\n  if (polygonIntersect == null || !polygonIntersect.length) {\n    return [[], null];\n  }\n\n  const resultPolys = [];\n\n  for (const poly of polygonIntersect[0]) {\n    const resultPoly = [];\n    for (const p of poly) {\n      resultPoly.push({ x: p[0] / cf, y: p[1] / cf });\n    }\n    // удаляем последнюю точку полигона потому что она всегда совпадает с первой\n    resultPoly.pop();\n    resultPolys.push(resultPoly);\n  }\n\n  return [resultPolys, null];\n}\n\n// Возвращает левый нижний и правый верхний углы описанного вокруг Polygon квадрата\nexport function getBoundingBorders(border: Polygon): Rectangle {\n  if (!border) {\n    console.error(\"bad border\", border);\n  }\n  const minX = border.reduce((previousValue, currentValue) =>\n    previousValue.x > currentValue.x ? currentValue : previousValue\n  ).x;\n  const minY = border.reduce((previousValue, currentValue) =>\n    previousValue.y > currentValue.y ? currentValue : previousValue\n  ).y;\n  const maxX = border.reduce((previousValue, currentValue) =>\n    previousValue.x < currentValue.x ? currentValue : previousValue\n  ).x;\n  const maxY = border.reduce((previousValue, currentValue) =>\n    previousValue.y < currentValue.y ? currentValue : previousValue\n  ).y;\n  return {\n    leftBottom: { x: minX, y: minY },\n    rightTop: { x: maxX, y: maxY }\n  };\n}\n\nexport function getVoronoiCellsInSquare(\n  centers: Point[],\n  leftBottom: Point,\n  rightTop: Point\n): [Record<number, Polygon>, ErrorKV] {\n  const turfPoints = centers.map(p => turf.point([p.x, p.y]));\n  const collection = turf.featureCollection(turfPoints);\n  const cells = turf.voronoi(collection, {\n    bbox: [leftBottom.x, leftBottom.y, rightTop.x, rightTop.y]\n  });\n  const cellMap: Record<number, Polygon> = {};\n  let index = 0;\n  for (const cell of cells.features) {\n    if (!cell) {\n      return [\n        {},\n        NewErrorKV(\"getVoronoiCellsInSquare: undefined cell\", {\n          centers,\n          leftBottom,\n          rightTop,\n          cells\n        })\n      ];\n    }\n    const cellBorder = cell.geometry!.coordinates[0].map(p => ({\n      x: p[0],\n      y: p[1]\n    }));\n    cellBorder.pop(); // удаляем последнюю точку полигона потому что она всегда совпадает с первой\n    cellMap[index] = cellBorder;\n    index++;\n  }\n\n  return [cellMap, null];\n}\n\nexport function getVoronoiCells(\n  outerBorder: Polygon, //(граница массива точек)\n  centers: Point[] //(точки внутри этой границы)\n): [VoronoiCell[], ErrorKV] {\n  if (!outerBorder) {\n    return [\n      [],\n      NewErrorKV(\"getVoronoiCells: bad outerBorder\", { outerBorder, centers })\n    ];\n  }\n  const bb = getBoundingBorders(outerBorder);\n  const [cellMap, err] = getVoronoiCellsInSquare(\n    centers,\n    bb.leftBottom,\n    bb.rightTop\n  );\n  if (err) {\n    return [\n      [],\n      NewErrorKV(\"getVoronoiCells: error in getVoronoiCellsInSquare\", {\n        err,\n        bb,\n        centers\n      })\n    ];\n  }\n\n  const res = [];\n  for (const index in centers) {\n    if (!cellMap[index]) {\n      return [\n        [],\n        NewErrorKV(\"Cannot find index in cellMap\", {\n          index: index,\n          centers: centers,\n          cellMap: cellMap,\n          BoundingBorders: bb,\n          outerBorder\n        })\n      ];\n    }\n\n    const [intersections, err] = intersect(cellMap[index], outerBorder); // мы хотим чтобы граница всех cell совпадала с outerBorder\n    if (intersections == null || err != null) {\n      return [\n        [],\n        NewErrorKV(\"getVoronoiCells error\", {\n          err,\n          cellBorder: cellMap[index],\n          outerBorder\n        })\n      ];\n    }\n\n    if (intersections == []) {\n      return [\n        [],\n        NewErrorKV(\"Voronoi cell has no intersection with outerBorder\", {\n          point: centers[index]\n        })\n      ];\n    }\n    if (intersections.length > 1) {\n      return [\n        [],\n        NewErrorKV(\n          \"Voronoi cell has more than one intersection with outerBorder\",\n          { point: centers[index] }\n        )\n      ];\n    }\n    res.push({\n      border: intersections[0],\n      center: centers[index]\n    });\n  }\n\n  return [res, null];\n}\n\nexport function getVoronoiCellRecords(\n  outerBorder: Polygon, //(граница массива точек)\n  centers: Record<string, Point> //(точки внутри этой границы)\n): [Record<string, Polygon>, ErrorKV] {\n  const result: Record<string, Polygon> = {};\n  const ids: string[] = [];\n  const centersArray: Point[] = [];\n  for (const id in centers) {\n    ids.push(id);\n    centersArray.push(centers[id]);\n  }\n\n  const [cells, err] = getVoronoiCells(outerBorder, centersArray);\n  if (err !== null) {\n    return [{}, err];\n  }\n  for (const i in ids) {\n    result[ids[i]] = cells[i].border;\n  }\n\n  return [result, null];\n}\n\nexport function polygonFill(\n  selectedNodeId: string,\n  currentNodeId: string,\n  selectedNodePreconditionIds: string[]\n): string {\n  if (selectedNodeId && selectedNodeId == currentNodeId) {\n    return \"#f3afaf\";\n  }\n  if (selectedNodePreconditionIds && selectedNodePreconditionIds.indexOf(currentNodeId) != -1) {\n    return \"#62f363\";\n  }\n  return \"transparent\";\n}\n\nexport function polygonFillOpacity(\n  selectedNodeId: string,\n  currentNodeId: string,\n  selectedNodePreconditionIds: string[]\n): string {\n  if (selectedNodeId && selectedNodeId == currentNodeId) {\n    return \"0.2\";\n  }\n  if (selectedNodePreconditionIds && selectedNodePreconditionIds.indexOf(currentNodeId) != -1) {\n    return \"0.2\";\n  }\n  return \"0\";\n}\n\nexport function polygonToPath(polygon: Polygon): string {\n  return polygon.map((point: Point) => `${point.x} ${point.y}`).join(\",\");\n}\n\nexport function treeToNodeRecord(tree: Tree): Record<number, NodeRecordItem> {\n  const nodeRecord: Record<string, NodeRecordItem> = {};\n  const stack: NodeRecordItem[] = [{ node: tree, parent: null }];\n  while (stack.length) {\n    const item = stack.pop();\n    if (!item) {\n      break;\n    }\n    nodeRecord[item.node.id] = item;\n    stack.push(\n      ...item.node.children.map(child => ({\n        node: child,\n        parent: item.node\n      }))\n    );\n  }\n\n  return nodeRecord;\n}\n\nexport function transferToPoint(vector: Vector, point: Point): Vector {\n  return {\n    from: {\n      x: point.x,\n      y: point.y\n    },\n    to: {\n      x: point.x + (vector.to.x - vector.from.x),\n      y: point.y + (vector.to.y - vector.from.y)\n    }\n  };\n}\n\nexport function pointToVector(p: Point): Vector {\n  return { from: { x: 0, y: 0 }, to: p };\n}\n\nexport function addVector(a: Vector, b: Vector): Vector {\n  const bTransferred = transferToPoint(b, a.to);\n  return {\n    from: { x: a.from.x, y: a.from.y },\n    to: { x: bTransferred.to.x, y: bTransferred.to.y }\n  };\n}\n\nexport function subtractVector(a: Vector, b: Vector): Vector {\n  return transferToPoint(\n    addVector(\n      { from: { x: b.from.x, y: b.from.y }, to: { x: -b.to.x, y: -b.to.y } },\n      a\n    ),\n    transferToPoint(b, a.from).to\n  );\n}\n\nexport function vectorOnNumber(a: Vector, c: number): Vector {\n  const aTr = transferToPoint(a, { x: 0, y: 0 });\n  return transferToPoint(\n    { from: { x: 0, y: 0 }, to: { x: aTr.to.x * c, y: aTr.to.y * c } },\n    a.from\n  );\n}\n\nexport function getRectangleCenter(s: Rectangle): Point {\n  const diagonal = subtractVector(\n    pointToVector(s.rightTop),\n    pointToVector(s.leftBottom)\n  );\n  return vectorOnNumber(diagonal, 1 / 2).to;\n}\n\nexport function transferPointOnVector(p: Point, v: Vector): Point {\n  return transferToPoint(v, p).to;\n}\n\n// math: https://web.archive.org/web/20060911055655/http://local.wasp.uwa.edu.au/~pbourke/geometry/lineline2d/\nexport function getVectorIntersection(v1: Vector, v2: Vector): Point | null {\n  const x1 = v1.from.x;\n  const y1 = v1.from.y;\n  const x2 = v1.to.x;\n  const y2 = v1.to.y;\n  const x3 = v2.from.x;\n  const y3 = v2.from.y;\n  const x4 = v2.to.x;\n  const y4 = v2.to.y;\n  const denom = (y4 - y3) * (x2 - x1) - (x4 - x3) * (y2 - y1);\n  const numeA = (x4 - x3) * (y1 - y3) - (y4 - y3) * (x1 - x3);\n  const numeB = (x2 - x1) * (y1 - y3) - (y2 - y1) * (x1 - x3);\n\n  if (denom == 0) {\n    return null;\n  }\n\n  const uA = numeA / denom;\n  const uB = numeB / denom;\n\n  if (uA >= 0 && uA <= 1 && uB >= 0 && uB <= 1) {\n    return {\n      x: x1 + uA * (x2 - x1),\n      y: y1 + uA * (y2 - y1)\n    };\n  }\n\n  return null;\n}\n\nexport function morphChildrenPoints(\n  oldBorder: Polygon,\n  newBorder: Polygon,\n  oldPoints: Record<string, Point>\n): [Record<string, Point> | null, ErrorKV] {\n  const oldCenterTf = turf.centerOfMass(polygonToTurf(oldBorder)).geometry;\n  if (oldCenterTf == null) {\n    return [\n      null,\n      NewErrorKV(\"morphChildrenPoints oldBorder centerOfMass error\", {\n        oldBorder: oldBorder,\n        oldPoints: oldPoints\n      })\n    ];\n  }\n  const newCenterTf = turf.centerOfMass(polygonToTurf(newBorder)).geometry;\n  if (newCenterTf == null) {\n    return [\n      null,\n      NewErrorKV(\"morphChildrenPoints newBorder centerOfMass error\", {\n        newBorder: newBorder,\n        oldPoints: oldPoints\n      })\n    ];\n  }\n  const oldCenter = {\n    x: oldCenterTf.coordinates[0],\n    y: oldCenterTf.coordinates[1]\n  };\n  const newCenter = {\n    x: newCenterTf.coordinates[0],\n    y: newCenterTf.coordinates[1]\n  };\n\n  // Move old node and its children to new node center\n  oldBorder = oldBorder.map(\n    (p): Point => {\n      return transferPointOnVector(p, { from: oldCenter, to: newCenter });\n    }\n  );\n  for (const id in oldPoints) {\n    oldPoints[id] = transferPointOnVector(oldPoints[id], {\n      from: oldCenter,\n      to: newCenter\n    });\n  }\n\n  // morph children\n  const maxDiameter = Math.max(\n    getVectorLength({\n      from: getBoundingBorders(oldBorder).leftBottom,\n      to: getBoundingBorders(oldBorder).rightTop\n    }),\n    getVectorLength({\n      from: getBoundingBorders(newBorder).leftBottom,\n      to: getBoundingBorders(newBorder).rightTop\n    })\n  );\n\n  const newPoints: Record<string, Point> = {};\n  for (const id in oldPoints) {\n    const oldPoint = oldPoints[id];\n    if (newCenter.x == oldPoint.x && newCenter.y == oldPoint.y) {\n      newPoints[id] = oldPoint;\n      continue;\n    }\n    let centerToPoint = { from: newCenter, to: oldPoints[id] };\n    // enlarge it to guarantee intersect with both newBorder and oldBorder (transferred to newBorder center)\n    centerToPoint = vectorOnNumber(\n      centerToPoint,\n      maxDiameter / getVectorLength(centerToPoint)\n    );\n    let oldBorderIntersection = null;\n    for (const i in oldBorder) {\n      const segment = {\n        from: oldBorder[i],\n        to: oldBorder[(Number(i) + 1) % oldBorder.length]\n      };\n      const p = getVectorIntersection(centerToPoint, segment);\n      if (p != null) {\n        oldBorderIntersection = p;\n        break;\n      }\n    }\n    if (oldBorderIntersection == null) {\n      return [\n        null,\n        NewErrorKV(\n          \"morphChildrenPoints cannot find intersection with oldBorder\",\n          {\n            centerToPoint: centerToPoint,\n            oldBorder: oldBorder\n          }\n        )\n      ];\n    }\n\n    let newBorderIntersection = null;\n    for (const i in newBorder) {\n      const segment = {\n        from: newBorder[i],\n        to: newBorder[(Number(i) + 1) % newBorder.length]\n      };\n      const p = getVectorIntersection(centerToPoint, segment);\n      if (p != null) {\n        newBorderIntersection = p;\n        break;\n      }\n    }\n    if (newBorderIntersection == null) {\n      return [\n        null,\n        NewErrorKV(\n          \"morphChildrenPoints cannot find intersection with newBorder\",\n          {\n            centerToPoint: centerToPoint,\n            newBorder: newBorder\n          }\n        )\n      ];\n    }\n\n    if (\n      oldBorderIntersection.x == newBorderIntersection.x &&\n      oldBorderIntersection.y == newBorderIntersection.y\n    ) {\n      newPoints[id] = oldPoint;\n      continue;\n    }\n\n    const coeff =\n      getVectorLength({ from: newCenter, to: newBorderIntersection }) /\n      getVectorLength({ from: newCenter, to: oldBorderIntersection });\n    newPoints[id] = vectorOnNumber({ from: newCenter, to: oldPoint }, coeff).to;\n  }\n\n  return [newPoints, null];\n}\n\nexport function NewEmptyVector(): Vector {\n  return { from: { x: 0, y: 0 }, to: { x: 0, y: 0 } };\n}\n\nexport function getMaxDiagonal(polygon: Polygon): [Vector, ErrorKV] {\n  if (!polygon || polygon.length < 3) {\n    return [\n      NewEmptyVector(),\n      NewErrorKV(\"getMaxDiagonal: bad polygon\", { polygon })\n    ];\n  }\n\n  const diagonals: Vector[] = [];\n  if (polygon.length == 3) {\n    // triangle does not has diagonals, so me emulate them\n    for (const i in polygon) {\n      const middle = vectorOnNumber(\n        {\n          from: polygon[mod(Number(i) - 1, polygon.length)],\n          to: polygon[mod(Number(i) + 1, polygon.length)]\n        },\n        1 / 2\n      );\n      diagonals.push({ from: polygon[i], to: middle.to });\n    }\n  } else {\n    for (const i in polygon) {\n      for (const j in polygon) {\n        if (\n          Number(j) != mod(Number(i) - 1, polygon.length) &&\n          Number(j) != Number(i) &&\n          Number(j) != mod(Number(i) + 1, polygon.length)\n        ) {\n          diagonals.push({ from: polygon[i], to: polygon[j] });\n        }\n      }\n    }\n  }\n\n  let maxDiagonal = diagonals[0];\n  for (const diag of diagonals) {\n    if (getVectorLength(diag) > getVectorLength(maxDiagonal)) {\n      maxDiagonal = diag;\n    }\n  }\n\n  return [maxDiagonal, null];\n}\n\nexport function convertPosition(\n  type: \"normalize\" | \"denormalize\",\n  position: Point,\n  parentID: string | null,\n  mapNodeLayers: Array<Record<string, MapNode>>\n): [Point | null, ErrorKV] {\n  let convertedPosition: Point;\n  if (parentID) {\n    const [parentMapNode] = findMapNode(parentID, mapNodeLayers);\n    if (!parentMapNode) {\n      return [\n        null,\n        NewErrorKV(\"UPDATE_NODE: Cannot findMapNode\", { id: parentID })\n      ];\n    }\n\n    let morphedPositions: Record<string, Point> | null, err: ErrorKV;\n    if (type === \"denormalize\") {\n      if (!isInside(position, NORMALIZED_BORDER)) {\n        return [\n          null,\n          NewErrorKV(\"convertPosition: position outside NORMALIZED_BORDER\", {\n            normalizedBorder: NORMALIZED_BORDER,\n            position,\n            parentID\n          })\n        ];\n      }\n      [morphedPositions, err] = morphChildrenPoints(\n        NORMALIZED_BORDER,\n        parentMapNode.border,\n        { tmp: position }\n      );\n    } else {\n      if (!isInside(position, parentMapNode.border)) {\n        return [\n          null,\n          NewErrorKV(\"convertPosition: position outside parentMapNode.border\", {\n            \"parentMapNode.border\": parentMapNode.border,\n            \"parentMapNode.center\": parentMapNode.center,\n            position,\n            parentID\n          })\n        ];\n      }\n      [morphedPositions, err] = morphChildrenPoints(\n        parentMapNode.border,\n        NORMALIZED_BORDER,\n        { tmp: position }\n      );\n      if (err !== null) {\n        return [\n          null,\n          NewErrorKV(\"UPDATE_NODE: Cannot morphChildrenPoints\", {\n            type: type,\n            normalizedBorder: NORMALIZED_BORDER,\n            \"parentMapNode.border\": parentMapNode.border,\n            \"dbNode.position\": position\n          })\n        ];\n      }\n      // make sure that after normalization position is strictly inside border\n      if (morphedPositions![\"tmp\"].x < 0) {\n        morphedPositions![\"tmp\"].x = 1;\n      }\n      if (morphedPositions![\"tmp\"].x > api.ST_WIDTH) {\n        morphedPositions![\"tmp\"].x = api.ST_WIDTH - 1;\n      }\n      if (morphedPositions![\"tmp\"].y < 0) {\n        morphedPositions![\"tmp\"].y = 1;\n      }\n      if (morphedPositions![\"tmp\"].y > api.ST_HEIGHT) {\n        morphedPositions![\"tmp\"].y = api.ST_HEIGHT - 1;\n      }\n    }\n    if (err !== null) {\n      return [\n        null,\n        NewErrorKV(\"UPDATE_NODE: Cannot morphChildrenPoints\", {\n          type: type,\n          normalizedBorder: NORMALIZED_BORDER,\n          \"parentMapNode.border\": parentMapNode.border,\n          \"dbNode.position\": position\n        })\n      ];\n    }\n    convertedPosition = morphedPositions![\"tmp\"];\n  } else {\n    if (type === \"denormalize\") {\n      convertedPosition = { x: api.ROOT_WIDTH / 2, y: api.ROOT_HEIGHT / 2 };\n    } else {\n      convertedPosition = { x: api.ST_WIDTH / 2, y: api.ST_HEIGHT / 2 };\n    }\n  }\n\n  return [convertedPosition, null];\n}\n\n/**\n *\n * @param tree\n * @param rootBorder\n * @param rootPosition\n */\nexport function treeToMapNodeLayers(\n  tree: Tree,\n  rootBorder: Polygon,\n  rootPosition: Point\n): [Array<Record<string, MapNode>> | null, ErrorKV] {\n  if (Object.keys(tree).length == 0) {\n    return [[], null];\n  }\n  const treeLayers: Array<Array<Tree>> = [[tree]];\n  const mapNodeLayers: Array<Record<string, MapNode>> = [\n    {\n      [tree.id]: {\n        id: tree.id,\n        border: rootBorder,\n        title: tree.title,\n        center: rootPosition\n      }\n    }\n  ];\n  /*eslint no-constant-condition: [\"error\", { \"checkLoops\": false }]*/\n  while (true) {\n    const lastTreeLayer = treeLayers[treeLayers.length - 1];\n    const lastMapNodeLayer = mapNodeLayers[treeLayers.length - 1];\n    const newTreeLayer = [];\n    const newMapNodeLayer: Record<string, MapNode> = {};\n    for (const treeNode of lastTreeLayer) {\n      if (!treeNode.children) {\n        return [\n          null,\n          NewErrorKV(\"treeToMapNodeLayers: treeNode with children undefined\", {\n            treeNode\n          })\n        ];\n      }\n      if (!treeNode.children.length) {\n        continue;\n      }\n\n      // check that no two children have the same center\n      const tmpMap = {} as Record<string, string>\n      let strPos = \"\"\n      for (const i in treeNode.children) {\n        strPos = JSON.stringify(treeNode.children[i].position)\n        if (tmpMap[strPos] && tmpMap[strPos].length > 0) {\n          return [\n            null,\n            NewErrorKV(\"two children has the same center\", {\n              firstId: tmpMap[strPos],\n              secondId: treeNode.children[i].id\n            })\n          ];\n        } else {\n          tmpMap[strPos] = treeNode.children[i].id\n        }\n      }\n\n      newTreeLayer.push(...treeNode.children);\n      if (!lastMapNodeLayer[treeNode.id]) {\n        return [\n          null,\n          NewErrorKV(\"Cannot find node in mapNodeLayers\", {\n            layer: mapNodeLayers[mapNodeLayers.length - 1],\n            treeNode: treeNode\n          })\n        ];\n      }\n\n      // denormalize positions\n      const treeNodeChildren = clone(treeNode.children) as Array<Tree>;\n      for (const child of treeNodeChildren) {\n        const [denormalizedPosition, err] = convertPosition(\n          \"denormalize\",\n          child.position,\n          treeNode.id,\n          [lastMapNodeLayer]\n        );\n        if (err) {\n          return [null, err];\n        }\n        child.position = denormalizedPosition!;\n      }\n      const [cells, error] = getVoronoiCells(\n        lastMapNodeLayer[treeNode.id].border,\n        treeNodeChildren.map(ch => ({ x: ch.position.x, y: ch.position.y }))\n      );\n      if (error != null) {\n        return [null, error];\n      }\n\n      for (const cell of cells) {\n        for (const child of treeNodeChildren) {\n          if (\n            child.position.x == cell.center.x &&\n            child.position.y == cell.center.y\n          ) {\n            newMapNodeLayer[child.id] = {\n              id: child.id,\n              title: child.title,\n              center: child.position,\n              border: cell.border\n            };\n          }\n        }\n      }\n    }\n\n    if (newTreeLayer.length) {\n      treeLayers.push(newTreeLayer);\n      mapNodeLayers.push(newMapNodeLayer);\n    } else {\n      return [mapNodeLayers, null];\n    }\n  }\n}\n\nexport function mergeMapNodeLayers(\n  recipientLayers: Record<string, MapNode>[],\n  insertedLayers: Record<string, MapNode>[],\n  startFromLevel: number\n): ErrorKV {\n  if (startFromLevel >= recipientLayers.length || startFromLevel < 0) {\n    return NewErrorKV(\n      \"startFromLevel >= recipientLayers.length or startFromLevel < 0\",\n      {\n        startFromLevel,\n        \"recipientLayers.length\": recipientLayers.length\n      }\n    );\n  }\n  let i = startFromLevel;\n  while (i < startFromLevel + insertedLayers.length) {\n    for (const id in insertedLayers[i - startFromLevel]) {\n      recipientLayers[i][id] = insertedLayers[i - startFromLevel][id];\n    }\n    i++;\n  }\n\n  return null;\n}\n","import { MapNode, Point, Tree } from \"@/types/graphics\";\nimport {\n  convertPosition,\n  isInside,\n  treeToMapNodeLayers,\n  treeToNodeRecord\n} from \"@/tools/graphics\";\nimport { findMapNode, updatePosition } from \"@/store/tree/helpers\";\nimport { ErrorKV } from \"@/types/errorkv\";\nimport NewErrorKV from \"@/tools/errorkv\";\nimport { DBNode } from \"@/api/types\";\nimport { printError, round } from \"@/tools/utils\";\nimport api from \"@/api/api\";\nimport {Commit, Dispatch} from \"vuex\";\nconst XSkew = api.ROOT_WIDTH / 7;\nconst ROOT_BORDER = [\n  { x: XSkew, y: 0 },\n  { x: 0, y: 0.3 * api.ROOT_HEIGHT },\n  { x: 0, y: 0.7 * api.ROOT_HEIGHT },\n  { x: XSkew, y: api.ROOT_HEIGHT },\n  { x: 0.3 * (api.ROOT_WIDTH - 2 * XSkew) + XSkew, y: 1.1 * api.ROOT_HEIGHT },\n  { x: 0.6 * (api.ROOT_WIDTH - 2 * XSkew) + XSkew, y: 1.1 * api.ROOT_HEIGHT },\n  { x: api.ROOT_WIDTH - 2 * XSkew + XSkew, y: api.ROOT_HEIGHT },\n  { x: api.ROOT_WIDTH, y: 0.7 * api.ROOT_HEIGHT },\n  { x: api.ROOT_WIDTH, y: 0.3 * api.ROOT_HEIGHT },\n  { x: api.ROOT_WIDTH - XSkew, y: 0 },\n  {\n    x: api.ROOT_WIDTH - XSkew - 0.3 * (api.ROOT_WIDTH - 2 * XSkew),\n    y: -0.1 * api.ROOT_HEIGHT\n  },\n  {\n    x: api.ROOT_WIDTH - XSkew - 0.7 * (api.ROOT_WIDTH - 2 * XSkew),\n    y: -0.1 * api.ROOT_HEIGHT\n  }\n];\nconst ROOT_CENTER = { x: api.ROOT_WIDTH / 2, y: api.ROOT_HEIGHT / 2 };\n\nexport interface NodeRecordItem {\n  node: Tree;\n  parent: Tree | null;\n}\n\nexport interface State {\n  tree: Tree | null;\n  nodeRecord: Record<string, NodeRecordItem>;\n  mapNodeLayers: Array<Record<string, MapNode>>;\n  selectedNodeId: string | null;\n}\n\nexport const mutations = {\n  SET_SELECTED_NODE_ID: \"SET_SELECTED_NODE_ID\",\n  SET_TREE: \"SET_TREE\",\n  UPDATE_NODE_POSITION: \"UPDATE_NODE_POSITION\",\n  REMOVE_NODE: \"REMOVE_NODE\"\n};\n\nexport const actions = {\n  handleMapNodeUpdate: \"handleMapNodeUpdate\"\n};\n\nexport const store = {\n  namespaced: true,\n  state() {\n    return {\n      tree: null,\n      nodeRecord: {} as Record<string, NodeRecordItem>, // id => NodeRecordItem\n      mapNodeLayers: [] as Array<Record<string, MapNode>>,\n      selectedNodeId: null\n    };\n  },\n\n  getters: {\n    selectedNode: (state: State) => {\n      if (!state.selectedNodeId) {\n        return null;\n      }\n      if (!state.nodeRecord[state.selectedNodeId]) {\n        return null;\n      }\n      return state.nodeRecord[state.selectedNodeId].node;\n    }\n  },\n\n  actions: {\n    /**\n     * Update tree and dependant structures on DBNode change\n     *\n     * После добавления нового узла мы не вносим изменения локально, а сохраняем в базу и ждем пока оттуда придет обновление\n     *\n     * Маппинг изменений в виде снэпшотов на изменения в формате store/history выглядит следующим образом.\n     * Мы сравниваем наш узел и пришедший новый снэпшот этого узла\n     *\n     * Если видим удаление child, то это либо перенос, либо удаление узла.\n     * В любом случае мы можем у себя удалить этот узел (мы не удаляем всю информацию, только из дерева - 'fake removal').\n     * Если это перенос, то мы либо получили событие добавления в другой узел\n     * до этого события, либо получим его после. Если получили до, то из этого узла уже должны были его удалить,\n     * так что остается вариант когда мы еще получим событие о добавлении. В этом случаем для нас это будет добавление нового узла.\n     * То есть мы запросим из базы этот узел и вставим его\n     *\n     * Если видим добавление child, то это либо перенос, либо добавление нового узла. Если мы не находим у себя child с таким id,\n     * то это добавление - нам нужно запросить из базы node с таким id и добавить его к себе.\n     * Если в nodeRecord есть такой узел, то это перенос - мы удаляем его из старого родителя и вставляем в новый\n     *\n     * Этими двумя кейсами покрываются события добавления, удаления и переноса.\n     * Событие изменения имени и позиции мапятся тривиально\n     *\n     * @param commit\n     * @param state\n     * @param dispatch\n     * @param dbNode\n     */\n    async [actions.handleMapNodeUpdate](\n      { commit, state, dispatch }: { commit: Commit; state: State; dispatch: Dispatch },\n      dbNode: DBNode\n    ) {\n      const dbNodeRecord = state.nodeRecord[dbNode.id];\n      if (!dbNodeRecord) {\n        printError(\"UPDATE_NODE: Cannot find dbNode in dbNodeRecord\", {\n          \"dbNode.id\": dbNode.id\n        });\n        return;\n      }\n\n      const oldDBNode = {\n        id: dbNodeRecord.node.id,\n        parentID: dbNodeRecord.parent ? dbNodeRecord.parent.id : null,\n        name: dbNodeRecord.node.title,\n        children: dbNodeRecord.node.children.map(n => n.id).sort(),\n        position: dbNodeRecord.node.position\n      };\n\n      const newChildren = dbNode.children.filter(\n        x => !oldDBNode.children.includes(x)\n      );\n      const removedChildren = oldDBNode.children.filter(\n        x => !dbNode.children.includes(x)\n      );\n\n      // Add/move of new child\n      if (newChildren.length) {\n        for (const childID of newChildren) {\n          if (state.nodeRecord[childID]) {\n            console.log(\n              \"actions.handleDBUpdate: remove node for cut-and-paste\",\n              state.nodeRecord[childID]\n            );\n            // if we already have this node, then it is cut-and-paste new parent\n            // so we should remove node from old parent\n            const v = {\n              nodeID: childID,\n              returnError: null\n            };\n            commit(mutations.REMOVE_NODE, {\n              nodeID: childID,\n              returnError: null\n            });\n            if (v.returnError) {\n              printError(\"handleDBUpdate: cannot cut node\", {\n                err: v.returnError\n              });\n            }\n          }\n\n          // request node and its children from the server, fill in tree\n          const addedDBNode = await api.getNode(childID);\n          console.log(\n            \"actions.handleDBUpdate: add node for cut-and-paste\",\n            addedDBNode\n          );\n\n          const toProcess = [addedDBNode];\n          if (!addedDBNode) {\n            // we cannot find node for addition, remove it from parent\n            dbNode.children = dbNode.children.filter(\n              id => id != childID\n            );\n            printError(\"Cannot find node for addition\", { nodeID: childID });\n            continue;\n          }\n          while (toProcess.length) {\n            const inProcessNode = toProcess.pop();\n            if (!inProcessNode) {\n              continue;\n            }\n            // create new MapNode\n            const treeNode = {\n              id: inProcessNode.id,\n              title: inProcessNode.name,\n              position: inProcessNode.position,\n              children: [],\n            } as Tree;\n            if (!state.nodeRecord[inProcessNode.parentID]) {\n              printError(\"Cannot find nodeID in nodeRecord\", {\n                nodeID: inProcessNode.parentID\n              });\n              return;\n            }\n            // make sure we have no duplicates\n            state.nodeRecord[\n              inProcessNode.parentID\n            ].node.children = state.nodeRecord[\n              inProcessNode.parentID\n            ].node.children.filter(n => n.id != treeNode.id);\n            // add child to parent\n            state.nodeRecord[inProcessNode.parentID].node.children.push(\n              treeNode\n            );\n            // add child to nodeRecord\n            state.nodeRecord[treeNode.id] = {\n              parent: state.nodeRecord[inProcessNode.parentID].node,\n              node: treeNode\n            };\n            // subscribe to new node changes\n            api.subscribeMapNodeChange(treeNode.id, (dbNode: DBNode) => dispatch(actions.handleMapNodeUpdate, dbNode))\n            for (const childID of inProcessNode.children) {\n              const childNode = await api.getNode(childID);\n              if (!childNode) {\n                // we cannot find node for addition, remove it from parent\n                inProcessNode.children = inProcessNode.children.filter(\n                  id => id != childID\n                );\n                printError(\"Cannot find node for addition\", {\n                  nodeID: childID\n                });\n                continue;\n              }\n              toProcess.push(childNode);\n            }\n          }\n        }\n      }\n\n      // Remove of child\n      if (removedChildren.length) {\n        for (const childID of removedChildren) {\n          if (!state.nodeRecord[childID] || !state.nodeRecord[childID].parent) {\n            // node was already removed somewhere\n            continue;\n          }\n          if (\n            state.nodeRecord[childID] &&\n            state.nodeRecord[childID].parent!.id !== dbNode.id\n          ) {\n            // node was already removed from this parent (this is cut-and-paste operation)\n            continue;\n          }\n          console.log(\n            \"actions.handleDBUpdate: removing children\",\n            state.nodeRecord[childID]\n          );\n          const v = { nodeID: childID, returnError: null };\n          commit(mutations.REMOVE_NODE, v);\n          if (v.returnError) {\n            printError(\"actions.handleDBUpdate: cannot remove node\", {\n              err: v.returnError,\n              id: childID\n            });\n          }\n          // unsubscribe from removed node changes\n          api.unsubscribeMapNodeChange(childID)\n        }\n      }\n\n      if (removedChildren.length || newChildren.length) {\n        const [ls, err2] = treeToMapNodeLayers(\n          state.tree!,\n          ROOT_BORDER,\n          ROOT_CENTER\n        );\n        if (err2) {\n          printError(\"Cannot treeToMapNodeLayers\", { err: err2 });\n          return;\n        }\n        state.mapNodeLayers = ls!;\n      }\n\n      // Change of position\n      if (\n        round(dbNode.position.x) !== round(oldDBNode.position.x) ||\n        round(dbNode.position.y) !== round(oldDBNode.position.y)\n      ) {\n        // calculate denormalized position of dbNode\n        const [denormalizedPosition] = convertPosition(\n          \"denormalize\",\n          dbNode.position,\n          dbNodeRecord.parent ? dbNodeRecord.parent.id : null,\n          state.mapNodeLayers\n        );\n        if (oldDBNode.parentID == dbNode.parentID) {\n          // we do not want to process position change due to parent change - it is already processed by ADD_NODE\n          const v = {\n            nodeId: dbNode.id,\n            newCenter: denormalizedPosition,\n            returnError: null\n          };\n          commit(mutations.UPDATE_NODE_POSITION, v);\n          if (v.returnError !== null) {\n            printError(\n              \"actions.handleDBUpdate: cannot update node's position\",\n              { \"dbNode\": dbNode, err: v.returnError }\n            );\n            return;\n          }\n        }\n      }\n\n      // Change of name\n      if (oldDBNode.name !== dbNode.name) {\n        dbNodeRecord.node.title = dbNode.name;\n        const [node] = findMapNode(oldDBNode.id, state.mapNodeLayers);\n        if (!node) {\n          return;\n        }\n        node.title = dbNode.name;\n      }\n    }\n  },\n  mutations: {\n    /**\n     * REMOVE_NODE\n     * @param state\n     * @param v\n     */\n    [mutations.REMOVE_NODE](\n      state: State,\n      v: { nodeID: string; returnError: ErrorKV }\n    ) {\n      if (state.tree === null) {\n        v.returnError = NewErrorKV(\"state.tree === null\", {});\n        return;\n      }\n\n      if (!state.nodeRecord[v.nodeID]) {\n        v.returnError = NewErrorKV(\n          \"REMOVE_NODE: cannot find nodeId in nodeRecord\",\n          { nodeID: v.nodeID, nodeRecord: state.nodeRecord }\n        );\n        return;\n      }\n      const parent = state.nodeRecord[v.nodeID].parent;\n      if (!parent) {\n        v.returnError = NewErrorKV(\"REMOVE_NODE: cannot remove root node\", {\n          nodeId: v.nodeID\n        });\n        return;\n      }\n\n      // remove node and its descendants from nodeRecord\n      const stack = [v.nodeID];\n      while (stack.length) {\n        const id = stack.pop();\n        if (!id) {\n          continue;\n        }\n        stack.push(...state.nodeRecord[id].node.children.map(node => node.id));\n        delete state.nodeRecord[id];\n      }\n\n      // remove from parent's children\n      const ind = parent.children.findIndex(node => node.id === v.nodeID);\n      parent.children.splice(ind, 1);\n    },\n\n    /**\n     * SET_SELECTED_NODE_ID\n     * @param state\n     * @param id\n     */\n    [mutations.SET_SELECTED_NODE_ID](state: State, id: string | null) {\n      state.selectedNodeId = id;\n    },\n\n    /**\n     * SET_TREE\n     * @param state\n     * @param tree\n     */\n    [mutations.SET_TREE](state: State, tree: Tree | null) {\n      if (tree == null) {\n        state.tree = null;\n        state.nodeRecord = {};\n        state.mapNodeLayers = [];\n        return;\n      }\n      state.tree = tree;\n\n      // traverse tree and fill in nodeRecord\n      state.nodeRecord = treeToNodeRecord(tree);\n\n      // fill state.mapNodeLayers\n      const [ls, err] = treeToMapNodeLayers(tree, ROOT_BORDER, ROOT_CENTER);\n      if (ls == null || err != null) {\n        console.error(err);\n        return;\n      }\n      state.mapNodeLayers = ls;\n    },\n\n    /**\n     * UPDATE_NODE_POSITION\n     * @param state\n     * @param v\n     */\n    [mutations.UPDATE_NODE_POSITION](\n      state: State,\n      v: {\n        nodeId: string;\n        newCenter: Point;\n        returnError: ErrorKV; // still waiting for vuex to implement mutation return values https://github.com/vuejs/vuex/issues/1437\n      }\n    ) {\n      // check that new position is inside parent borders\n      const parent = state.nodeRecord[v.nodeId].parent;\n      if (parent !== null) {\n        const [parentMapNode] = findMapNode(parent.id, state.mapNodeLayers);\n        if (!parentMapNode) {\n          v.returnError = NewErrorKV(\n            \"UPDATE_NODE_POSITION: cannot find parent mapNode\",\n            {\n              \"parent.id\": parent.id,\n              \"state.mapNodeLayers\": state.mapNodeLayers\n            }\n          );\n          return;\n        }\n\n        if (!isInside(v.newCenter, parentMapNode.border)) {\n          v.returnError = NewErrorKV(\"!isInside\", {\n            newCenter: v.newCenter,\n            \"parentMapNode.border\": parentMapNode.border\n          });\n          return;\n        }\n      }\n\n      v.returnError = updatePosition(state, {\n        nodeId: v.nodeId,\n        position: v.newCenter\n      });\n    }\n  }\n};\n","import { Point } from \"@/types/graphics\";\n\nexport const mutations = {\n  ADD_CUT_PASTE: \"ADD_CUT_PASTE\",\n  ADD_CREATE: \"ADD_CREATE\",\n  ADD_REMOVE: \"ADD_REMOVE\",\n  ADD_POSITION_CHANGE: \"ADD_POSITION_CHANGE\"\n};\n\nenum changeTypeEnum {\n  CUT_PASTE = \"CUT_PASTE\",\n  CREATE = \"CREATE\",\n  REMOVE = \"REMOVE\",\n  POSITION_CHANGE = \"POSITION_CHANGE\"\n}\n\nconst changeTypes = {\n  CUT_PASTE: \"CUT_PASTE\" as changeTypeEnum.CUT_PASTE,\n  CREATE: \"CREATE\" as changeTypeEnum.CREATE,\n  REMOVE: \"REMOVE\" as changeTypeEnum.REMOVE,\n  POSITION_CHANGE: \"POSITION_CHANGE\" as changeTypeEnum.POSITION_CHANGE\n};\n\nexport interface CHCutPaste {\n  nodeID: string; // object of change\n  oldParentID: string; // old parent\n  newParentID: string; // new parent\n}\n\nexport interface CHCreate {\n  nodeID: string; // object of change\n  parentID: string; // new parent\n}\n\nexport interface CHRemove {\n  nodeID: string; // object of change\n  parentID: string; // parent where object sits (we need it to revert this event)\n}\n\nexport interface CHPositionChange {\n  nodeID: string; // object of change\n  oldPosition: Point; // old position (we need it to revert this event)\n  newPosition: Point; // new position\n}\n\nexport type TreeChangeList = Record<\n  string,\n  {\n    [changeTypeEnum.CUT_PASTE]?: CHCutPaste;\n    [changeTypeEnum.CREATE]?: CHCreate;\n    [changeTypeEnum.REMOVE]?: CHRemove;\n    [changeTypeEnum.POSITION_CHANGE]?: CHPositionChange;\n  }\n>;\n\nexport interface State {\n  // список изменений который отличает текущую мастер ветку\n  // от того мастера с которого мы начали локальные изменения\n  stableChangeList: TreeChangeList;\n  // список локальных изменений\n  localChangeList: TreeChangeList;\n}\n\nexport const store = {\n  namespaced: true,\n  state: {\n    stableChangeList: {},\n    localChangeList: {}\n  },\n  mutations: {\n    [mutations.ADD_CUT_PASTE](state: State, change: CHCutPaste) {\n      if (!state.localChangeList[change.nodeID]) {\n        state.localChangeList[change.nodeID] = {};\n      }\n      if (state.localChangeList[change.nodeID][changeTypes.CREATE]) {\n        // if user ADDed then MOVEd node then it is simply addition to CUT_PASTE newParentID\n        state.localChangeList[change.nodeID][changeTypes.CREATE]!.parentID =\n          change.newParentID;\n      } else {\n        state.localChangeList[change.nodeID][changeTypes.CUT_PASTE] = change;\n      }\n    },\n    [mutations.ADD_CREATE](state: State, change: CHCreate) {\n      if (!state.localChangeList[change.nodeID]) {\n        state.localChangeList[change.nodeID] = {};\n      }\n      state.localChangeList[change.nodeID][changeTypes.CREATE] = change;\n    },\n    [mutations.ADD_REMOVE](state: State, change: CHRemove) {\n      // clear changelist for this node because REMOVE vanishes them anyway\n      state.localChangeList[change.nodeID] = {};\n      state.localChangeList[change.nodeID][changeTypes.REMOVE] = change;\n    },\n    [mutations.ADD_POSITION_CHANGE](state: State, change: CHPositionChange) {\n      if (!state.localChangeList[change.nodeID]) {\n        state.localChangeList[change.nodeID] = {};\n      }\n      let firstOldPosition = change.oldPosition;\n      if (state.localChangeList[change.nodeID][changeTypes.POSITION_CHANGE]) {\n        firstOldPosition = state.localChangeList[change.nodeID][\n          changeTypes.POSITION_CHANGE\n        ]!.oldPosition;\n      }\n      state.localChangeList[change.nodeID][changeTypes.POSITION_CHANGE] = {\n        nodeID: change.nodeID,\n        oldPosition: firstOldPosition,\n        newPosition: change.newPosition\n      };\n    }\n  },\n  actions: {}\n};\n","import { Point, Vector } from \"@/types/graphics\";\nimport { addVector, vectorOnNumber } from \"@/tools/graphics\";\nimport { debounce } from \"lodash\";\n\nexport interface State {\n  zoom: number;\n  zoomCenter: Point;\n  pan: Point;\n  debouncedZoom: number;\n  debouncedPan: Point;\n}\n\nexport const mutations = {\n  ADD_ZOOM: \"ADD_ZOOM\",\n  ADD_PAN: \"ADD_PAN\",\n  SET_PAN: \"SET_PAN\",\n  SET_ZOOM_CENTER: \"SET_ZOOM_CENTER\"\n};\n\nconst zoomDebounce = debounce((state, value: number) => {\n  state.debouncedZoom = value;\n}, 100);\n\nconst panDebounce = debounce((state, value: Point) => {\n  state.debouncedPan = value;\n}, 100);\n\nconst ZOOM_SENSITIVITY = 1 / 500;\nconst PAN_SENSITIVITY = 1;\n\nexport const store = {\n  namespaced: true,\n  state: {\n    zoom: 1,\n    pan: { x: 0, y: 0 },\n    debouncedZoom: 1,\n    debouncedPan: { x: 0, y: 0 },\n    zoomCenter: { x: 0, y: 0 }\n  },\n  mutations: {\n    [mutations.SET_ZOOM_CENTER](state: State, center: Point) {\n      state.zoomCenter = center;\n    },\n    [mutations.ADD_ZOOM](state: State, delta: number) {\n      const newZoom= state.zoom * Math.pow(2, delta * ZOOM_SENSITIVITY);\n      if (newZoom < 0.5) {\n        // foolproof from too much zoom\n        return\n      }\n      state.zoom = newZoom\n      zoomDebounce(state, state.zoom);\n    },\n    [mutations.ADD_PAN](state: State, delta: Vector) {\n      state.pan = addVector(\n        { from: { x: 0, y: 0 }, to: state.pan },\n        vectorOnNumber(delta, PAN_SENSITIVITY)\n      ).to;\n      panDebounce(state, state.pan);\n    },\n    [mutations.SET_PAN](state: State, point: Point) {\n      state.pan = point;\n      panDebounce(state, state.pan);\n    }\n  }\n};\n","import firebase from \"firebase/compat\";\nimport api from \"@/api/api\";\nimport { Commit } from \"vuex\";\n\nexport interface State {\n  user: firebase.User | null;\n}\n\nexport const mutations = {\n  SET_USER: \"SET_USER\"\n};\nexport const actions = {\n  signIn: \"signIn\",\n  signOut: \"signOut\"\n};\n\nexport const store = {\n  namespaced: true,\n  state: {\n    user: null\n  },\n  mutations: {\n    [mutations.SET_USER](state: State, user: firebase.User) {\n      state.user = user;\n    }\n  },\n  actions: {\n    async [actions.signIn]({ commit }: { commit: Commit }) {\n      await firebase\n        .auth()\n        .signInWithPopup(new firebase.auth.GoogleAuthProvider());\n    },\n\n    async [actions.signOut]({ commit }: { commit: Commit }) {\n      await firebase.auth().signOut();\n      commit(mutations.SET_USER, null);\n    }\n  }\n};\n","import { clone } from \"@/tools/utils\";\nimport { Commit } from \"vuex\";\nimport api from \"@/api/api\";\nimport { ErrorKV } from \"@/types/errorkv\";\nimport { State as UserState } from \"@/store/user\";\n\nexport type NodeContent = {\n  nodeID: string;\n  content: string;\n};\n\n// user private comment\nexport type NodeComment = {\n  nodeID: string;\n  comment: string;\n};\n\nexport interface State {\n  nodeContents: Record<string, NodeContent>;\n  userNodeComments: Record<string, NodeComment>;\n}\n\nexport const mutations = {\n  SET_CONTENTS: \"SET_CONTENTS\",\n  SET_USER_COMMENTS: \"SET_USER_COMMENTS\",\n  SET_NODE_CONTENT: \"SET_NODE_CONTENT\",\n  SET_NODE_COMMENT: \"SET_NODE_COMMENT\",\n};\n\nexport const actions = {\n  getNodeContent: \"getNodeContent\",\n  setNodeContent: \"setNodeContent\",\n  setNodeComment: \"setNodeComment\",\n};\n\nexport const EmptyNodeContent = {\n  nodeID: \"\",\n  content: \"\",\n} as NodeContent;\n\nfunction createContentIfNotExist(\n  nodeContents: Record<string, NodeContent>,\n  nodeID: string\n) {\n  if (!nodeContents[nodeID]) {\n    nodeContents[nodeID] = clone(EmptyNodeContent);\n    nodeContents[nodeID].nodeID = nodeID;\n  }\n}\n\nexport const EmptyNodeComment = {\n  nodeID: \"\",\n  comment: \"\"\n} as NodeComment;\n\nfunction createCommentIfNotExist(\n  userNodeComments: Record<string, NodeComment>,\n  nodeID: string\n) {\n  if (!userNodeComments[nodeID]) {\n    userNodeComments[nodeID] = clone(EmptyNodeComment);\n    userNodeComments[nodeID].nodeID = nodeID;\n  }\n}\n\nexport const store = {\n  namespaced: true,\n  state: {\n    nodeContents: {} as Record<string, NodeContent>,\n    userNodeComments: {} as Record<string, NodeComment>\n  } as State,\n  actions: {\n    [actions.getNodeContent](\n      { state }: { state: State },\n      nodeID: string\n    ): NodeContent {\n      return state.nodeContents[nodeID];\n    },\n\n    /**\n     * setNodeComment\n     * @param commit\n     * @param state\n     * @param v\n     */\n    async [actions.setNodeComment](\n      { commit, rootState }: { commit: Commit; rootState: { user: UserState } },\n      v: { nodeID: string; comment: string }\n    ): Promise<ErrorKV> {\n      // cannot save for unauthorized user\n      if (!rootState.user.user || rootState.user.user.isAnonymous) {\n        return null;\n      }\n\n      // add to DB\n      const err = await api.debouncedUpdate({\n        [`user_data/${rootState.user.user.uid}/comment/${v.nodeID}/nodeID`]: v.nodeID,\n        [`user_data/${rootState.user.user.uid}/comment/${v.nodeID}/comment`]: v.comment\n      });\n      if (err) {\n        return err;\n      }\n\n      // change in local store\n      commit(`${mutations.SET_NODE_COMMENT}`, v);\n\n      return null;\n    },\n\n    /**\n     * setNodeContent\n     * @param commit\n     * @param state\n     * @param v\n     */\n    async [actions.setNodeContent](\n      { commit, state }: { commit: Commit; state: State },\n      v: { nodeID: string; content: string }\n    ): Promise<ErrorKV> {\n      // change in local store before adding to DB for comfortable textbox editing experience\n      commit(`${mutations.SET_NODE_CONTENT}`, v);\n\n      // add to DB\n      const err = await api.debouncedUpdate({\n        [`node_content/${v.nodeID}/nodeID`]: v.nodeID,\n        [`node_content/${v.nodeID}/content`]: v.content\n      });\n      if (err) {\n        return err;\n      }\n\n      return null;\n    }\n  },\n  mutations: {\n    /**\n     * SET_CONTENTS\n     * @param state\n     * @param nodeContents\n     */\n    [mutations.SET_CONTENTS](\n      state: State,\n      nodeContents: Record<string, NodeContent>\n    ) {\n      state.nodeContents = nodeContents;\n    },\n\n    /**\n     * SET_USER_CONTENTS\n     * @param state\n     * @param userNodeComments\n     */\n    [mutations.SET_USER_COMMENTS](\n      state: State,\n      userNodeComments: Record<string, NodeComment>\n    ) {\n      state.userNodeComments = userNodeComments;\n    },\n\n    /**\n     * SET_NODE_CONTENT\n     * @param state\n     * @param v\n     */\n    [mutations.SET_NODE_CONTENT](\n      state: State,\n      v: { nodeID: string; content: string }\n    ) {\n      createContentIfNotExist(state.nodeContents, v.nodeID);\n      state.nodeContents[v.nodeID].content = v.content;\n    },\n\n    /**\n     * SET_NODE_COMMENT\n     * @param state\n     * @param v\n     */\n    [mutations.SET_NODE_COMMENT](\n      state: State,\n      v: { nodeID: string; comment: string }\n    ) {\n      createCommentIfNotExist(state.userNodeComments, v.nodeID);\n      state.userNodeComments[v.nodeID].comment = v.comment;\n    },\n  }\n};\n","\nexport interface State {\n  nodeIDs: string[];\n}\n\nexport const mutations = {\n  SET_NODE_IDS: \"SET_NODE_IDS\",\n};\n\nexport const store = {\n  namespaced: true,\n  state: {\n    nodeIDs: []\n  },\n  mutations: {\n    [mutations.SET_NODE_IDS](state: State, nodeIDs: Array<string>) {\n      // show only first 20 results\n      if (nodeIDs.length>20) {\n        // TODO: show notification that only first 20 results are shown\n        state.nodeIDs = nodeIDs.slice(0, 20)\n      } else {\n        state.nodeIDs = nodeIDs;\n      }\n    },\n  },\n}\n","\n// FlexSearch for full-text search\n// @ts-ignore\nimport { Worker } from \"flexsearch\";\nconst index = new Worker({\n  language: \"en\",\n  tokenize: \"forward\"\n});\n\nexport function add(id: string, text:string) {\n  index.add(id, text);\n}\nexport function search(text:string): Promise<Array<string>> {\n  return index.search(text)\n}\n","import firebase from \"firebase/compat\";\nimport api from \"@/api/api\";\nimport { mutations as treeMutations, actions as treeActions } from \"@/store/tree\";\nimport { mutations as pinMutations } from \"@/store/pin\";\nimport { mutations as preconditionMutations } from \"@/store/precondition\";\nimport {\n  mutations as nodeContentMutations,\n  NodeContent\n} from \"@/store/node_content\";\nimport { store } from \"@/store/index\";\nimport { printError } from \"@/tools/utils\";\nimport { convertDBMapToTree } from \"@/api/helpers\";\nimport { DBNode } from \"@/api/types\";\nimport { add as textSearchAdd } from \"@/tools/textsearch\";\n\n/**\n * 1) fetch map\n * 2) subscribe to changes\n * 3) convert to tree and set to internal store\n * @param user\n */\nexport async function initMap(user: firebase.User | null) {\n  const [map, err] = await api.getMap(user);\n  if (map === null || err) {\n    printError(\"fetchMap: cannot api.getMap(user)\", { err });\n  }\n  // create Tree with denormalized positions\n  const [tree, convErr] = convertDBMapToTree(map!);\n  if (convErr !== null) {\n    return [null, convErr];\n  }\n  store.commit(`tree/${treeMutations.SET_TREE}`, tree);\n\n  // subscribe on changes for every node in map\n  for (const id in map) {\n    api.subscribeMapNodeChange(id, (dbNode: DBNode) => store.dispatch(`tree/${treeActions.handleMapNodeUpdate}`, dbNode))\n  }\n}\n\nexport async function fetchPins(user: firebase.User | null) {\n  let [pins, err] = await api.getPins(user);\n  if (pins == null || err) {\n    console.error(err);\n  }\n\n  if (user && !pins) {\n    [pins, err] = await api.getPins(null);\n    if (pins == null || err) {\n      console.error(err);\n      pins = {};\n    }\n  }\n\n  store.commit(`pin/${pinMutations.SET_PINS}`, pins);\n}\n\nexport async function initPreconditions(user: firebase.User | null) {\n  let [preconditions, err] = await api.getPreconditions(user);\n  if (preconditions == null || err) {\n    console.error(err);\n    preconditions = {};\n  }\n\n  if (user && !preconditions) {\n    [preconditions, err] = await api.getPreconditions(null);\n    if (preconditions == null || err) {\n      console.error(err);\n      preconditions = {};\n    }\n  }\n\n  // subscribe on precondition changes for every node\n  for (const id in preconditions) {\n    api.subscribePreconditionNodeChange(\n      id,\n      (nodeID, preconditionIDs) => {\n        return store.commit(\n          `precondition/${preconditionMutations.UPDATE_PRECONDITIONS}`,\n          {nodeID:nodeID, preconditionIDs: preconditionIDs},\n        )\n      })\n  }\n\n  store.commit(\n    `precondition/${preconditionMutations.SET_PRECONDITIONS}`,\n    preconditions\n  );\n}\n\n/**\n * Fetch all node content and subscribe for content change for each node\n * @param user\n */\nexport async function initNodeContents(user: firebase.User | null) {\n  // fetch node_content from general map\n  const [nodeContent, err] = await api.getNodeContent();\n  if (nodeContent == null || err) {\n    printError(\"fetchNodeContents error\", { err });\n    return;\n  }\n\n  const nodeContents: Record<string, NodeContent> = {};\n  for (const i in nodeContent) {\n    nodeContents[i] = {\n      nodeID: nodeContent[i].nodeID,\n      content: nodeContent[i].content,\n    } as NodeContent;\n\n    api.subscribeNodeContentChange(\n      nodeContents[i].nodeID,\n      (v: { nodeID: string; content: string }) =>  {\n        textSearchAdd(v.nodeID, v.content);\n        store.commit(`nodeContent/${nodeContentMutations.SET_NODE_CONTENT}`, v);\n      }\n    )\n  }\n\n  store.commit(\n    `nodeContent/${nodeContentMutations.SET_CONTENTS}`,\n    nodeContents\n  );\n\n  if (user) {\n    const [userComments, err] = await api.getUserComments(user);\n    if (err) {\n      printError(\"fetch userComments error\", { err, user });\n      return;\n    }\n    if (userComments === null) {\n      return\n    }\n\n    // fix in store\n    store.commit(\n      `nodeContent/${nodeContentMutations.SET_USER_COMMENTS}`,\n      userComments\n    );\n  }\n}\n\nexport async function initData(user: firebase.User | null) {\n  await initMap(user);\n  await fetchPins(user);\n  await initPreconditions(user);\n  await initNodeContents(user);\n}\n","import {\n  Commit,\n  createStore,\n  Dispatch,\n  Store,\n  useStore as baseUseStore\n} from \"vuex\";\nimport { InjectionKey } from \"vue\";\nimport { store as pinStore, State as PinState } from \"./pin\";\n\nimport {\n  store as preconditionStore,\n  State as PreconditionState,\n} from \"./precondition\";\n\nimport {\n  store as positionChangePermitsStore,\n  State as positionChangePermitsState,\n} from \"./position_change_permits\";\n\nimport {\n  store as treeStore,\n  State as TreeState,\n  mutations as treeMutations,\n} from \"./tree\";\n\nimport { store as zoomPanStore, State as ZoomPanState } from \"./zoom_pan\";\n\nimport {\n  store as userStore,\n  State as UserState,\n  mutations as userMutations,\n  actions as userActions\n} from \"./user\";\n\nimport {\n  store as historyStore,\n  State as HistoryState,\n  mutations as historyMutations\n} from \"./history\";\n\nimport {\n  store as nodeContentStore,\n  State as NodeContentState\n} from \"./node_content\";\n\nimport {\n  store as searchResultStore,\n  State as SearchResultState\n} from \"./search_result\";\n\nimport api from \"@/api/api\";\nimport { initData } from \"./helpers\";\nimport { MapNode, Point } from \"@/types/graphics\";\nimport {\n  createNewNode,\n  findMapNode,\n  getNewNodeCenter\n} from \"@/store/tree/helpers\";\nimport NewErrorKV from \"@/tools/errorkv\";\nimport { addVector, convertPosition } from \"@/tools/graphics\";\nimport { DBNode } from \"@/api/types\";\nimport {clone, debounce} from \"lodash\";\nimport { printError } from \"@/tools/utils\";\nimport firebase from \"firebase/compat\";\n\nexport type State = {\n  // root states\n  editModeOn: boolean;\n  subscribedNodeIDs: string[];\n\n  // module states\n  pin: PinState;\n  precondition: PreconditionState;\n  positionChangePermits: positionChangePermitsState;\n  tree: TreeState;\n  user: UserState;\n  zoomPan: ZoomPanState;\n  history: HistoryState;\n  nodeContent: NodeContentState;\n  searchResult: SearchResultState;\n};\n\nexport const actions = {\n  init: \"init\",\n  updateNodePosition: \"updateNodePosition\",\n  createNode: \"createNode\",\n  cutPasteNode: \"cutPasteNode\",\n  removeNode: \"removeNode\",\n  setEditMode: \"setEditMode\",\n  subscribeDBChange: \"subscribeDBChange\",\n\n  // confirmSignInPopup\n  confirmSignInPopup: \"confirmSignInPopup\"\n};\n\nexport const mutations = {\n  SET_EDIT_MODE: \"SET_EDIT_MODE\",\n  SET_SUBSCRIBED_NODE_IDS: \"SET_SUBSCRIBED_NODE_IDS\"\n};\n\nconst debouncedPositionSet = debounce(\n  (\n    nodeID: string,\n    newCenter: Point,\n    parentID: string,\n    mapNodeLayers: Record<string, MapNode>[]\n  ) => {\n    const [normalizedNewNodeCenter] = convertPosition(\n      \"normalize\",\n      newCenter,\n      parentID,\n      mapNodeLayers\n    );\n\n    api.update({ [`map/${nodeID}/position`]: normalizedNewNodeCenter });\n  },\n  200\n);\n\nexport const key: InjectionKey<Store<State>> = Symbol();\n\nexport const store = createStore<State>({\n  state: {\n    editModeOn: false,\n    subscribedNodeIDs: [] as string[]\n  } as State,\n  mutations: {\n    [mutations.SET_EDIT_MODE](state: State, val: boolean) {\n      state.editModeOn = val;\n    },\n    [mutations.SET_SUBSCRIBED_NODE_IDS](state: State, val: string[]) {\n      state.subscribedNodeIDs = val;\n    }\n  },\n  actions: {\n    /**\n     * confirmSignInPopup\n     * @param commit\n     * @param state\n     * @param confirm\n     */\n    async [actions.confirmSignInPopup](\n      { dispatch, state }: { dispatch: Dispatch; state: State },\n      confirm: {\n        require(args: {\n          message?: string;\n          target?: EventTarget;\n          group?: string;\n          icon?: string;\n          header?: string;\n          accept?: Function;\n          reject?: Function;\n          acceptLabel?: string;\n          rejectLabel?: string;\n          acceptIcon?: string;\n          rejectIcon?: string;\n          blockScroll?: boolean;\n          acceptClass?: string;\n          rejectClass?: string;\n        }): void;\n\n        close(): void;\n      }\n    ) {\n      confirm.require({\n        message: \"Please authorize to change node contents\",\n        header: \"SignIn\",\n        acceptLabel: \"Ok, Sign In\",\n        rejectLabel: \"No, thanks, just watching\",\n        accept: async () => {\n          await dispatch(`user/${userActions.signIn}`);\n        },\n        reject: () => {\n          return;\n        }\n      });\n    },\n\n    /**\n     *\n     * @param commit\n     * @param state\n     * @param val\n     */\n    [actions.setEditMode](\n      { commit, state }: { commit: Commit; state: State },\n      val: boolean\n    ) {\n      commit(mutations.SET_EDIT_MODE, val);\n      if (!val) {\n        state.subscribedNodeIDs.forEach(id =>\n          api.unsubscribeDBChange(\"map/\" + id)\n        );\n        commit(mutations.SET_SUBSCRIBED_NODE_IDS, []);\n      }\n    },\n\n    /**\n     *\n     * @param commit\n     */\n    async [actions.init]({ commit }: { commit: Commit }) {\n      api.initFirebase();\n      firebase.auth().onAuthStateChanged(user => {\n        if (user && !user.isAnonymous) {\n          api.setPublicUserData(user.uid, user.displayName, null)\n          commit(`user/${userMutations.SET_USER}`, user);\n          initData(user);\n        } else {\n          commit(`user/${userMutations.SET_USER}`, null);\n          initData(null);\n        }\n      });\n    },\n\n    /**\n     *\n     * @param commit\n     * @param state\n     * @param v\n     */\n    async [actions.createNode](\n      { commit, state }: { commit: Commit; state: State },\n      v: {\n        parentID: string;\n        title: string;\n      }\n    ) {\n      const parent = state.tree.nodeRecord[v.parentID].node;\n      const [newCenter, changedNode, err1] = getNewNodeCenter(\n        parent,\n        state.tree.mapNodeLayers,\n        true\n      );\n      if (err1 !== null) {\n        printError(\"Cannot create new center\", {\n          err: err1,\n          parent,\n          \"state.tree.mapNodeLayers\": state.tree.mapNodeLayers\n        });\n        return;\n      }\n\n      const [normalizedPosition, err2] = convertPosition(\n        \"normalize\",\n        newCenter!,\n        v.parentID,\n        state.tree.mapNodeLayers\n      );\n      if (err2) {\n        printError(\"createNode: cannot create new center\", {\n          err: err2,\n          parent,\n          \"state.tree.mapNodeLayers\": state.tree.mapNodeLayers\n        });\n        return;\n      }\n      const node = createNewNode(v.title, normalizedPosition!);\n      const newDBNode = {\n        id: node.id,\n        parentID: v.parentID,\n        name: v.title,\n        children: [],\n        position: normalizedPosition\n      };\n      const newKey = api.generateKey();\n      const updateMap: Record<string, any> = {\n        [`map/${newDBNode.id}`]: newDBNode,\n        [`map/${newDBNode.parentID}/children/${newKey}`]: newDBNode.id\n      };\n\n      if (changedNode) {\n        const [normalizedChangedCenter] = convertPosition(\n          \"normalize\",\n          changedNode.position,\n          v.parentID,\n          state.tree.mapNodeLayers\n        );\n        updateMap[`map/${changedNode.id}/position`] = normalizedChangedCenter;\n      }\n\n      await api.update(updateMap);\n\n      commit(`history/${historyMutations.ADD_CREATE}`, {\n        nodeID: node.id,\n        parentID: v.parentID\n      });\n\n      return node.id\n    },\n\n    /**\n     *\n     * @param commit\n     * @param state\n     * @param v\n     */\n    async [actions.cutPasteNode](\n      { commit, state }: { commit: Commit; state: State },\n      v: {\n        nodeID: string;\n        parentID: string;\n      }\n    ) {\n      // remove nodeID from oldParent children,\n      // add to newParent children,\n      // recalculate position of node, normalize it and\n      // update DB with these three modifications in one transaction\n      const oldParent = state.tree.nodeRecord[v.nodeID].parent;\n      const newParent = state.tree.nodeRecord[v.parentID].node;\n      const [newCenter, changedNode, err1] = getNewNodeCenter(\n        newParent,\n        state.tree.mapNodeLayers,\n        true\n      );\n      if (err1) {\n        printError(\"cutPasteNode: cannot getNewNodeCenter\", { err: err1 });\n        return;\n      }\n      const [normalizedNewNodeCenter, err2] = convertPosition(\n        \"normalize\",\n        newCenter!,\n        v.parentID,\n        state.tree.mapNodeLayers\n      );\n      if (err2) {\n        printError(\"cutPasteNode: cannot create new center\", {\n          err: err2,\n          parent,\n          \"state.tree.mapNodeLayers\": state.tree.mapNodeLayers\n        });\n        return;\n      }\n      // generate key for new child in list of newParent\n      const newKey = api.generateKey();\n      // search for key of childID in children of oldParent\n      const oldKey = await api.findKeyOfChild(oldParent!.id, v.nodeID);\n      const updateMap = {\n        [`map/${v.nodeID}/parentID`]: newParent!.id,\n        [`map/${oldParent!.id}/children/${oldKey}`]: null, // remove from old parent children\n        [`map/${newParent!.id}/children/${newKey}`]: v.nodeID, // add to children of new parents\n        [`map/${v.nodeID}/position`]: normalizedNewNodeCenter\n      };\n      if (changedNode) {\n        const [normalizedChangedCenter] = convertPosition(\n          \"normalize\",\n          changedNode.position,\n          v.parentID,\n          state.tree.mapNodeLayers\n        );\n        updateMap[`map/${changedNode.id}/position`] = normalizedChangedCenter;\n      }\n      await api.update(updateMap);\n\n      commit(`history/${historyMutations.ADD_CUT_PASTE}`, {\n        nodeID: v.nodeID,\n        parentID: v.parentID\n      });\n    },\n\n    /**\n     *\n     * @param commit\n     * @param state\n     * @param nodeID\n     */\n    async [actions.removeNode](\n      { commit, state }: { commit: Commit; state: State },\n      nodeID: string\n    ) {\n      const parent = state.tree.nodeRecord[nodeID].parent;\n      if (!parent) {\n        return;\n      }\n      const parentID = parent.id;\n      const node = (await api.getNode(nodeID)) as DBNode;\n      // collect all children id recursively\n      const allChildrenID = clone(node.children)\n      const allChildrenIDMap = {} as Record<string, DBNode>\n      while (allChildrenID.length > 0) {\n        const id = allChildrenID.pop()\n        if (!id || !state.tree.nodeRecord[id!] || !state.tree.nodeRecord[id!].node || !state.tree.nodeRecord[id!].parent) {\n          continue\n        }\n        allChildrenIDMap[id] = {\n          id: id,\n          parentID: state.tree.nodeRecord[id].parent!.id,\n          name: state.tree.nodeRecord[id].node.title,\n          children: state.tree.nodeRecord[id].node.children.map((node)=>node.id),\n          position: state.tree.nodeRecord[id].node.position,\n        }\n        allChildrenID.push(...state.tree.nodeRecord[id].node.children.map((node)=>node.id));\n      }\n      // move node and its children to /trash atomically\n      const moveToTrash = {} as Record<string, any>\n      const oldKey = await api.findKeyOfChild(parent.id, nodeID);\n      moveToTrash[`trash/${nodeID}/map`] = node;\n      moveToTrash[`map/${nodeID}`] = null;\n      moveToTrash[`map/${parent.id}/children/${oldKey}`] = null;\n      if (state.nodeContent.nodeContents[nodeID]) {\n        moveToTrash[`trash/${nodeID}/node_content`] = state.nodeContent.nodeContents[nodeID];\n        moveToTrash[`node_content/${nodeID}`] = null;\n      }\n      if (state.precondition.preconditions[nodeID]) {\n        moveToTrash[`trash/${nodeID}/precondition`] = state.precondition.preconditions[nodeID];\n        moveToTrash[`precondition/${nodeID}`] = null;\n      }\n\n      // move also all children to /trash\n      for (const id in allChildrenIDMap) {\n        moveToTrash[`trash/${id}/map`] = allChildrenIDMap[id]\n        moveToTrash[`map/${id}`] = null\n        if (state.nodeContent.nodeContents[id]) {\n          moveToTrash[`trash/${id}/node_content`] = state.nodeContent.nodeContents[id]\n          moveToTrash[`node_content/${id}`] = null\n        }\n        if (state.precondition.preconditions[id]) {\n          moveToTrash[`trash/${id}/precondition`] = state.precondition.preconditions[id]\n          moveToTrash[`precondition/${id}`] = null\n        }\n      }\n\n      await api.update(moveToTrash);\n\n      commit(`history/${historyMutations.ADD_REMOVE}`, {\n        parentNodeID: parentID,\n        nodeID: nodeID\n      });\n    },\n\n    /**\n     *\n     * @param commit\n     * @param state\n     * @param v\n     */\n    [actions.updateNodePosition](\n      { commit, state }: { commit: Commit; state: State },\n      v: { nodeId: string; delta: Point }\n    ) {\n      if (!state.editModeOn) {\n        return;\n      }\n      const [mapNode] = findMapNode(v.nodeId, state.tree.mapNodeLayers);\n      if (!mapNode) {\n        return NewErrorKV(\"UPDATE_NODE_POSITION: cannot find mapNode\", {\n          \"v.nodeId\": v.nodeId,\n          \"state.mapNodeLayers\": state.tree.mapNodeLayers\n        });\n      }\n      const newCenter = addVector(\n        { from: { x: 0, y: 0 }, to: mapNode.center },\n        { from: { x: 0, y: 0 }, to: v.delta }\n      ).to;\n\n      const args = { nodeId: v.nodeId, newCenter, returnError: null };\n      commit(`tree/${treeMutations.UPDATE_NODE_POSITION}`, args);\n      if (args.returnError === null) {\n        commit(`history/${historyMutations.ADD_POSITION_CHANGE}`, {\n          nodeID: v.nodeId,\n          oldPosition: mapNode.center,\n          newPosition: newCenter\n        });\n\n        // save to DB with debounce\n        debouncedPositionSet(\n          v.nodeId,\n          newCenter,\n          state.tree.nodeRecord[v.nodeId].parent!.id,\n          state.tree.mapNodeLayers\n        );\n      }\n    },\n  },\n  modules: {\n    pin: pinStore,\n    precondition: preconditionStore,\n    positionChangePermits: positionChangePermitsStore,\n    tree: treeStore,\n    user: userStore,\n    zoomPan: zoomPanStore,\n    history: historyStore,\n    nodeContent: nodeContentStore,\n    searchResult: searchResultStore,\n  }\n});\n\n// define your own `useStore` composition function\nexport function useStore() {\n  return baseUseStore(key);\n}\n","\nimport { defineComponent } from \"vue\";\nimport { useStore, actions } from \"@/store\";\nexport default defineComponent({\n  setup() {\n    const store = useStore();\n    store.dispatch(actions.init);\n  }\n});\n","import { render } from \"./App.vue?vue&type=template&id=8c892ede\"\nimport script from \"./App.vue?vue&type=script&lang=ts\"\nexport * from \"./App.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\n  This section is just for test/emulator cases for now\n  <input id=\"email\" />\n  <input id=\"password\" />\n  <button @click=\"login\">login</button>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from \"vue\";\nimport api from \"@/api/api\";\nimport { mutations } from \"@/store/user\";\nimport firebase from \"firebase/compat\";\nimport { useStore } from \"@/store\";\n\nexport default defineComponent({\n  name: \"PasswordLogin\",\n\n  setup() {\n    const store = useStore();\n\n    return {\n      login: async () => {\n        const emailEl = document.getElementById(\"email\") as HTMLInputElement;\n        const passwordEl = document.getElementById(\n          \"password\"\n        ) as HTMLInputElement;\n        await firebase\n          .auth()\n          .signInWithEmailAndPassword(emailEl.value, passwordEl.value);\n      }\n    };\n  }\n});\n</script>\n","\nimport { defineComponent } from \"vue\";\nimport api from \"@/api/api\";\nimport { mutations } from \"@/store/user\";\nimport firebase from \"firebase/compat\";\nimport { useStore } from \"@/store\";\n\nexport default defineComponent({\n  name: \"PasswordLogin\",\n\n  setup() {\n    const store = useStore();\n\n    return {\n      login: async () => {\n        const emailEl = document.getElementById(\"email\") as HTMLInputElement;\n        const passwordEl = document.getElementById(\n          \"password\"\n        ) as HTMLInputElement;\n        await firebase\n          .auth()\n          .signInWithEmailAndPassword(emailEl.value, passwordEl.value);\n      }\n    };\n  }\n});\n","import { render } from \"./PasswordLogin.vue?vue&type=template&id=63c7a1a8\"\nimport script from \"./PasswordLogin.vue?vue&type=script&lang=ts\"\nexport * from \"./PasswordLogin.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\n  <ConfirmDialog></ConfirmDialog>\n  <Toast position=\"bottom-left\" />\n  <NodeContent :show=\"!editModeOn && !!selectedNodeId\" />\n  <Menu\n    :clickedTitleId=\"clickedTitleId\"\n    @select-precondition-is-on=\"setSelectPreconditionON\"\n    @select-precondition-is-off=\"setSelectPreconditionOFF\"\n  />\n  <Map\n    :layers=\"visibleZoomedPanedLayers\"\n    :viewBox=\"viewBox\"\n    :selectedNodeId=\"selectedNodeId\"\n    :selectedNodePreconditionIds=\"selectedNodePreconditionIds\"\n    :pin-nodes=\"pinNodes\"\n    :searchResultPinNodes=\"searchResultPinNodes\"\n    :searchResultNodeIDs=\"searchResultNodeIDs\"\n    @title-dragging=\"nodeDragging\"\n    @title-click=\"titleClick\"\n    @title-over=\"titleOver\"\n    @title-leave=\"titleLeave\"\n    @dragging-background=\"mapDragging\"\n    @wheel=\"zoom\"\n  />\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, ref, watch } from \"vue\";\nimport Map from \"@/components/map/Map.vue\";\nimport NodeContent from \"@/components/node_content/Index.vue\";\nimport ConfirmDialog from \"primevue/confirmdialog\";\nimport Toast from \"primevue/toast\";\nimport {\n  EventClickNode,\n  EventDraggingBackground,\n  EventDraggingNode,\n  EventWheel\n} from \"@/components/map/Map.ts\";\nimport Menu from \"@/components/menu/Index.vue\";\nimport { useStore } from \"@/store\";\nimport { useRouter, useRoute, onBeforeRouteUpdate } from \"vue-router\";\nimport { mutations as treeMutations, NodeRecordItem } from \"@/store/tree\";\nimport { mutations as zoomPanMutations } from \"@/store/zoom_pan\";\nimport { actions } from \"@/store/\";\nimport {\n  filterNodesAndLayers,\n  findCentralNode,\n  zoomAndPanPoint,\n  zoomAnPanLayers\n} from \"@/views/Home\";\nimport { clone, printError } from \"@/tools/utils\";\nimport { MapNode } from \"@/types/graphics\";\nimport {findMapNode, findMapNodes} from \"@/store/tree/helpers\";\nimport {actions as positionChangePermitsActions} from \"@/store/position_change_permits\";\n\nexport default defineComponent({\n  name: \"Home\",\n\n  components: {\n    Map,\n    Menu,\n    NodeContent,\n    ConfirmDialog,\n    Toast\n  },\n\n  setup() {\n    const store = useStore();\n    const router = useRouter();\n    const route = useRoute();\n    const treeState = store.state.tree;\n    const zoomPanState = store.state.zoomPan;\n    const pinState = store.state.pin;\n    const searchResultState = store.state.searchResult;\n    const clickedTitleId = ref(\"-1\");\n    let selectPreconditionIsOn = false;\n    let titleOver = false;\n\n    // Set node from URL as selected\n    watch(\n      () => route.params.id,\n      () => {\n        store.commit(\n          `tree/${treeMutations.SET_SELECTED_NODE_ID}`,\n          route.params.id\n        );\n      },\n      { immediate: true }\n    );\n\n    /**\n     * compute svg viewBox\n     */\n    const viewBox = computed(() => {\n      if (treeState.mapNodeLayers && treeState.mapNodeLayers.length) {\n        return `0 0 ${2 * treeState.mapNodeLayers[0][\"0\"].center.x} ${2 *\n          treeState.mapNodeLayers[0][\"0\"].center.y}`;\n      } else {\n        return `0 0 1000 1000`;\n      }\n    });\n\n    /**\n     * From mapNodeLayers method updateLayers determines visibleLayers and nodes\n     * that will be shown to user (which is always just a small part of all nodes and visibleLayers of the map)\n     * @param centralNodeId\n     * @param mapNodeLayers\n     * @param nodeRecord\n     */\n    const updateLayers = (\n      centralNodeId: string,\n      mapNodeLayers: Array<Record<string, MapNode>>,\n      nodeRecord: Record<string, NodeRecordItem>\n    ): Array<Record<number, MapNode>> => {\n      // Вычленяем слои и узлы которые мы хотим показывать учитывая что текущий видимый узел это centralNodeId\n      const [filteredLayers, err] = filterNodesAndLayers(\n        mapNodeLayers,\n        nodeRecord,\n        centralNodeId\n      );\n      if (err) {\n        printError(\"Home.vue: error in filterNodesAndLayers:\", { err });\n        return [];\n      }\n      return filteredLayers.reverse();\n    };\n\n    const centralNodeId = ref<string | null>(null);\n    // visibleLayers consists only from user visible nodes and visibleLayers of all (which is treeState.mapNodeLayers)\n    const visibleLayers = ref<Array<Record<string, MapNode>>>([]);\n\n    // Ugly hack to determine first load of page\n    let isFirstPageLoad = true;\n    onBeforeRouteUpdate(async (to, from) => {\n      isFirstPageLoad = false\n    })\n    // If this is isFirstPageLoad then pan map to node in URL\n    watch(\n    () => [\n          treeState.mapNodeLayers,\n        ],\n    () => {\n      if (isFirstPageLoad && route.params.id.length > 0 && treeState.mapNodeLayers.length>0) {\n        const [firstNode] = findMapNode(route.params.id as string, treeState.mapNodeLayers)\n        if (firstNode != null) {\n          store.commit(\n              `zoomPan/${zoomPanMutations.SET_PAN}`,\n              {x: -firstNode.center.x + treeState.mapNodeLayers[0][\"0\"].center.x, y: -firstNode.center.y + treeState.mapNodeLayers[0][\"0\"].center.y},\n          );\n        }\n      }\n    })\n\n\n    // Determine which nodes to show based on current pan and zoom\n    watch(\n  () => [\n        treeState.mapNodeLayers,\n        zoomPanState.debouncedZoom,\n        zoomPanState.debouncedPan\n      ],\n      () => {\n        const [newCentralNodeId, err] = findCentralNode(\n          treeState.mapNodeLayers,\n          treeState.nodeRecord,\n          { width: window.innerWidth, height: window.innerHeight },\n          zoomPanState.debouncedZoom,\n          zoomPanState.pan,\n          zoomPanState.zoomCenter\n        );\n        if (err != null) {\n          printError(\"filterNodesAndLayers: error in findCurrentNode\", { err });\n        }\n\n        centralNodeId.value = newCentralNodeId;\n        visibleLayers.value = updateLayers(\n          newCentralNodeId,\n          treeState.mapNodeLayers,\n          treeState.nodeRecord\n        );\n      },\n      { immediate: true, deep: true }\n    );\n\n    const visibleZoomedPanedLayers = ref<Array<Record<string, MapNode>>>([]);\n    watch(\n      () => [zoomPanState.pan.x, zoomPanState.pan.y, zoomPanState.zoom, visibleLayers],\n      () => {\n        // visibleLayers это всегда слои с zoom=1 и pan={0, 0} состоящий из только видимых прямо сейчас элементов.\n        // Мы применяем к этому объекту текущий zoomPanState но сам эталон не трогаем, поэтому здесь clone\n        // Это не дорогая операция так как visibleLayers всегда содержит небольшое кол-во элементов\n        // видимых только прямо сейчас\n        const layersToZoomAndPan = clone(visibleLayers.value);\n        visibleZoomedPanedLayers.value = zoomAnPanLayers(\n          layersToZoomAndPan,\n          zoomPanState.zoom,\n          zoomPanState.pan\n        );\n      },\n      { immediate: true, deep: true }\n    );\n\n    return {\n      /**\n       * pinNodes\n       */\n      pinNodes: computed(() => {\n        if (centralNodeId.value == null) {\n          return [];\n        }\n        const pinNodeIDs = pinState.pinsReverse[centralNodeId.value];\n        if (!pinNodeIDs) {\n          return [];\n        }\n\n        // remove pins that already exists on visibleLayers\n        for (const layer of visibleLayers.value) {\n          for (const nodeID in layer) {\n            const node = layer[nodeID];\n            if (node.title != \"\") {\n              const ind = pinNodeIDs.indexOf(node.id);\n              if (ind != -1) {\n                pinNodeIDs.splice(ind, 1);\n              }\n            }\n          }\n        }\n\n        const pinMapNodes = findMapNodes(pinNodeIDs, treeState.mapNodeLayers);\n        const result = [];\n        for (const pinMapNode of pinMapNodes) {\n          const cl = clone(pinMapNode);\n          cl.center = zoomAndPanPoint(\n            pinMapNode.center,\n            zoomPanState.zoom,\n            zoomPanState.pan\n          );\n          result.push(cl);\n        }\n\n        return result;\n      }),\n\n      /**\n       * searchResultNodeIDs\n       */\n      searchResultNodeIDs: computed(()=>{\n        return searchResultState.nodeIDs\n      }),\n\n      /**\n       * searchResultPinNodes\n       */\n      searchResultPinNodes: computed(() => {\n        if (centralNodeId.value == null) {\n          return [];\n        }\n        const searchResultNodeIDs = clone(searchResultState.nodeIDs);\n        if (!searchResultNodeIDs) {\n          return [];\n        }\n\n        // remove pins that already exists on visibleLayers\n        for (const layer of visibleLayers.value) {\n          for (const nodeID in layer) {\n            const node = layer[nodeID];\n            if (node.title != \"\") {\n              const ind = searchResultNodeIDs.indexOf(node.id);\n              if (ind != -1) {\n                searchResultNodeIDs.splice(ind, 1);\n              }\n            }\n          }\n        }\n\n        const searchResultMapNodes = findMapNodes(searchResultNodeIDs, treeState.mapNodeLayers);\n        const result = [];\n        for (const searchResultMapNode of searchResultMapNodes) {\n          const cl = clone(searchResultMapNode);\n          cl.center = zoomAndPanPoint(\n            searchResultMapNode.center,\n            zoomPanState.zoom,\n            zoomPanState.pan\n          );\n          result.push(cl);\n        }\n\n        return result;\n      }),\n\n      viewBox,\n      editModeOn: computed(() => store.state.editModeOn),\n      selectedNodeId: computed(() => treeState.selectedNodeId),\n      selectedNodePreconditionIds: computed(() =>\n        treeState.selectedNodeId\n          ? store.state.precondition.preconditions[treeState.selectedNodeId]\n          : []\n      ),\n      visibleZoomedPanedLayers: visibleZoomedPanedLayers,\n      nodeDragging: async (e: EventDraggingNode) => {\n        const hasDragPermit = await store.dispatch(`positionChangePermits/${positionChangePermitsActions.CheckNodeID}`, e.id);\n        if (!hasDragPermit) {\n          return\n        }\n        await store.dispatch(`${actions.updateNodePosition}`, {\n          nodeId: e.id,\n          delta: {\n            x: e.delta.x / zoomPanState.zoom,\n            y: e.delta.y / zoomPanState.zoom\n          }\n        });\n      },\n      setSelectPreconditionON: () => {\n        selectPreconditionIsOn = true;\n      },\n      setSelectPreconditionOFF: () => {\n        selectPreconditionIsOn = false;\n      },\n      clickedTitleId,\n      titleClick: (e: EventClickNode) => {\n        if (!selectPreconditionIsOn) {\n          router.push({ name: \"node\", params: { id: e.id } });\n        } else {\n          clickedTitleId.value = e.id;\n        }\n      },\n      titleOver: (e: EventClickNode) => {\n        titleOver = true\n        store.commit(`tree/${treeMutations.SET_SELECTED_NODE_ID}`, e.id);\n      },\n      titleLeave: (e: EventClickNode) => {\n        titleOver = false\n        store.commit(\n          `tree/${treeMutations.SET_SELECTED_NODE_ID}`,\n          route.params.id\n        );\n      },\n      mapDragging: (event: EventDraggingBackground) => {\n        if (store.state.editModeOn && titleOver) {\n          // to prevent pan while node position editing ( = title dragging in edit mode)\n          return\n        }\n        store.commit(`zoomPan/${zoomPanMutations.ADD_PAN}`, event);\n      },\n      zoom: (event: EventWheel) => {\n        // initial value of center (when root.border == viewport)\n        const initial = {\n          x: (event.center.x - zoomPanState.pan.x) / zoomPanState.zoom,\n          y: (event.center.y - zoomPanState.pan.y) / zoomPanState.zoom\n        };\n        store.commit(`zoomPan/${zoomPanMutations.ADD_ZOOM}`, -1 * event.delta);\n        const after = {\n          x: initial.x * zoomPanState.zoom + zoomPanState.pan.x,\n          y: initial.y * zoomPanState.zoom + zoomPanState.pan.y\n        };\n        store.commit(`zoomPan/${zoomPanMutations.ADD_PAN}`, {\n          from: after,\n          to: event.center\n        });\n        store.commit(\n          `zoomPan/${zoomPanMutations.SET_ZOOM_CENTER}`,\n          event.center\n        );\n      }\n    };\n  }\n});\n</script>\n","<template>\n  <svg xmlns=\"http://www.w3.org/2000/svg\" :viewBox=\"viewBox\" :id=\"mapID\" style=\"touch-action: none;\">\n    <MapLayer\n      v-for=\"(layer, index) of layers\"\n      :key=\"index\"\n      :map-nodes=\"layer\"\n      :border-color=\"borderColor(index)\"\n      :font-color=\"fontColor(index)\"\n      :font-size=\"fontSize(index)\"\n      :font-opacity=\"fontOpacity(index)\"\n      :selectedNodeId=\"selectedNodeId\"\n      :selectedNodePreconditionIds=\"selectedNodePreconditionIds\"\n      :searchResultNodeIDs=\"searchResultNodeIDs\"\n      :map-id=\"mapID\"\n      @title-dragging=\"draggingNode\"\n      @title-click=\"titleClick\"\n      @title-over=\"titleOver\"\n      @title-leave=\"titleLeave\"\n    />\n    <PreconditionLayer\n        :selectedNodeId=\"selectedNodeId\"\n        :visibleTitleIds=\"visibleTitleIds\"\n        @title-click=\"titleClick\"\n        @title-over=\"titleOver\"\n        @title-leave=\"titleLeave\"\n    />\n    <PinLayer\n      :pinNodes=\"pinNodes\"\n      color=\"pink\"\n      :font-size=8\n      font-weight=\"normal\"\n      text-decoration=\"none\"\n      :selectedNodeId=\"selectedNodeId\"\n      @title-click=\"titleClick\"\n      @title-over=\"titleOver\"\n      @title-leave=\"titleLeave\"\n    />\n    <PinLayer\n      :pinNodes=\"searchResultPinNodes\"\n      color=\"red\"\n      :font-size=10\n      font-weight=\"bold\"\n      text-decoration=\"underline\"\n      :selectedNodeId=\"selectedNodeId\"\n      @title-click=\"titleClick\"\n      @title-over=\"titleOver\"\n      @title-leave=\"titleLeave\"\n    />\n  </svg>\n</template>\n\n<script lang=\"ts\">\nimport {computed, defineComponent, onMounted, PropType } from \"vue\";\nimport { MapNode } from \"@/types/graphics\";\nimport MapLayer from \"@/components/map_layer/MapLayer.vue\";\nimport {\n  EventClickNode,\n  EventDraggingNode\n} from \"@/components/map_layer/MapLayer\";\nimport pan from \"./MapPan\";\nimport PinLayer from \"@/components/pin_layer/PinLayer.vue\";\nimport { printError } from \"@/tools/utils\";\nimport PreconditionLayer from \"@/components/precondition_layer/PreconditionLayer.vue\";\n\nconst mapID = \"mapID\";\n\nexport default defineComponent({\n  name: \"Map\",\n  emits: [\n    \"title-dragging\",\n    \"title-click\",\n    \"title-over\",\n    \"title-leave\",\n    \"dragging-background\",\n    \"wheel\"\n  ],\n  components: {\n    PreconditionLayer,\n    PinLayer,\n    MapLayer\n  },\n  props: {\n    viewBox: {\n      type: String,\n      required: true\n    },\n    layers: Object as PropType<Array<Record<string, MapNode>>>,\n    selectedNodeId: {\n      type: String || null,\n      validator: (prop: string | null) =>\n        typeof prop === \"string\" || prop === null,\n      required: true\n    },\n    selectedNodePreconditionIds: Object as PropType<string[]>,\n    pinNodes: Object as PropType<MapNode[]>,\n    searchResultPinNodes: Object as PropType<MapNode[]>,\n    searchResultNodeIDs: Object as PropType<string[]>,\n  },\n  setup(props, ctx) {\n    onMounted(() => {\n      const map = document.getElementById(mapID);\n      if (!map) {\n        printError(\"Map.vue: cannot find map id for event listener\", {});\n        return;\n      }\n\n      map.addEventListener(\"mousedown\", event => {\n        pan.mouseDown();\n      });\n      map.addEventListener(\"mouseup\", event => {\n        pan.mouseUp();\n      });\n      map.addEventListener(\"mousemove\", event => {\n        pan.mouseMove(ctx.emit, {\n          from: {\n            x: event.clientX - event.movementX,\n            y: event.clientY - event.movementY\n          },\n          to: { x: event.clientX, y: event.clientY }\n        });\n      });\n\n      // zoom with mouse wheel\n      map.addEventListener(\"wheel\", event => {\n        ctx.emit(\"wheel\", {\n          delta: event.deltaY,\n          center: { x: event.clientX, y: event.clientY }\n        });\n      }, {passive:true});\n\n      let prevDist = Infinity\n      const prevPoint = {x:Infinity, y:Infinity}\n      map.addEventListener(\"touchstart\", event => {\n          pan.mouseDown();\n      }, {passive:true});\n      map.addEventListener(\"touchend\", event => {\n        prevDist = Infinity\n        prevPoint.x = Infinity\n        prevPoint.y = Infinity\n        pan.mouseUp();\n      });\n\n      // mobile zoom\n      map.addEventListener(\"touchmove\", e => {\n        if (e.touches.length === 1) {\n          if (prevPoint.x != Infinity && prevPoint.y != Infinity) {\n            pan.mouseMove(ctx.emit, {\n              from: prevPoint,\n              to: { x: e.touches[0].clientX, y: e.touches[0].clientY }\n            });\n          }\n          prevPoint.x = e.touches[0].clientX\n          prevPoint.y = e.touches[0].clientY\n        } else if (e.touches.length === 2) {\n          let delta = 0\n          const dist = Math.hypot(\n              e.touches[0].pageX - e.touches[1].pageX,\n              e.touches[0].pageY - e.touches[1].pageY)\n          if (prevDist !== Infinity) {\n            delta = prevDist - dist\n          }\n          prevDist = dist\n\n          ctx.emit(\"wheel\", {\n            delta: delta,\n            center: {\n              x: (e.touches[0].pageX - e.touches[1].pageX) / 2,\n              y: (e.touches[0].pageY - e.touches[1].pageY) / 2,\n            }\n          });\n        }\n      }, {passive:true});\n\n\n    });\n\n    return {\n      visibleTitleIds: computed(() => {\n        if (!props.layers) {\n          return []\n        }\n        const ids = []\n        for (const layer of props.layers) {\n          for (const idx in layer) {\n            if (layer[idx].title != \"\") {\n              ids.push(idx)\n            }\n          }\n        }\n        return ids\n      }),\n      draggingNode: (e: EventDraggingNode) => {\n        ctx.emit(\"title-dragging\", {\n          id: e.nodeId,\n          delta: e.delta\n        });\n      },\n      titleClick: (e: EventClickNode) => {\n        ctx.emit(\"title-click\", { id: e.id });\n      },\n      titleOver: (e: EventClickNode) => {\n        ctx.emit(\"title-over\", { id: e.id });\n      },\n      titleLeave: (e: EventClickNode) => {\n        ctx.emit(\"title-leave\", { id: e.id });\n      },\n      mapID: mapID,\n      fontSize: (index: number): number => {\n        let size = 0\n        const levelSizes: Record<number, number> = {\n          0: 6,\n          1: 11,\n          2: 21,\n          3: 28,\n        }\n        if (props.layers!.length >= 4) {\n          size = levelSizes[index]\n        }\n        if (props.layers!.length == 3) {\n          size = levelSizes[index+1]\n        }\n        return size\n      },\n      fontOpacity: (index: number): number => {\n        let val = 0\n        const levelSizes: Record<number, number> = {\n          0: 1,\n          1: 1,\n          2: 0.2,\n          3: 1,\n        }\n        if (props.layers!.length >= 4) {\n          val = levelSizes[index]\n        }\n        if (props.layers!.length == 3) {\n          val = levelSizes[index+1]\n        }\n        return val\n      },\n      fontColor: (index: number): string => {\n        if (props.layers!.length >= 4) {\n          return `rgb(${200 - 100 * index},${200 - 100 * index},${200 - 100 * index})`\n        }\n        if (props.layers!.length == 3) {\n          return `rgb(${200 - 100 * (index+1)},${200 - 100 * (index+1)},${200 - 100 * (index+1)})`\n        }\n        return ''\n      },\n      borderColor: (index: number): string => {\n        let color = 0\n        const levelColors: Record<number, number> = {\n          0: 240,\n          1: 200,\n          2: 100,\n          3: 90,\n        }\n        if (props.layers!.length >= 4) {\n          color = levelColors[index]\n        }\n        if (props.layers!.length == 3) {\n          color = levelColors[index+1]\n        }\n        return `rgb(${color},${color},${color})`\n      },\n    };\n  }\n});\n</script>\n\n<style scoped></style>\n","<template>\n  <polygon\n    v-for=\"(mapNode, i) of mapNodes\"\n    :key=\"i\"\n    :stroke=\"borderColor\"\n    :fill=\"polygonFill(selectedNodeId, mapNode.id, selectedNodePreconditionIds)\"\n    :fill-opacity=\"\n      polygonFillOpacity(selectedNodeId, mapNode.id, selectedNodePreconditionIds)\n    \"\n    stroke-width=\"2\"\n    :points=\"polygonToPath(mapNode.border)\"\n    pointer-events=\"none\"\n  />\n  <!--    <circle-->\n  <!--      v-for=\"mapNode of mapNodes\"-->\n  <!--      :key=\"mapNode.id\"-->\n  <!--      :cx=\"mapNode.center.x\"-->\n  <!--      :cy=\"mapNode.center.y\"-->\n  <!--      r=\"10\"-->\n  <!--      stroke=\"black\"-->\n  <!--      stroke-width=\"1\"-->\n  <!--      fill=\"red\"-->\n  <!--    />-->\n<!--  <SVGTextBox> component shows unpredictable behaviour here and I didn't dig the reason so just used copy of SVGTextBox here -->\n  <text\n      v-for=\"mapNode of mapNodes\"\n      :id=\"`${TITLE_PREFIX}${mapNode.id}`\"\n      :key=\"mapNode.id\"\n      font-family=\"Roboto\"\n      :font-size=\"fontSize\"\n      :font-weight=\"textWeight(mapNode.id, selectedNodeId)\"\n      :fill=\"textColor(mapNode.id, selectedNodeId)\"\n      :fill-opacity=\"fontOpacity\"\n      :text-decoration=\"textDecoration(mapNode.id)\"\n      class=\"text\"\n  >\n    <tspan\n        v-for=\"(line, i) of splitLines(mapNode.title, 20)\"\n        :key=\"i\"\n        :x=\"titleBox[mapNode.id] ? titleBox[mapNode.id].position.x : 0\"\n        :y=\"titleBox[mapNode.id] ? titleBox[mapNode.id].position.y + i*fontSize : 0\"\n        alignment-baseline=\"hanging\"\n    >\n      {{ line }}\n    </tspan>\n  </text>\n  <!-- Add rectangle to change cursor to pointer when hover on text -->\n  <rect\n    v-for=\"mapNode of mapNodes\"\n    :key=\"mapNode.id\"\n    :x=\"titleBox[mapNode.id] ? titleBox[mapNode.id].position.x : 0\"\n    :y=\"titleBox[mapNode.id] ? titleBox[mapNode.id].position.y : 0\"\n    :width=\"titleBox[mapNode.id] ? titleBox[mapNode.id].bbox.width : 0\"\n    :height=\"titleBox[mapNode.id] ? titleBox[mapNode.id].bbox.height : 0\"\n    fill=\"transparent\"\n    stroke-width=\"0\"\n    @mouseover=\"titleOver(mapNode.id)\"\n    @mouseleave=\"titleLeave(mapNode.id)\"\n    @click=\"titleClick(mapNode.id)\"\n    @mousedown=\"titleMouseDown(mapNode.id)\"\n    stroke=\"pink\"\n    cursor=\"pointer\"\n    pointer-events=\"fill\"\n  />\n</template>\n\n<script lang=\"ts\">\nimport {defineComponent, PropType, toRef, onMounted, onUnmounted, computed} from \"vue\";\nimport { MapNode } from \"@/types/graphics\";\nimport {\n  polygonToPath,\n  polygonFill,\n  polygonFillOpacity\n} from \"@/tools/graphics\";\nimport {\n  getTitleBoxes,\n  MouseDownInfo,\n  mouseMoveListener,\n  mouseUpListener\n} from \"@/components/map_layer/MapLayer\";\nimport { printError } from \"@/tools/utils\";\nimport {splitLines} from \"@/components/SVGTextBox\";\n\nconst TITLE_PREFIX = \"title_\";\n\nexport default defineComponent({\n  name: \"MapLayer\",\n  emits: [\n    \"title-over\",\n    \"title-leave\",\n    \"title-click\",\n    \"title-drop\",\n    \"title-dragging\"\n  ],\n  props: {\n    mapId: {\n      type: String,\n      required: true\n    },\n    mapNodes: {\n      type: Object as PropType<Record<string, MapNode>>,\n      required: true\n    },\n    borderColor: {\n      type: String,\n      required: true\n    },\n    fontSize: {\n      type: Number,\n      required: true\n    },\n    fontColor: {\n      type: String,\n      required: true\n    },\n    fontOpacity: {\n      type: Number,\n      required: true\n    },\n    selectedNodeId: {\n      type: String,\n      validator: (prop: string | null) =>\n        typeof prop === \"string\" || prop === null,\n      required: true\n    },\n    selectedNodePreconditionIds: Object as PropType<string[]>,\n    searchResultNodeIDs: Object as PropType<string[]>,\n  },\n\n  setup(props, ctx) {\n    const mapNodes = toRef(props, \"mapNodes\");\n\n    const titleBox = getTitleBoxes(TITLE_PREFIX, \"center\", mapNodes);\n\n    /**\n     * Send event on titleBox click, drag and drop\n     */\n    const titleMouseDownInfo: MouseDownInfo = {\n      nodeId: null,\n      dragStart: false\n    };\n    const mouseMove = (event: MouseEvent) =>\n      mouseMoveListener(ctx.emit, event, titleMouseDownInfo);\n    const mouseUp = () => mouseUpListener(ctx.emit, titleMouseDownInfo);\n    onMounted(() => {\n      const map = document.getElementById(props.mapId);\n      if (!map) {\n        printError(\"MapLayer.vue: cannot find map id for event listener\", {});\n        return;\n      }\n      map.addEventListener(\"mousemove\", mouseMove);\n      map.addEventListener(\"mouseup\", mouseUp);\n    });\n    onUnmounted(() => {\n      const map = document.getElementById(props.mapId);\n      if (!map) {\n        printError(\"MapLayer.vue: cannot find map id for event listener\", {});\n        return;\n      }\n      map.removeEventListener(\"mousemove\", mouseMove);\n      map.removeEventListener(\"mouseup\", mouseUp);\n    });\n\n    const searchResultNodeIDsMap = computed(() =>{\n      const map = {} as Record<string, boolean>\n      if (!props.searchResultNodeIDs) {\n        return map\n      }\n      for (const id of props.searchResultNodeIDs) {\n        map[id] = true\n      }\n      return map;\n    });\n\n    return {\n      TITLE_PREFIX,\n      titleBox,\n      textColor: (nodeID: string, selectedNodeId: string) => {\n        if (selectedNodeId && selectedNodeId == nodeID) {\n          return '#ffa500'\n        }\n        if (props.selectedNodePreconditionIds && props.selectedNodePreconditionIds?.indexOf(nodeID) != -1) {\n          return '#ffa500'\n        }\n        if (searchResultNodeIDsMap.value[nodeID]) {\n          return 'red'\n        }\n\n        return props.fontColor\n      },\n      textWeight: (nodeID: string, selectedNodeId: string) => {\n        if (selectedNodeId && selectedNodeId == nodeID) {\n          return 'bold'\n        }\n        if (searchResultNodeIDsMap.value[nodeID]) {\n          return 'bold'\n        }\n\n        return 'normal'\n      },\n      textDecoration: (nodeID: string) => {\n        if (searchResultNodeIDsMap.value[nodeID]) {\n          return 'underline'\n        }\n\n        return 'none'\n      },\n      titleClick: (nodeID: string) => {\n        ctx.emit(\"title-click\", {\n          id: nodeID\n        });\n      },\n      titleOver: (nodeID: string) => {\n        ctx.emit(\"title-over\", {\n          id: nodeID\n        });\n      },\n      titleLeave: (nodeID: string) => {\n        ctx.emit(\"title-leave\", {\n          id: nodeID\n        });\n      },\n      titleMouseDown: (id: string) => {\n        titleMouseDownInfo.nodeId = id;\n        titleMouseDownInfo.dragStart = false;\n      }\n    };\n  },\n\n  methods: {\n    splitLines,\n    polygonToPath: polygonToPath,\n    polygonFill: polygonFill,\n    polygonFillOpacity: polygonFillOpacity\n  }\n});\n</script>\n\n<style scoped>\n.text {\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n  pointer-events: none;\n}\n</style>\n","import { MapNode, Point } from \"@/types/graphics\";\nimport { nextTick, ref, Ref, watch } from \"vue\";\n\nexport type EventClickNode = {\n  id: string;\n};\n\nexport type EventDraggingNode = {\n  nodeId: string;\n  delta: Point;\n};\n\nexport type MouseDownInfo = {\n  nodeId: string | null;\n  dragStart: boolean;\n};\n\ntype emitFn = (event: \"title-dragging\" | \"title-drop\", ...args: any[]) => void;\n\ntype TitleBox = {\n  position: Point;\n  bbox: {\n    width: number;\n    height: number;\n  };\n};\n\nexport const mouseMoveListener = (\n  emit: emitFn,\n  event: MouseEvent,\n  mouseDownInfo: MouseDownInfo\n) => {\n  if (mouseDownInfo.nodeId) {\n    mouseDownInfo.dragStart = true;\n    emit(\"title-dragging\", {\n      nodeId: mouseDownInfo.nodeId,\n      delta: {\n        x: event.movementX,\n        y: event.movementY\n      }\n    });\n  }\n};\n\nexport const mouseUpListener = (emit: emitFn, mouseDownInfo: MouseDownInfo) => {\n  if (mouseDownInfo.nodeId) {\n    if (mouseDownInfo.dragStart) {\n      emit(\"title-drop\", { id: mouseDownInfo.nodeId });\n    }\n    mouseDownInfo.dragStart = false;\n    mouseDownInfo.nodeId = null;\n  }\n};\n\nexport const nodeToTitleBox = (\n  nodes: Record<string, MapNode>\n): Record<string, TitleBox> => {\n  const titleBox: Record<string, TitleBox> = {};\n  for (const i in nodes) {\n    const node = nodes[i];\n    titleBox[node.id] = {\n      position: node.center,\n      bbox: {\n        width: 0,\n        height: 0\n      }\n    };\n  }\n\n  return titleBox;\n};\n\nconst updateTitleBox = (\n  titleIdPrefix: string,\n  position: \"center\" | \"left\",\n  mapNodes: Record<string, MapNode>,\n  titleBox: Record<string, TitleBox>\n) => {\n  // Code that will run only after the entire view has been rendered\n  nextTick(() => {\n    // clean previous version\n    for (const i in titleBox) {\n      delete titleBox[i];\n    }\n    // fill new ones\n    for (const i in mapNodes) {\n      const node = mapNodes[i];\n      const dom = document.getElementById(`${titleIdPrefix}${node.id}`);\n      if (dom == null) {\n        continue;\n      }\n      if (position == \"center\") {\n        titleBox[node.id] = {\n          position: {\n            x: node.center.x - dom.getBoundingClientRect().width / 2,\n            y: node.center.y - dom.getBoundingClientRect().height / 2\n          },\n          bbox: {\n            width: dom.getBoundingClientRect().width,\n            height: dom.getBoundingClientRect().height\n          }\n        };\n      } else if (position == \"left\") {\n        titleBox[node.id] = {\n          position: {\n            x: node.center.x - dom.getBoundingClientRect().width,\n            y: node.center.y - dom.getBoundingClientRect().height / 2\n          },\n          bbox: {\n            width: dom.getBoundingClientRect().width,\n            height: dom.getBoundingClientRect().height\n          }\n        };\n      }\n    }\n  });\n};\n\nexport const getTitleBoxes = (\n  titleIdPrefix: string,\n  position: \"center\" | \"left\",\n  mapNodes: Ref<Record<string, MapNode>>\n): Ref<Record<string, TitleBox>> => {\n  const titleBox = ref(nodeToTitleBox(mapNodes.value));\n  /**\n   * Update titleBox on every prop change after DOM rerender\n   */\n  watch(\n    mapNodes,\n    mps => updateTitleBox(titleIdPrefix, position, mps, titleBox.value),\n    {\n      immediate: true\n    }\n  );\n\n  return titleBox;\n};\n","export function splitLines(text: string, maxCharNum: number): string[] {\n  if (maxCharNum <= 0) {\n    return [];\n  }\n  if (text == \"\") {\n    return [];\n  }\n  const words = text.split(\" \");\n  const lines: string[] = [];\n  let currLine: string[] = [];\n  while (words.length) {\n    if (currLine.join(\" \").length > maxCharNum) {\n      const nextLine: string[] = [];\n      if (currLine.length > 1) {\n        nextLine.push(currLine.pop()!);\n      }\n      lines.push(currLine.join(\" \"));\n      currLine = nextLine;\n    } else {\n      currLine.push(words.shift()!);\n    }\n  }\n\n  if (currLine.join(\" \").length > maxCharNum) {\n    const nextLine: string[] = [];\n    if (currLine.length > 1) {\n      nextLine.push(currLine.pop()!);\n    }\n    lines.push(currLine.join(\" \"));\n    currLine = nextLine;\n  }\n  if (currLine.length) {\n    lines.push(currLine.join(\" \"));\n  }\n  return lines;\n}\n","\nimport {defineComponent, PropType, toRef, onMounted, onUnmounted, computed} from \"vue\";\nimport { MapNode } from \"@/types/graphics\";\nimport {\n  polygonToPath,\n  polygonFill,\n  polygonFillOpacity\n} from \"@/tools/graphics\";\nimport {\n  getTitleBoxes,\n  MouseDownInfo,\n  mouseMoveListener,\n  mouseUpListener\n} from \"@/components/map_layer/MapLayer\";\nimport { printError } from \"@/tools/utils\";\nimport {splitLines} from \"@/components/SVGTextBox\";\n\nconst TITLE_PREFIX = \"title_\";\n\nexport default defineComponent({\n  name: \"MapLayer\",\n  emits: [\n    \"title-over\",\n    \"title-leave\",\n    \"title-click\",\n    \"title-drop\",\n    \"title-dragging\"\n  ],\n  props: {\n    mapId: {\n      type: String,\n      required: true\n    },\n    mapNodes: {\n      type: Object as PropType<Record<string, MapNode>>,\n      required: true\n    },\n    borderColor: {\n      type: String,\n      required: true\n    },\n    fontSize: {\n      type: Number,\n      required: true\n    },\n    fontColor: {\n      type: String,\n      required: true\n    },\n    fontOpacity: {\n      type: Number,\n      required: true\n    },\n    selectedNodeId: {\n      type: String,\n      validator: (prop: string | null) =>\n        typeof prop === \"string\" || prop === null,\n      required: true\n    },\n    selectedNodePreconditionIds: Object as PropType<string[]>,\n    searchResultNodeIDs: Object as PropType<string[]>,\n  },\n\n  setup(props, ctx) {\n    const mapNodes = toRef(props, \"mapNodes\");\n\n    const titleBox = getTitleBoxes(TITLE_PREFIX, \"center\", mapNodes);\n\n    /**\n     * Send event on titleBox click, drag and drop\n     */\n    const titleMouseDownInfo: MouseDownInfo = {\n      nodeId: null,\n      dragStart: false\n    };\n    const mouseMove = (event: MouseEvent) =>\n      mouseMoveListener(ctx.emit, event, titleMouseDownInfo);\n    const mouseUp = () => mouseUpListener(ctx.emit, titleMouseDownInfo);\n    onMounted(() => {\n      const map = document.getElementById(props.mapId);\n      if (!map) {\n        printError(\"MapLayer.vue: cannot find map id for event listener\", {});\n        return;\n      }\n      map.addEventListener(\"mousemove\", mouseMove);\n      map.addEventListener(\"mouseup\", mouseUp);\n    });\n    onUnmounted(() => {\n      const map = document.getElementById(props.mapId);\n      if (!map) {\n        printError(\"MapLayer.vue: cannot find map id for event listener\", {});\n        return;\n      }\n      map.removeEventListener(\"mousemove\", mouseMove);\n      map.removeEventListener(\"mouseup\", mouseUp);\n    });\n\n    const searchResultNodeIDsMap = computed(() =>{\n      const map = {} as Record<string, boolean>\n      if (!props.searchResultNodeIDs) {\n        return map\n      }\n      for (const id of props.searchResultNodeIDs) {\n        map[id] = true\n      }\n      return map;\n    });\n\n    return {\n      TITLE_PREFIX,\n      titleBox,\n      textColor: (nodeID: string, selectedNodeId: string) => {\n        if (selectedNodeId && selectedNodeId == nodeID) {\n          return '#ffa500'\n        }\n        if (props.selectedNodePreconditionIds && props.selectedNodePreconditionIds?.indexOf(nodeID) != -1) {\n          return '#ffa500'\n        }\n        if (searchResultNodeIDsMap.value[nodeID]) {\n          return 'red'\n        }\n\n        return props.fontColor\n      },\n      textWeight: (nodeID: string, selectedNodeId: string) => {\n        if (selectedNodeId && selectedNodeId == nodeID) {\n          return 'bold'\n        }\n        if (searchResultNodeIDsMap.value[nodeID]) {\n          return 'bold'\n        }\n\n        return 'normal'\n      },\n      textDecoration: (nodeID: string) => {\n        if (searchResultNodeIDsMap.value[nodeID]) {\n          return 'underline'\n        }\n\n        return 'none'\n      },\n      titleClick: (nodeID: string) => {\n        ctx.emit(\"title-click\", {\n          id: nodeID\n        });\n      },\n      titleOver: (nodeID: string) => {\n        ctx.emit(\"title-over\", {\n          id: nodeID\n        });\n      },\n      titleLeave: (nodeID: string) => {\n        ctx.emit(\"title-leave\", {\n          id: nodeID\n        });\n      },\n      titleMouseDown: (id: string) => {\n        titleMouseDownInfo.nodeId = id;\n        titleMouseDownInfo.dragStart = false;\n      }\n    };\n  },\n\n  methods: {\n    splitLines,\n    polygonToPath: polygonToPath,\n    polygonFill: polygonFill,\n    polygonFillOpacity: polygonFillOpacity\n  }\n});\n","import { render } from \"./MapLayer.vue?vue&type=template&id=83dcfebc&scoped=true\"\nimport script from \"./MapLayer.vue?vue&type=script&lang=ts\"\nexport * from \"./MapLayer.vue?vue&type=script&lang=ts\"\n\nimport \"./MapLayer.vue?vue&type=style&index=0&id=83dcfebc&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-83dcfebc\"\n\nexport default script","import {Vector} from \"@/types/graphics\";\n\nconst mouseDownBg = {\n  on: false\n};\n\nconst mouseDown = () => {\n  mouseDownBg.on = true;\n};\nconst mouseUp = () => {\n  mouseDownBg.on = false;\n};\n\nconst mouseMove = (\n  emit: (name: \"dragging-background\", o: any) => void,\n  vector: Vector\n) => {\n  if (!mouseDownBg.on) {\n    return;\n  }\n  emit(\"dragging-background\", vector);\n};\n\nexport default {\n  mouseDown,\n  mouseUp,\n  mouseMove,\n};\n","<template>\n  <!--  <circle-->\n  <!--    v-for=\"node of pinNodes\"-->\n  <!--    :key=\"node.id\"-->\n  <!--    :cx=\"node.center.x\"-->\n  <!--    :cy=\"node.center.y\"-->\n  <!--    r=\"10\"-->\n  <!--    stroke=\"black\"-->\n  <!--    stroke-width=\"1\"-->\n  <!--    fill=\"red\"-->\n  <!--  />-->\n  <PinMarker\n    v-for=\"node of visiblePinNodes\"\n    :key=\"node.id\"\n    :x=\"node.center.x\"\n    :y=\"node.center.y\"\n    :color=\"color\"\n  />\n  <SVGTextBox\n    v-for=\"node of visiblePinNodes\"\n    :text=\"node.title\"\n    :id=\"`${TITLE_PREFIX}${node.id}`\"\n    :key=\"node.id\"\n    :useLineBreak=\"true\"\n    :x=\"titleXY[node.id].x\"\n    :y=\"titleXY[node.id].y\"\n    :line-height=\"8\"\n    :max-char-per-line=\"10\"\n    font-family=\"Roboto\"\n    :font-size=fontSize\n    :font-weight=\"fontWeight\"\n    :color=\"color\"\n    :text-decoration=\"textDecoration\"\n  />\n  <rect\n    v-for=\"node of pinNodes\"\n    :key=\"node.id\"\n    :x=\"titleXY[node.id].x\"\n    :y=\"titleXY[node.id].y\"\n    :width=\"titleBox[node.id] ? titleBox[node.id].bbox.width : 0\"\n    :height=\"titleBox[node.id] ? titleBox[node.id].bbox.height : 0\"\n    cursor=\"pointer\"\n    fill=\"transparent\"\n    @click=\"titleBoxClick(node.id)\"\n    @mouseover=\"titleOver(node.id)\"\n    @mouseleave=\"titleLeave(node.id)\"\n    stroke-width=\"0\"\n    stroke=\"pink\"\n  />\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, PropType, toRef } from \"vue\";\nimport { MapNode, Point } from \"@/types/graphics\";\nimport { getTitleBoxes } from \"@/components/map_layer/MapLayer\";\nimport PinMarker from \"@/components/pin_layer/PinMarker.vue\";\nimport {\n  WIDTH as PIN_MARKER_WIDTH,\n  HEIGHT as PIN_MARKER_HEIGHT\n} from \"@/components/pin_layer/PinMarker.vue\";\nimport SVGTextBox from \"@/components/SVGTextBox.vue\";\n\nconst TITLE_PREFIX = \"pin_title_\";\n\nexport default defineComponent({\n  name: \"PinLayer\",\n  components: { SVGTextBox, PinMarker },\n  emits: [\n    \"title-click\",\n    \"title-over\",\n    \"title-leave\",\n  ],\n  props: {\n    pinNodes: {\n      type: Object as PropType<MapNode[]>,\n      required: true\n    },\n    selectedNodeId: {\n      type: String,\n      validator: (prop: string | null) =>\n        typeof prop === \"string\" || prop === null,\n      required: true\n    },\n    color: {\n      type: String,\n    },\n    fontWeight: {\n      type: String,\n    },\n    fontSize: {\n      type: Number,\n    },\n    textDecoration: {\n      type: String,\n    },\n  },\n  setup(props, ctx) {\n    const allPinNodes = computed(() => {\n      const result:Record<string, MapNode> = {}\n      for (const node of props.pinNodes) {\n        result[node.id] = node\n      }\n      return result\n    })\n    const visiblePinNodes = computed(() => {\n      const result:Record<string, MapNode> = {}\n      for (const node of props.pinNodes) {\n        if (node.id != props.selectedNodeId) {\n          result[node.id] = node\n        }\n      }\n      return result\n    })\n\n    const titleBox = getTitleBoxes(TITLE_PREFIX, \"left\", allPinNodes);\n\n    return {\n      TITLE_PREFIX,\n      PIN_MARKER_HEIGHT,\n      PIN_MARKER_WIDTH,\n      visiblePinNodes,\n      titleBox,\n      titleXY: computed(() => {\n        const alignedXY: Record<string, Point> = {};\n        for (const i in allPinNodes.value) {\n          const node = allPinNodes.value[i];\n          alignedXY[node.id] = {\n            x: titleBox.value[node.id]\n              ? titleBox.value[node.id].position.x\n              : 0,\n            y: titleBox.value[node.id]\n              ? titleBox.value[node.id].position.y\n              : 0\n          };\n        }\n        return alignedXY;\n      }),\n      titleBoxClick: (nodeId: string) => {\n        ctx.emit(\"title-click\", { id: nodeId });\n      },\n      titleOver: (nodeId: string) => {\n        ctx.emit(\"title-over\", { id: nodeId });\n      },\n      titleLeave: (nodeId: string) => {\n        ctx.emit(\"title-leave\", { id: nodeId });\n      },\n    };\n  }\n});\n</script>\n","<template>\n  <g :transform=\"`translate(${x - WIDTH / 2} ${y - HEIGHT}) scale(0.05 0.05)`\">\n    <path\n      :fill=\"`${color}`\"\n      d=\"M182.9,551.7c0,0.1,0.2,0.3,0.2,0.3S358.3,283,358.3,194.6c0-130.1-88.8-186.7-175.4-186.9\n        C96.3,7.9,7.5,64.5,7.5,194.6c0,88.4,175.3,357.4,175.3,357.4S182.9,551.7,182.9,551.7z M122.2,187.2c0-33.6,27.2-60.8,60.8-60.8\n        c33.6,0,60.8,27.2,60.8,60.8S216.5,248,182.9,248C149.4,248,122.2,220.8,122.2,187.2z\"\n    />\n  </g>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from \"vue\";\n\nexport const WIDTH = 18;\nexport const HEIGHT = 26;\n\nexport default defineComponent({\n  name: \"PinMarker\",\n  props: {\n    x: {\n      type: Number,\n      required: true\n    },\n    y: {\n      type: Number,\n      required: true\n    },\n    color: {\n      type: String,\n      required: true\n    }\n  },\n  setup() {\n    return {\n      WIDTH,\n      HEIGHT\n    };\n  }\n});\n</script>\n","\nimport { defineComponent } from \"vue\";\n\nexport const WIDTH = 18;\nexport const HEIGHT = 26;\n\nexport default defineComponent({\n  name: \"PinMarker\",\n  props: {\n    x: {\n      type: Number,\n      required: true\n    },\n    y: {\n      type: Number,\n      required: true\n    },\n    color: {\n      type: String,\n      required: true\n    }\n  },\n  setup() {\n    return {\n      WIDTH,\n      HEIGHT\n    };\n  }\n});\n","import { render } from \"./PinMarker.vue?vue&type=template&id=d238f9c2\"\nimport script from \"./PinMarker.vue?vue&type=script&lang=ts\"\nexport * from \"./PinMarker.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\n  <text\n    :id=\"id\"\n    :font-family=\"fontFamily\"\n    :font-size=\"fontSize\"\n    :font-weight=\"fontWeight\"\n    :fill=\"color\"\n    class=\"text\"\n  >\n    <tspan\n      v-for=\"(line, i) of lines\"\n      :key=\"i\"\n      :x=\"x\"\n      :y=\"y > 0 ? y + i * lineHeight : 0\"\n      alignment-baseline=\"hanging\"\n    >\n      {{ line }}\n    </tspan>\n  </text>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from \"vue\";\nimport { splitLines } from \"@/components/SVGTextBox\";\n\nexport default defineComponent({\n  name: \"SVGTextBox\",\n  props: {\n    id: {\n      type: String,\n      required: true\n    },\n    useLineBreak: {\n      type: Boolean,\n      required: true\n    },\n    text: {\n      type: String,\n      required: true\n    },\n    x: {\n      type: Number,\n      required: true\n    },\n    y: {\n      type: Number,\n      required: true\n    },\n    lineHeight: {\n      type: Number,\n      required: true\n    },\n    maxCharPerLine: {\n      type: Number,\n      required: true\n    },\n    fontFamily: {\n      type: String,\n      required: true\n    },\n    fontSize: {\n      type: Number,\n      required: true\n    },\n    fontWeight: {\n      type: String,\n      required: true\n    },\n    color: {\n      type: String,\n      required: true\n    }\n  },\n  setup(props) {\n    let lines = []\n    if (props.useLineBreak) {\n      lines = splitLines(props.text, props.maxCharPerLine)\n    } else {\n      lines = [props.text]\n    }\n    return {\n      lines,\n    };\n  }\n});\n</script>\n\n\n<style scoped>\n.text {\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n  pointer-events: none;\n}\n</style>\n","\nimport { defineComponent } from \"vue\";\nimport { splitLines } from \"@/components/SVGTextBox\";\n\nexport default defineComponent({\n  name: \"SVGTextBox\",\n  props: {\n    id: {\n      type: String,\n      required: true\n    },\n    useLineBreak: {\n      type: Boolean,\n      required: true\n    },\n    text: {\n      type: String,\n      required: true\n    },\n    x: {\n      type: Number,\n      required: true\n    },\n    y: {\n      type: Number,\n      required: true\n    },\n    lineHeight: {\n      type: Number,\n      required: true\n    },\n    maxCharPerLine: {\n      type: Number,\n      required: true\n    },\n    fontFamily: {\n      type: String,\n      required: true\n    },\n    fontSize: {\n      type: Number,\n      required: true\n    },\n    fontWeight: {\n      type: String,\n      required: true\n    },\n    color: {\n      type: String,\n      required: true\n    }\n  },\n  setup(props) {\n    let lines = []\n    if (props.useLineBreak) {\n      lines = splitLines(props.text, props.maxCharPerLine)\n    } else {\n      lines = [props.text]\n    }\n    return {\n      lines,\n    };\n  }\n});\n","import { render } from \"./SVGTextBox.vue?vue&type=template&id=78117b36&scoped=true\"\nimport script from \"./SVGTextBox.vue?vue&type=script&lang=ts\"\nexport * from \"./SVGTextBox.vue?vue&type=script&lang=ts\"\n\nimport \"./SVGTextBox.vue?vue&type=style&index=0&id=78117b36&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-78117b36\"\n\nexport default script","\nimport { computed, defineComponent, PropType, toRef } from \"vue\";\nimport { MapNode, Point } from \"@/types/graphics\";\nimport { getTitleBoxes } from \"@/components/map_layer/MapLayer\";\nimport PinMarker from \"@/components/pin_layer/PinMarker.vue\";\nimport {\n  WIDTH as PIN_MARKER_WIDTH,\n  HEIGHT as PIN_MARKER_HEIGHT\n} from \"@/components/pin_layer/PinMarker.vue\";\nimport SVGTextBox from \"@/components/SVGTextBox.vue\";\n\nconst TITLE_PREFIX = \"pin_title_\";\n\nexport default defineComponent({\n  name: \"PinLayer\",\n  components: { SVGTextBox, PinMarker },\n  emits: [\n    \"title-click\",\n    \"title-over\",\n    \"title-leave\",\n  ],\n  props: {\n    pinNodes: {\n      type: Object as PropType<MapNode[]>,\n      required: true\n    },\n    selectedNodeId: {\n      type: String,\n      validator: (prop: string | null) =>\n        typeof prop === \"string\" || prop === null,\n      required: true\n    },\n    color: {\n      type: String,\n    },\n    fontWeight: {\n      type: String,\n    },\n    fontSize: {\n      type: Number,\n    },\n    textDecoration: {\n      type: String,\n    },\n  },\n  setup(props, ctx) {\n    const allPinNodes = computed(() => {\n      const result:Record<string, MapNode> = {}\n      for (const node of props.pinNodes) {\n        result[node.id] = node\n      }\n      return result\n    })\n    const visiblePinNodes = computed(() => {\n      const result:Record<string, MapNode> = {}\n      for (const node of props.pinNodes) {\n        if (node.id != props.selectedNodeId) {\n          result[node.id] = node\n        }\n      }\n      return result\n    })\n\n    const titleBox = getTitleBoxes(TITLE_PREFIX, \"left\", allPinNodes);\n\n    return {\n      TITLE_PREFIX,\n      PIN_MARKER_HEIGHT,\n      PIN_MARKER_WIDTH,\n      visiblePinNodes,\n      titleBox,\n      titleXY: computed(() => {\n        const alignedXY: Record<string, Point> = {};\n        for (const i in allPinNodes.value) {\n          const node = allPinNodes.value[i];\n          alignedXY[node.id] = {\n            x: titleBox.value[node.id]\n              ? titleBox.value[node.id].position.x\n              : 0,\n            y: titleBox.value[node.id]\n              ? titleBox.value[node.id].position.y\n              : 0\n          };\n        }\n        return alignedXY;\n      }),\n      titleBoxClick: (nodeId: string) => {\n        ctx.emit(\"title-click\", { id: nodeId });\n      },\n      titleOver: (nodeId: string) => {\n        ctx.emit(\"title-over\", { id: nodeId });\n      },\n      titleLeave: (nodeId: string) => {\n        ctx.emit(\"title-leave\", { id: nodeId });\n      },\n    };\n  }\n});\n","import { render } from \"./PinLayer.vue?vue&type=template&id=726a582c\"\nimport script from \"./PinLayer.vue?vue&type=script&lang=ts\"\nexport * from \"./PinLayer.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\n  <defs>\n    <marker\n      id=\"preconditionArrowHead\"\n      markerWidth=\"6\"\n      markerHeight=\"7\"\n      refX=\"3\"\n      refY=\"3.5\"\n      orient=\"auto\"\n    >\n      <polygon fill=\"#aae3b9\" stroke=\"#aae3b9\" points=\"0 0, 6 3.5, 0 7\" />\n    </marker>\n  </defs>\n  <PreconditionArrow\n      v-for=\"precondition of preconditions\"\n      :key=\"precondition.id\"\n      markerId=\"preconditionArrow\"\n      :from=\"precondition.center\"\n      :to=\"selectedNode.center\"\n      color=\"#aae3b9\"\n  />\n  <SVGTextBox\n      v-for=\"node of visibleTitleNodes\"\n      :text=\"node.title\"\n      :id=\"`${TITLE_PREFIX}${node.id}`\"\n      :key=\"node.id\"\n      :useLineBreak=\"true\"\n      :x=\"visibleTitleNodeBoxes[node.id] ? visibleTitleNodeBoxes[node.id].position.x : 0\"\n      :y=\"visibleTitleNodeBoxes[node.id] ? visibleTitleNodeBoxes[node.id].position.y : 0\"\n      :line-height=\"8\"\n      :max-char-per-line=\"10\"\n      font-family=\"Roboto\"\n      :font-size=\"8\"\n      font-weight='normal'\n      color=\"#ffa500\"\n  />\n  <rect\n      v-for=\"node of visibleTitleNodes\"\n      :key=\"node.id\"\n      :x=\"visibleTitleNodeBoxes[node.id] ? visibleTitleNodeBoxes[node.id].position.x : 0\"\n      :y=\"visibleTitleNodeBoxes[node.id] ? visibleTitleNodeBoxes[node.id].position.y : 0\"\n      :width=\"visibleTitleNodeBoxes[node.id] ? visibleTitleNodeBoxes[node.id].bbox.width : 0\"\n      :height=\"visibleTitleNodeBoxes[node.id] ? visibleTitleNodeBoxes[node.id].bbox.height : 0\"\n      cursor=\"pointer\"\n      fill=\"transparent\"\n      @click=\"titleBoxClick(node.id)\"\n      @mouseover=\"titleBoxOver(node.id)\"\n      @mouseleave=\"titleBoxLeave(node.id)\"\n      stroke-width=\"0\"\n      stroke=\"pink\"\n  />\n</template>\n\n<script lang=\"ts\">\nimport {\n  computed,\n  defineComponent, PropType,\n  ref,\n  watchEffect\n} from \"vue\";\nimport PreconditionArrow from \"@/components/precondition_layer/PreconditionArrow.vue\";\nimport { useStore } from \"@/store\";\nimport { MapNode } from \"@/types/graphics\";\nimport { findMapNode, findMapNodes } from \"@/store/tree/helpers\";\nimport { clone } from \"@/tools/utils\";\nimport { zoomAndPanPoint } from \"@/views/Home\";\nimport SVGTextBox from \"@/components/SVGTextBox.vue\";\nimport { getTitleBoxes } from \"@/components/map_layer/MapLayer\";\n\nconst TITLE_PREFIX = \"precondition_title_\";\n\nexport default defineComponent({\n  name: \"PreconditionLayer\",\n  emits: [\n    \"title-over\",\n    \"title-leave\",\n    \"title-click\",\n  ],\n  components: {SVGTextBox, PreconditionArrow},\n  props: {\n    selectedNodeId: String,\n    visibleTitleIds: Object as PropType<Array<string>> // all visible titles on page\n  },\n  setup(props, ctx) {\n    const store = useStore();\n    const zoomPanState = store.state.zoomPan;\n\n    /**\n     * compute selectedNode\n     */\n    const selectedNode = computed(() => {\n      if (props.selectedNodeId && store.state.tree.mapNodeLayers) {\n        const [mapNode] = findMapNode(\n          props.selectedNodeId,\n          store.state.tree.mapNodeLayers\n        );\n        if (!mapNode) {\n          return null\n        }\n        const zoomedPannedSelectedNode = clone(mapNode);\n        zoomedPannedSelectedNode.center = zoomAndPanPoint(\n          zoomedPannedSelectedNode.center,\n          zoomPanState.zoom,\n          zoomPanState.pan\n        );\n        return zoomedPannedSelectedNode;\n      } else {\n        return null;\n      }\n    });\n\n    /**\n     * compute selectedNodePreconditions\n     */\n    const preconditions = ref<Record<string, MapNode>>({});\n    const visibleTitleNodes = ref<Record<string, MapNode>>({});\n    const visibleTitleNodeBoxes = getTitleBoxes(TITLE_PREFIX, \"left\", visibleTitleNodes);\n    watchEffect(() => {\n      preconditions.value = {};\n      visibleTitleNodes.value = {}\n      if (\n        props.selectedNodeId &&\n        store.state.precondition.preconditions[props.selectedNodeId] &&\n        store.state.tree.mapNodeLayers\n      ) {\n        const nodes = clone(\n          findMapNodes(\n            store.state.precondition.preconditions[props.selectedNodeId],\n            store.state.tree.mapNodeLayers\n          )\n        );\n        for (const node of nodes) {\n          node.center = zoomAndPanPoint(\n            node.center,\n            zoomPanState.zoom,\n            zoomPanState.pan\n          );\n          preconditions.value[node.id] = node;\n        }\n      }\n      for (const id in preconditions.value) {\n        if (props.visibleTitleIds?.indexOf(id) == -1) {\n          visibleTitleNodes.value[id] = preconditions.value[id]\n        }\n      }\n      if (props.selectedNodeId &&\n          selectedNode.value &&\n          store.state.tree.mapNodeLayers &&\n          props.visibleTitleIds?.indexOf(props.selectedNodeId) == -1\n      ) {\n        visibleTitleNodes.value[props.selectedNodeId] = selectedNode.value;\n      }\n    });\n\n    return {\n      TITLE_PREFIX,\n      selectedNode,\n      preconditions,\n      visibleTitleNodes,\n      visibleTitleNodeBoxes,\n      titleBoxClick: (nodeId: string) => {\n        ctx.emit(\"title-click\", { id: nodeId });\n      },\n      titleBoxOver: (nodeId: string) => {\n        ctx.emit(\"title-over\", { id: nodeId });\n      },\n      titleBoxLeave: (nodeId: string) => {\n        ctx.emit(\"title-leave\", { id: nodeId });\n      }\n    };\n  }\n});\n</script>\n","<template>\n  <line\n    :x1=\"from.x\"\n    :y1=\"from.y\"\n    :x2=\"to.x\"\n    :y2=\"to.y\"\n    :stroke=\"color\"\n    stroke-width=\"1\"\n    marker-end=\"url(#preconditionArrowHead)\"\n  />\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType } from \"vue\";\nimport { Point } from \"@/types/graphics\";\n\nexport default defineComponent({\n  name: \"PreconditionArrow\",\n  props: {\n    markerId: String,\n    color: String,\n    from: Object as PropType<Point>,\n    to: Object as PropType<Point>\n  }\n});\n</script>\n","\nimport { defineComponent, PropType } from \"vue\";\nimport { Point } from \"@/types/graphics\";\n\nexport default defineComponent({\n  name: \"PreconditionArrow\",\n  props: {\n    markerId: String,\n    color: String,\n    from: Object as PropType<Point>,\n    to: Object as PropType<Point>\n  }\n});\n","import { render } from \"./PreconditionArrow.vue?vue&type=template&id=10f878f0\"\nimport script from \"./PreconditionArrow.vue?vue&type=script&lang=ts\"\nexport * from \"./PreconditionArrow.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","import { MapNode, Point, Polygon, Viewport } from \"@/types/graphics\";\nimport { area, getVectorLength, isInside } from \"@/tools/graphics\";\nimport { ErrorKV } from \"@/types/errorkv\";\nimport NewErrorKV from \"@/tools/errorkv\";\nimport { NodeRecordItem } from \"@/store/tree\";\nimport { findMapNode } from \"@/store/tree/helpers\";\nimport { clone } from \"@/tools/utils\";\nimport api from \"@/api/api\";\nimport { isEqual } from \"lodash\";\nimport { DBNode } from \"@/api/types\";\n\nconst MIN_VISIBLE_NUM_IN_LAYER = 3;\n\nexport function zoomAndPanPoint(p: Point, zoom: number, pan: Point): Point {\n  return { x: p.x * zoom + pan.x, y: p.y * zoom + pan.y };\n}\n\nexport function zoomAndPanPolygon(\n  p: Polygon,\n  zoom: number,\n  pan: Point\n): Polygon {\n  return p.map(point => zoomAndPanPoint(point, zoom, pan));\n}\n\n/**\n * CentralNode вычисляется следующим образом.\n * Начинаем смотреть с самого верхнего слоя.\n * Для каждого узла слоя применяем zoomFactor, затем pan\n * Потом смотрим находится ли zoomCenter внутри него. Если да, то это претендент на currentNode (назовем его N).\n * Мы берем его полную площадь и умножаем на 2.\n * Если получившееся значение ≤ площади экрана, то мы считаем что currentNode это parent узла N\n * Если больше то повторяем итерацию но только с детьми N.\n * @param layers\n * @param nodeRecord\n * @param viewport\n * @param zoomFactor\n * @param pan\n * @param zoomCenter\n */\nexport function findCentralNode(\n  layers: Array<Record<string, MapNode>>,\n  nodeRecord: Record<string, NodeRecordItem>,\n  viewport: Viewport,\n  zoomFactor: number,\n  pan: Point,\n  zoomCenter: Point\n): [string, ErrorKV] {\n  if (!layers || layers.length == 0) {\n    return [\"\", null];\n  }\n\n  let underCursorNodeId = null;\n  const viewportArea = viewport.width * viewport.height;\n  let nodesToCheck = layers[0];\n  while (Object.keys(nodesToCheck).length) {\n    underCursorNodeId = \"\";\n\n    for (const nodeId in nodesToCheck) {\n      const borderToCheck = zoomAndPanPolygon(\n        nodesToCheck[nodeId].border,\n        zoomFactor,\n        pan\n      );\n      if (isInside(zoomCenter, borderToCheck)) {\n        underCursorNodeId = nodeId;\n        break;\n      }\n    }\n\n    if (underCursorNodeId === \"\") {\n      // if zoomCenter is outside take the closest node\n      let minDist = Infinity;\n      for (const nodeId in nodesToCheck) {\n        const nodeCenter = zoomAndPanPoint(\n          nodesToCheck[nodeId].center,\n          zoomFactor,\n          pan\n        );\n        const dist = getVectorLength({ from: nodeCenter, to: zoomCenter });\n        if (dist < minDist) {\n          minDist = dist;\n          underCursorNodeId = nodeId;\n        }\n      }\n    }\n\n    const underCursorNodeArea = area(\n      zoomAndPanPolygon(nodesToCheck[underCursorNodeId].border, zoomFactor, pan)\n    );\n    if (\n      Math.floor(underCursorNodeArea) <=\n      Math.floor(viewportArea / MIN_VISIBLE_NUM_IN_LAYER)\n    ) {\n      if (nodeRecord[underCursorNodeId].parent == null) {\n        return [underCursorNodeId, null];\n      }\n      return [nodeRecord[underCursorNodeId].parent!.id, null];\n    } else {\n      nodesToCheck = {};\n      if (!nodeRecord[underCursorNodeId]) {\n        return [\n          \"\",\n          NewErrorKV(\n            \"findCurrentNode: cannot find underCursorNodeId in nodeRecord\",\n            { maxIntersectNodeId: underCursorNodeId, nodeRecord }\n          )\n        ];\n      }\n      for (const child of nodeRecord[underCursorNodeId].node.children) {\n        const [mapNode] = findMapNode(child.id, layers);\n        if (mapNode == null) {\n          return [\n            \"\",\n            NewErrorKV(\"filterNodesAndLayers: Cannot find node in layers\", {\n              \"child.id\": child.id,\n              layers: layers\n            })\n          ];\n        }\n        nodesToCheck[child.id] = mapNode;\n      }\n\n      if (Object.keys(nodesToCheck).length === 0) {\n        return [underCursorNodeId, null];\n      }\n    }\n  }\n\n  return [\"\", NewErrorKV(\"filterNodesAndLayers: unknown error\", {})];\n}\n\n/**\n * Мы показываем слой в котором находится currentNode (без названий) плюс еще 3.\n * Причем полноценно мы показываем только подузлы currentNode.\n * Узлы слоя currentNode отображаются только если у них тот же parent что и у\n * currentNode. Плюс подузлы НЕ ИЗ currentNode мы отображаем только одного следующего слоя.\n * @param layers\n * @param nodeRecord\n * @param currentNodeId\n */\nexport function filterNodesAndLayers(\n  layers: Array<Record<string, MapNode>>,\n  nodeRecord: Record<string, NodeRecordItem>,\n  currentNodeId: string\n): [Array<Record<number, MapNode>>, ErrorKV] {\n  if (!layers || !layers.length) {\n    return [[], null];\n  }\n  const resultLayers = [];\n\n  // узнаем какой слой у currentNode\n  const [currentNode, level] = findMapNode(currentNodeId, layers);\n  if (currentNode == null || level == null) {\n    return [\n      [],\n      NewErrorKV(\"filterNodesAndLayers-currentNode: error in findMapNode\", {\n        currentNodeId,\n        layers\n      })\n    ];\n  }\n\n  // убираем из этого слоя все кроме детей currentNode.parent\n  const upperLayer: Record<string, MapNode> = {};\n  if (nodeRecord[currentNode.id].parent == null) {\n    upperLayer[currentNode.id] = clone(currentNode);\n  } else {\n    for (const child of nodeRecord[currentNode.id].parent!.children) {\n      const [mapNode, l] = findMapNode(child.id, [layers[level]]);\n      if (mapNode == null || l === null) {\n        return [\n          [],\n          NewErrorKV(\"filterNodesAndLayers-upperLayer: error in findMapNode\", {\n            \"child.id\": child.id,\n            level,\n            layers: [layers[level]]\n          })\n        ];\n      }\n      upperLayer[child.id] = clone(mapNode);\n      upperLayer[child.id].title = \"\";\n    }\n  }\n  resultLayers.push(upperLayer);\n\n  // следующий слой это дети всех узлов из upperLayer, но дети всех кроме currentNode не имеют названий\n  const firstLayer: Record<string, MapNode> = {};\n  for (const nodeId in upperLayer) {\n    for (const child of nodeRecord[nodeId].node.children) {\n      const [mapNode, l] = findMapNode(child.id, [layers[level + 1]]);\n      if (mapNode == null || l === null) {\n        return [\n          [],\n          NewErrorKV(\"filterNodesAndLayers-firstLayer: error in findMapNode\", {\n            \"child.id\": child.id,\n            layers: [layers[level + 1]]\n          })\n        ];\n      }\n      if (nodeId != currentNodeId) {\n        firstLayer[child.id] = clone(mapNode);\n        firstLayer[child.id].title = \"\";\n      } else {\n        firstLayer[child.id] = clone(mapNode);\n      }\n    }\n  }\n\n  if (Object.keys(firstLayer).length > 0) {\n    resultLayers.push(firstLayer);\n  }\n\n  // следующий слой это дети детей currentNode\n  const secondLayer: Record<string, MapNode> = {};\n  //for (const childId in firstLayer) {\n  for (const child of nodeRecord[currentNodeId].node.children) {\n    for (const childOfChild of nodeRecord[child.id].node.children) {\n      const [mapNode, l] = findMapNode(childOfChild.id, [layers[level + 2]]);\n      if (mapNode == null || l === null) {\n        return [\n          [],\n          NewErrorKV(\"filterNodesAndLayers-secondLayer: error in findMapNode\", {\n            \"child.id\": child.id,\n            layers: [layers[level + 2]]\n          })\n        ];\n      }\n      secondLayer[childOfChild.id] = clone(mapNode);\n    }\n  }\n\n  if (Object.keys(secondLayer).length > 0) {\n    resultLayers.push(secondLayer);\n  }\n\n  // следующий это дети узлов из secondLayer и у них нет названий\n  const thirdLayer: Record<string, MapNode> = {};\n  for (const nodeId in secondLayer) {\n    for (const child of nodeRecord[nodeId].node.children) {\n      const [mapNode, l] = findMapNode(child.id, [layers[level + 3]]);\n      if (mapNode == null || l === null) {\n        return [\n          [],\n          NewErrorKV(\"filterNodesAndLayers-thirdLayer:cannot findMapNode\", {\n            \"child.id\": child.id,\n            level: level + 3,\n            layers: [layers[level + 3]]\n          })\n        ];\n      }\n      thirdLayer[child.id] = clone(mapNode);\n      thirdLayer[child.id].title = \"\";\n    }\n  }\n\n  if (Object.keys(thirdLayer).length > 0) {\n    resultLayers.push(thirdLayer);\n  }\n\n  return [resultLayers, null];\n}\n\nexport function zoomAnPanLayers(\n  layers: Array<Record<number, MapNode>>,\n  zoom: number,\n  pan: Point\n): Array<Record<number, MapNode>> {\n  if (!layers || layers.length == 0) {\n    return [];\n  }\n  for (const layer of layers) {\n    for (const id in layer) {\n      const node = layer[id];\n      node.center = zoomAndPanPoint(node.center, zoom, pan);\n      node.border = zoomAndPanPolygon(node.border, zoom, pan);\n    }\n  }\n\n  return layers;\n}\n","\nimport {\n  computed,\n  defineComponent, PropType,\n  ref,\n  watchEffect\n} from \"vue\";\nimport PreconditionArrow from \"@/components/precondition_layer/PreconditionArrow.vue\";\nimport { useStore } from \"@/store\";\nimport { MapNode } from \"@/types/graphics\";\nimport { findMapNode, findMapNodes } from \"@/store/tree/helpers\";\nimport { clone } from \"@/tools/utils\";\nimport { zoomAndPanPoint } from \"@/views/Home\";\nimport SVGTextBox from \"@/components/SVGTextBox.vue\";\nimport { getTitleBoxes } from \"@/components/map_layer/MapLayer\";\n\nconst TITLE_PREFIX = \"precondition_title_\";\n\nexport default defineComponent({\n  name: \"PreconditionLayer\",\n  emits: [\n    \"title-over\",\n    \"title-leave\",\n    \"title-click\",\n  ],\n  components: {SVGTextBox, PreconditionArrow},\n  props: {\n    selectedNodeId: String,\n    visibleTitleIds: Object as PropType<Array<string>> // all visible titles on page\n  },\n  setup(props, ctx) {\n    const store = useStore();\n    const zoomPanState = store.state.zoomPan;\n\n    /**\n     * compute selectedNode\n     */\n    const selectedNode = computed(() => {\n      if (props.selectedNodeId && store.state.tree.mapNodeLayers) {\n        const [mapNode] = findMapNode(\n          props.selectedNodeId,\n          store.state.tree.mapNodeLayers\n        );\n        if (!mapNode) {\n          return null\n        }\n        const zoomedPannedSelectedNode = clone(mapNode);\n        zoomedPannedSelectedNode.center = zoomAndPanPoint(\n          zoomedPannedSelectedNode.center,\n          zoomPanState.zoom,\n          zoomPanState.pan\n        );\n        return zoomedPannedSelectedNode;\n      } else {\n        return null;\n      }\n    });\n\n    /**\n     * compute selectedNodePreconditions\n     */\n    const preconditions = ref<Record<string, MapNode>>({});\n    const visibleTitleNodes = ref<Record<string, MapNode>>({});\n    const visibleTitleNodeBoxes = getTitleBoxes(TITLE_PREFIX, \"left\", visibleTitleNodes);\n    watchEffect(() => {\n      preconditions.value = {};\n      visibleTitleNodes.value = {}\n      if (\n        props.selectedNodeId &&\n        store.state.precondition.preconditions[props.selectedNodeId] &&\n        store.state.tree.mapNodeLayers\n      ) {\n        const nodes = clone(\n          findMapNodes(\n            store.state.precondition.preconditions[props.selectedNodeId],\n            store.state.tree.mapNodeLayers\n          )\n        );\n        for (const node of nodes) {\n          node.center = zoomAndPanPoint(\n            node.center,\n            zoomPanState.zoom,\n            zoomPanState.pan\n          );\n          preconditions.value[node.id] = node;\n        }\n      }\n      for (const id in preconditions.value) {\n        if (props.visibleTitleIds?.indexOf(id) == -1) {\n          visibleTitleNodes.value[id] = preconditions.value[id]\n        }\n      }\n      if (props.selectedNodeId &&\n          selectedNode.value &&\n          store.state.tree.mapNodeLayers &&\n          props.visibleTitleIds?.indexOf(props.selectedNodeId) == -1\n      ) {\n        visibleTitleNodes.value[props.selectedNodeId] = selectedNode.value;\n      }\n    });\n\n    return {\n      TITLE_PREFIX,\n      selectedNode,\n      preconditions,\n      visibleTitleNodes,\n      visibleTitleNodeBoxes,\n      titleBoxClick: (nodeId: string) => {\n        ctx.emit(\"title-click\", { id: nodeId });\n      },\n      titleBoxOver: (nodeId: string) => {\n        ctx.emit(\"title-over\", { id: nodeId });\n      },\n      titleBoxLeave: (nodeId: string) => {\n        ctx.emit(\"title-leave\", { id: nodeId });\n      }\n    };\n  }\n});\n","import { render } from \"./PreconditionLayer.vue?vue&type=template&id=c0a45fa0\"\nimport script from \"./PreconditionLayer.vue?vue&type=script&lang=ts\"\nexport * from \"./PreconditionLayer.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","\nimport {computed, defineComponent, onMounted, PropType } from \"vue\";\nimport { MapNode } from \"@/types/graphics\";\nimport MapLayer from \"@/components/map_layer/MapLayer.vue\";\nimport {\n  EventClickNode,\n  EventDraggingNode\n} from \"@/components/map_layer/MapLayer\";\nimport pan from \"./MapPan\";\nimport PinLayer from \"@/components/pin_layer/PinLayer.vue\";\nimport { printError } from \"@/tools/utils\";\nimport PreconditionLayer from \"@/components/precondition_layer/PreconditionLayer.vue\";\n\nconst mapID = \"mapID\";\n\nexport default defineComponent({\n  name: \"Map\",\n  emits: [\n    \"title-dragging\",\n    \"title-click\",\n    \"title-over\",\n    \"title-leave\",\n    \"dragging-background\",\n    \"wheel\"\n  ],\n  components: {\n    PreconditionLayer,\n    PinLayer,\n    MapLayer\n  },\n  props: {\n    viewBox: {\n      type: String,\n      required: true\n    },\n    layers: Object as PropType<Array<Record<string, MapNode>>>,\n    selectedNodeId: {\n      type: String || null,\n      validator: (prop: string | null) =>\n        typeof prop === \"string\" || prop === null,\n      required: true\n    },\n    selectedNodePreconditionIds: Object as PropType<string[]>,\n    pinNodes: Object as PropType<MapNode[]>,\n    searchResultPinNodes: Object as PropType<MapNode[]>,\n    searchResultNodeIDs: Object as PropType<string[]>,\n  },\n  setup(props, ctx) {\n    onMounted(() => {\n      const map = document.getElementById(mapID);\n      if (!map) {\n        printError(\"Map.vue: cannot find map id for event listener\", {});\n        return;\n      }\n\n      map.addEventListener(\"mousedown\", event => {\n        pan.mouseDown();\n      });\n      map.addEventListener(\"mouseup\", event => {\n        pan.mouseUp();\n      });\n      map.addEventListener(\"mousemove\", event => {\n        pan.mouseMove(ctx.emit, {\n          from: {\n            x: event.clientX - event.movementX,\n            y: event.clientY - event.movementY\n          },\n          to: { x: event.clientX, y: event.clientY }\n        });\n      });\n\n      // zoom with mouse wheel\n      map.addEventListener(\"wheel\", event => {\n        ctx.emit(\"wheel\", {\n          delta: event.deltaY,\n          center: { x: event.clientX, y: event.clientY }\n        });\n      }, {passive:true});\n\n      let prevDist = Infinity\n      const prevPoint = {x:Infinity, y:Infinity}\n      map.addEventListener(\"touchstart\", event => {\n          pan.mouseDown();\n      }, {passive:true});\n      map.addEventListener(\"touchend\", event => {\n        prevDist = Infinity\n        prevPoint.x = Infinity\n        prevPoint.y = Infinity\n        pan.mouseUp();\n      });\n\n      // mobile zoom\n      map.addEventListener(\"touchmove\", e => {\n        if (e.touches.length === 1) {\n          if (prevPoint.x != Infinity && prevPoint.y != Infinity) {\n            pan.mouseMove(ctx.emit, {\n              from: prevPoint,\n              to: { x: e.touches[0].clientX, y: e.touches[0].clientY }\n            });\n          }\n          prevPoint.x = e.touches[0].clientX\n          prevPoint.y = e.touches[0].clientY\n        } else if (e.touches.length === 2) {\n          let delta = 0\n          const dist = Math.hypot(\n              e.touches[0].pageX - e.touches[1].pageX,\n              e.touches[0].pageY - e.touches[1].pageY)\n          if (prevDist !== Infinity) {\n            delta = prevDist - dist\n          }\n          prevDist = dist\n\n          ctx.emit(\"wheel\", {\n            delta: delta,\n            center: {\n              x: (e.touches[0].pageX - e.touches[1].pageX) / 2,\n              y: (e.touches[0].pageY - e.touches[1].pageY) / 2,\n            }\n          });\n        }\n      }, {passive:true});\n\n\n    });\n\n    return {\n      visibleTitleIds: computed(() => {\n        if (!props.layers) {\n          return []\n        }\n        const ids = []\n        for (const layer of props.layers) {\n          for (const idx in layer) {\n            if (layer[idx].title != \"\") {\n              ids.push(idx)\n            }\n          }\n        }\n        return ids\n      }),\n      draggingNode: (e: EventDraggingNode) => {\n        ctx.emit(\"title-dragging\", {\n          id: e.nodeId,\n          delta: e.delta\n        });\n      },\n      titleClick: (e: EventClickNode) => {\n        ctx.emit(\"title-click\", { id: e.id });\n      },\n      titleOver: (e: EventClickNode) => {\n        ctx.emit(\"title-over\", { id: e.id });\n      },\n      titleLeave: (e: EventClickNode) => {\n        ctx.emit(\"title-leave\", { id: e.id });\n      },\n      mapID: mapID,\n      fontSize: (index: number): number => {\n        let size = 0\n        const levelSizes: Record<number, number> = {\n          0: 6,\n          1: 11,\n          2: 21,\n          3: 28,\n        }\n        if (props.layers!.length >= 4) {\n          size = levelSizes[index]\n        }\n        if (props.layers!.length == 3) {\n          size = levelSizes[index+1]\n        }\n        return size\n      },\n      fontOpacity: (index: number): number => {\n        let val = 0\n        const levelSizes: Record<number, number> = {\n          0: 1,\n          1: 1,\n          2: 0.2,\n          3: 1,\n        }\n        if (props.layers!.length >= 4) {\n          val = levelSizes[index]\n        }\n        if (props.layers!.length == 3) {\n          val = levelSizes[index+1]\n        }\n        return val\n      },\n      fontColor: (index: number): string => {\n        if (props.layers!.length >= 4) {\n          return `rgb(${200 - 100 * index},${200 - 100 * index},${200 - 100 * index})`\n        }\n        if (props.layers!.length == 3) {\n          return `rgb(${200 - 100 * (index+1)},${200 - 100 * (index+1)},${200 - 100 * (index+1)})`\n        }\n        return ''\n      },\n      borderColor: (index: number): string => {\n        let color = 0\n        const levelColors: Record<number, number> = {\n          0: 240,\n          1: 200,\n          2: 100,\n          3: 90,\n        }\n        if (props.layers!.length >= 4) {\n          color = levelColors[index]\n        }\n        if (props.layers!.length == 3) {\n          color = levelColors[index+1]\n        }\n        return `rgb(${color},${color},${color})`\n      },\n    };\n  }\n});\n","import { render } from \"./Map.vue?vue&type=template&id=2915e7c6\"\nimport script from \"./Map.vue?vue&type=script&lang=ts\"\nexport * from \"./Map.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\n  <transition name=\"slide\">\n      <div v-if=\"show && selectedNode\" class=\"wrapper\">\n        <div class=\"p-fluid\">\n          <!-- Content   -->\n          <div class=\"p-field p-grid\">\n            <div class=\"p-col-12\">\n              <TextArea\n                rows=\"1\"\n                :autoResize=\"true\"\n                placeholder=\"Node title\"\n                :value=\"selectedNode.title\"\n                @update:modelValue=\"changeNodeTitle($event)\"\n              />\n            </div>\n            <div class=\"p-col-12\">\n              <Markdown\n                :content = \"selectedNodeContent ? selectedNodeContent.content : ''\"\n                :rows=\"20\"\n                @content-changed=\"changeContent($event)\"\n              />\n            </div>\n          </div>\n\n          <!-- Comment -->\n          <div class=\"p-field p-grid\">\n            <div class=\"p-col-12 p-md-12\">\n            <TextArea\n                id=\"comment\"\n                placeholder=\"Your notes (visible only to you)\"\n                :autoResize=\"true\"\n                rows=\"2\"\n                :value=\"comment\"\n                @update:modelValue=\"changeComment($event)\"\n                v-on:keydown=\"checkAuthorized\"\n            />\n            </div>\n          </div>\n\n          <!-- Preconditions section -->\n          <h3><i>based on</i></h3>\n          <SectionPreconditions\n              v-if=\"selectedNodeContent\"\n              :node-id=\"selectedNode.id\"\n          />\n\n          <!-- ChangeLog section -->\n          <ChangeLog :node-id=\"selectedNode.id\" />\n        </div>\n      </div>\n\n  </transition>\n</template>\n\n<script lang=\"ts\">\nimport { actions, useStore } from \"@/store\";\nimport { actions as nodeContentActions } from \"@/store/node_content\";\nimport { computed } from \"vue\";\nimport TextArea from \"primevue/textarea\";\nimport SectionPreconditions from \"./Preconditions.vue\";\nimport { Tree } from \"@/types/graphics\";\nimport {\n  EmptyNodeContent,\n  NodeComment,\n  NodeContent\n} from \"@/store/node_content\";\nimport { clone, printError } from \"@/tools/utils\";\nimport { useConfirm } from \"primevue/useconfirm\";\nimport api from \"@/api/api\";\nimport Markdown from \"./Markdown.vue\";\nimport ChangeLog from \"./ChangeLog.vue\";\n\nexport default {\n  name: \"NodeContent\",\n  components: {\n    Markdown,\n    TextArea,\n    SectionPreconditions,\n    ChangeLog,\n  },\n  props: {\n    show: {\n      type: Boolean,\n      required: true\n    }\n  },\n  setup() {\n    const store = useStore();\n    const confirm = useConfirm();\n    const tree = store.state.tree;\n    const nodeContents = computed<Record<string, NodeContent>>(\n      () => store.state.nodeContent.nodeContents\n    );\n    const userNodeComments = computed<Record<string, NodeComment>>(\n      () => store.state.nodeContent.userNodeComments\n    );\n\n    const selectedNode = computed<Tree | null>(() =>\n      tree.selectedNodeId && tree.nodeRecord[tree.selectedNodeId]\n        ? tree.nodeRecord[tree.selectedNodeId].node\n        : null\n    );\n\n    const selectedNodeContent = computed<NodeContent | null>(() => {\n      if (tree.selectedNodeId && nodeContents.value[tree.selectedNodeId]) {\n        return nodeContents.value[tree.selectedNodeId];\n      }\n      const newContent = clone(EmptyNodeContent);\n      newContent.nodeID = tree.selectedNodeId;\n      return newContent;\n    });\n\n    const comment = computed<string>(() =>\n      tree.selectedNodeId && userNodeComments.value[tree.selectedNodeId]\n        ? userNodeComments.value[tree.selectedNodeId].comment\n        : \"\"\n    );\n\n    return {\n      selectedNode,\n      selectedNodeContent,\n      checkAuthorized: async (e: Event) => {\n        if (!store.state.user.user || store.state.user.user.isAnonymous) {\n          await store.dispatch(`${actions.confirmSignInPopup}`, confirm);\n          e.preventDefault();\n        }\n      },\n      comment,\n      changeNodeTitle: async (value: string) => {\n        if (!selectedNode.value || !selectedNode.value.id) {\n          return;\n        }\n        const err = await api.debouncedUpdate({\n          [`map/${selectedNode.value.id}/name`]: value\n        });\n\n        if (err) {\n          printError(err.error.message, err.kv);\n        }\n      },\n      changeContent: async (value: string) => {\n        const err = await store.dispatch(\n          `nodeContent/${nodeContentActions.setNodeContent}`,\n          {\n            nodeID: selectedNode.value!.id,\n            content: value\n          }\n        );\n\n        if (err) {\n          printError(err, {});\n        }\n      },\n      changeComment: async (value: string) => {\n        const err = await store.dispatch(\n          `nodeContent/${nodeContentActions.setNodeComment}`,\n          {\n            nodeID: selectedNode.value!.id,\n            comment: value\n          }\n        );\n\n        if (err) {\n          printError(err, {});\n        }\n      }\n    };\n  }\n};\n</script>\n\n<style scoped>\n.wrapper {\n  position: absolute;\n  width: 30%;\n  height: 100%;\n  padding: 24px;\n  overflow-y: scroll;\n  background-color: rgba(255, 255, 255, 1);\n  font-family: Roboto, Arial, sans-serif;\n  color: rgb(73, 80, 87);\n}\n\n.slide-enter-active,\n.slide-leave-active {\n  transition: left 0.5s;\n}\n\n.slide-leave-from,\n.slide-enter-to {\n  left: 0;\n}\n\n.slide-enter-from,\n.slide-leave-to {\n  left: -100%;\n}\n</style>\n","<template>\n  <div\n    v-for=\"precondition of preconditions\"\n    class=\"p-grid\"\n    :key=\"precondition.id\"\n  >\n    <div class=\"p-col-12\">\n      <div class=\"p-grid\">\n        <div class=\"p-col-11\">\n          <a :href=precondition.id >{{ precondition.title }}</a>\n        </div>\n        <div class=\"p-col-1\">\n          <Button\n            @click=\"remove(precondition.id)\"\n            icon=\"pi pi-ban\"\n            class=\"p-button-rounded p-button-help p-button-outlined\"\n          />\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport Button from \"primevue/button\";\nimport { ref, watchEffect } from \"vue\";\nimport { useStore } from \"@/store\";\nimport api from \"@/api/api\";\nimport { Tree } from \"@/types/graphics\";\n\nexport default {\n  name: \"Preconditions\",\n  props: {\n    nodeId: String\n  },\n  components: {\n    Button\n  },\n  setup(props: { nodeId: string }) {\n    const store = useStore();\n    const preconditions = ref<Array<Tree>>([]);\n    watchEffect(() => {\n      preconditions.value = [];\n      if (\n        props.nodeId &&\n        store.state.precondition.preconditions[props.nodeId]\n      ) {\n        for (const id of store.state.precondition.preconditions[props.nodeId]) {\n          preconditions.value.push(store.state.tree.nodeRecord[id].node);\n        }\n      }\n    });\n\n    return {\n      preconditions,\n      remove: (id: string) => {\n        const p = store.state.precondition.preconditions[props.nodeId];\n        if (!p) {\n          return;\n        }\n        if (p.indexOf(id) == -1) {\n          return;\n        }\n\n        api.savePreconditions(store.state.user.user, {\n          nodeId: props.nodeId,\n          preconditionIds: p.splice(p.indexOf(id), 1),\n        });\n      }\n    };\n  }\n};\n</script>\n","\nimport Button from \"primevue/button\";\nimport { ref, watchEffect } from \"vue\";\nimport { useStore } from \"@/store\";\nimport api from \"@/api/api\";\nimport { Tree } from \"@/types/graphics\";\n\nexport default {\n  name: \"Preconditions\",\n  props: {\n    nodeId: String\n  },\n  components: {\n    Button\n  },\n  setup(props: { nodeId: string }) {\n    const store = useStore();\n    const preconditions = ref<Array<Tree>>([]);\n    watchEffect(() => {\n      preconditions.value = [];\n      if (\n        props.nodeId &&\n        store.state.precondition.preconditions[props.nodeId]\n      ) {\n        for (const id of store.state.precondition.preconditions[props.nodeId]) {\n          preconditions.value.push(store.state.tree.nodeRecord[id].node);\n        }\n      }\n    });\n\n    return {\n      preconditions,\n      remove: (id: string) => {\n        const p = store.state.precondition.preconditions[props.nodeId];\n        if (!p) {\n          return;\n        }\n        if (p.indexOf(id) == -1) {\n          return;\n        }\n\n        api.savePreconditions(store.state.user.user, {\n          nodeId: props.nodeId,\n          preconditionIds: p.splice(p.indexOf(id), 1),\n        });\n      }\n    };\n  }\n};\n","import { render } from \"./Preconditions.vue?vue&type=template&id=be4f9538\"\nimport script from \"./Preconditions.vue?vue&type=script&lang=ts\"\nexport * from \"./Preconditions.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\n  <p\n    v-show=\"!editOn\"\n    v-html=\"renderedContent\"\n    @click=\"setEditOn(true)\"\n    class=\"renderedContent\"\n  />\n  <textarea\n      class=\"rawContent p-inputtextarea p-inputtext p-component p-inputtextarea-resizable\"\n      style=\"display: none\"\n      ref=\"txtarea\"\n      :rows=\"rows\"\n      :value=\"content\"\n      @input=\"changeContent($event.target.value)\"\n      @focusout=\"setEditOn(false)\"\n  />\n</template>\n\n<script lang=\"ts\">\nimport { computed, ref } from \"vue\";\nimport MarkdownIt from 'markdown-it';\nconst mdKatex = require('markdown-it-katex'); // eslint-disable-line\nconst mdImsize = require('markdown-it-imsize'); // eslint-disable-line\nconst mdContainer = require('markdown-it-container'); // eslint-disable-line\nconst md = new MarkdownIt();\nmd.use(mdKatex, {output: 'html'}).use(mdImsize).use(mdContainer, 'warning', {\n  validate: function(params: any) {\n    console.log(\"validate\", params.trim(), params.trim() == 'warning')\n    return params.trim().match(/^warning$/);\n  },\n  render: function (tokens: any, idx: any) {\n    const m = tokens[idx].info.trim().match(/^warning(.*)$/);\n    if (tokens[idx].nesting === 1) {\n      // opening tag\n      return '<div style=\"background-color: #c6f68d; padding: 8px;\">' + md.utils.escapeHtml(m[1]) + '\\n';\n    } else {\n      // closing tag\n      return '</div>\\n';\n    }\n  }\n});\n\nexport default {\n  name: \"Markdown\",\n  emits: [\n    \"content-changed\",\n  ],\n  props: {\n    content: {\n      type: String,\n      required: true\n    },\n    rows: {\n      type: Number,\n      required: true\n    }\n  },\n  setup(props: any, ctx: any) {\n    const renderedContent = computed(()=>{\n      return md.render(props.content);\n    })\n    const editOn = ref(false)\n\n    const txtarea = ref<HTMLDivElement | null>(null)\n\n    return {\n      editOn,\n      txtarea,\n      setEditOn: (val: boolean) => {\n        editOn.value = val\n        if (val && txtarea.value) {\n          txtarea.value.style.display = 'block'\n          txtarea.value.focus()\n        }\n        if (!val && txtarea.value) {\n          txtarea.value.style.display = 'none'\n        }\n      },\n      renderedContent,\n      changeContent: (value: string) => {\n        ctx.emit(\"content-changed\", value)\n      },\n    };\n  }\n}\n</script>\n\n<style scoped>\n@import \"../../../node_modules/katex/dist/katex.min.css\";\n.renderedContent {\n  color: rgb(32, 33, 36);\n  font-family: Roboto, Arial, sans-serif;\n  font-size: 14px;\n  font-weight: 400;\n  letter-spacing: normal;\n  line-height: 20px;\n  margin-right: 4px;\n  text-align: left;\n  text-wrap: wrap;\n  overflow-y: scroll;\n  height: 400px;\n}\n.rawContent {\n  overflow-y: scroll;\n  height: 100%;\n}\n</style>\n","\nimport { computed, ref } from \"vue\";\nimport MarkdownIt from 'markdown-it';\nconst mdKatex = require('markdown-it-katex'); // eslint-disable-line\nconst mdImsize = require('markdown-it-imsize'); // eslint-disable-line\nconst mdContainer = require('markdown-it-container'); // eslint-disable-line\nconst md = new MarkdownIt();\nmd.use(mdKatex, {output: 'html'}).use(mdImsize).use(mdContainer, 'warning', {\n  validate: function(params: any) {\n    console.log(\"validate\", params.trim(), params.trim() == 'warning')\n    return params.trim().match(/^warning$/);\n  },\n  render: function (tokens: any, idx: any) {\n    const m = tokens[idx].info.trim().match(/^warning(.*)$/);\n    if (tokens[idx].nesting === 1) {\n      // opening tag\n      return '<div style=\"background-color: #c6f68d; padding: 8px;\">' + md.utils.escapeHtml(m[1]) + '\\n';\n    } else {\n      // closing tag\n      return '</div>\\n';\n    }\n  }\n});\n\nexport default {\n  name: \"Markdown\",\n  emits: [\n    \"content-changed\",\n  ],\n  props: {\n    content: {\n      type: String,\n      required: true\n    },\n    rows: {\n      type: Number,\n      required: true\n    }\n  },\n  setup(props: any, ctx: any) {\n    const renderedContent = computed(()=>{\n      return md.render(props.content);\n    })\n    const editOn = ref(false)\n\n    const txtarea = ref<HTMLDivElement | null>(null)\n\n    return {\n      editOn,\n      txtarea,\n      setEditOn: (val: boolean) => {\n        editOn.value = val\n        if (val && txtarea.value) {\n          txtarea.value.style.display = 'block'\n          txtarea.value.focus()\n        }\n        if (!val && txtarea.value) {\n          txtarea.value.style.display = 'none'\n        }\n      },\n      renderedContent,\n      changeContent: (value: string) => {\n        ctx.emit(\"content-changed\", value)\n      },\n    };\n  }\n}\n","import { render } from \"./Markdown.vue?vue&type=template&id=92fe9ff2&scoped=true\"\nimport script from \"./Markdown.vue?vue&type=script&lang=ts\"\nexport * from \"./Markdown.vue?vue&type=script&lang=ts\"\n\nimport \"./Markdown.vue?vue&type=style&index=0&id=92fe9ff2&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-92fe9ff2\"\n\nexport default script","<template>\n  <Dialog\n      v-model:visible=\"complainModalVisible\"\n      :dismissableMask=\"true\"\n      :closable=\"true\"\n      :modal=\"true\"\n      :closeOnEscape=\"true\"\n  >\n    <template #header>\n      <h3>\n        {{ `Please use our discord channel to complain about inappropriate changes` }}\n      </h3>\n\n    </template>\n    <h3>\n      <a target=\"_blank\" href=\"https://discord.com/channels/1171118046543347782/1196694554791915600\">Discord edit-complains channel</a>\n    </h3>\n    <p>\n      You can use the following text:\n    </p>\n    <code>\n      Hi, I think I found changes that was inappropriate because ... <br/>\n      Here is the changes I am talking about {{ complainChangeLink }}  <br/>\n      This is the ...st time I found inappropriate changes from this user.  <br/>\n    </code>\n    <template #footer>\n    </template>\n  </Dialog>\n  <Fieldset legend=\"change log\" :toggleable=\"true\" :collapsed=\"collapsed\" @update:collapsed=\"toggle($event)\">\n    <div v-if=\"!isAuthorized\">\n      Sign in to see node change log\n    </div>\n    <div v-else class=\"m-0\">\n      <Card\n          v-for=\"(event, i) of changes\"\n          :key=\"i\"\n          class=\"mt-3\"\n      >\n        <template #title>\n          {{ (new Date(event.timestamp)).toLocaleDateString() }} {{ (new Date(event.timestamp)).toLocaleTimeString() }} / {{ event.action }} change\n        </template>\n        <template #subtitle>\n          {{ !!event.userDisplayName ? event.userDisplayName : `user id ${event.userID}` }} / <a href=\"#\" @click=\"showComplain(event.changeLogID)\">Complain</a>\n        </template>\n        <template #content>\n          {{ event.action == ActionType.Name ? event.newName : (event.action == ActionType.Content ? event.newContent : '') }}\n        </template>\n      </Card>\n    </div>\n  </Fieldset>\n</template>\n\n<script lang=\"ts\">\nimport Fieldset from 'primevue/fieldset';\nimport Card from 'primevue/card';\nimport {subscribeChangeLogEnriched} from \"@/api/change_log\";\nimport {ref, reactive, watch, computed} from \"vue\";\nimport {ActionType, ChangeLogEnriched} from '@/store/change_log';\nimport Dialog from \"primevue/dialog\";\nimport {useStore} from \"@/store\";\n\nexport default {\n  name: \"ChangeLog\",\n  computed: {\n    ActionType() {\n      return ActionType\n    }\n  },\n  props: {\n    nodeId: String\n  },\n  components: {\n    Dialog,\n    Fieldset,\n    Card,\n  },\n  setup(props: { nodeId: string }) {\n    const store = useStore();\n    const isAuthorized = computed(() => (store.state.user.user && !store.state.user.user.isAnonymous));\n    const complainChangeLink = ref('')\n    const complainModalVisible = ref(false);\n    const collapsed = ref(true)\n    const changes = reactive([]) as Array<ChangeLogEnriched>\n    let unsubscribe = ()=>{ /**/ }\n    watch(() => [props.nodeId, collapsed.value], async (newArgs, oldArgs) => {\n      if (newArgs[0] != oldArgs[0]) {\n        collapsed.value = true\n      }\n      unsubscribe()\n      unsubscribe = ()=>{ /**/ }\n      if (collapsed.value == false) {\n        unsubscribe = await subscribeChangeLogEnriched([ActionType.Name, ActionType.Content], [props.nodeId], (changeLogs)=>{\n          changes.splice(0, changes.length, ...changeLogs)\n        })\n      }\n    });\n    return {\n      changes,\n      collapsed,\n      toggle: (event: any) => {\n        collapsed.value = event\n      },\n      showComplain: (id: string) => {\n        complainModalVisible.value = true\n        complainChangeLink.value = 'https://scimap.org/change/'+id\n      },\n      complainModalVisible,\n      complainChangeLink,\n      isAuthorized,\n    }\n  }\n}\n</script>\n","\nexport enum ActionType {\n  ParentID = 'parentID',\n  Content = 'content',\n  Name = 'name',\n}\n\nexport type ChangeLog = {\n  changeLogID: string;\n  nodeID: string;\n  userID: string;\n  timestamp: number;\n  action: ActionType;\n  attributes: {\n    value: any;\n    valueBefore: any;\n    valueAfter: any;\n    added: any;\n    removed: any;\n  };\n};\n\nexport type ChangeLogNodeContent = {\n  changeLogID: string;\n\n  timestamp: number;\n  action: ActionType;\n\n  userID: string;\n  userDisplayName: string;\n\n  nodeID: string;\n  nodeIDPath: string;\n  nodeName: string;\n\n  newContent: string;\n}\n\nexport type ChangeLogNodeName = {\n  changeLogID: string;\n\n  timestamp: number;\n  action: ActionType;\n\n  userID: string;\n  userDisplayName: string;\n\n  nodeID: string;\n  nodeIDPath: string;\n  nodeName: string;\n\n  newName: string;\n}\n\nexport type ChangeLogNodeParent = {\n  changeLogID: string;\n\n  timestamp: number;\n  action: ActionType;\n\n  userID: string;\n  userDisplayName: string;\n\n  parentNodeIDBefore: string;\n  parentNodeIDBeforePath: string;\n  parentNodeBeforeName: string;\n\n  parentNodeIDAfter: string;\n  parentNodeIDAfterPath: string;\n  parentNodeAfterName: string;\n\n  nodeID: string;\n  nodeIDPath: string;\n  nodeName: string;\n\n  isRemoved: boolean;\n  isAdded: boolean;\n}\n\nexport type ChangeLogEnriched = ChangeLogNodeContent | ChangeLogNodeName | ChangeLogNodeParent;\n\n","import {ActionType, ChangeLog, ChangeLogEnriched} from \"@/store/change_log\";\nimport {QueryFilterConstraint} from \"@firebase/firestore\";\nimport {and, collection, getFirestore, onSnapshot, orderBy, query, where} from \"firebase/firestore\";\nimport firebase from \"firebase/compat\";\n\n/**\n * TODO: add limit\n * @param actions\n * @param nodeIDs\n * @param cb\n */\nexport async function subscribeChangeLog(actions: Array<ActionType>, nodeIDs: Array<string>, cb:(changeLogs: Array<ChangeLog>)=>void) {\n  const andConditions = [] as Array<QueryFilterConstraint>\n  if (nodeIDs.length) {\n    andConditions.push(where(\"node_id\", \"in\", nodeIDs))\n  }\n  if (actions.length) {\n    andConditions.push(where(\"action\", \"in\", actions))\n  }\n  const q = query(\n    collection(getFirestore(), \"changes\"),\n    and(...andConditions),\n    orderBy(\"timestamp\", \"desc\")\n  );\n\n  return  onSnapshot(q, (snapshot) => {\n    const changeLogs = [] as Array<ChangeLog>\n    snapshot.forEach((doc) => {\n      changeLogs.push({\n        changeLogID: doc.id,\n        nodeID: doc.get('node_id'),\n        userID: doc.get('user_id'),\n        timestamp: doc.get('timestamp'),\n        action: doc.get('action'),\n        attributes: {\n          value: doc.get('attributes.value'),\n          valueBefore: doc.get('attributes.valueBefore'),\n          valueAfter: doc.get('attributes.valueAfter'),\n          added: doc.get('attributes.added'),\n          removed: doc.get('attributes.removed'),\n        },\n      })\n    })\n    cb(changeLogs)\n  });\n}\n\n\n/**\n * @param nodeID\n */\nexport async function getNodeName(nodeID: string): Promise<Record<string,string>> {\n  const nodeName = {} as Record<string, string>;\n  const pr = await firebase\n    .database()\n    .ref(`map/${nodeID}/name`)\n    .get();\n  if (pr.exists()) {\n    nodeName[`map/${nodeID}`] = pr.val()\n  } else {\n    const prTrash = await firebase\n      .database()\n      .ref(`trash/${nodeID}/map/name`)\n      .get();\n    if (prTrash.exists()) {\n      nodeName[`trash/${nodeID}`] = prTrash.val()\n    }\n  }\n\n  return nodeName\n}\n\n/**\n * @param userID\n */\nexport async function getUserDisplayName(userID: string): Promise<Record<string,string>> {\n  const userName = {} as Record<string, string>;\n  const pr = await firebase\n    .database()\n    .ref(`public_user_data/${userID}/displayName`)\n    .get();\n  if (pr.exists()) {\n    userName[`${userID}`] = pr.val()\n  }\n  return userName\n}\n\nexport async function getUserDisplayNames(userIDs: Array<string>): Promise<Record<string, string>> {\n  const fetches = []\n  for (const userID of userIDs) {\n    fetches.push(getUserDisplayName(userID))\n  }\n  const responses = await Promise.all(fetches)\n  const result = {} as Record<string, string>\n  for (const response of responses) {\n    result[Object.keys(response)[0]] = Object.values(response)[0]\n  }\n  return result\n}\n\n// Note: realtime database charges for bandwidth and does not have batch fetch for multiple paths\n// If someday we switch to Firestore this must be implemented in other way\nexport async function getNodeNames(nodeIDs: Array<string>): Promise<Record<string, string>> {\n  const fetches = []\n  for (const nodeID of nodeIDs) {\n    fetches.push(getNodeName(nodeID))\n  }\n  const responses = await Promise.all(fetches)\n  const result = {} as Record<string, string>\n  for (const response of responses) {\n    result[Object.keys(response)[0]] = Object.values(response)[0]\n  }\n  return result\n}\n\nfunction getPathFromNodeName(nodeID: string | null, nodeNames: Record<string, string>): string {\n  if (nodeID == null) {\n    return ''\n  }\n  let nodePath = '';\n  if (nodeNames[`map/${nodeID}`] != null) {\n    nodePath = `map/${nodeID}`\n  } else if (nodeNames[`trash/${nodeID}`] != null) {\n    nodePath = `trash/${nodeID}`\n  }\n  return nodePath;\n}\n\n/**\n * Same as subscribeChangeLog but enriched with username\n * @param actions\n * @param nodeIDs\n * @param cb\n */\nexport async function subscribeChangeLogEnriched(\n  actions: Array<ActionType>,\n  nodeIDs: Array<string>,\n  cb:(changeLogsEnriched: Array<ChangeLogEnriched>)=>void,\n) {\n  return subscribeChangeLog(actions, nodeIDs, (changeLogs: Array<ChangeLog>)=>{\n    // collect userIDs to request names\n    // and nodeIDs to request node names\n    const userNames = {} as Record<string, string>\n    const nodeNames = {} as Record<string, string>\n    for (const changeLog of changeLogs) {\n      userNames[changeLog.userID] = ''\n      nodeNames[changeLog.nodeID] = ''\n      if (changeLog.action == ActionType.ParentID) {\n        if (changeLog.attributes.valueBefore != null) {\n          nodeNames[changeLog.attributes.valueBefore] = ''\n        }\n        if (changeLog.attributes.valueAfter != null) {\n          nodeNames[changeLog.attributes.valueAfter] = ''\n        }\n      }\n    }\n    // fetch node and user names\n    const nodeIDs = []\n    for (const nodeID in nodeNames) {\n      nodeIDs.push(nodeID)\n    }\n    const userIDs = []\n    for (const userID in userNames) {\n      userIDs.push(userID)\n    }\n    Promise.all([getNodeNames(nodeIDs), getUserDisplayNames(userIDs)]).then((resp)=>{\n      const nodeNames = resp[0]\n      const userNames = resp[1]\n      const changeLogsEnriched = [] as Array<ChangeLogEnriched>\n      changeLogs.forEach((log) => {\n        const nodePath = getPathFromNodeName(log.nodeID, nodeNames)\n        if (log.action == ActionType.Name) {\n          changeLogsEnriched.push({\n            changeLogID: log.changeLogID,\n\n            timestamp: log.timestamp,\n            action: log.action,\n\n            userID: log.userID,\n            userDisplayName: userNames[log.userID],\n\n            nodeID: log.nodeID,\n            nodeIDPath: nodePath,\n            nodeName: nodeNames[nodePath],\n\n            newName: log.attributes.value,\n          })\n        } else if (log.action == ActionType.Content) {\n          changeLogsEnriched.push({\n            changeLogID: log.changeLogID,\n\n            timestamp: log.timestamp,\n            action: log.action,\n\n            userID: log.userID,\n            userDisplayName: userNames[log.userID],\n\n            nodeID: log.nodeID,\n            nodeIDPath: nodePath,\n            nodeName: nodeNames[nodePath],\n\n            newContent: log.attributes.value,\n          })\n        } else if (log.action == ActionType.ParentID) {\n          const beforePath = getPathFromNodeName(log.attributes.valueBefore, nodeNames)\n          const afterPath = getPathFromNodeName(log.attributes.valueAfter, nodeNames)\n          changeLogsEnriched.push({\n            changeLogID: log.changeLogID,\n\n            timestamp: log.timestamp,\n            action: log.action,\n\n            userID: log.userID,\n            userDisplayName: userNames[log.userID],\n\n            nodeID: log.nodeID,\n            nodeIDPath: nodePath,\n            nodeName: nodeNames[nodePath],\n\n            parentNodeIDBefore: log.attributes.valueBefore,\n            parentNodeIDBeforePath: beforePath,\n            parentNodeBeforeName: nodeNames[beforePath],\n\n            parentNodeIDAfter: log.attributes.valueAfter,\n            parentNodeIDAfterPath: afterPath,\n            parentNodeAfterName: nodeNames[afterPath],\n\n            isRemoved: log.attributes.valueAfter == null,\n            isAdded: log.attributes.valueBefore == null,\n          })\n        }\n      })\n      cb(changeLogsEnriched)\n    })\n  })\n}\n","\nimport Fieldset from 'primevue/fieldset';\nimport Card from 'primevue/card';\nimport {subscribeChangeLogEnriched} from \"@/api/change_log\";\nimport {ref, reactive, watch, computed} from \"vue\";\nimport {ActionType, ChangeLogEnriched} from '@/store/change_log';\nimport Dialog from \"primevue/dialog\";\nimport {useStore} from \"@/store\";\n\nexport default {\n  name: \"ChangeLog\",\n  computed: {\n    ActionType() {\n      return ActionType\n    }\n  },\n  props: {\n    nodeId: String\n  },\n  components: {\n    Dialog,\n    Fieldset,\n    Card,\n  },\n  setup(props: { nodeId: string }) {\n    const store = useStore();\n    const isAuthorized = computed(() => (store.state.user.user && !store.state.user.user.isAnonymous));\n    const complainChangeLink = ref('')\n    const complainModalVisible = ref(false);\n    const collapsed = ref(true)\n    const changes = reactive([]) as Array<ChangeLogEnriched>\n    let unsubscribe = ()=>{ /**/ }\n    watch(() => [props.nodeId, collapsed.value], async (newArgs, oldArgs) => {\n      if (newArgs[0] != oldArgs[0]) {\n        collapsed.value = true\n      }\n      unsubscribe()\n      unsubscribe = ()=>{ /**/ }\n      if (collapsed.value == false) {\n        unsubscribe = await subscribeChangeLogEnriched([ActionType.Name, ActionType.Content], [props.nodeId], (changeLogs)=>{\n          changes.splice(0, changes.length, ...changeLogs)\n        })\n      }\n    });\n    return {\n      changes,\n      collapsed,\n      toggle: (event: any) => {\n        collapsed.value = event\n      },\n      showComplain: (id: string) => {\n        complainModalVisible.value = true\n        complainChangeLink.value = 'https://scimap.org/change/'+id\n      },\n      complainModalVisible,\n      complainChangeLink,\n      isAuthorized,\n    }\n  }\n}\n","import { render } from \"./ChangeLog.vue?vue&type=template&id=3543c0d7\"\nimport script from \"./ChangeLog.vue?vue&type=script&lang=ts\"\nexport * from \"./ChangeLog.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","\nimport { actions, useStore } from \"@/store\";\nimport { actions as nodeContentActions } from \"@/store/node_content\";\nimport { computed } from \"vue\";\nimport TextArea from \"primevue/textarea\";\nimport SectionPreconditions from \"./Preconditions.vue\";\nimport { Tree } from \"@/types/graphics\";\nimport {\n  EmptyNodeContent,\n  NodeComment,\n  NodeContent\n} from \"@/store/node_content\";\nimport { clone, printError } from \"@/tools/utils\";\nimport { useConfirm } from \"primevue/useconfirm\";\nimport api from \"@/api/api\";\nimport Markdown from \"./Markdown.vue\";\nimport ChangeLog from \"./ChangeLog.vue\";\n\nexport default {\n  name: \"NodeContent\",\n  components: {\n    Markdown,\n    TextArea,\n    SectionPreconditions,\n    ChangeLog,\n  },\n  props: {\n    show: {\n      type: Boolean,\n      required: true\n    }\n  },\n  setup() {\n    const store = useStore();\n    const confirm = useConfirm();\n    const tree = store.state.tree;\n    const nodeContents = computed<Record<string, NodeContent>>(\n      () => store.state.nodeContent.nodeContents\n    );\n    const userNodeComments = computed<Record<string, NodeComment>>(\n      () => store.state.nodeContent.userNodeComments\n    );\n\n    const selectedNode = computed<Tree | null>(() =>\n      tree.selectedNodeId && tree.nodeRecord[tree.selectedNodeId]\n        ? tree.nodeRecord[tree.selectedNodeId].node\n        : null\n    );\n\n    const selectedNodeContent = computed<NodeContent | null>(() => {\n      if (tree.selectedNodeId && nodeContents.value[tree.selectedNodeId]) {\n        return nodeContents.value[tree.selectedNodeId];\n      }\n      const newContent = clone(EmptyNodeContent);\n      newContent.nodeID = tree.selectedNodeId;\n      return newContent;\n    });\n\n    const comment = computed<string>(() =>\n      tree.selectedNodeId && userNodeComments.value[tree.selectedNodeId]\n        ? userNodeComments.value[tree.selectedNodeId].comment\n        : \"\"\n    );\n\n    return {\n      selectedNode,\n      selectedNodeContent,\n      checkAuthorized: async (e: Event) => {\n        if (!store.state.user.user || store.state.user.user.isAnonymous) {\n          await store.dispatch(`${actions.confirmSignInPopup}`, confirm);\n          e.preventDefault();\n        }\n      },\n      comment,\n      changeNodeTitle: async (value: string) => {\n        if (!selectedNode.value || !selectedNode.value.id) {\n          return;\n        }\n        const err = await api.debouncedUpdate({\n          [`map/${selectedNode.value.id}/name`]: value\n        });\n\n        if (err) {\n          printError(err.error.message, err.kv);\n        }\n      },\n      changeContent: async (value: string) => {\n        const err = await store.dispatch(\n          `nodeContent/${nodeContentActions.setNodeContent}`,\n          {\n            nodeID: selectedNode.value!.id,\n            content: value\n          }\n        );\n\n        if (err) {\n          printError(err, {});\n        }\n      },\n      changeComment: async (value: string) => {\n        const err = await store.dispatch(\n          `nodeContent/${nodeContentActions.setNodeComment}`,\n          {\n            nodeID: selectedNode.value!.id,\n            comment: value\n          }\n        );\n\n        if (err) {\n          printError(err, {});\n        }\n      }\n    };\n  }\n};\n","import { render } from \"./Index.vue?vue&type=template&id=08de50d0&scoped=true\"\nimport script from \"./Index.vue?vue&type=script&lang=ts\"\nexport * from \"./Index.vue?vue&type=script&lang=ts\"\n\nimport \"./Index.vue?vue&type=style&index=0&id=08de50d0&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-08de50d0\"\n\nexport default script","<template>\n  <div :class=\"$style.wrapper\">\n    <div v-if=\"email\">\n      <div class=\"p-grid\">\n        <div class=\"p-col\">\n          <TextSearch />\n        </div>\n        <div class=\"p-col\">\n          {{ email }}\n        </div>\n      </div>\n      <div class=\"p-grid\">\n        <Feedback />\n        <EditMode />\n        <span v-if=\"editModeOn\">\n          <CutPaste v-if=\"isNodeSelected\" />\n          <AddNode />\n          <RemoveNode v-if=\"isNodeSelected\" />\n        </span>\n        <AddPrecondition\n          v-if=\"isNodeSelected\"\n          :clickedTitleId=\"clickedTitleId\"\n          @select-precondition-is-on=\"$emit('select-precondition-is-on')\"\n          @select-precondition-is-off=\"$emit('select-precondition-is-off')\"\n        />\n        <PinNode v-if=\"isNodeSelected && !isPinned\" />\n        <UnpinNode v-if=\"isNodeSelected && isPinned\" />\n        <MapChangeLog/>\n        <button @click=\"signOut\">Sign Out</button>\n      </div>\n    </div>\n    <button v-else @click=\"signIn\">\n      Sign In\n    </button>\n  </div>\n</template>\n\n<script>\nimport { useStore } from \"@/store\";\nimport { computed } from \"vue\";\nimport { actions as userActions } from \"@/store/user\";\nimport PinNode from \"./PinNode\";\nimport AddPrecondition from \"./AddPrecondition\";\nimport AddNode from \"./AddNode\";\nimport RemoveNode from \"./RemoveNode\";\nimport EditMode from \"./EditMode\";\nimport UnpinNode from \"@/components/menu/UnpinNode\";\nimport CutPaste from \"@/components/menu/CutPaste\";\nimport Feedback from \"@/components/menu/Feedback\";\nimport TextSearch from \"@/components/menu/Textsearch\";\nimport MapChangeLog from \"@/components/menu/MapChangeLog\";\n\nexport default {\n  name: \"Menu\",\n  components: {\n    Feedback,\n    CutPaste,\n    UnpinNode,\n    PinNode,\n    AddNode,\n    AddPrecondition,\n    RemoveNode,\n    EditMode,\n    TextSearch,\n    MapChangeLog,\n  },\n  props: {\n    clickedTitleId: {\n      type: String,\n      required: true\n    }\n  },\n  setup() {\n    const store = useStore();\n    const user = store.state.user;\n\n    // user info\n    const email = computed(() => (user.user ? user.user.email : null));\n\n    return {\n      email,\n      editModeOn: computed(() => store.state.editModeOn),\n      isNodeSelected: computed(() => store.state.tree.selectedNodeId),\n      isPinned: computed(\n        () =>\n          store.state.pin.pins[store.state.tree.selectedNodeId] !== undefined\n      ),\n      // SignIn SignOut\n      signIn: () => store.dispatch(`user/${userActions.signIn}`),\n      signOut: () => store.dispatch(`user/${userActions.signOut}`)\n    };\n  }\n};\n</script>\n\n<style module>\n.wrapper {\n  position: fixed;\n  display: flex;\n  top: 0;\n  right: 0;\n  padding: 8px;\n  background-color: rgba(255, 255, 255, 0.2);\n}\n</style>\n","<template>\n  <button @mousedown.stop=\"toggleAddDialog\">pin</button>\n  <Dialog\n    v-model:visible=\"addDialogVisible\"\n    :dismissableMask=\"true\"\n    :closable=\"true\"\n    :modal=\"true\"\n    :closeOnEscape=\"true\"\n  >\n    <template #header>\n      <h3>\n        {{ `Choose parent from which pin will be visible` }}\n      </h3>\n    </template>\n\n    <Listbox v-model=\"selectedParent\" :options=\"parents\" optionLabel=\"title\" />\n\n    <template #footer>\n      <Button\n        label=\"No\"\n        icon=\"pi pi-times\"\n        class=\"p-button-text\"\n        @click=\"cancelAdd\"\n      />\n      <Button label=\"Yes\" icon=\"pi pi-check\" @click=\"add\" />\n    </template>\n  </Dialog>\n</template>\n\n<script>\nimport Dialog from \"primevue/dialog\";\nimport Button from \"primevue/button\";\nimport Listbox from \"primevue/listbox\";\nimport { useStore } from \"@/store\";\nimport { computed, ref } from \"vue\";\nimport { actions as pinActions } from \"@/store/pin\";\nimport api from \"@/api/api\";\n\nexport default {\n  name: \"PinNode\",\n  components: {\n    Dialog,\n    Button,\n    Listbox\n  },\n  setup() {\n    const store = useStore();\n    const treeState = store.state.tree;\n    const addDialogVisible = ref(false);\n    const selectedParent = ref(false);\n    const selectedNode = computed(() => store.getters[\"tree/selectedNode\"]);\n    const newNodeTitle = ref(\"\");\n    const parents = computed(() => {\n      const selectedNodeParents = [];\n      let currentParent = treeState.nodeRecord[treeState.selectedNodeId].parent;\n      while (treeState.nodeRecord[currentParent.id].parent) {\n        selectedNodeParents.push({\n          title: currentParent.title,\n          id: currentParent.id\n        });\n        currentParent = treeState.nodeRecord[currentParent.id].parent;\n      }\n      selectedNodeParents.push({ title: \"root\", id: 0 });\n      return selectedNodeParents;\n    });\n\n    return {\n      toggleAddDialog: () => {\n        addDialogVisible.value = !addDialogVisible.value;\n      },\n      selectedParent,\n      parents,\n      add: () => {\n        addDialogVisible.value = false;\n        store.dispatch(`pin/${pinActions.AddPin}`, {\n          parentId: selectedParent.value.id,\n          nodeId: selectedNode.value.id\n        });\n        api.savePins(store.state.user.user, store.state.pin.pins);\n        selectedParent.value = null;\n      },\n      cancelAdd: () => {\n        addDialogVisible.value = false;\n      },\n      addDialogVisible,\n      newNodeTitle\n    };\n  }\n};\n</script>\n","import { render } from \"./PinNode.vue?vue&type=template&id=4dea212a\"\nimport script from \"./PinNode.vue?vue&type=script&lang=js\"\nexport * from \"./PinNode.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\n  <button @click=\"showAddBanner\">Add precondition</button>\n  <Dialog\n    v-model:visible=\"addBannerVisible\"\n    :dismissableMask=\"false\"\n    :closable=\"true\"\n    :modal=\"false\"\n    :closeOnEscape=\"true\"\n    @mousedown.stop\n  >\n    <template #header>\n      <h3>\n        Set \"{{\n          preconditionNode.title\n            ? preconditionNode.title\n            : selectedNode\n            ? selectedNode.title\n            : \"\"\n        }}\" as precondition for \"{{ targetNode ? targetNode.title : \"\" }}\"\n      </h3>\n    </template>\n\n    <template #footer>\n      <Button\n        label=\"Cancel\"\n        icon=\"pi pi-times\"\n        class=\"p-button-text\"\n        @click=\"cancelAdd\"\n      />\n      <Button label=\"Done\" icon=\"pi pi-check\" @click=\"add\" />\n    </template>\n  </Dialog>\n</template>\n\n<script>\nimport Dialog from \"primevue/dialog\";\nimport Button from \"primevue/button\";\nimport { useStore } from \"@/store\";\nimport { computed, ref, watch } from \"vue\";\nimport api from \"@/api/api\";\n\nexport default {\n  name: \"AddPrecondition\",\n  components: {\n    Dialog,\n    Button\n  },\n  emits: [\"select-precondition-is-on\", \"select-precondition-is-off\"],\n  props: {\n    clickedTitleId: {\n      type: String,\n      required: true\n    }\n  },\n  setup(props, ctx) {\n    const store = useStore();\n    const addBannerVisible = ref(false);\n    const targetNode = ref({}); // node where precondition must be added\n    const preconditionNode = ref({}); // node where precondition must be added\n    const selectedNode = computed(() => store.getters[\"tree/selectedNode\"]); // current selected node\n\n    watch(\n      () => props.clickedTitleId,\n      () => {\n        if (\n          props.clickedTitleId !== \"-1\" &&\n          store.state.tree.nodeRecord[props.clickedTitleId]\n        ) {\n          preconditionNode.value =\n            store.state.tree.nodeRecord[props.clickedTitleId].node;\n        }\n      },\n      { immediate: true }\n    );\n\n    return {\n      showAddBanner: () => {\n        ctx.emit(\"select-precondition-is-on\");\n        targetNode.value = store.getters[\"tree/selectedNode\"];\n        addBannerVisible.value = !addBannerVisible.value;\n      },\n      add: () => {\n        let preconditionsIDs = []\n        if (store.state.precondition.preconditions[targetNode.value.id]) {\n          preconditionsIDs = store.state.precondition.preconditions[targetNode.value.id];\n        }\n        preconditionsIDs.push(preconditionNode.value.id);\n\n        api.savePreconditions(store.state.user.user, {\n          nodeId: targetNode.value.id,\n          preconditionIds: preconditionsIDs,\n        });\n        ctx.emit(\"select-precondition-is-off\");\n        addBannerVisible.value = false;\n        preconditionNode.value = {};\n      },\n      cancelAdd: () => {\n        addBannerVisible.value = false;\n        preconditionNode.value = {};\n        ctx.emit(\"select-precondition-is-off\");\n      },\n      addBannerVisible,\n      targetNode,\n      preconditionNode,\n      selectedNode\n    };\n  }\n};\n</script>\n","import { render } from \"./AddPrecondition.vue?vue&type=template&id=0471ead3\"\nimport script from \"./AddPrecondition.vue?vue&type=script&lang=js\"\nexport * from \"./AddPrecondition.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\n  <button @click=\"toggleAddDialog\">+</button>\n  <Dialog\n    v-model:visible=\"addDialogVisible\"\n    :dismissableMask=\"true\"\n    :closable=\"true\"\n    :modal=\"true\"\n    :closeOnEscape=\"true\"\n    @mousedown.stop\n  >\n    <template #header>\n      <h3>\n        {{\n          selectedNodeTitle\n            ? `Add subsection to ${selectedNodeTitle}`\n            : `Add section`\n        }}\n      </h3>\n    </template>\n\n    <Input type=\"text\" v-model=\"newNodeTitle\" />\n\n    <template #footer>\n      <Button\n        label=\"No\"\n        icon=\"pi pi-times\"\n        class=\"p-button-text\"\n        @click=\"cancelAdd\"\n      />\n      <Button label=\"Yes\" icon=\"pi pi-check\" @click=\"add\" />\n    </template>\n  </Dialog>\n</template>\n\n<script>\nimport Dialog from \"primevue/dialog\";\nimport Button from \"primevue/button\";\nimport Input from \"primevue/inputtext\";\nimport { useStore } from \"@/store\";\nimport { computed, ref } from \"vue\";\nimport { actions } from \"@/store\";\nimport { mutations as positionChangePermitMutations } from \"@/store/position_change_permits\";\n\nexport default {\n  name: \"AddNode\",\n  components: {\n    Dialog,\n    Button,\n    Input\n  },\n  setup() {\n    const store = useStore();\n    const addDialogVisible = ref(false);\n    const selectedNode = computed(() => store.getters[\"tree/selectedNode\"]);\n    const newNodeTitle = ref(\"\");\n\n    return {\n      selectedNodeTitle: computed(() =>\n        selectedNode.value ? selectedNode.value.title : \"\"\n      ),\n      toggleAddDialog: () => (addDialogVisible.value = !addDialogVisible.value),\n      add: async () => {\n        const newNodeID = await store.dispatch(`${actions.createNode}`, {\n          parentID: selectedNode.value ? selectedNode.value.id : 0,\n          title: newNodeTitle.value\n        });\n        store.commit(\n            `positionChangePermits/${positionChangePermitMutations.ADD_NODES}`,\n            [newNodeID, ...store.state.tree.nodeRecord[selectedNode.value.id].node.children.map((node)=>node.id)]\n        );\n        newNodeTitle.value = \"\";\n        addDialogVisible.value = false;\n      },\n      cancelAdd: () => {\n        newNodeTitle.value = \"\";\n        addDialogVisible.value = false;\n      },\n      addDialogVisible,\n      newNodeTitle\n    };\n  }\n};\n</script>\n","import { render } from \"./AddNode.vue?vue&type=template&id=6f142fb8\"\nimport script from \"./AddNode.vue?vue&type=script&lang=js\"\nexport * from \"./AddNode.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\n  <button @click=\"toggleDialog\" :disabled=\"!selectedNodeTitle\">-</button>\n  <Dialog\n    v-model:visible=\"addDialogVisible\"\n    :dismissableMask=\"true\"\n    :closable=\"true\"\n    :modal=\"true\"\n    :closeOnEscape=\"true\"\n  >\n    <template #header>\n      <h3>\n        {{ `Remove ${selectedNodeTitle} and all its descendants?` }}\n      </h3>\n    </template>\n\n    <template #footer>\n      <Button\n        label=\"No\"\n        icon=\"pi pi-times\"\n        class=\"p-button-text\"\n        @click=\"cancel\"\n      />\n      <Button label=\"Yes\" icon=\"pi pi-check\" @click=\"remove\" />\n    </template>\n  </Dialog>\n</template>\n\n<script>\nimport Dialog from \"primevue/dialog\";\nimport Button from \"primevue/button\";\nimport { useStore } from \"@/store\";\nimport { computed, ref } from \"vue\";\nimport { actions } from \"@/store\";\nimport {mutations as positionChangePermitMutations} from \"@/store/position_change_permits\";\n\nexport default {\n  name: \"RemoveNode\",\n  components: {\n    Dialog,\n    Button\n  },\n  setup() {\n    const store = useStore();\n    const addDialogVisible = ref(false);\n    const selectedNode = computed(() => store.getters[\"tree/selectedNode\"]);\n\n    return {\n      selectedNodeTitle: computed(() =>\n        selectedNode.value ? selectedNode.value.title : \"\"\n      ),\n      toggleDialog: () => (addDialogVisible.value = !addDialogVisible.value),\n      remove: () => {\n        addDialogVisible.value = false;\n        store.dispatch(`${actions.removeNode}`, selectedNode.value.id);\n        store.commit(\n            `positionChangePermits/${positionChangePermitMutations.ADD_NODES}`,\n            store.state.tree.nodeRecord[selectedNode.value.id].parent.children.map((node)=>node.id)\n        );\n      },\n      cancel: () => {\n        addDialogVisible.value = false;\n      },\n      addDialogVisible\n    };\n  }\n};\n</script>\n","import { render } from \"./RemoveNode.vue?vue&type=template&id=4744c89a\"\nimport script from \"./RemoveNode.vue?vue&type=script&lang=js\"\nexport * from \"./RemoveNode.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\n  <button v-if=\"editModeOn\" @click=\"off\">Back to view mode</button>\n  <button v-if=\"!editModeOn\" @click=\"on\">Edit Map</button>\n</template>\n\n<script>\nimport { actions, useStore } from \"@/store\";\nimport { computed } from \"vue\";\n\nexport default {\n  name: \"EditMode\",\n  setup() {\n    const store = useStore();\n\n    return {\n      editModeOn: computed(() => store.state.editModeOn),\n      on: () => {\n        store.dispatch(`${actions.setEditMode}`, true);\n      },\n      off: () => {\n        store.dispatch(`${actions.setEditMode}`, false);\n      }\n    };\n  }\n};\n</script>\n","import { render } from \"./EditMode.vue?vue&type=template&id=8541d8a2\"\nimport script from \"./EditMode.vue?vue&type=script&lang=js\"\nexport * from \"./EditMode.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\n  <button @click=\"unpin\">unpin</button>\n</template>\n\n<script>\nimport { useStore } from \"@/store\";\nimport { actions as pinActions } from \"@/store/pin\";\nimport api from \"@/api/api\";\n\nexport default {\n  name: \"UnpinNode\",\n  setup() {\n    const store = useStore();\n\n    return {\n      unpin: () => {\n        store.dispatch(\n          `pin/${pinActions.RemovePin}`,\n          store.state.tree.selectedNodeId\n        );\n        api.savePins(store.state.user.user, store.state.pin.pins);\n      }\n    };\n  }\n};\n</script>\n","import { render } from \"./UnpinNode.vue?vue&type=template&id=44539b10\"\nimport script from \"./UnpinNode.vue?vue&type=script&lang=js\"\nexport * from \"./UnpinNode.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\n  <button @click=\"cut\">cut</button>\n  <button v-if=\"cutNodeID != null\" @click=\"paste\">Paste</button>\n</template>\n\n<script>\nimport { useStore } from \"@/store\";\nimport { computed, ref } from \"vue\";\nimport { actions } from \"@/store\";\nimport {mutations as positionChangePermitMutations} from \"@/store/position_change_permits\";\n\nexport default {\n  name: \"CutPaste\",\n  setup() {\n    const store = useStore();\n    const selectedNode = computed(() => store.getters[\"tree/selectedNode\"]);\n    const cutNodeID = ref(null);\n\n    return {\n      cutNodeID,\n      cut: () => {\n        cutNodeID.value = selectedNode.value.id;\n      },\n      paste: () => {\n        // permit to move children of both new and old parents\n        const oldParentChildrenID = store.state.tree.nodeRecord[cutNodeID.value].parent.children.map((node)=>node.id)\n        const newParentChildrenID = store.state.tree.nodeRecord[selectedNode.value.id].node.children.map((node)=>node.id)\n        store.commit(\n            `positionChangePermits/${positionChangePermitMutations.ADD_NODES}`,\n            [...oldParentChildrenID, ...newParentChildrenID]\n        );\n\n        // do cut and paste of node\n        store.dispatch(`${actions.cutPasteNode}`, {\n          nodeID: cutNodeID.value,\n          parentID: selectedNode.value.id\n        });\n\n        cutNodeID.value = null;\n      }\n    };\n  }\n};\n</script>\n","import { render } from \"./CutPaste.vue?vue&type=template&id=1441981c\"\nimport script from \"./CutPaste.vue?vue&type=script&lang=js\"\nexport * from \"./CutPaste.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\n  <Button iconPos=\"right\" @click=\"send\">\n    <img\n      alt=\"logo\"\n      src=\"../../assets/images/discord-icon-svgrepo-com.svg\"\n      style=\"width: 20px\"\n    />\n    <span class=\"p-ml-2 p-text-bold\">chat</span>\n  </Button>\n</template>\n\n<script>\nimport Button from \"primevue/button\";\n\nexport default {\n  name: \"Feedback\",\n  components: {\n    Button\n  },\n  setup() {\n    return {\n      send: () => {\n        window.open(\"https://discord.com/channels/1171118046543347782/1171118047105396749\", \"_blank\");\n      }\n    };\n  }\n};\n</script>\n","import { render } from \"./Feedback.vue?vue&type=template&id=7c94175f\"\nimport script from \"./Feedback.vue?vue&type=script&lang=js\"\nexport * from \"./Feedback.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\n  <InputText\n      placeholder=\"some text to search\"\n      @update:modelValue=\"doSearch($event)\"\n  />\n</template>\n\n<script lang=\"ts\">\nimport InputText from \"primevue/inputtext\";\nimport { search } from \"@/tools/textsearch\";\nimport { mutations as searchMutations } from \"@/store/search_result\";\nimport {actions, useStore} from \"@/store\";\n\nexport default {\n  name: \"TextSearch\",\n  components: {\n    InputText,\n  },\n\n  setup() {\n    const store = useStore();\n    return {\n      doSearch: async (value: string) => {\n        const res = await search(value)\n        store.commit(`searchResult/${searchMutations.SET_NODE_IDS}`, res);\n        return res\n      },\n    }\n  },\n}\n</script>\n\n<style module>\n\n</style>\n","\nimport InputText from \"primevue/inputtext\";\nimport { search } from \"@/tools/textsearch\";\nimport { mutations as searchMutations } from \"@/store/search_result\";\nimport {actions, useStore} from \"@/store\";\n\nexport default {\n  name: \"TextSearch\",\n  components: {\n    InputText,\n  },\n\n  setup() {\n    const store = useStore();\n    return {\n      doSearch: async (value: string) => {\n        const res = await search(value)\n        store.commit(`searchResult/${searchMutations.SET_NODE_IDS}`, res);\n        return res\n      },\n    }\n  },\n}\n","import { render } from \"./Textsearch.vue?vue&type=template&id=b5eff5ac\"\nimport script from \"./Textsearch.vue?vue&type=script&lang=ts\"\nexport * from \"./Textsearch.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\n  <button @click=\"toggleAddDialog\">Log</button>\n  <Dialog\n      v-model:visible=\"addDialogVisible\"\n      :dismissableMask=\"true\"\n      :closable=\"true\"\n      :modal=\"true\"\n      :closeOnEscape=\"true\"\n      @mousedown.stop\n  >\n    <template #header>\n      <h3>\n        Map change log\n      </h3>\n    </template>\n    <Card\n        v-for=\"(event, i) of changes\"\n        :key=\"i\"\n        class=\"mt-3\"\n    >\n      <template #title>\n        {{ (new Date(event.timestamp)).toLocaleDateString() }} {{ (new Date(event.timestamp)).toLocaleTimeString() }}\n      </template>\n      <template #subtitle>\n        {{ event.userDisplayName }}\n      </template>\n      <template #content>\n        <div v-html=\"getActionDescription(event)\"></div>\n      </template>\n    </Card>\n\n  </Dialog>\n</template>\n\n\n<script lang=\"ts\">\nimport Dialog from \"primevue/dialog\";\nimport {reactive, ref} from \"vue\";\nimport {ActionType, ChangeLogNodeParent} from \"@/store/change_log\";\nimport {subscribeChangeLogEnriched} from \"@/api/change_log\";\nimport Card from \"primevue/card\";\n\nexport default {\n  name: \"MapChangeLog\",\n  components: {\n    Card,\n    Dialog,\n  },\n  setup() {\n    const addDialogVisible = ref(false);\n    const changes = reactive([]) as Array<ChangeLogNodeParent>\n    subscribeChangeLogEnriched([ActionType.ParentID], [], (changeLogs)=>{\n      changes.splice(0, changes.length, ...changeLogs as Array<ChangeLogNodeParent>)\n    })\n    return {\n      toggleAddDialog: () => (addDialogVisible.value = !addDialogVisible.value),\n      addDialogVisible,\n      changes,\n      getActionDescription: (event: ChangeLogNodeParent): string => {\n        if (event.isAdded) {\n          return `node <a target=\"_blank\" href=\"/node_description/${event.nodeID}\">${event.nodeName}</a> was added to <a target=\"_blank\" href=\"/node_description/${event.parentNodeIDAfter}\">${event.parentNodeAfterName}</a>`\n        }\n        if (event.isRemoved) {\n          return `node <a target=\"_blank\" href=\"/node_description/${event.nodeID}\">${event.nodeName}</a> was removed from <a target=\"_blank\" href=\"/node_description/${event.parentNodeIDBefore}\">${event.parentNodeBeforeName}</a>`\n        }\n\n        return `node <a target=\"_blank\" href=\"/node_description/${event.nodeID}\">${event.nodeName}</a> was moved from <a target=\"_blank\" href=\"/node_description/${event.parentNodeIDBefore}\">${event.parentNodeBeforeName}</a> to <a target=\"_blank\" href=\"/node_description/${event.parentNodeIDAfter}\">${event.parentNodeAfterName}</a>`\n      },\n    }\n  }\n}\n</script>\n","\nimport Dialog from \"primevue/dialog\";\nimport {reactive, ref} from \"vue\";\nimport {ActionType, ChangeLogNodeParent} from \"@/store/change_log\";\nimport {subscribeChangeLogEnriched} from \"@/api/change_log\";\nimport Card from \"primevue/card\";\n\nexport default {\n  name: \"MapChangeLog\",\n  components: {\n    Card,\n    Dialog,\n  },\n  setup() {\n    const addDialogVisible = ref(false);\n    const changes = reactive([]) as Array<ChangeLogNodeParent>\n    subscribeChangeLogEnriched([ActionType.ParentID], [], (changeLogs)=>{\n      changes.splice(0, changes.length, ...changeLogs as Array<ChangeLogNodeParent>)\n    })\n    return {\n      toggleAddDialog: () => (addDialogVisible.value = !addDialogVisible.value),\n      addDialogVisible,\n      changes,\n      getActionDescription: (event: ChangeLogNodeParent): string => {\n        if (event.isAdded) {\n          return `node <a target=\"_blank\" href=\"/node_description/${event.nodeID}\">${event.nodeName}</a> was added to <a target=\"_blank\" href=\"/node_description/${event.parentNodeIDAfter}\">${event.parentNodeAfterName}</a>`\n        }\n        if (event.isRemoved) {\n          return `node <a target=\"_blank\" href=\"/node_description/${event.nodeID}\">${event.nodeName}</a> was removed from <a target=\"_blank\" href=\"/node_description/${event.parentNodeIDBefore}\">${event.parentNodeBeforeName}</a>`\n        }\n\n        return `node <a target=\"_blank\" href=\"/node_description/${event.nodeID}\">${event.nodeName}</a> was moved from <a target=\"_blank\" href=\"/node_description/${event.parentNodeIDBefore}\">${event.parentNodeBeforeName}</a> to <a target=\"_blank\" href=\"/node_description/${event.parentNodeIDAfter}\">${event.parentNodeAfterName}</a>`\n      },\n    }\n  }\n}\n","import { render } from \"./MapChangeLog.vue?vue&type=template&id=454cebc1\"\nimport script from \"./MapChangeLog.vue?vue&type=script&lang=ts\"\nexport * from \"./MapChangeLog.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","import { render } from \"./Index.vue?vue&type=template&id=caef8148\"\nimport script from \"./Index.vue?vue&type=script&lang=js\"\nexport * from \"./Index.vue?vue&type=script&lang=js\"\n\nconst cssModules = script.__cssModules = {}\nimport style0 from \"./Index.vue?vue&type=style&index=0&id=caef8148&module=true&lang=css\"\ncssModules[\"$style\"] = style0\nscript.render = render\n\nexport default script","\nimport { computed, defineComponent, ref, watch } from \"vue\";\nimport Map from \"@/components/map/Map.vue\";\nimport NodeContent from \"@/components/node_content/Index.vue\";\nimport ConfirmDialog from \"primevue/confirmdialog\";\nimport Toast from \"primevue/toast\";\nimport {\n  EventClickNode,\n  EventDraggingBackground,\n  EventDraggingNode,\n  EventWheel\n} from \"@/components/map/Map.ts\";\nimport Menu from \"@/components/menu/Index.vue\";\nimport { useStore } from \"@/store\";\nimport { useRouter, useRoute, onBeforeRouteUpdate } from \"vue-router\";\nimport { mutations as treeMutations, NodeRecordItem } from \"@/store/tree\";\nimport { mutations as zoomPanMutations } from \"@/store/zoom_pan\";\nimport { actions } from \"@/store/\";\nimport {\n  filterNodesAndLayers,\n  findCentralNode,\n  zoomAndPanPoint,\n  zoomAnPanLayers\n} from \"@/views/Home\";\nimport { clone, printError } from \"@/tools/utils\";\nimport { MapNode } from \"@/types/graphics\";\nimport {findMapNode, findMapNodes} from \"@/store/tree/helpers\";\nimport {actions as positionChangePermitsActions} from \"@/store/position_change_permits\";\n\nexport default defineComponent({\n  name: \"Home\",\n\n  components: {\n    Map,\n    Menu,\n    NodeContent,\n    ConfirmDialog,\n    Toast\n  },\n\n  setup() {\n    const store = useStore();\n    const router = useRouter();\n    const route = useRoute();\n    const treeState = store.state.tree;\n    const zoomPanState = store.state.zoomPan;\n    const pinState = store.state.pin;\n    const searchResultState = store.state.searchResult;\n    const clickedTitleId = ref(\"-1\");\n    let selectPreconditionIsOn = false;\n    let titleOver = false;\n\n    // Set node from URL as selected\n    watch(\n      () => route.params.id,\n      () => {\n        store.commit(\n          `tree/${treeMutations.SET_SELECTED_NODE_ID}`,\n          route.params.id\n        );\n      },\n      { immediate: true }\n    );\n\n    /**\n     * compute svg viewBox\n     */\n    const viewBox = computed(() => {\n      if (treeState.mapNodeLayers && treeState.mapNodeLayers.length) {\n        return `0 0 ${2 * treeState.mapNodeLayers[0][\"0\"].center.x} ${2 *\n          treeState.mapNodeLayers[0][\"0\"].center.y}`;\n      } else {\n        return `0 0 1000 1000`;\n      }\n    });\n\n    /**\n     * From mapNodeLayers method updateLayers determines visibleLayers and nodes\n     * that will be shown to user (which is always just a small part of all nodes and visibleLayers of the map)\n     * @param centralNodeId\n     * @param mapNodeLayers\n     * @param nodeRecord\n     */\n    const updateLayers = (\n      centralNodeId: string,\n      mapNodeLayers: Array<Record<string, MapNode>>,\n      nodeRecord: Record<string, NodeRecordItem>\n    ): Array<Record<number, MapNode>> => {\n      // Вычленяем слои и узлы которые мы хотим показывать учитывая что текущий видимый узел это centralNodeId\n      const [filteredLayers, err] = filterNodesAndLayers(\n        mapNodeLayers,\n        nodeRecord,\n        centralNodeId\n      );\n      if (err) {\n        printError(\"Home.vue: error in filterNodesAndLayers:\", { err });\n        return [];\n      }\n      return filteredLayers.reverse();\n    };\n\n    const centralNodeId = ref<string | null>(null);\n    // visibleLayers consists only from user visible nodes and visibleLayers of all (which is treeState.mapNodeLayers)\n    const visibleLayers = ref<Array<Record<string, MapNode>>>([]);\n\n    // Ugly hack to determine first load of page\n    let isFirstPageLoad = true;\n    onBeforeRouteUpdate(async (to, from) => {\n      isFirstPageLoad = false\n    })\n    // If this is isFirstPageLoad then pan map to node in URL\n    watch(\n    () => [\n          treeState.mapNodeLayers,\n        ],\n    () => {\n      if (isFirstPageLoad && route.params.id.length > 0 && treeState.mapNodeLayers.length>0) {\n        const [firstNode] = findMapNode(route.params.id as string, treeState.mapNodeLayers)\n        if (firstNode != null) {\n          store.commit(\n              `zoomPan/${zoomPanMutations.SET_PAN}`,\n              {x: -firstNode.center.x + treeState.mapNodeLayers[0][\"0\"].center.x, y: -firstNode.center.y + treeState.mapNodeLayers[0][\"0\"].center.y},\n          );\n        }\n      }\n    })\n\n\n    // Determine which nodes to show based on current pan and zoom\n    watch(\n  () => [\n        treeState.mapNodeLayers,\n        zoomPanState.debouncedZoom,\n        zoomPanState.debouncedPan\n      ],\n      () => {\n        const [newCentralNodeId, err] = findCentralNode(\n          treeState.mapNodeLayers,\n          treeState.nodeRecord,\n          { width: window.innerWidth, height: window.innerHeight },\n          zoomPanState.debouncedZoom,\n          zoomPanState.pan,\n          zoomPanState.zoomCenter\n        );\n        if (err != null) {\n          printError(\"filterNodesAndLayers: error in findCurrentNode\", { err });\n        }\n\n        centralNodeId.value = newCentralNodeId;\n        visibleLayers.value = updateLayers(\n          newCentralNodeId,\n          treeState.mapNodeLayers,\n          treeState.nodeRecord\n        );\n      },\n      { immediate: true, deep: true }\n    );\n\n    const visibleZoomedPanedLayers = ref<Array<Record<string, MapNode>>>([]);\n    watch(\n      () => [zoomPanState.pan.x, zoomPanState.pan.y, zoomPanState.zoom, visibleLayers],\n      () => {\n        // visibleLayers это всегда слои с zoom=1 и pan={0, 0} состоящий из только видимых прямо сейчас элементов.\n        // Мы применяем к этому объекту текущий zoomPanState но сам эталон не трогаем, поэтому здесь clone\n        // Это не дорогая операция так как visibleLayers всегда содержит небольшое кол-во элементов\n        // видимых только прямо сейчас\n        const layersToZoomAndPan = clone(visibleLayers.value);\n        visibleZoomedPanedLayers.value = zoomAnPanLayers(\n          layersToZoomAndPan,\n          zoomPanState.zoom,\n          zoomPanState.pan\n        );\n      },\n      { immediate: true, deep: true }\n    );\n\n    return {\n      /**\n       * pinNodes\n       */\n      pinNodes: computed(() => {\n        if (centralNodeId.value == null) {\n          return [];\n        }\n        const pinNodeIDs = pinState.pinsReverse[centralNodeId.value];\n        if (!pinNodeIDs) {\n          return [];\n        }\n\n        // remove pins that already exists on visibleLayers\n        for (const layer of visibleLayers.value) {\n          for (const nodeID in layer) {\n            const node = layer[nodeID];\n            if (node.title != \"\") {\n              const ind = pinNodeIDs.indexOf(node.id);\n              if (ind != -1) {\n                pinNodeIDs.splice(ind, 1);\n              }\n            }\n          }\n        }\n\n        const pinMapNodes = findMapNodes(pinNodeIDs, treeState.mapNodeLayers);\n        const result = [];\n        for (const pinMapNode of pinMapNodes) {\n          const cl = clone(pinMapNode);\n          cl.center = zoomAndPanPoint(\n            pinMapNode.center,\n            zoomPanState.zoom,\n            zoomPanState.pan\n          );\n          result.push(cl);\n        }\n\n        return result;\n      }),\n\n      /**\n       * searchResultNodeIDs\n       */\n      searchResultNodeIDs: computed(()=>{\n        return searchResultState.nodeIDs\n      }),\n\n      /**\n       * searchResultPinNodes\n       */\n      searchResultPinNodes: computed(() => {\n        if (centralNodeId.value == null) {\n          return [];\n        }\n        const searchResultNodeIDs = clone(searchResultState.nodeIDs);\n        if (!searchResultNodeIDs) {\n          return [];\n        }\n\n        // remove pins that already exists on visibleLayers\n        for (const layer of visibleLayers.value) {\n          for (const nodeID in layer) {\n            const node = layer[nodeID];\n            if (node.title != \"\") {\n              const ind = searchResultNodeIDs.indexOf(node.id);\n              if (ind != -1) {\n                searchResultNodeIDs.splice(ind, 1);\n              }\n            }\n          }\n        }\n\n        const searchResultMapNodes = findMapNodes(searchResultNodeIDs, treeState.mapNodeLayers);\n        const result = [];\n        for (const searchResultMapNode of searchResultMapNodes) {\n          const cl = clone(searchResultMapNode);\n          cl.center = zoomAndPanPoint(\n            searchResultMapNode.center,\n            zoomPanState.zoom,\n            zoomPanState.pan\n          );\n          result.push(cl);\n        }\n\n        return result;\n      }),\n\n      viewBox,\n      editModeOn: computed(() => store.state.editModeOn),\n      selectedNodeId: computed(() => treeState.selectedNodeId),\n      selectedNodePreconditionIds: computed(() =>\n        treeState.selectedNodeId\n          ? store.state.precondition.preconditions[treeState.selectedNodeId]\n          : []\n      ),\n      visibleZoomedPanedLayers: visibleZoomedPanedLayers,\n      nodeDragging: async (e: EventDraggingNode) => {\n        const hasDragPermit = await store.dispatch(`positionChangePermits/${positionChangePermitsActions.CheckNodeID}`, e.id);\n        if (!hasDragPermit) {\n          return\n        }\n        await store.dispatch(`${actions.updateNodePosition}`, {\n          nodeId: e.id,\n          delta: {\n            x: e.delta.x / zoomPanState.zoom,\n            y: e.delta.y / zoomPanState.zoom\n          }\n        });\n      },\n      setSelectPreconditionON: () => {\n        selectPreconditionIsOn = true;\n      },\n      setSelectPreconditionOFF: () => {\n        selectPreconditionIsOn = false;\n      },\n      clickedTitleId,\n      titleClick: (e: EventClickNode) => {\n        if (!selectPreconditionIsOn) {\n          router.push({ name: \"node\", params: { id: e.id } });\n        } else {\n          clickedTitleId.value = e.id;\n        }\n      },\n      titleOver: (e: EventClickNode) => {\n        titleOver = true\n        store.commit(`tree/${treeMutations.SET_SELECTED_NODE_ID}`, e.id);\n      },\n      titleLeave: (e: EventClickNode) => {\n        titleOver = false\n        store.commit(\n          `tree/${treeMutations.SET_SELECTED_NODE_ID}`,\n          route.params.id\n        );\n      },\n      mapDragging: (event: EventDraggingBackground) => {\n        if (store.state.editModeOn && titleOver) {\n          // to prevent pan while node position editing ( = title dragging in edit mode)\n          return\n        }\n        store.commit(`zoomPan/${zoomPanMutations.ADD_PAN}`, event);\n      },\n      zoom: (event: EventWheel) => {\n        // initial value of center (when root.border == viewport)\n        const initial = {\n          x: (event.center.x - zoomPanState.pan.x) / zoomPanState.zoom,\n          y: (event.center.y - zoomPanState.pan.y) / zoomPanState.zoom\n        };\n        store.commit(`zoomPan/${zoomPanMutations.ADD_ZOOM}`, -1 * event.delta);\n        const after = {\n          x: initial.x * zoomPanState.zoom + zoomPanState.pan.x,\n          y: initial.y * zoomPanState.zoom + zoomPanState.pan.y\n        };\n        store.commit(`zoomPan/${zoomPanMutations.ADD_PAN}`, {\n          from: after,\n          to: event.center\n        });\n        store.commit(\n          `zoomPan/${zoomPanMutations.SET_ZOOM_CENTER}`,\n          event.center\n        );\n      }\n    };\n  }\n});\n","import { render } from \"./Home.vue?vue&type=template&id=501fbe91\"\nimport script from \"./Home.vue?vue&type=script&lang=ts\"\nexport * from \"./Home.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\n  <h1 v-if=\"!isAuthorized\">Only authorized users can view changes</h1>\n  <div v-else>\n    <div><b>id:</b> {{route.params.id}}</div>\n    <div><b>timestamp:</b> {{ (new Date(change['timestamp'])).toLocaleDateString() }} {{ (new Date(change['timestamp'])).toLocaleTimeString() }}</div>\n    <div><b>action:</b> {{change['action']}}</div>\n    <div><b>node_id:</b> {{change['node_id']}}</div>\n    <div><b>user_id:</b> {{change['user_id']}}</div>\n    <b>value:</b>\n    <Markdown\n        v-if=\"['content', 'name'].indexOf(change['action']) != -1\"\n        :content = \"change['attributes']['value']\"\n        :rows=\"20\"\n    />\n    <div v-else>{{JSON.stringify(change['attributes'])}}</div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { useRoute } from 'vue-router'\nimport { useStore } from \"@/store\";\nimport { computed, watch, ref } from \"vue\";\nimport { doc, getDoc, getFirestore } from \"firebase/firestore\";\nimport Markdown from \"@/components/node_content/Markdown.vue\";\n\nexport default {\n  name: \"Change\",\n  components: {Markdown},\n\n  setup() {\n    const store = useStore();\n    const isAuthorized = computed(() => (store.state.user.user && !store.state.user.user.isAnonymous));\n    const route = useRoute()\n    const change = ref({})\n\n    watch(\n        () => isAuthorized.value,\n        async () => {\n          if (isAuthorized.value) {\n            // fetch change from firestore\n            const docRef = doc(getFirestore(), \"changes\", route.params.id as string);\n            const docSnap = await getDoc(docRef);\n\n            if (docSnap.exists()) {\n              change.value = docSnap.data()\n            }\n          }\n        },\n        {\n          immediate: true\n        }\n    )\n\n\n    return {\n      isAuthorized,\n      route,\n      change,\n    }\n  }\n}\n</script>\n","\nimport { useRoute } from 'vue-router'\nimport { useStore } from \"@/store\";\nimport { computed, watch, ref } from \"vue\";\nimport { doc, getDoc, getFirestore } from \"firebase/firestore\";\nimport Markdown from \"@/components/node_content/Markdown.vue\";\n\nexport default {\n  name: \"Change\",\n  components: {Markdown},\n\n  setup() {\n    const store = useStore();\n    const isAuthorized = computed(() => (store.state.user.user && !store.state.user.user.isAnonymous));\n    const route = useRoute()\n    const change = ref({})\n\n    watch(\n        () => isAuthorized.value,\n        async () => {\n          if (isAuthorized.value) {\n            // fetch change from firestore\n            const docRef = doc(getFirestore(), \"changes\", route.params.id as string);\n            const docSnap = await getDoc(docRef);\n\n            if (docSnap.exists()) {\n              change.value = docSnap.data()\n            }\n          }\n        },\n        {\n          immediate: true\n        }\n    )\n\n\n    return {\n      isAuthorized,\n      route,\n      change,\n    }\n  }\n}\n","import { render } from \"./Change.vue?vue&type=template&id=010c97a2\"\nimport script from \"./Change.vue?vue&type=script&lang=ts\"\nexport * from \"./Change.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\n  <h1 v-if=\"!isAuthorized\">Only authorized users can view node profile</h1>\n  <div v-else>\n    <div><b>id:</b> {{route.params.id}}</div>\n    <div><b>is removed from map:</b> {{node['is_in_trash']}}</div>\n    <div><b>parent_id:</b> <a target=\"_blank\" :href=\"node['map']['parentID']\">{{node['map']['parentID']}}</a> </div>\n    <div><b>name:</b> {{node['map']['name']}}</div>\n    <b>content:</b>\n    <Markdown\n        :content = \"node['node_content'] ? node['node_content']['content'] : ''\"\n        :rows=\"20\"\n    />\n    <div><b>precondition:</b>\n      <div v-for=\"id of node['precondition']\" :key=\"id\">\n        <a target=\"_blank\" :href=\"id\">{{id}}</a>\n      </div>\n    </div>\n    <div><b>children:</b>\n      <div v-for=\"id of node['map']['children']\" :key=\"id\">\n        <a target=\"_blank\" :href=\"id\">{{id}}</a>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { useRoute } from 'vue-router'\nimport { useStore } from \"@/store\";\nimport { computed, watch, ref } from \"vue\";\nimport Markdown from \"@/components/node_content/Markdown.vue\";\nimport firebase from \"firebase/compat\";\n\nexport default {\n  name: \"NodeDescription\",\n  components: {Markdown},\n\n  setup() {\n    const store = useStore();\n    const isAuthorized = computed(() => (store.state.user.user && !store.state.user.user.isAnonymous));\n    const route = useRoute()\n    const node = ref({} as any)\n\n    watch(\n        () => isAuthorized.value,\n        async () => {\n          console.log(\"isAuthorized.value\", isAuthorized.value)\n          if (isAuthorized.value) {\n            // fetch change from firestore\n            const docRef = firebase.database().ref(`/trash/${route.params.id}`).\n            once('value', (data) => {\n              if (data.exists()) {\n                node.value = data.val()\n                node.value['is_in_trash'] = true;\n                console.log(\"node.value\", node.value)\n              } else {\n                // not in /trash, try to get from /map, /node_content, /precondition\n                node.value['is_in_trash'] = false\n\n                // map\n                firebase.database().ref(`/map/${route.params.id}`).\n                once('value', (data) => {\n                  if (data.exists()) {\n                    node.value['map'] = data.val()\n                  }\n                })\n\n                // node_content\n                firebase.database().ref(`/node_content/${route.params.id}`).\n                once('value', (data) => {\n                  if (data.exists()) {\n                    node.value['node_content'] = data.val()\n                  }\n                })\n\n                // precondition\n                firebase.database().ref(`/precondition/${route.params.id}`).\n                once('value', (data) => {\n                  if (data.exists()) {\n                    node.value['precondition'] = data.val()\n                  }\n                })\n              }\n            });\n          }\n        },\n        {\n          immediate: true\n        }\n    )\n\n\n    return {\n      isAuthorized: isAuthorized,\n      route,\n      node,\n    }\n  }\n}\n</script>\n","\nimport { useRoute } from 'vue-router'\nimport { useStore } from \"@/store\";\nimport { computed, watch, ref } from \"vue\";\nimport Markdown from \"@/components/node_content/Markdown.vue\";\nimport firebase from \"firebase/compat\";\n\nexport default {\n  name: \"NodeDescription\",\n  components: {Markdown},\n\n  setup() {\n    const store = useStore();\n    const isAuthorized = computed(() => (store.state.user.user && !store.state.user.user.isAnonymous));\n    const route = useRoute()\n    const node = ref({} as any)\n\n    watch(\n        () => isAuthorized.value,\n        async () => {\n          console.log(\"isAuthorized.value\", isAuthorized.value)\n          if (isAuthorized.value) {\n            // fetch change from firestore\n            const docRef = firebase.database().ref(`/trash/${route.params.id}`).\n            once('value', (data) => {\n              if (data.exists()) {\n                node.value = data.val()\n                node.value['is_in_trash'] = true;\n                console.log(\"node.value\", node.value)\n              } else {\n                // not in /trash, try to get from /map, /node_content, /precondition\n                node.value['is_in_trash'] = false\n\n                // map\n                firebase.database().ref(`/map/${route.params.id}`).\n                once('value', (data) => {\n                  if (data.exists()) {\n                    node.value['map'] = data.val()\n                  }\n                })\n\n                // node_content\n                firebase.database().ref(`/node_content/${route.params.id}`).\n                once('value', (data) => {\n                  if (data.exists()) {\n                    node.value['node_content'] = data.val()\n                  }\n                })\n\n                // precondition\n                firebase.database().ref(`/precondition/${route.params.id}`).\n                once('value', (data) => {\n                  if (data.exists()) {\n                    node.value['precondition'] = data.val()\n                  }\n                })\n              }\n            });\n          }\n        },\n        {\n          immediate: true\n        }\n    )\n\n\n    return {\n      isAuthorized: isAuthorized,\n      route,\n      node,\n    }\n  }\n}\n","import { render } from \"./NodeDescription.vue?vue&type=template&id=c2af5ca6\"\nimport script from \"./NodeDescription.vue?vue&type=script&lang=ts\"\nexport * from \"./NodeDescription.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\n  <h1>Oops, it looks like the page you're looking for doesn't exist.</h1>\n</template>\n","import { render } from \"./NotFound.vue?vue&type=template&id=600d9e34\"\nconst script = {}\nscript.render = render\n\nexport default script","import { createRouter, createWebHistory, RouteRecordRaw } from \"vue-router\";\nimport PasswordLogin from \"../views/PasswordLogin.vue\";\nimport Home from \"../views/Home.vue\";\nimport Change from \"../views/Change.vue\";\nimport NodeDescription from \"../views/NodeDescription.vue\";\nimport NotFound from \"../views/NotFound.vue\";\n\nconst routes: Array<RouteRecordRaw> = [\n  {\n    path: \"/passwordLogin\",\n    component: PasswordLogin\n  },\n  {\n    path: \"/node_description/:id?\",\n    name: \"node_description\",\n    component: NodeDescription\n  },\n  {\n    path: \"/change/:id?\",\n    name: \"change\",\n    component: Change\n  },\n  {\n    path: \"/:id?\",\n    name: \"node\",\n    component: Home\n  },\n  {\n    path: \"/:catchAll(.*)\",\n    component: NotFound\n  }\n];\n\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n});\n\nexport default router;\n","import { createApp } from \"vue\";\nimport App from \"./App.vue\";\nimport PrimeVue from \"primevue/config\";\nimport ConfirmationService from \"primevue/confirmationservice\";\nimport ToastService from \"primevue/toastservice\";\nimport router from \"./router\";\nimport { store, key } from \"./store\";\n// primevue ui stuff\nimport \"primevue/resources/themes/saga-blue/theme.css\"; //theme\nimport \"primevue/resources/primevue.min.css\"; //core css\nimport \"primeicons/primeicons.css\"; //icons\nimport \"primeflex/primeflex.css\";\n\ncreateApp(App)\n  .use(store, key)\n  .use(router)\n  .use(PrimeVue)\n  .use(ConfirmationService)\n  .use(ToastService)\n  .mount(\"#app\");\n","var map = {\n\t\"./bmp\": \"0dcc\",\n\t\"./bmp.js\": \"0dcc\",\n\t\"./gif\": \"c416\",\n\t\"./gif.js\": \"c416\",\n\t\"./jpg\": \"135b\",\n\t\"./jpg.js\": \"135b\",\n\t\"./png\": \"e9ef\",\n\t\"./png.js\": \"e9ef\",\n\t\"./psd\": \"520c\",\n\t\"./psd.js\": \"520c\",\n\t\"./svg\": \"b0bf\",\n\t\"./svg.js\": \"b0bf\",\n\t\"./tiff\": \"f270\",\n\t\"./tiff.js\": \"f270\",\n\t\"./webp\": \"cf1e\",\n\t\"./webp.js\": \"cf1e\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"cd50\";","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./MapLayer.vue?vue&type=style&index=0&id=83dcfebc&scoped=true&lang=css\""],"sourceRoot":""}