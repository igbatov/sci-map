{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/components/menu/Index.vue?9846","webpack:///./src/assets/images/telegram.svg","webpack:///./src/components/node_content/resources/Index.vue?120d","webpack:///./src/components/menu/Index.vue?8efc","webpack:///./src/components/map_layer/MapLayer.vue?4920","webpack:///./src/App.vue","webpack:///./src/store/pin/index.ts","webpack:///./src/store/precondition/index.ts","webpack:///./src/tools/errorkv.ts","webpack:///./src/tools/utils.ts","webpack:///./src/store/tree/helpers.ts","webpack:///./src/api/helpers.ts","webpack:///./src/api/api.ts","webpack:///./src/tools/graphics.ts","webpack:///./src/store/tree/index.ts","webpack:///./src/store/history/index.ts","webpack:///./src/store/zoom_pan/index.ts","webpack:///./src/store/user/index.ts","webpack:///./src/store/resources/index.ts","webpack:///./src/store/node_content/index.ts","webpack:///./src/store/helpers.ts","webpack:///./src/store/index.ts","webpack:///./src/App.vue?3acc","webpack:///./src/App.vue?dfb6","webpack:///./src/views/PasswordLogin.vue","webpack:///./src/views/PasswordLogin.vue?76a3","webpack:///./src/views/PasswordLogin.vue?e3c1","webpack:///./src/views/Home.vue","webpack:///./src/components/map/Map.vue","webpack:///./src/components/map_layer/MapLayer.vue","webpack:///./src/components/map_layer/MapLayer.ts","webpack:///./src/components/map_layer/MapLayer.vue?1431","webpack:///./src/components/map_layer/MapLayer.vue?0796","webpack:///./src/components/map/MapPan.ts","webpack:///./src/components/pin_layer/PinLayer.vue","webpack:///./src/components/pin_layer/PinMarker.vue","webpack:///./src/components/pin_layer/PinMarker.vue?bbb0","webpack:///./src/components/pin_layer/PinMarker.vue?9aa1","webpack:///./src/components/SVGTextBox.vue","webpack:///./src/components/SVGTextBox.ts","webpack:///./src/components/SVGTextBox.vue?ae08","webpack:///./src/components/SVGTextBox.vue?ec46","webpack:///./src/components/pin_layer/PinLayer.vue?738a","webpack:///./src/components/pin_layer/PinLayer.vue?8bd0","webpack:///./src/components/precondition_layer/PreconditionLayer.vue","webpack:///./src/components/precondition_layer/PreconditionArrow.vue","webpack:///./src/components/precondition_layer/PreconditionArrow.vue?e51e","webpack:///./src/components/precondition_layer/PreconditionArrow.vue?74c6","webpack:///./src/views/Home.ts","webpack:///./src/components/precondition_layer/PreconditionLayer.vue?6cdc","webpack:///./src/components/precondition_layer/PreconditionLayer.vue?73c2","webpack:///./src/components/map/Map.vue?b432","webpack:///./src/components/map/Map.vue?8505","webpack:///./src/components/node_content/Index.vue","webpack:///./src/components/node_content/resources/Index.vue","webpack:///./src/components/node_content/resources/AddResourceForm.vue","webpack:///./src/components/node_content/resources/AddResourceFormAutocomplete.vue","webpack:///./src/components/node_content/resources/AddResourceFormAutocomplete.vue?b1ce","webpack:///./src/components/node_content/resources/AddResourceFormAutocomplete.vue?c188","webpack:///./src/components/node_content/resources/AddResourceForm.vue?0bb2","webpack:///./src/components/node_content/resources/AddResourceForm.vue?28a5","webpack:///./src/components/node_content/resources/Index.vue?8423","webpack:///./src/components/node_content/resources/Index.vue?dcde","webpack:///./src/components/node_content/Preconditions.vue","webpack:///./src/components/node_content/Preconditions.vue?b5b4","webpack:///./src/components/node_content/Preconditions.vue?c4ee","webpack:///./src/components/node_content/Index.vue?70b7","webpack:///./src/components/node_content/Index.vue?1dc7","webpack:///./src/components/menu/Index.vue","webpack:///./src/components/menu/PinNode.vue","webpack:///./src/components/menu/PinNode.vue?ca8f","webpack:///./src/components/menu/AddPrecondition.vue","webpack:///./src/components/menu/AddPrecondition.vue?f83e","webpack:///./src/components/menu/AddNode.vue","webpack:///./src/components/menu/AddNode.vue?9c98","webpack:///./src/components/menu/RemoveNode.vue","webpack:///./src/components/menu/RemoveNode.vue?2cae","webpack:///./src/components/menu/EditMode.vue","webpack:///./src/components/menu/EditMode.vue?1f8e","webpack:///./src/components/menu/UnpinNode.vue","webpack:///./src/components/menu/UnpinNode.vue?d34c","webpack:///./src/components/menu/CutPaste.vue","webpack:///./src/components/menu/CutPaste.vue?91c8","webpack:///./src/components/menu/Feedback.vue","webpack:///./src/components/menu/Feedback.vue?098b","webpack:///./src/components/menu/Index.vue?075d","webpack:///./src/views/Home.vue?d5e7","webpack:///./src/views/Home.vue?ab8c","webpack:///./src/views/NotFound.vue","webpack:///./src/views/NotFound.vue?8fd3","webpack:///./src/router/index.ts","webpack:///./src/main.ts","webpack:///./src/components/node_content/Index.vue?db95"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","mutations","SET_PINS","ADD_TO_PINS","REMOVE_PIN","ADD_TO_PINS_REVERSE","actions","AddPin","RemovePin","namespaced","state","pins","pinsReverse","v","commit","rootState","currentParent","tree","nodeRecord","nodeId","parent","parentIds","id","parentId","pinId","index","indexOf","SET_PRECONDITIONS","ADD_TO_PRECONDITIONS","REMOVE_FROM_PRECONDITIONS","AddPrecondition","RemovePrecondition","preconditions","preconditionId","console","log","message","kv","code","err","Error","error","ROUND_EPSILON","mod","round","num","Math","pow","clone","printError","msg","kvArr","findMapNode","mapNodeLayers","level","layer","Number","findMapNodes","ids","createNewNode","title","center","position","wikipedia","resources","children","getNewNodeCenter","parentMapNode","fromCenterVectors","border","map","from","to","maxFromCenterVector","getVectorLength","x","y","maxDiagChild","maxDiagChildMapNode","maxDiagChildId","child","childMapNode","childId","getMaxDiagonal","childDiag","err1","maxDiag","err2","finalMaxDiag","newNodeCenter","vectorOnNumber","modifiedNode","updatePosition","item","convertPosition","normalizedPosition","node","layerLevel","treeToMapNodeLayers","ls","mergeMapNodeLayers","convertChildren","Array","isArray","filter","childID","sort","forEach","arr","toString","values","convertDBMapToTree","dbNodes","root","stack","pop","MAP_FROM_STORAGE","FUNCTION_DOMAIN","database","ref","update","debouncedUpdate","ROOT_WIDTH","ROOT_HEIGHT","ST_WIDTH","ST_HEIGHT","initFirebase","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","analytics","callFunction","method","params","currentUser","auth","getIdToken","idToken","a","response","e","getMapFromDB","snapshot","exists","val","getMapFromStorage","user","storage","uid","getDownloadURL","url","getMap","getPins","savePins","putString","btoa","unescape","encodeURIComponent","JSON","stringify","getPreconditions","savePreconditions","set","preconditionIds","subscribeNodeChange","nodeID","cb","this","subscribeDBChange","snap","unsubscribeNodeChange","off","path","on","unsubscribeDBChange","transaction","setNode","getNode","pr","generateKey","findKeyInList","orderByValue","equalTo","limitToFirst","findKeyOfChild","getResources","getUserComments","userID","nodeComment","getNodeContent","NORMALIZED_BORDER","api","sqrt","polygonToTurf","pp","point","isInside","polygon","polygonToPCPolygon","abs","intersect","p1","p2","np1","np2","cf","tp1","tp2","polygonIntersect","intersection","resultPolys","poly","resultPoly","getBoundingBorders","minX","reduce","previousValue","currentValue","minY","maxX","maxY","leftBottom","rightTop","getVoronoiCellsInSquare","centers","turfPoints","collection","cells","bbox","cellMap","features","cell","cellBorder","geometry","coordinates","getVoronoiCells","outerBorder","bb","res","BoundingBorders","intersections","polygonFill","selectedNodeId","currentNodeId","preconditionNodeIds","polygonFillOpacity","polygonToPath","join","treeToNodeRecord","transferToPoint","vector","addVector","b","bTransferred","aTr","transferPointOnVector","getVectorIntersection","v1","v2","x1","y1","x2","y2","x3","y3","x4","y4","denom","numeA","numeB","uA","uB","morphChildrenPoints","oldBorder","newBorder","oldPoints","oldCenterTf","newCenterTf","oldCenter","newCenter","maxDiameter","max","newPoints","oldPoint","centerToPoint","oldBorderIntersection","segment","newBorderIntersection","coeff","NewEmptyVector","diagonals","middle","maxDiagonal","diag","type","parentID","convertedPosition","morphedPositions","normalizedBorder","tmp","rootBorder","rootPosition","keys","treeLayers","lastTreeLayer","lastMapNodeLayer","newTreeLayer","newMapNodeLayer","treeNode","treeNodeChildren","denormalizedPosition","ch","recipientLayers","insertedLayers","startFromLevel","changeTypeEnum","XSkew","ROOT_BORDER","ROOT_CENTER","SET_SELECTED_NODE_ID","SET_TREE","UPDATE_NODE_POSITION","REMOVE_NODE","handleDBUpdate","getters","selectedNode","arg","dbNodeRecord","dbNode","oldDBNode","newChildren","includes","removedChildren","returnError","addedDBNode","toProcess","inProcessNode","childNode","ind","findIndex","ADD_ZOOM","ADD_PAN","SET_ZOOM_CENTER","zoomDebounce","debouncedZoom","panDebounce","debouncedPan","ZOOM_SENSITIVITY","PAN_SENSITIVITY","zoom","pan","zoomCenter","delta","SET_USER","signIn","signOut","signInWithPopup","GoogleAuthProvider","ADD_CUT_PASTE","ADD_CREATE","ADD_REMOVE","ADD_POSITION_CHANGE","changeTypes","CUT_PASTE","CREATE","REMOVE","POSITION_CHANGE","stableChangeList","localChangeList","change","newParentID","firstOldPosition","oldPosition","newPosition","SET_RESOURCES","ADD_TO_RESOURCES","find","getByID","str","resource","author","chapterName","doi","isbn","SET_CONTENTS","SET_USER_COMMENTS","SET_NODE_CONTENT","SET_NODE_COMMENT","REMOVE_NODE_RESOURCE","ADD_NODE_RESOURCE","setNodeContent","setNodeComment","removeNodeResource","addNodeResource","EmptyNodeContent","content","resourceIds","createContentIfNotExist","nodeContents","EmptyNodeComment","comment","createCommentIfNotExist","userNodeComments","resourceID","isAnonymous","fetchMap","fetchPins","fetchPreconditions","fetchResources","fetchNodeContents","nodeContent","userComments","fetchData","init","updateNodePosition","createNode","cutPasteNode","removeNode","setEditMode","addNewResource","confirmSignInPopup","SET_EDIT_MODE","SET_SUBSCRIBED_NODE_IDS","debouncedPositionSet","normalizedNewNodeCenter","editModeOn","subscribedNodeIDs","confirm","dispatch","require","header","acceptLabel","rejectLabel","accept","reject","rs","newKey","updateMap","onAuthStateChanged","changedNode","newDBNode","normalizedChangedCenter","oldParent","newParent","oldKey","removedAt","Date","now","parentNodeID","mapNode","args","oldNodeIDs","newNodeIDs","pin","precondition","zoomPan","history","useStore","setup","store","render","login","emailEl","document","getElementById","passwordEl","signInWithEmailAndPassword","show","clickedTitleId","setSelectPreconditionON","setSelectPreconditionOFF","layers","zoomedPanedLayers","viewBox","pin-nodes","pinNodes","nodeDragging","titleClick","titleOver","titleLeave","mapDragging","xmlns","mapID","map-nodes","border-color","font-size","map-id","draggingNode","pinNodeMouseDown","mapNodes","stroke","borderColor","fill","fill-opacity","stroke-width","points","pointer-events","TITLE_PREFIX","font-family","fontSize","font-weight","class","titleBox","alignment-baseline","width","height","titleMouseDown","cursor","mouseMoveListener","emit","event","mouseDownInfo","dragStart","movementX","movementY","mouseUpListener","nodeToTitleBox","nodes","titleIdPrefix","dom","getBoundingClientRect","mps","immediate","emits","props","mapId","String","required","validator","prop","ctx","titleMouseDownInfo","mouseMove","mouseUp","addEventListener","removeEventListener","methods","__scopeId","mouseDownBg","mouseDown","pinNodeMouseDownHandler","clientX","clientY","color","text","titleXY","line-height","max-char-per-line","titleBoxClick","nodeMouseDown","transform","WIDTH","HEIGHT","fontFamily","fontWeight","lines","line","lineHeight","splitLines","maxCharNum","words","split","currLine","nextLine","maxCharPerLine","components","SVGTextBox","PinMarker","PIN_MARKER_HEIGHT","PIN_MARKER_WIDTH","alignedXY","markerWidth","markerHeight","refX","refY","orient","markerId","marker-end","MIN_VISIBLE_NUM_IN_LAYER","zoomAndPanPoint","zoomAndPanPolygon","findCentralNode","viewport","zoomFactor","underCursorNodeId","viewportArea","nodesToCheck","borderToCheck","minDist","Infinity","nodeCenter","dist","underCursorNodeArea","floor","maxIntersectNodeId","filterNodesAndLayers","resultLayers","currentNode","upperLayer","firstLayer","secondLayer","childOfChild","thirdLayer","zoomAnPanLayers","PreconditionArrow","zoomPanState","zoomedPannedSelectedNode","PreconditionLayer","PinLayer","MapLayer","deltaY","placeholder","changeNodeTitle","$event","autoResize","rows","selectedNodeContent","changeContent","checkAuthorized","node-id","changeComment","resourceId","remove","icon","newFormShow","autoCompleteSelect","selectedType","options","typeOptions","optionLabel","optionValue","types","fields","field","for","placeholders","label","save","cancel","suggestions","filteredResources","modelValue","searchResource","selectResource","BRAND_NEW_RESOURCE","AutoComplete","query","chapterNumber","findPhrase","createdAt","updatedAt","InputText","AddResourceFormAutocomplete","Button","SelectButton","book","chapter","article","other","typeKeys","preventDefault","fieldID","el","AddResourceForm","directives","tooltip","TextArea","SectionResources","SectionPreconditions","Boolean","newContent","$style","wrapper","email","isNodeSelected","$emit","isPinned","toggleAddDialog","visible","addDialogVisible","dismissableMask","closable","modal","closeOnEscape","footer","cancelAdd","add","selectedParent","parents","Dialog","Listbox","treeState","newNodeTitle","selectedNodeParents","showAddBanner","addBannerVisible","preconditionNode","targetNode","selectedNodeTitle","Input","toggleDialog","disabled","unpin","cut","cutNodeID","paste","alt","src","style","iconPos","send","open","Feedback","CutPaste","UnpinNode","PinNode","AddNode","RemoveNode","EditMode","undefined","cssModules","__cssModules","Map","Menu","NodeContent","ConfirmDialog","Toast","router","route","pinState","selectPreconditionIsOn","updateLayers","centralNodeId","filteredLayers","reverse","innerWidth","innerHeight","newCentralNodeId","oldVisibleNodeIDs","newVisibleNodeIDs","deep","layersToZoomAndPan","pinNodeIDs","pinMapNodes","pinMapNode","cl","initial","after","script","routes","component","PasswordLogin","Home","NotFound","App","use","mount"],"mappings":"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","file":"js/app.02be0d85.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export { default } from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-0-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-0-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-0-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Index.vue?vue&type=style&index=0&id=7d80bcb9&module=true&lang=css\"; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-0-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-0-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-0-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Index.vue?vue&type=style&index=0&id=7d80bcb9&module=true&lang=css\"","module.exports = __webpack_public_path__ + \"img/telegram.4a3b25ac.svg\";","export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Index.vue?vue&type=style&index=0&id=70d44aa0&scoped=true&lang=css\"","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Index_wrapper_1nXRC\"};","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./MapLayer.vue?vue&type=style&index=0&id=f5f2b9d4&scoped=true&lang=css\"","<template>\n  <router-view />\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from \"vue\";\nimport { useStore, actions } from \"@/store\";\nexport default defineComponent({\n  setup() {\n    const store = useStore();\n    store.dispatch(actions.init);\n  }\n});\n</script>\n","import { Commit } from \"vuex\";\nimport { NodeRecordItem } from \"@/store/tree\";\n\nexport type Pins = Record<\n  string /* node_id of pinned node */,\n  string[] /* list of parents where this node_id is visible */\n>;\n\nexport interface State {\n  pins: Pins;\n  pinsReverse: Record<\n    string /* node_id of node where some pinned nodes must be visible */,\n    string[] /* array of pins (= node ids) that is visible in this node_id */\n  >;\n}\n\nexport const mutations = {\n  SET_PINS: \"SET_PINS\",\n  ADD_TO_PINS: \"ADD_TO_PINS\",\n  REMOVE_PIN: \"REMOVE_PIN\",\n  ADD_TO_PINS_REVERSE: \"ADD_TO_PINS_REVERSE\"\n};\n\nexport const actions = {\n  AddPin: \"AddPin\",\n  RemovePin: \"RemovePin\"\n};\n\nexport const store = {\n  namespaced: true,\n  state: {\n    pins: {},\n    pinsReverse: {}\n  },\n  actions: {\n    // had to use action instead of mutation to get access to rootState https://github.com/vuejs/vuex/issues/344\n    [actions.AddPin](\n      {\n        commit,\n        rootState\n      }: {\n        commit: Commit;\n        rootState: { tree: { nodeRecord: Record<string, NodeRecordItem> } };\n      },\n      v: { nodeId: string; parentId: string }\n    ) {\n      // get all parents of nodeId until parentID\n      let currentParent = rootState.tree.nodeRecord[v.nodeId].parent;\n      if (!currentParent) {\n        return;\n      }\n      const parentIds = [];\n      while (currentParent && currentParent.id != v.parentId) {\n        parentIds.push(currentParent.id);\n        currentParent = rootState.tree.nodeRecord[currentParent.id].parent;\n      }\n      parentIds.push(v.parentId);\n      // Set them to pins\n      commit(mutations.ADD_TO_PINS, { nodeId: v.nodeId, parentIds });\n\n      // And for each parent add pined node id to it\n      for (const parentId of parentIds) {\n        commit(mutations.ADD_TO_PINS_REVERSE, {\n          nodeId: parentId,\n          pinId: v.nodeId\n        });\n      }\n    },\n    [actions.RemovePin]({ commit }: { commit: Commit }, nodeId: string) {\n      commit(mutations.REMOVE_PIN, nodeId);\n    }\n  },\n  mutations: {\n    [mutations.SET_PINS](state: State, pins: Pins) {\n      state.pins = pins;\n      state.pinsReverse = {};\n      for (const pinId in pins) {\n        for (const parentId of pins[pinId]) {\n          if (!state.pinsReverse[parentId]) {\n            state.pinsReverse[parentId] = [];\n          }\n          state.pinsReverse[parentId].push(pinId);\n        }\n      }\n    },\n    [mutations.ADD_TO_PINS](\n      state: State,\n      v: { nodeId: string; parentIds: string[] }\n    ) {\n      state.pins[v.nodeId] = v.parentIds;\n    },\n    [mutations.ADD_TO_PINS_REVERSE](\n      state: State,\n      v: { nodeId: string; pinId: string }\n    ) {\n      if (!state.pinsReverse[v.nodeId]) {\n        state.pinsReverse[v.nodeId] = [];\n      }\n      state.pinsReverse[v.nodeId].push(v.pinId);\n    },\n    [mutations.REMOVE_PIN](state: State, nodeId: string) {\n      for (const parentId of state.pins[nodeId]) {\n        const index = state.pinsReverse[parentId].indexOf(nodeId);\n        state.pinsReverse[parentId].splice(index, 1);\n      }\n      delete state.pins[nodeId];\n    }\n  }\n};\n","import { Commit } from \"vuex\";\n\nexport type Preconditions = Record<\n  string /* id of node with premises */,\n  string[] /* ids of premise nodes (parent nodes) */\n>;\n\nexport interface State {\n  preconditions: Preconditions;\n}\n\nexport const mutations = {\n  SET_PRECONDITIONS: \"SET_PRECONDITIONS\",\n  ADD_TO_PRECONDITIONS: \"ADD_TO_PRECONDITIONS\",\n  REMOVE_FROM_PRECONDITIONS: \"REMOVE_FROM_PRECONDITIONS\"\n};\n\nexport const actions = {\n  AddPrecondition: \"AddPrecondition\",\n  RemovePrecondition: \"RemovePrecondition\"\n};\n\nexport const store = {\n  namespaced: true,\n  state: {\n    preconditions: {} as Record<string, string[]>\n  },\n  actions: {\n    [actions.AddPrecondition](\n      {\n        commit\n      }: {\n        commit: Commit;\n      },\n      v: { nodeId: string; preconditionId: string }\n    ) {\n      if (!v.nodeId || !v.preconditionId) {\n        console.log(\n          \"AddPrecondition bad arguments\",\n          \"nodeId\",\n          v.nodeId,\n          \"preconditionId\",\n          v.preconditionId\n        );\n        return;\n      }\n      commit(mutations.ADD_TO_PRECONDITIONS, v);\n    },\n\n    [actions.RemovePrecondition](\n      {\n        commit\n      }: {\n        commit: Commit;\n      },\n      v: { nodeId: string; preconditionId: string }\n    ) {\n      commit(mutations.REMOVE_FROM_PRECONDITIONS, {\n        nodeId: v.nodeId,\n        preconditionId: v.preconditionId\n      });\n    }\n  },\n  mutations: {\n    [mutations.SET_PRECONDITIONS](state: State, preconditions: Preconditions) {\n      state.preconditions = preconditions;\n    },\n    [mutations.ADD_TO_PRECONDITIONS](\n      state: State,\n      v: { nodeId: string; preconditionId: string }\n    ) {\n      if (!state.preconditions[v.nodeId]) {\n        state.preconditions[v.nodeId] = [];\n      }\n      state.preconditions[v.nodeId].push(v.preconditionId);\n    },\n    [mutations.REMOVE_FROM_PRECONDITIONS](\n      state: State,\n      v: { nodeId: string; preconditionId: string }\n    ) {\n      const p = state.preconditions[v.nodeId];\n      if (!p) {\n        return;\n      }\n      if (p.indexOf(v.preconditionId) == -1) {\n        return;\n      }\n      state.preconditions[v.nodeId].splice(p.indexOf(v.preconditionId), 1);\n    }\n  }\n};\n","/* eslint-disable  @typescript-eslint/no-explicit-any */\nimport { ErrorKV } from \"@/types/errorkv\";\n\nexport const UNAUTHORIZED = 401;\n\nexport default (\n  message: string,\n  kv: Record<string, any>,\n  code?: number\n): ErrorKV => {\n  const err = new Error(message);\n\n  return {\n    error: err,\n    kv: kv,\n    code\n  };\n};\n","import { cloneDeep } from \"lodash\";\nimport { Point, Tree, TreeSkeleton, Viewport } from \"@/types/graphics\";\nimport { ErrorKV } from \"@/types/errorkv\";\nimport NewErrorKV from \"../tools/errorkv\";\nimport { getBoundingBorders, getVoronoiCells } from \"../tools/graphics\";\n\nexport const ROUND_EPSILON = 0;\n\n/**\n * Correct modulo on negative numbers\n * @param n\n * @param m\n */\nexport function mod(n: number, m: number): number {\n  return ((n % m) + m) % m;\n}\n\nexport function round(num: number): number {\n  const t = Math.pow(10, ROUND_EPSILON);\n  return Math.round(num * t) / t;\n}\n\nexport function sleep(ms: number) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\n/* eslint-disable  @typescript-eslint/no-explicit-any */\nexport function clone(v: any): any {\n  return cloneDeep(v);\n}\n\nexport function generateTreeSkeleton(\n  levelsNum: number,\n  numOnLevel: number\n): TreeSkeleton {\n  let globalID = 0;\n  const root = { id: String(globalID), children: [] };\n  let toProcess: TreeSkeleton[] = [root];\n  for (let i = 1; i < levelsNum; i++) {\n    const nextToProcess = [];\n    while (toProcess.length) {\n      const node = toProcess.shift();\n      node!.children = [];\n      for (let j = 0; j < numOnLevel; j++) {\n        globalID++;\n        const child = { id: String(globalID) };\n        node!.children.push(child);\n        nextToProcess.push(child);\n      }\n    }\n    toProcess = nextToProcess;\n  }\n\n  return root;\n}\n\n/**\n * Fill TreeSkeleton with default values to make real Tree\n * @param sk\n */\nexport function skeletonToTree(sk: TreeSkeleton, idAsTitle: boolean): Tree {\n  const res = clone(sk);\n  const stack: TreeSkeleton[] = [res];\n  while (stack.length) {\n    const node = stack.pop();\n    if (!node) {\n      continue;\n    }\n    node.id = String(node.id);\n    if (!node.title) {\n      node.title = idAsTitle ? String(node.id) : \"\";\n    }\n    if (!node.position) {\n      node.position = { x: 0, y: 0 };\n    }\n    if (!node.children) {\n      node.children = [];\n    }\n    stack.push(...node.children);\n  }\n  return res;\n}\n\n/**\n * Traverse tree and fill position\n */\nexport function fillTreePositions(\n  tree: Tree,\n  rootWH: Viewport\n): ErrorKV | null {\n  if (tree.id !== \"0\") {\n    return NewErrorKV(\"fillTreePositions: root node id must be '0'\", { tree });\n  }\n  tree.position = { x: rootWH.width / 2, y: rootWH.height / 2 };\n  const nodeBorders: Record<string, { topLeft: Point; bottomRight: Point }> = {\n    0: {\n      topLeft: { x: 0, y: 0 },\n      bottomRight: { x: rootWH.width, y: rootWH.height }\n    }\n  };\n  const stack: Tree[] = [tree];\n  while (stack.length) {\n    const node = stack.pop();\n    if (!node || !node.children || !node.children.length) {\n      continue;\n    }\n    const borderBox = nodeBorders[node.id];\n    const height = borderBox.bottomRight.y - borderBox.topLeft.y;\n    const width = borderBox.bottomRight.x - borderBox.topLeft.x;\n    if (height > width) {\n      for (const i in node.children) {\n        node.children[i].position = {\n          x: node.position!.x,\n          y:\n            borderBox.topLeft.y +\n            (Number(i) + 1 / 2) * (height / node.children.length)\n        };\n      }\n    } else {\n      for (const i in node.children) {\n        node.children[i].position = {\n          x:\n            borderBox.topLeft.x +\n            ((Number(i) + 1 / 2) * width) / node.children.length,\n          y: node.position!.y\n        };\n      }\n    }\n\n    // compute children borders as voronoi cells bounding boxes\n    const [cells, err] = getVoronoiCells(\n      [\n        { x: borderBox.topLeft.x, y: borderBox.topLeft.y },\n        { x: borderBox.bottomRight.x, y: borderBox.topLeft.y },\n        { x: borderBox.bottomRight.x, y: borderBox.bottomRight.y },\n        { x: borderBox.topLeft.x, y: borderBox.bottomRight.y }\n      ],\n      node.children.map(ch => ch.position)\n    );\n    if (err) {\n      return NewErrorKV(\"fillTreePositions: error in getVoronoiCells\", { err });\n    }\n    for (const i in cells) {\n      const cellBBox = getBoundingBorders(cells[i].border);\n      nodeBorders[node.children[i].id] = {\n        topLeft: cellBBox.leftBottom,\n        bottomRight: cellBBox.rightTop\n      };\n    }\n\n    stack.push(...node.children);\n  }\n\n  return null;\n}\n\nexport function printError(msg: string, kv: any) {\n  if (!kv) {\n    console.error(msg);\n  }\n\n  // const callback = function(stackframes: StackFrame[]) {\n  //   const stringifiedStack = stackframes.map(function(sf) {\n  //     return sf.toString();\n  //   }).join('\\n');\n  //   console.error(msg, stringifiedStack);\n  // };\n  //\n  // const errBack = function(e: Error) { console.log(e.message); };\n  //\n  const kvArr = [];\n  for (const i in kv) {\n    kvArr.push(i, kv[i]);\n    // if (kv[i] instanceof Error) {\n    //   StackTrace.get({offline: true}).then(callback).catch(errBack);\n    // }\n  }\n\n  console.error(msg, ...kvArr);\n}\n\ntype MindMeisterNode = {\n  id: number;\n  title: string;\n  link: string | null;\n  note: string | null;\n  children: MindMeisterNode[];\n};\n\nexport function mindMeisterToTree(mm: MindMeisterNode): TreeSkeleton | null {\n  let tree = null;\n  const parents: Record<string, TreeSkeleton> = {}; // key id, value - parent\n  const stack = [mm];\n  while (stack.length) {\n    const mmNode = stack.pop();\n    if (!mmNode) {\n      return null;\n    }\n    const treeNode: TreeSkeleton = {\n      id: String(mmNode.id),\n      title: mmNode.title,\n      children: []\n    };\n    if (parents[mmNode.id]) {\n      parents[mmNode.id].children!.push(treeNode);\n    } else {\n      tree = treeNode;\n    }\n    for (const child of mmNode.children) {\n      stack.push(child);\n      parents[child.id] = treeNode;\n    }\n  }\n\n  return tree;\n}\n","import { MapNode, Point, Tree } from \"@/types/graphics\";\nimport {\n  convertPosition,\n  getMaxDiagonal,\n  getVectorLength,\n  mergeMapNodeLayers,\n  treeToMapNodeLayers,\n  vectorOnNumber\n} from \"../../tools/graphics\";\nimport { ErrorKV } from \"@/types/errorkv\";\nimport NewErrorKV from \"../../tools/errorkv\";\nimport { clone } from \"../../tools/utils\";\nimport { NodeRecordItem } from \"@/store/tree/index\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nexport function findMapNode(\n  id: string,\n  mapNodeLayers: Array<Record<string, MapNode>>\n): [MapNode | null, number | null] {\n  for (const level in mapNodeLayers) {\n    const layer = mapNodeLayers[Number(level)];\n    if (layer && layer[id]) {\n      return [layer[id], Number(level)];\n    }\n  }\n\n  return [null, null];\n}\n\nexport function findMapNodes(\n  ids: string[],\n  mapNodeLayers: Array<Record<string, MapNode>>\n): MapNode[] {\n  const result: MapNode[] = [];\n  for (const layer of mapNodeLayers) {\n    if (!layer) {\n      continue;\n    }\n    for (const id of ids) {\n      if (layer[id]) {\n        result.push(layer[id]);\n      }\n    }\n  }\n\n  return result;\n}\n\nexport function createNewNode(title: string, center: Point): Tree {\n  return {\n    id: uuidv4(),\n    position: center,\n    title: title,\n    wikipedia: \"\",\n    resources: [],\n    children: []\n  } as Tree;\n}\n\n/**\n * Вычисляет где можно поставить центр для нового подузла узла parent\n *\n * Логика добавления следующая.\n * Обозначим координаты центра узла parent как (Xc, Yc)\n * Если в узле нет ни одного подузла, то находим наибольшее расстояние между (Xc, Yc)\n * и вершинами границы, делим вектор соединяющий (Xc, Yc) и эту вершину пополам\n * и ставим там центр нового подузла\n *\n * Если в узле есть подузлы, берем подузел с наибольшей диагональю,\n * находим в нем наибольшую диагональ соединяющую 2 вершины границы,\n * делим ее пополам, старый центр ставим в центре одной половины, новый в центре другой\n * @param parent\n * @param mapNodeLayers\n */\nexport function getNewNodeCenter(\n  parent: Tree,\n  mapNodeLayers: Array<Record<number, MapNode>>\n): [\n  Point | null, // new node center\n  Tree | null, // existing node with corrected center (if any)\n  ErrorKV // error (if any)\n] {\n  const [parentMapNode] = findMapNode(parent.id, mapNodeLayers);\n  if (parentMapNode === null) {\n    return [\n      null,\n      null,\n      NewErrorKV(\"getNewNodeCenter: cannot find mapNode for parent\", {\n        parentId: parent.id,\n        mapNodeLayers: mapNodeLayers\n      })\n    ];\n  }\n  if (parent.children.length === 0) {\n    const fromCenterVectors = parentMapNode.border.map(p => ({\n      from: parent.position,\n      to: p\n    }));\n    let maxFromCenterVector = fromCenterVectors[0];\n    for (const v of fromCenterVectors) {\n      if (getVectorLength(v) > getVectorLength(maxFromCenterVector)) {\n        maxFromCenterVector = v;\n      }\n    }\n    return [\n      {\n        x:\n          maxFromCenterVector.from.x +\n          (maxFromCenterVector.to.x - maxFromCenterVector.from.x) / 2,\n        y:\n          maxFromCenterVector.from.y +\n          (maxFromCenterVector.to.y - maxFromCenterVector.from.y) / 2\n      },\n      null,\n      null\n    ];\n  } else {\n    const maxDiagChild = parent.children[0];\n    let [maxDiagChildMapNode] = findMapNode(maxDiagChild.id, mapNodeLayers);\n    if (maxDiagChildMapNode === null) {\n      return [\n        null,\n        null,\n        NewErrorKV(\"getNewNodeCenter: cannot find maxDiagChild in layers\", {\n          maxDiagChildId: maxDiagChild.id,\n          mapNodeLayers: mapNodeLayers\n        })\n      ];\n    }\n    for (const child of parent.children) {\n      const [childMapNode] = findMapNode(child.id, mapNodeLayers);\n      if (childMapNode === null) {\n        return [\n          null,\n          null,\n          NewErrorKV(\"getNewNodeCenter: cannot find child in layers\", {\n            childId: child.id,\n            mapNodeLayers: mapNodeLayers\n          })\n        ];\n      }\n\n      const [childDiag, err1] = getMaxDiagonal(childMapNode.border);\n      if (err1) {\n        return [\n          null,\n          null,\n          NewErrorKV(\"getNewNodeCenter: error getMaxDiagonal\", {\n            childMapNode,\n            err1\n          })\n        ];\n      }\n      const [maxDiag, err2] = getMaxDiagonal(maxDiagChildMapNode.border);\n      if (err2) {\n        return [\n          null,\n          null,\n          NewErrorKV(\"getNewNodeCenter: error getMaxDiagonal\", {\n            maxDiagChildMapNode,\n            err2\n          })\n        ];\n      }\n      if (getVectorLength(childDiag) > getVectorLength(maxDiag)) {\n        maxDiagChildMapNode = childMapNode;\n      }\n    }\n\n    const [finalMaxDiag] = getMaxDiagonal(maxDiagChildMapNode.border);\n    const newNodeCenter = vectorOnNumber(finalMaxDiag!, 3 / 4).to;\n    const modifiedNode = clone(maxDiagChild);\n    modifiedNode.position = vectorOnNumber(finalMaxDiag!, 1 / 4).to;\n    return [newNodeCenter, modifiedNode, null];\n  }\n}\n\nexport function updatePosition(\n  state: {\n    tree: Tree | null;\n    nodeRecord: Record<string, NodeRecordItem>;\n    mapNodeLayers: Array<Record<string, MapNode>>;\n  },\n  v: { nodeId: string; position: Point }\n): ErrorKV {\n  if (state.tree == null) {\n    return NewErrorKV(\"state.tree == null\", {});\n  }\n\n  const item = state.nodeRecord[v.nodeId];\n  if (!item) {\n    return NewErrorKV(\"updateNodePosition: cannot find node in nodeRecord\", {\n      \"v.nodeId\": v.nodeId,\n      \"state.nodeRecord\": state.nodeRecord\n    });\n  }\n\n  if (!item.parent) {\n    return NewErrorKV(\"updateNodePosition: cannot move root of tree\", {\n      \"v.nodeId\": v.nodeId\n    });\n  }\n\n  const [normalizedPosition] = convertPosition(\n    \"normalize\",\n    v.position,\n    item.parent.id,\n    state.mapNodeLayers\n  );\n  item.node.position = normalizedPosition!;\n\n  // Если мы меняем один узел, то могут поменяться границы всех соседей\n  // так что надо действовать так как будто поменялись границы всех подузлов родителя узла\n  const [parentMapNode, layerLevel] = findMapNode(\n    item.parent.id,\n    state.mapNodeLayers\n  );\n  if (!parentMapNode || layerLevel === null) {\n    return NewErrorKV(\"updateNodePosition: cannot find mapNode for parent\", {\n      id: item.parent.id,\n      \"state.mapNodeLayers\": state.mapNodeLayers\n    });\n  }\n  const [ls, err] = treeToMapNodeLayers(\n    item.parent,\n    parentMapNode.border,\n    parentMapNode.center\n  );\n  if (ls == null || err != null) {\n    return NewErrorKV(\"updateNodePosition: create layers for parent\", {\n      id: item.parent.id,\n      parentMapNode: parentMapNode\n    });\n  }\n  return mergeMapNodeLayers(state.mapNodeLayers, ls, layerLevel);\n}\n","import { DBNode } from \"@/api/types\";\nimport { Point, Polygon, Tree } from \"@/types/graphics\";\nimport { ErrorKV } from \"@/types/errorkv\";\nimport NewErrorKV from \"../tools/errorkv\";\nimport { getVoronoiCellRecords, morphChildrenPoints } from \"../tools/graphics\";\n\n// convert children object to array\nexport function convertChildren(children: any): string[] {\n  let result: string[];\n\n  if (!children) {\n    result = [];\n  } else if (Array.isArray(children)) {\n    result = children.filter(childID => !!childID).sort();\n    result.forEach((childID, i, arr) => (arr[i] = childID.toString()));\n  } else {\n    result = Object.values(children)\n      .filter(childID => !!childID)\n      .sort() as string[];\n    result.forEach((childID, i, arr) => (arr[i] = childID.toString()));\n  }\n  return result;\n}\n\nexport function convertDBMapToTree(\n  dbNodes: Record<string, DBNode>\n): [Tree | null, ErrorKV] {\n  const root: Tree = {\n    id: dbNodes[\"0\"].id.toString(),\n    title: dbNodes[\"0\"].name,\n    position: dbNodes[\"0\"].position,\n    children: []\n  };\n  const stack = [root];\n\n  while (stack.length > 0) {\n    const node = stack.pop();\n    if (!node) {\n      continue;\n    }\n    if (!dbNodes[node.id]) {\n      return [\n        null,\n        NewErrorKV(\"Cannot find id in dbNodes\", { \"node.id\": node.id, dbNodes })\n      ];\n    }\n    dbNodes[node.id].children = convertChildren(dbNodes[node.id].children);\n    if (!dbNodes[node.id].children.length) {\n      continue;\n    }\n    const children: Tree[] = [];\n    for (const childID of dbNodes[node.id].children) {\n      children.push({\n        id: childID.toString(),\n        title: dbNodes[childID].name,\n        position: dbNodes[childID].position,\n        children: []\n      });\n    }\n\n    node.children = children;\n    stack.push(...children);\n  }\n\n  return [root, null];\n}\n","import firebase from \"firebase\";\nimport { Tree } from \"@/types/graphics\";\nimport { ErrorKV } from \"@/types/errorkv\";\nimport NewErrorKV from \"../tools/errorkv\";\nimport { apiTree } from \"./mocks\";\n// import apiTree from \"./mindmeister\";\nimport axios from \"axios\";\nimport { Pins } from \"@/store/pin\";\nimport { Preconditions } from \"src/store/precondition\";\nimport { DBNode } from \"@/api/types\";\nimport { convertChildren, convertDBMapToTree } from \"./helpers\";\nimport { Resource } from \"@/store/resources\";\nimport { NodeComment, NodeContent } from \"@/store/node_content\";\nimport emulatorConfig from \"../../firebase.json\";\nimport { debounce } from \"lodash\";\n\nconst MAP_FROM_STORAGE = false; // is storage is source for map (or database)\nlet FUNCTION_DOMAIN = \"https://us-central1-sci-map-1982.cloudfunctions.net/\";\nexport const FUNCTION_CHANGE_RATING = \"changeRating\";\n\nconst update = async (data: Record<string, any>): Promise<ErrorKV> => {\n  try {\n    await firebase\n      .database()\n      .ref()\n      .update(data);\n    return null;\n  } catch (e) {\n    return NewErrorKV(\"api: error in update\", { err: e });\n  }\n};\n\nconst debouncedUpdate = debounce(update, 400);\n\nexport default {\n  ROOT_WIDTH: 1440,\n  ROOT_HEIGHT: 821,\n  ST_WIDTH: 1000,\n  ST_HEIGHT: 1000,\n  initFirebase() {\n    // Your web app's Firebase configuration\n    // For Firebase JS SDK v7.20.0 and later, measurementId is optional\n    const firebaseConfig = {\n      apiKey: \"AIzaSyCP50k-WOkTeG8BYvRtu4Bo_x3T2RnVsxU\",\n      authDomain: \"sci-map-1982.firebaseapp.com\",\n      databaseURL: \"https://sci-map-1982.firebaseio.com\",\n      projectId: \"sci-map-1982\",\n      storageBucket: \"sci-map-1982.appspot.com\",\n      messagingSenderId: \"340899060236\",\n      appId: \"1:340899060236:web:b136e9289e342a8bb62c29\",\n      measurementId: \"G-TV74Q61H9P\"\n    };\n\n    // Initialize Firebase\n    firebase.initializeApp(firebaseConfig);\n    firebase.analytics();\n\n    console.log(\"process.env.VUE_APP_IS_EMULATOR\", process.env.VUE_APP_IS_EMULATOR)\n    if (process.env.VUE_APP_IS_EMULATOR) {\n      console.log(\"Starting in emulator mode\");\n      firebase\n        .auth()\n        .useEmulator(`http://localhost:${emulatorConfig.emulators.auth.port}`);\n      firebase\n        .database()\n        .useEmulator(\"localhost\", emulatorConfig.emulators.database.port);\n      firebase\n        .storage()\n        .useEmulator(\"localhost\", emulatorConfig.emulators.storage.port);\n      FUNCTION_DOMAIN = \"http://localhost:5001/sci-map-1982/us-central1/\";\n    }\n  },\n\n  async callFunction(\n    method: string,\n    params: Record<string, string>\n  ): Promise<[string, ErrorKV]> {\n    const currentUser = firebase.auth().currentUser;\n    if (!currentUser) {\n      return [\n        \"\",\n        NewErrorKV(\"callFunction: cannot determine current user\", {})\n      ];\n    }\n    const idToken = await currentUser.getIdToken(true);\n    params.idToken = idToken;\n    try {\n      const response = await axios.get(FUNCTION_DOMAIN + method, { params });\n      return [response.data, null];\n    } catch (e) {\n      return [\"\", NewErrorKV(\"Error in callFunction\", { method, params, e })];\n    }\n  },\n\n  async getMapFromDB(): Promise<[Tree | null, ErrorKV]> {\n    const snapshot = await firebase\n      .database()\n      .ref(\"map\")\n      .get();\n    if (!snapshot.exists()) {\n      return [null, NewErrorKV(\"!snapshot.exists\", {})];\n    }\n    const map = snapshot.val();\n\n    // create Tree with denormalized positions\n    const [tree, err] = convertDBMapToTree(map);\n    if (err !== null) {\n      return [null, err];\n    }\n\n    return [tree, null];\n  },\n\n  async getMapFromStorage(\n    user: firebase.User | null\n  ): Promise<[Tree | null, ErrorKV]> {\n    const storage = firebase.storage().ref();\n    let ref = storage.child(`/map.json`);\n    if (user) {\n      ref = storage.child(`/user/${user.uid}/map.json`);\n    }\n    const url = await ref.getDownloadURL();\n\n    const response = await axios.get(url);\n    return [\n      {\n        id: \"0\",\n        title: \"\",\n        position: { x: this.ROOT_WIDTH / 2, y: this.ROOT_HEIGHT / 2 },\n        // children: apiTree.children\n        children: response.data\n      },\n      null\n    ];\n  },\n\n  async getMap(user: firebase.User | null): Promise<[Tree | null, ErrorKV]> {\n    try {\n      if (MAP_FROM_STORAGE) {\n        return this.getMapFromStorage(user);\n      } else {\n        return this.getMapFromDB();\n      }\n    } catch (e) {\n      return [null, NewErrorKV(e.message, { e: e })];\n    }\n  },\n\n  async getPins(user: firebase.User | null): Promise<[Pins | null, ErrorKV]> {\n    try {\n      const storage = firebase.storage().ref();\n      let ref = storage.child(`/pins.json`);\n      if (user) {\n        ref = storage.child(`/user/${user.uid}/pins.json`);\n      }\n      const url = await ref.getDownloadURL();\n\n      const response = await axios.get(url);\n      return [response.data, null];\n    } catch (e) {\n      return [null, NewErrorKV(e.message, { e: e })];\n    }\n  },\n\n  async savePins(user: firebase.User, pins: Pins) {\n    if (!user) {\n      return;\n    }\n\n    const storage = firebase.storage().ref();\n    const ref = storage.child(`/user/${user.uid}/pins.json`);\n    await ref.putString(\n      btoa(unescape(encodeURIComponent(JSON.stringify(pins)))),\n      \"base64\"\n    );\n  },\n\n  async getPreconditions(\n    user: firebase.User | null\n  ): Promise<[Preconditions | null, ErrorKV]> {\n    try {\n      const snapshot = await firebase\n        .database()\n        .ref(\"precondition\")\n        .get();\n      if (!snapshot.exists()) {\n        return [null, NewErrorKV(\"!snapshot.exists\", {})];\n      }\n      const preconditions = snapshot.val();\n\n      return [preconditions, null];\n    } catch (e) {\n      return [null, NewErrorKV(e.message, { e: e })];\n    }\n  },\n\n  async savePreconditions(\n    user: firebase.User | null,\n    preconditions: { nodeId: string; preconditionIds: string[] }\n  ) {\n    if (!user) {\n      return;\n    }\n    await firebase\n      .database()\n      .ref(\"precondition/\" + preconditions.nodeId)\n      .set(preconditions.preconditionIds);\n  },\n\n  subscribeNodeChange(nodeID: string, cb: (a: DBNode) => any) {\n    this.subscribeDBChange(\n      `map/${nodeID}`,\n      (snap: firebase.database.DataSnapshot) => {\n        if (!snap.exists()) {\n          return;\n        }\n        const node = snap.val() as DBNode;\n        node.id = node.id.toString();\n        node.children = convertChildren(node.children);\n        cb(node);\n      }\n    );\n  },\n\n  unsubscribeNodeChange(nodeID: string) {\n    firebase\n      .database()\n      .ref(`map/${nodeID}`)\n      .off(\"value\");\n  },\n\n  subscribeDBChange(\n    path: string,\n    cb: (a: firebase.database.DataSnapshot) => any\n  ) {\n    firebase\n      .database()\n      .ref(path)\n      .on(\"value\", cb);\n  },\n\n  unsubscribeDBChange(\n    path: string,\n    cb?: (a: firebase.database.DataSnapshot) => any\n  ) {\n    firebase\n      .database()\n      .ref(path)\n      .off(\"value\", cb);\n  },\n\n  async transaction(nodeID: string, update: (val: any) => any) {\n    await firebase\n      .database()\n      .ref(\"map/\" + nodeID)\n      .transaction(\n        update,\n        () => {\n          return;\n        },\n        false\n      );\n  },\n\n  async setNode(node: DBNode) {\n    await firebase\n      .database()\n      .ref(\"map/\" + node.id)\n      .set(node);\n  },\n\n  async getNode(nodeID: string): Promise<DBNode | null> {\n    const pr = await firebase\n      .database()\n      .ref(\"map/\" + nodeID)\n      .get();\n    const node = pr.val();\n    node.id = node.id.toString();\n    node.children = convertChildren(node.children);\n    return node;\n  },\n\n  generateKey(): string | null {\n    return firebase\n      .database()\n      .ref()\n      .push().key;\n  },\n\n  async findKeyInList(path: string, value: string): Promise<string | null> {\n    const snap = await firebase\n      .database()\n      .ref(path)\n      .orderByValue()\n      .equalTo(value)\n      .limitToFirst(1)\n      .get();\n    return snap.key;\n  },\n\n  async findKeyOfChild(\n    nodeID: string,\n    childID: string\n  ): Promise<string | null> {\n    const pr = await firebase\n      .database()\n      .ref(\"map/\" + nodeID)\n      .get();\n    const node = pr.val();\n    if (!node.children) {\n      return null;\n    }\n\n    for (const key in node.children) {\n      if (node.children[key] === childID) {\n        return key;\n      }\n    }\n    return null;\n  },\n\n  update,\n  debouncedUpdate,\n\n  async getResources(): Promise<[Record<string, Resource> | null, ErrorKV]> {\n    const snapshot = await firebase\n      .database()\n      .ref(\"resources\")\n      .get();\n    if (!snapshot.exists()) {\n      return [null, NewErrorKV(\"!snapshot.exists\", {})];\n    }\n    const resources = snapshot.val();\n\n    return [resources, null];\n  },\n\n  async getUserComments(\n    user: firebase.User\n  ): Promise<[Record<string, NodeComment> | null, ErrorKV]> {\n    const userID = user.uid;\n    const snapshot = await firebase\n      .database()\n      .ref(`user_data/${userID}/comment`)\n      .get();\n    if (!snapshot.exists()) {\n      return [null, NewErrorKV(\"!snapshot.exists\", {})];\n    }\n    const nodeComment = snapshot.val();\n\n    return [nodeComment, null];\n  },\n\n  async getNodeContent(): Promise<\n    [Record<string, NodeContent> | null, ErrorKV]\n  > {\n    const snapshot = await firebase\n      .database()\n      .ref(`node_content`)\n      .get();\n\n    if (!snapshot.exists()) {\n      return [{}, null];\n    }\n\n    return [snapshot.val(), null];\n  }\n};\n","import {\n  Tree,\n  Point,\n  Polygon,\n  VoronoiCell,\n  MapNode,\n  Vector,\n  Rectangle\n} from \"@/types/graphics\";\nimport * as turf from \"@turf/turf\";\nimport { ErrorKV } from \"@/types/errorkv\";\nimport { default as NewErrorKV } from \"../tools/errorkv\";\nimport { NodeRecordItem } from \"@/store/tree\";\nimport { polygonArea } from \"d3-polygon\";\nimport polygonClipping from \"polygon-clipping\";\nimport { clone, mod, round } from \"../tools/utils\";\nimport { findMapNode } from \"../store/tree/helpers\";\nimport api from \"../api/api\";\n\nconst NORMALIZED_BORDER = [\n  { x: 0, y: 0 },\n  { x: 0, y: api.ST_HEIGHT },\n  { x: api.ST_WIDTH, y: api.ST_HEIGHT },\n  { x: api.ST_WIDTH, y: 0 }\n];\n\nexport function getVectorLength(v: Vector): number {\n  return Math.sqrt(\n    Math.pow(v.from.x - v.to.x, 2) + Math.pow(v.from.y - v.to.y, 2)\n  );\n}\n\nexport function polygonToTurf(\n  p: Polygon\n): turf.Feature<turf.Polygon, turf.Properties> {\n  if (!p) {\n    throw new Error(\"polygonToTurf: p is empty\");\n  }\n  const pp = p.map(point => [point.x, point.y]);\n  pp.push([p[0].x, p[0].y]);\n  return turf.polygon([pp]);\n}\n\nexport function isInside(point: Point, polygon: Polygon): boolean {\n  return turf.booleanPointInPolygon(\n    turf.point([point.x, point.y]),\n    polygonToTurf(polygon)\n  );\n}\n\nexport function polygonToPCPolygon(p: Polygon): polygonClipping.Polygon {\n  const pp = p.map(point => [point.x, point.y] as polygonClipping.Pair);\n  pp.push([p[0].x, p[0].y]);\n  return [pp];\n}\n\nexport function area(p: Polygon): number {\n  return Math.abs(polygonArea(p.map(point => [point.x, point.y])));\n}\n\nexport function intersect(\n  p1: Polygon,\n  p2: Polygon\n): [Polygon[] | null, ErrorKV] {\n  // polygonClipping.intersection does not like digits after point\n  // so we find the least multiplier that gives area > 1000 for polygon\n  // and then round coordinates\n  let np1: Polygon = clone(p1);\n  let np2: Polygon = clone(p2);\n  let cf = 1;\n  while (area(np1) < 1000 && area(np2) < 1000) {\n    cf = cf * 10;\n    np1 = p1.map(p => ({ x: p.x * cf, y: p.y * cf }));\n    np2 = p2.map(p => ({ x: p.x * cf, y: p.y * cf }));\n  }\n  np1 = np1.map(p => ({ x: round(p.x), y: round(p.y) }));\n  np2 = np2.map(p => ({ x: round(p.x), y: round(p.y) }));\n\n  const tp1 = polygonToPCPolygon(np1);\n  const tp2 = polygonToPCPolygon(np2);\n  if (tp1 == null || tp2 == null) {\n    return [\n      null,\n      NewErrorKV(\"intersect: error in polygonToPCPolygon\", { p1: p1, p2: p2 })\n    ];\n  }\n\n  // polygonClipping.intersection\n  const polygonIntersect = polygonClipping.intersection(tp1, tp2);\n  if (polygonIntersect == null || !polygonIntersect.length) {\n    return [[], null];\n  }\n\n  const resultPolys = [];\n\n  for (const poly of polygonIntersect[0]) {\n    const resultPoly = [];\n    for (const p of poly) {\n      resultPoly.push({ x: p[0] / cf, y: p[1] / cf });\n    }\n    // удаляем последнюю точку полигона потому что она всегда совпадает с первой\n    resultPoly.pop();\n    resultPolys.push(resultPoly);\n  }\n\n  return [resultPolys, null];\n}\n\n// Возвращает левый нижний и правый верхний углы описанного вокруг Polygon квадрата\nexport function getBoundingBorders(border: Polygon): Rectangle {\n  if (!border) {\n    console.error(\"bad border\", border);\n  }\n  const minX = border.reduce((previousValue, currentValue) =>\n    previousValue.x > currentValue.x ? currentValue : previousValue\n  ).x;\n  const minY = border.reduce((previousValue, currentValue) =>\n    previousValue.y > currentValue.y ? currentValue : previousValue\n  ).y;\n  const maxX = border.reduce((previousValue, currentValue) =>\n    previousValue.x < currentValue.x ? currentValue : previousValue\n  ).x;\n  const maxY = border.reduce((previousValue, currentValue) =>\n    previousValue.y < currentValue.y ? currentValue : previousValue\n  ).y;\n  return {\n    leftBottom: { x: minX, y: minY },\n    rightTop: { x: maxX, y: maxY }\n  };\n}\n\nexport function getVoronoiCellsInSquare(\n  centers: Point[],\n  leftBottom: Point,\n  rightTop: Point\n): [Record<number, Polygon>, ErrorKV] {\n  const turfPoints = centers.map(p => turf.point([p.x, p.y]));\n  const collection = turf.featureCollection(turfPoints);\n  const cells = turf.voronoi(collection, {\n    bbox: [leftBottom.x, leftBottom.y, rightTop.x, rightTop.y]\n  });\n  const cellMap: Record<number, Polygon> = {};\n  let index = 0;\n  for (const cell of cells.features) {\n    if (!cell) {\n      return [\n        {},\n        NewErrorKV(\"getVoronoiCellsInSquare: undefined cell\", {\n          centers,\n          leftBottom,\n          rightTop\n        })\n      ];\n    }\n    const cellBorder = cell.geometry!.coordinates[0].map(p => ({\n      x: p[0],\n      y: p[1]\n    }));\n    cellBorder.pop(); // удаляем последную точку полигона потому что она всегда совпадает с первой\n    cellMap[index] = cellBorder;\n    index++;\n  }\n\n  return [cellMap, null];\n}\n\nexport function getVoronoiCells(\n  outerBorder: Polygon, //(граница массива точек)\n  centers: Point[] //(точки внутри этой границы)\n): [VoronoiCell[], ErrorKV] {\n  if (!outerBorder) {\n    return [\n      [],\n      NewErrorKV(\"getVoronoiCells: bad outerBorder\", { outerBorder, centers })\n    ];\n  }\n  const bb = getBoundingBorders(outerBorder);\n  const [cellMap, err] = getVoronoiCellsInSquare(\n    centers,\n    bb.leftBottom,\n    bb.rightTop\n  );\n  if (err) {\n    return [\n      [],\n      NewErrorKV(\"getVoronoiCells: error in getVoronoiCellsInSquare\", {\n        err,\n        bb,\n        centers\n      })\n    ];\n  }\n\n  const res = [];\n  for (const index in centers) {\n    if (!cellMap[index]) {\n      return [\n        [],\n        NewErrorKV(\"Cannot find index in cellMap\", {\n          index: index,\n          centers: centers,\n          cellMap: cellMap,\n          BoundingBorders: bb,\n          outerBorder\n        })\n      ];\n    }\n\n    const [intersections, err] = intersect(cellMap[index], outerBorder); // мы хотим чтобы граница всех cell совпадала с outerBorder\n    if (intersections == null || err != null) {\n      return [\n        [],\n        NewErrorKV(\"getVoronoiCells error\", {\n          err,\n          cellBorder: cellMap[index],\n          outerBorder\n        })\n      ];\n    }\n\n    if (intersections == []) {\n      return [\n        [],\n        NewErrorKV(\"Voronoi cell has no intersection with outerBorder\", {\n          point: centers[index]\n        })\n      ];\n    }\n    if (intersections.length > 1) {\n      return [\n        [],\n        NewErrorKV(\n          \"Voronoi cell has more than one intersection with outerBorder\",\n          { point: centers[index] }\n        )\n      ];\n    }\n    res.push({\n      border: intersections[0],\n      center: centers[index]\n    });\n  }\n\n  return [res, null];\n}\n\nexport function getVoronoiCellRecords(\n  outerBorder: Polygon, //(граница массива точек)\n  centers: Record<string, Point> //(точки внутри этой границы)\n): [Record<string, Polygon>, ErrorKV] {\n  const result: Record<string, Polygon> = {};\n  const ids: string[] = [];\n  const centersArray: Point[] = [];\n  for (const id in centers) {\n    ids.push(id);\n    centersArray.push(centers[id]);\n  }\n\n  const [cells, err] = getVoronoiCells(outerBorder, centersArray);\n  if (err !== null) {\n    return [{}, err];\n  }\n  for (const i in ids) {\n    result[ids[i]] = cells[i].border;\n  }\n\n  return [result, null];\n}\n\nexport function polygonFill(\n  selectedNodeId: string,\n  currentNodeId: string,\n  preconditionNodeIds: string[]\n): string {\n  if (selectedNodeId && selectedNodeId == currentNodeId) {\n    return \"#f3afaf\";\n  }\n  if (preconditionNodeIds && preconditionNodeIds.indexOf(currentNodeId) != -1) {\n    return \"#62f363\";\n  }\n  return \"transparent\";\n}\n\nexport function polygonFillOpacity(\n  selectedNodeId: string,\n  currentNodeId: string,\n  preconditionNodeIds: string[]\n): string {\n  if (selectedNodeId && selectedNodeId == currentNodeId) {\n    return \"0.2\";\n  }\n  if (preconditionNodeIds && preconditionNodeIds.indexOf(currentNodeId) != -1) {\n    return \"0.2\";\n  }\n  return \"0\";\n}\n\nexport function polygonToPath(polygon: Polygon): string {\n  return polygon.map((point: Point) => `${point.x} ${point.y}`).join(\",\");\n}\n\nexport function treeToNodeRecord(tree: Tree): Record<number, NodeRecordItem> {\n  const nodeRecord: Record<string, NodeRecordItem> = {};\n  const stack: NodeRecordItem[] = [{ node: tree, parent: null }];\n  while (stack.length) {\n    const item = stack.pop();\n    if (!item) {\n      break;\n    }\n    nodeRecord[item.node.id] = item;\n    stack.push(\n      ...item.node.children.map(child => ({\n        node: child,\n        parent: item.node\n      }))\n    );\n  }\n\n  return nodeRecord;\n}\n\nexport function transferToPoint(vector: Vector, point: Point): Vector {\n  return {\n    from: {\n      x: point.x,\n      y: point.y\n    },\n    to: {\n      x: point.x + (vector.to.x - vector.from.x),\n      y: point.y + (vector.to.y - vector.from.y)\n    }\n  };\n}\n\nexport function pointToVector(p: Point): Vector {\n  return { from: { x: 0, y: 0 }, to: p };\n}\n\nexport function addVector(a: Vector, b: Vector): Vector {\n  const bTransferred = transferToPoint(b, a.to);\n  return {\n    from: { x: a.from.x, y: a.from.y },\n    to: { x: bTransferred.to.x, y: bTransferred.to.y }\n  };\n}\n\nexport function subtractVector(a: Vector, b: Vector): Vector {\n  return transferToPoint(\n    addVector(\n      { from: { x: b.from.x, y: b.from.y }, to: { x: -b.to.x, y: -b.to.y } },\n      a\n    ),\n    transferToPoint(b, a.from).to\n  );\n}\n\nexport function vectorOnNumber(a: Vector, c: number): Vector {\n  const aTr = transferToPoint(a, { x: 0, y: 0 });\n  return transferToPoint(\n    { from: { x: 0, y: 0 }, to: { x: aTr.to.x * c, y: aTr.to.y * c } },\n    a.from\n  );\n}\n\nexport function getRectangleCenter(s: Rectangle): Point {\n  const diagonal = subtractVector(\n    pointToVector(s.rightTop),\n    pointToVector(s.leftBottom)\n  );\n  return vectorOnNumber(diagonal, 1 / 2).to;\n}\n\nexport function transferPointOnVector(p: Point, v: Vector): Point {\n  return transferToPoint(v, p).to;\n}\n\n// math: https://web.archive.org/web/20060911055655/http://local.wasp.uwa.edu.au/~pbourke/geometry/lineline2d/\nexport function getVectorIntersection(v1: Vector, v2: Vector): Point | null {\n  const x1 = v1.from.x;\n  const y1 = v1.from.y;\n  const x2 = v1.to.x;\n  const y2 = v1.to.y;\n  const x3 = v2.from.x;\n  const y3 = v2.from.y;\n  const x4 = v2.to.x;\n  const y4 = v2.to.y;\n  const denom = (y4 - y3) * (x2 - x1) - (x4 - x3) * (y2 - y1);\n  const numeA = (x4 - x3) * (y1 - y3) - (y4 - y3) * (x1 - x3);\n  const numeB = (x2 - x1) * (y1 - y3) - (y2 - y1) * (x1 - x3);\n\n  if (denom == 0) {\n    return null;\n  }\n\n  const uA = numeA / denom;\n  const uB = numeB / denom;\n\n  if (uA >= 0 && uA <= 1 && uB >= 0 && uB <= 1) {\n    return {\n      x: x1 + uA * (x2 - x1),\n      y: y1 + uA * (y2 - y1)\n    };\n  }\n\n  return null;\n}\n\nexport function morphChildrenPoints(\n  oldBorder: Polygon,\n  newBorder: Polygon,\n  oldPoints: Record<string, Point>\n): [Record<string, Point> | null, ErrorKV] {\n  const oldCenterTf = turf.centerOfMass(polygonToTurf(oldBorder)).geometry;\n  if (oldCenterTf == null) {\n    return [\n      null,\n      NewErrorKV(\"morphChildrenPoints oldBorder centerOfMass error\", {\n        oldBorder: oldBorder,\n        oldPoints: oldPoints\n      })\n    ];\n  }\n  const newCenterTf = turf.centerOfMass(polygonToTurf(newBorder)).geometry;\n  if (newCenterTf == null) {\n    return [\n      null,\n      NewErrorKV(\"morphChildrenPoints newBorder centerOfMass error\", {\n        newBorder: newBorder,\n        oldPoints: oldPoints\n      })\n    ];\n  }\n  const oldCenter = {\n    x: oldCenterTf.coordinates[0],\n    y: oldCenterTf.coordinates[1]\n  };\n  const newCenter = {\n    x: newCenterTf.coordinates[0],\n    y: newCenterTf.coordinates[1]\n  };\n\n  // Move old node and its children to new node center\n  oldBorder = oldBorder.map(\n    (p): Point => {\n      return transferPointOnVector(p, { from: oldCenter, to: newCenter });\n    }\n  );\n  for (const id in oldPoints) {\n    oldPoints[id] = transferPointOnVector(oldPoints[id], {\n      from: oldCenter,\n      to: newCenter\n    });\n  }\n\n  // morph children\n  const maxDiameter = Math.max(\n    getVectorLength({\n      from: getBoundingBorders(oldBorder).leftBottom,\n      to: getBoundingBorders(oldBorder).rightTop\n    }),\n    getVectorLength({\n      from: getBoundingBorders(newBorder).leftBottom,\n      to: getBoundingBorders(newBorder).rightTop\n    })\n  );\n\n  const newPoints: Record<string, Point> = {};\n  for (const id in oldPoints) {\n    const oldPoint = oldPoints[id];\n    if (newCenter.x == oldPoint.x && newCenter.y == oldPoint.y) {\n      newPoints[id] = oldPoint;\n      continue;\n    }\n    let centerToPoint = { from: newCenter, to: oldPoints[id] };\n    // enlarge it to guarantee intersect with both newBorder and oldBorder (transferred to newBorder center)\n    centerToPoint = vectorOnNumber(\n      centerToPoint,\n      maxDiameter / getVectorLength(centerToPoint)\n    );\n    let oldBorderIntersection = null;\n    for (const i in oldBorder) {\n      const segment = {\n        from: oldBorder[i],\n        to: oldBorder[(Number(i) + 1) % oldBorder.length]\n      };\n      const p = getVectorIntersection(centerToPoint, segment);\n      if (p != null) {\n        oldBorderIntersection = p;\n        break;\n      }\n    }\n    if (oldBorderIntersection == null) {\n      return [\n        null,\n        NewErrorKV(\n          \"morphChildrenPoints cannot find intersection with oldBorder\",\n          {\n            centerToPoint: centerToPoint,\n            oldBorder: oldBorder\n          }\n        )\n      ];\n    }\n\n    let newBorderIntersection = null;\n    for (const i in newBorder) {\n      const segment = {\n        from: newBorder[i],\n        to: newBorder[(Number(i) + 1) % newBorder.length]\n      };\n      const p = getVectorIntersection(centerToPoint, segment);\n      if (p != null) {\n        newBorderIntersection = p;\n        break;\n      }\n    }\n    if (newBorderIntersection == null) {\n      return [\n        null,\n        NewErrorKV(\n          \"morphChildrenPoints cannot find intersection with newBorder\",\n          {\n            centerToPoint: centerToPoint,\n            newBorder: newBorder\n          }\n        )\n      ];\n    }\n\n    if (\n      oldBorderIntersection.x == newBorderIntersection.x &&\n      oldBorderIntersection.y == newBorderIntersection.y\n    ) {\n      newPoints[id] = oldPoint;\n      continue;\n    }\n\n    const coeff =\n      getVectorLength({ from: newCenter, to: newBorderIntersection }) /\n      getVectorLength({ from: newCenter, to: oldBorderIntersection });\n    newPoints[id] = vectorOnNumber({ from: newCenter, to: oldPoint }, coeff).to;\n  }\n\n  return [newPoints, null];\n}\n\nexport function NewEmptyVector(): Vector {\n  return { from: { x: 0, y: 0 }, to: { x: 0, y: 0 } };\n}\n\nexport function getMaxDiagonal(polygon: Polygon): [Vector, ErrorKV] {\n  if (!polygon || polygon.length < 3) {\n    return [\n      NewEmptyVector(),\n      NewErrorKV(\"getMaxDiagonal: bad polygon\", { polygon })\n    ];\n  }\n\n  const diagonals: Vector[] = [];\n  if (polygon.length == 3) {\n    // triangle does not has diagonals, so me emulate them\n    for (const i in polygon) {\n      const middle = vectorOnNumber(\n        {\n          from: polygon[mod(Number(i) - 1, polygon.length)],\n          to: polygon[mod(Number(i) + 1, polygon.length)]\n        },\n        1 / 2\n      );\n      diagonals.push({ from: polygon[i], to: middle.to });\n    }\n  } else {\n    for (const i in polygon) {\n      for (const j in polygon) {\n        if (\n          Number(j) != mod(Number(i) - 1, polygon.length) &&\n          Number(j) != Number(i) &&\n          Number(j) != mod(Number(i) + 1, polygon.length)\n        ) {\n          diagonals.push({ from: polygon[i], to: polygon[j] });\n        }\n      }\n    }\n  }\n\n  let maxDiagonal = diagonals[0];\n  for (const diag of diagonals) {\n    if (getVectorLength(diag) > getVectorLength(maxDiagonal)) {\n      maxDiagonal = diag;\n    }\n  }\n\n  return [maxDiagonal, null];\n}\n\nexport function convertPosition(\n  type: \"normalize\" | \"denormalize\",\n  position: Point,\n  parentID: string | null,\n  mapNodeLayers: Array<Record<string, MapNode>>\n): [Point | null, ErrorKV] {\n  let convertedPosition: Point;\n  if (parentID) {\n    const [parentMapNode] = findMapNode(parentID, mapNodeLayers);\n    if (!parentMapNode) {\n      return [\n        null,\n        NewErrorKV(\"UPDATE_NODE: Cannot findMapNode\", { id: parentID })\n      ];\n    }\n\n    let morphedPositions: Record<string, Point> | null, err: ErrorKV;\n    if (type === \"denormalize\") {\n      if (!isInside(position, NORMALIZED_BORDER)) {\n        return [\n          null,\n          NewErrorKV(\"convertPosition: position outside NORMALIZED_BORDER\", {\n            normalizedBorder: NORMALIZED_BORDER,\n            position,\n            parentID\n          })\n        ];\n      }\n      [morphedPositions, err] = morphChildrenPoints(\n        NORMALIZED_BORDER,\n        parentMapNode.border,\n        { tmp: position }\n      );\n    } else {\n      if (!isInside(position, parentMapNode.border)) {\n        return [\n          null,\n          NewErrorKV(\"convertPosition: position outside parentMapNode.border\", {\n            \"parentMapNode.border\": parentMapNode.border,\n            position,\n            parentID\n          })\n        ];\n      }\n      [morphedPositions, err] = morphChildrenPoints(\n        parentMapNode.border,\n        NORMALIZED_BORDER,\n        { tmp: position }\n      );\n      if (err !== null) {\n        return [\n          null,\n          NewErrorKV(\"UPDATE_NODE: Cannot morphChildrenPoints\", {\n            type: type,\n            normalizedBorder: NORMALIZED_BORDER,\n            \"parentMapNode.border\": parentMapNode.border,\n            \"dbNode.position\": position\n          })\n        ];\n      }\n      // make sure that after normalization position is strictly inside border\n      if (morphedPositions![\"tmp\"].x < 0) {\n        morphedPositions![\"tmp\"].x = 1;\n      }\n      if (morphedPositions![\"tmp\"].x > api.ST_WIDTH) {\n        morphedPositions![\"tmp\"].x = api.ST_WIDTH - 1;\n      }\n      if (morphedPositions![\"tmp\"].y < 0) {\n        morphedPositions![\"tmp\"].y = 1;\n      }\n      if (morphedPositions![\"tmp\"].y > api.ST_HEIGHT) {\n        morphedPositions![\"tmp\"].y = api.ST_HEIGHT - 1;\n      }\n    }\n    if (err !== null) {\n      return [\n        null,\n        NewErrorKV(\"UPDATE_NODE: Cannot morphChildrenPoints\", {\n          type: type,\n          normalizedBorder: NORMALIZED_BORDER,\n          \"parentMapNode.border\": parentMapNode.border,\n          \"dbNode.position\": position\n        })\n      ];\n    }\n    convertedPosition = morphedPositions![\"tmp\"];\n  } else {\n    if (type === \"denormalize\") {\n      convertedPosition = { x: api.ROOT_WIDTH / 2, y: api.ROOT_HEIGHT / 2 };\n    } else {\n      convertedPosition = { x: api.ST_WIDTH / 2, y: api.ST_HEIGHT / 2 };\n    }\n  }\n\n  return [convertedPosition, null];\n}\n\n/**\n *\n * @param tree\n * @param rootBorder\n * @param rootPosition\n */\nexport function treeToMapNodeLayers(\n  tree: Tree,\n  rootBorder: Polygon,\n  rootPosition: Point\n): [Array<Record<string, MapNode>> | null, ErrorKV] {\n  if (Object.keys(tree).length == 0) {\n    return [[], null];\n  }\n  const treeLayers: Array<Array<Tree>> = [[tree]];\n  const mapNodeLayers: Array<Record<string, MapNode>> = [\n    {\n      [tree.id]: {\n        id: tree.id,\n        border: rootBorder,\n        title: tree.title,\n        center: rootPosition\n      }\n    }\n  ];\n  /*eslint no-constant-condition: [\"error\", { \"checkLoops\": false }]*/\n  while (true) {\n    const lastTreeLayer = treeLayers[treeLayers.length - 1];\n    const lastMapNodeLayer = mapNodeLayers[treeLayers.length - 1];\n    const newTreeLayer = [];\n    const newMapNodeLayer: Record<string, MapNode> = {};\n    for (const treeNode of lastTreeLayer) {\n      if (!treeNode.children) {\n        return [\n          null,\n          NewErrorKV(\"treeToMapNodeLayers: treeNode with children undefined\", {\n            treeNode\n          })\n        ];\n      }\n      if (!treeNode.children.length) {\n        continue;\n      }\n      newTreeLayer.push(...treeNode.children);\n      if (!lastMapNodeLayer[treeNode.id]) {\n        return [\n          null,\n          NewErrorKV(\"Cannot find node in mapNodeLayers\", {\n            layer: mapNodeLayers[mapNodeLayers.length - 1],\n            treeNode: treeNode\n          })\n        ];\n      }\n\n      // denormalize positions\n      const treeNodeChildren = clone(treeNode.children) as Array<Tree>;\n      for (const child of treeNodeChildren) {\n        const [denormalizedPosition, err] = convertPosition(\n          \"denormalize\",\n          child.position,\n          treeNode.id,\n          [lastMapNodeLayer]\n        );\n        if (err) {\n          return [null, err];\n        }\n        child.position = denormalizedPosition!;\n      }\n      const [cells, error] = getVoronoiCells(\n        lastMapNodeLayer[treeNode.id].border,\n        treeNodeChildren.map(ch => ({ x: ch.position.x, y: ch.position.y }))\n      );\n      if (error != null) {\n        return [null, error];\n      }\n\n      for (const cell of cells) {\n        for (const child of treeNodeChildren) {\n          if (\n            child.position.x == cell.center.x &&\n            child.position.y == cell.center.y\n          ) {\n            newMapNodeLayer[child.id] = {\n              id: child.id,\n              title: child.title,\n              center: child.position,\n              border: cell.border\n            };\n          }\n        }\n      }\n    }\n\n    if (newTreeLayer.length) {\n      treeLayers.push(newTreeLayer);\n      mapNodeLayers.push(newMapNodeLayer);\n    } else {\n      return [mapNodeLayers, null];\n    }\n  }\n}\n\nexport function mergeMapNodeLayers(\n  recipientLayers: Record<string, MapNode>[],\n  insertedLayers: Record<string, MapNode>[],\n  startFromLevel: number\n): ErrorKV {\n  if (startFromLevel >= recipientLayers.length || startFromLevel < 0) {\n    return NewErrorKV(\n      \"startFromLevel >= recipientLayers.length or startFromLevel < 0\",\n      {\n        startFromLevel,\n        \"recipientLayers.length\": recipientLayers.length\n      }\n    );\n  }\n  let i = startFromLevel;\n  while (i < startFromLevel + insertedLayers.length) {\n    for (const id in insertedLayers[i - startFromLevel]) {\n      recipientLayers[i][id] = insertedLayers[i - startFromLevel][id];\n    }\n    i++;\n  }\n\n  return null;\n}\n","import { MapNode, Point, Tree } from \"@/types/graphics\";\nimport {\n  convertPosition,\n  isInside,\n  treeToMapNodeLayers,\n  treeToNodeRecord\n} from \"@/tools/graphics\";\nimport { findMapNode, updatePosition } from \"@/store/tree/helpers\";\nimport { ErrorKV } from \"@/types/errorkv\";\nimport NewErrorKV from \"@/tools/errorkv\";\nimport { DBNode } from \"@/api/types\";\nimport { printError, round } from \"@/tools/utils\";\nimport api from \"@/api/api\";\nimport { Commit } from \"vuex\";\nimport firebase from \"firebase\";\nconst XSkew = api.ROOT_WIDTH / 7;\nconst ROOT_BORDER = [\n  { x: XSkew, y: 0 },\n  { x: 0, y: 0.3 * api.ROOT_HEIGHT },\n  { x: 0, y: 0.7 * api.ROOT_HEIGHT },\n  { x: XSkew, y: api.ROOT_HEIGHT },\n  { x: 0.3 * (api.ROOT_WIDTH - 2 * XSkew) + XSkew, y: 1.1 * api.ROOT_HEIGHT },\n  { x: 0.6 * (api.ROOT_WIDTH - 2 * XSkew) + XSkew, y: 1.1 * api.ROOT_HEIGHT },\n  { x: api.ROOT_WIDTH - 2 * XSkew + XSkew, y: api.ROOT_HEIGHT },\n  { x: api.ROOT_WIDTH, y: 0.7 * api.ROOT_HEIGHT },\n  { x: api.ROOT_WIDTH, y: 0.3 * api.ROOT_HEIGHT },\n  { x: api.ROOT_WIDTH - XSkew, y: 0 },\n  {\n    x: api.ROOT_WIDTH - XSkew - 0.3 * (api.ROOT_WIDTH - 2 * XSkew),\n    y: -0.1 * api.ROOT_HEIGHT\n  },\n  {\n    x: api.ROOT_WIDTH - XSkew - 0.7 * (api.ROOT_WIDTH - 2 * XSkew),\n    y: -0.1 * api.ROOT_HEIGHT\n  }\n];\nconst ROOT_CENTER = { x: api.ROOT_WIDTH / 2, y: api.ROOT_HEIGHT / 2 };\n\nexport interface NodeRecordItem {\n  node: Tree;\n  parent: Tree | null;\n}\n\nexport interface State {\n  tree: Tree | null;\n  nodeRecord: Record<string, NodeRecordItem>;\n  mapNodeLayers: Array<Record<string, MapNode>>;\n  selectedNodeId: string | null;\n}\n\nexport const mutations = {\n  SET_SELECTED_NODE_ID: \"SET_SELECTED_NODE_ID\",\n  SET_TREE: \"SET_TREE\",\n  UPDATE_NODE_POSITION: \"UPDATE_NODE_POSITION\",\n  REMOVE_NODE: \"REMOVE_NODE\"\n};\n\nexport const actions = {\n  handleDBUpdate: \"handleDBUpdate\"\n};\n\nexport const store = {\n  namespaced: true,\n  state() {\n    return {\n      tree: null,\n      nodeRecord: {}, // id => NodeRecordItem\n      mapNodeLayers: [],\n      selectedNodeId: null\n    };\n  },\n\n  getters: {\n    selectedNode: (state: State) => {\n      if (!state.selectedNodeId) {\n        return null;\n      }\n      if (!state.nodeRecord[state.selectedNodeId]) {\n        return null;\n      }\n      return state.nodeRecord[state.selectedNodeId].node;\n    }\n  },\n\n  actions: {\n    /**\n     * Update tree and dependant structures on DBNode change\n     *\n     * После добавления нового узла мы не вносим изменения а сохраняем в базу и ждем пока оттуда придет обновление\n     *\n     * Маппинг изменений в виде снэпшотов на изменения в формате store/history выглядит следующим образом.\n     * Мы сравниваем наш узел и пришедший новый снэпшот этого узла\n     *\n     * Если видим удаление child, то это либо перенос либо удаление узла.\n     * В любом случае мы можем у себя удалить этот узел (мы не удаляем всю информацию, только из дерева - 'fake removal').\n     * Если это перенос, то мы либо получили событие добавления в другой узел,\n     * до этого события, либо получим его после. Если мы его уже получили до, то мы из этого узла уже должны были его удалить,\n     * так что остается вариант когда мы еще получим событие о добавлении. В этом случаем для нас это будет добавление нового узла.\n     * То есть мы запросим из базы этот узел и вставим его\n     *\n     * Если видим добавление child то это либо перенос либо добавление нового узла. Если мы не находим у себя child с таким id\n     * то это добавление - нам нужно запросить из базы node с таким id и добавить его к себе.\n     * Если в nodeRecord есть такой узел, то это перенос - мы удаляем его из старого родителя и вставляем в новый\n     *\n     * Этими двумя кейсами покрываются события добавления, удаления и переноса.\n     * Событие изменения имени и позиции мапятся тривиально\n     *\n     * @param commit\n     * @param state\n     * @param arg\n     */\n    async [actions.handleDBUpdate](\n      { commit, state }: { commit: Commit; state: State },\n      arg: { dbNode: DBNode; user: firebase.User | null }\n    ) {\n      const dbNodeRecord = state.nodeRecord[arg.dbNode.id];\n      if (!dbNodeRecord) {\n        printError(\"UPDATE_NODE: Cannot find dbNode in dbNodeRecord\", {\n          \"dbNode.id\": arg.dbNode.id\n        });\n        return;\n      }\n\n      const oldDBNode = {\n        id: dbNodeRecord.node.id,\n        parentID: dbNodeRecord.parent ? dbNodeRecord.parent.id : null,\n        name: dbNodeRecord.node.title,\n        children: dbNodeRecord.node.children.map(n => n.id).sort(),\n        position: dbNodeRecord.node.position\n      };\n\n      const newChildren = arg.dbNode.children.filter(\n        x => !oldDBNode.children.includes(x)\n      );\n      const removedChildren = oldDBNode.children.filter(\n        x => !arg.dbNode.children.includes(x)\n      );\n\n      // Add/move of new child\n      if (newChildren.length) {\n        for (const childID of newChildren) {\n          if (state.nodeRecord[childID]) {\n            console.log(\n              \"actions.handleDBUpdate: remove node for cut-and-paste\",\n              state.nodeRecord[childID]\n            );\n            // if we already have this node, then it is cut-and-paste new parent\n            // so we should remove node from old parent\n            const v = {\n              nodeID: childID,\n              returnError: null\n            };\n            commit(mutations.REMOVE_NODE, {\n              nodeID: childID,\n              returnError: null\n            });\n            if (v.returnError) {\n              printError(\"handleDBUpdate: cannot cut node\", {\n                err: v.returnError\n              });\n            }\n          }\n\n          // request node and its children from the server, fill in tree\n          const addedDBNode = await api.getNode(childID);\n          console.log(\n            \"actions.handleDBUpdate: add node for cut-and-paste\",\n            addedDBNode\n          );\n\n          const toProcess = [addedDBNode];\n          if (!addedDBNode) {\n            // we cannot find node for addition, remove it from parent\n            arg.dbNode.children = arg.dbNode.children.filter(\n              id => id != childID\n            );\n            printError(\"Cannot find node for addition\", { nodeID: childID });\n            continue;\n          }\n          while (toProcess.length) {\n            const inProcessNode = toProcess.pop();\n            if (!inProcessNode) {\n              continue;\n            }\n            // create new MapNode\n            const treeNode = {\n              id: inProcessNode.id,\n              title: inProcessNode.name,\n              position: inProcessNode.position,\n              children: [],\n              wikipedia: \"\",\n              resources: []\n            } as Tree;\n            if (!state.nodeRecord[inProcessNode.parentID]) {\n              printError(\"Cannot find nodeID in nodeRecord\", {\n                nodeID: inProcessNode.parentID\n              });\n              return;\n            }\n            // make sure we have no duplicates\n            state.nodeRecord[\n              inProcessNode.parentID\n            ].node.children = state.nodeRecord[\n              inProcessNode.parentID\n            ].node.children.filter(n => n.id != treeNode.id);\n            // add child to parent\n            state.nodeRecord[inProcessNode.parentID].node.children.push(\n              treeNode\n            );\n            // add child to nodeRecord\n            state.nodeRecord[treeNode.id] = {\n              parent: state.nodeRecord[inProcessNode.parentID].node,\n              node: treeNode\n            };\n            for (const childID of inProcessNode.children) {\n              const childNode = await api.getNode(childID);\n              if (!childNode) {\n                // we cannot find node for addition, remove it from parent\n                inProcessNode.children = inProcessNode.children.filter(\n                  id => id != childID\n                );\n                printError(\"Cannot find node for addition\", {\n                  nodeID: childID\n                });\n                continue;\n              }\n              toProcess.push(childNode);\n            }\n          }\n\n          const [ls, err2] = treeToMapNodeLayers(\n            state.tree!,\n            ROOT_BORDER,\n            ROOT_CENTER\n          );\n          if (err2) {\n            printError(\"Cannot treeToMapNodeLayers\", { err: err2 });\n            return;\n          }\n          state.mapNodeLayers = ls!;\n        }\n      }\n\n      // Remove of child\n      if (removedChildren.length) {\n        for (const childID of removedChildren) {\n          if (!state.nodeRecord[childID] || !state.nodeRecord[childID].parent) {\n            // node was already removed somewhere\n            continue;\n          }\n          if (\n            state.nodeRecord[childID] &&\n            state.nodeRecord[childID].parent!.id !== arg.dbNode.id\n          ) {\n            // node was already removed from this parent (this is cut-and-paste operation)\n            continue;\n          }\n          console.log(\n            \"actions.handleDBUpdate: removing children\",\n            state.nodeRecord[childID]\n          );\n          const v = { nodeID: childID, returnError: null };\n          commit(mutations.REMOVE_NODE, v);\n          if (v.returnError) {\n            printError(\"actions.handleDBUpdate: cannot remove node\", {\n              err: v.returnError,\n              id: childID\n            });\n          }\n        }\n      }\n\n      // Change of position\n      if (\n        round(arg.dbNode.position.x) !== round(oldDBNode.position.x) ||\n        round(arg.dbNode.position.y) !== round(oldDBNode.position.y)\n      ) {\n        // calculate denormalized position of dbNode\n        const [denormalizedPosition] = convertPosition(\n          \"denormalize\",\n          arg.dbNode.position,\n          dbNodeRecord.parent ? dbNodeRecord.parent.id : null,\n          state.mapNodeLayers\n        );\n        if (oldDBNode.parentID == arg.dbNode.parentID) {\n          // we do not want to process position change due to parent change - it is already processed by ADD_NODE\n          const v = {\n            nodeId: arg.dbNode.id,\n            newCenter: denormalizedPosition,\n            returnError: null\n          };\n          commit(mutations.UPDATE_NODE_POSITION, v);\n          if (v.returnError !== null) {\n            printError(\n              \"actions.handleDBUpdate: cannot update node's position\",\n              { \"arg.dbNode\": arg.dbNode, err: v.returnError }\n            );\n            return;\n          }\n        }\n      }\n\n      // Change of name\n      if (oldDBNode.name !== arg.dbNode.name) {\n        dbNodeRecord.node.title = arg.dbNode.name;\n        const [node] = findMapNode(oldDBNode.id, state.mapNodeLayers);\n        if (!node) {\n          return;\n        }\n        node.title = arg.dbNode.name;\n      }\n    }\n  },\n  mutations: {\n    /**\n     * REMOVE_NODE\n     * @param state\n     * @param v\n     */\n    [mutations.REMOVE_NODE](\n      state: State,\n      v: { nodeID: string; returnError: ErrorKV }\n    ) {\n      if (state.tree === null) {\n        v.returnError = NewErrorKV(\"state.tree === null\", {});\n        return;\n      }\n\n      if (!state.nodeRecord[v.nodeID]) {\n        v.returnError = NewErrorKV(\n          \"REMOVE_NODE: cannot find nodeId in nodeRecord\",\n          { nodeID: v.nodeID, nodeRecord: state.nodeRecord }\n        );\n        return;\n      }\n      const parent = state.nodeRecord[v.nodeID].parent;\n      if (!parent) {\n        v.returnError = NewErrorKV(\"REMOVE_NODE: cannot remove root node\", {\n          nodeId: v.nodeID\n        });\n        return;\n      }\n\n      // remove node and its descendants from nodeRecord\n      const stack = [v.nodeID];\n      while (stack.length) {\n        const id = stack.pop();\n        if (!id) {\n          continue;\n        }\n        stack.push(...state.nodeRecord[id].node.children.map(node => node.id));\n        delete state.nodeRecord[id];\n      }\n\n      // remove from parent's children\n      const ind = parent.children.findIndex(node => node.id === v.nodeID);\n      parent.children.splice(ind, 1);\n\n      // update layers\n      const [ls, err2] = treeToMapNodeLayers(\n        state.tree,\n        ROOT_BORDER,\n        ROOT_CENTER\n      );\n      if (ls == null || err2 != null) {\n        v.returnError = err2;\n        return;\n      }\n\n      state.mapNodeLayers = ls;\n    },\n\n    /**\n     * SET_SELECTED_NODE_ID\n     * @param state\n     * @param id\n     */\n    [mutations.SET_SELECTED_NODE_ID](state: State, id: string | null) {\n      state.selectedNodeId = id;\n    },\n\n    /**\n     * SET_TREE\n     * @param state\n     * @param tree\n     */\n    [mutations.SET_TREE](state: State, tree: Tree | null) {\n      if (tree == null) {\n        state.tree = null;\n        state.nodeRecord = {};\n        state.mapNodeLayers = [];\n        return;\n      }\n      state.tree = tree;\n\n      // traverse tree and fill in nodeRecord\n      state.nodeRecord = treeToNodeRecord(tree);\n\n      // fill state.mapNodeLayers\n      const [ls, err] = treeToMapNodeLayers(tree, ROOT_BORDER, ROOT_CENTER);\n      if (ls == null || err != null) {\n        console.error(err);\n        return;\n      }\n      state.mapNodeLayers = ls;\n    },\n\n    /**\n     * UPDATE_NODE_POSITION\n     * @param state\n     * @param v\n     */\n    [mutations.UPDATE_NODE_POSITION](\n      state: State,\n      v: {\n        nodeId: string;\n        newCenter: Point;\n        returnError: ErrorKV; // still waiting for vuex to implement mutation return values https://github.com/vuejs/vuex/issues/1437\n      }\n    ) {\n      // check that new position is inside parent borders\n      const parent = state.nodeRecord[v.nodeId].parent;\n      if (parent !== null) {\n        const [parentMapNode] = findMapNode(parent.id, state.mapNodeLayers);\n        if (!parentMapNode) {\n          v.returnError = NewErrorKV(\n            \"UPDATE_NODE_POSITION: cannot find parent mapNode\",\n            {\n              \"parent.id\": parent.id,\n              \"state.mapNodeLayers\": state.mapNodeLayers\n            }\n          );\n          return;\n        }\n\n        if (!isInside(v.newCenter, parentMapNode.border)) {\n          v.returnError = NewErrorKV(\"!isInside\", {\n            newCenter: v.newCenter,\n            \"parentMapNode.border\": parentMapNode.border\n          });\n          return;\n        }\n      }\n\n      v.returnError = updatePosition(state, {\n        nodeId: v.nodeId,\n        position: v.newCenter\n      });\n    }\n  }\n};\n","import { Point } from \"@/types/graphics\";\n\nexport const mutations = {\n  ADD_CUT_PASTE: \"ADD_CUT_PASTE\",\n  ADD_CREATE: \"ADD_CREATE\",\n  ADD_REMOVE: \"ADD_REMOVE\",\n  ADD_POSITION_CHANGE: \"ADD_POSITION_CHANGE\"\n};\n\nenum changeTypeEnum {\n  CUT_PASTE = \"CUT_PASTE\",\n  CREATE = \"CREATE\",\n  REMOVE = \"REMOVE\",\n  POSITION_CHANGE = \"POSITION_CHANGE\"\n}\n\nconst changeTypes = {\n  CUT_PASTE: \"CUT_PASTE\" as changeTypeEnum.CUT_PASTE,\n  CREATE: \"CREATE\" as changeTypeEnum.CREATE,\n  REMOVE: \"REMOVE\" as changeTypeEnum.REMOVE,\n  POSITION_CHANGE: \"POSITION_CHANGE\" as changeTypeEnum.POSITION_CHANGE\n};\n\nexport interface CHCutPaste {\n  nodeID: string; // object of change\n  oldParentID: string; // old parent\n  newParentID: string; // new parent\n}\n\nexport interface CHCreate {\n  nodeID: string; // object of change\n  parentID: string; // new parent\n}\n\nexport interface CHRemove {\n  nodeID: string; // object of change\n  parentID: string; // parent where object sits (we need it to revert this event)\n}\n\nexport interface CHPositionChange {\n  nodeID: string; // object of change\n  oldPosition: Point; // old position (we need it to revert this event)\n  newPosition: Point; // new position\n}\n\nexport type TreeChangeList = Record<\n  string,\n  {\n    [changeTypeEnum.CUT_PASTE]?: CHCutPaste;\n    [changeTypeEnum.CREATE]?: CHCreate;\n    [changeTypeEnum.REMOVE]?: CHRemove;\n    [changeTypeEnum.POSITION_CHANGE]?: CHPositionChange;\n  }\n>;\n\nexport interface State {\n  // список изменений который отличает текущую мастер ветку\n  // от того мастера с которого мы начали локальные изменения\n  stableChangeList: TreeChangeList;\n  // список локальных изменений\n  localChangeList: TreeChangeList;\n}\n\nexport const store = {\n  namespaced: true,\n  state: {\n    stableChangeList: {},\n    localChangeList: {}\n  },\n  mutations: {\n    [mutations.ADD_CUT_PASTE](state: State, change: CHCutPaste) {\n      if (!state.localChangeList[change.nodeID]) {\n        state.localChangeList[change.nodeID] = {};\n      }\n      if (state.localChangeList[change.nodeID][changeTypes.CREATE]) {\n        // if user ADDed then MOVEd node then it is simply addition to CUT_PASTE newParentID\n        state.localChangeList[change.nodeID][changeTypes.CREATE]!.parentID =\n          change.newParentID;\n      } else {\n        state.localChangeList[change.nodeID][changeTypes.CUT_PASTE] = change;\n      }\n    },\n    [mutations.ADD_CREATE](state: State, change: CHCreate) {\n      if (!state.localChangeList[change.nodeID]) {\n        state.localChangeList[change.nodeID] = {};\n      }\n      state.localChangeList[change.nodeID][changeTypes.CREATE] = change;\n    },\n    [mutations.ADD_REMOVE](state: State, change: CHRemove) {\n      // clear changelist for this node because REMOVE vanishes them anyway\n      state.localChangeList[change.nodeID] = {};\n      state.localChangeList[change.nodeID][changeTypes.REMOVE] = change;\n    },\n    [mutations.ADD_POSITION_CHANGE](state: State, change: CHPositionChange) {\n      if (!state.localChangeList[change.nodeID]) {\n        state.localChangeList[change.nodeID] = {};\n      }\n      let firstOldPosition = change.oldPosition;\n      if (state.localChangeList[change.nodeID][changeTypes.POSITION_CHANGE]) {\n        firstOldPosition = state.localChangeList[change.nodeID][\n          changeTypes.POSITION_CHANGE\n        ]!.oldPosition;\n      }\n      state.localChangeList[change.nodeID][changeTypes.POSITION_CHANGE] = {\n        nodeID: change.nodeID,\n        oldPosition: firstOldPosition,\n        newPosition: change.newPosition\n      };\n    }\n  },\n  actions: {}\n};\n","import { Point, Vector } from \"@/types/graphics\";\nimport { addVector, vectorOnNumber } from \"@/tools/graphics\";\nimport { debounce } from \"lodash\";\n\nexport interface State {\n  zoom: number;\n  zoomCenter: Point;\n  pan: Point;\n  debouncedZoom: number;\n  debouncedPan: Point;\n}\n\nexport const mutations = {\n  ADD_ZOOM: \"ADD_ZOOM\",\n  ADD_PAN: \"ADD_PAN\",\n  SET_ZOOM_CENTER: \"SET_ZOOM_CENTER\"\n};\n\nconst zoomDebounce = debounce((state, value: number) => {\n  state.debouncedZoom = value;\n}, 100);\n\nconst panDebounce = debounce((state, value: Point) => {\n  state.debouncedPan = value;\n}, 100);\n\nconst ZOOM_SENSITIVITY = 1 / 100;\nconst PAN_SENSITIVITY = 1;\n\nexport const store = {\n  namespaced: true,\n  state: {\n    zoom: 1,\n    pan: { x: 0, y: 0 },\n    debouncedZoom: 1,\n    debouncedPan: { x: 0, y: 0 },\n    zoomCenter: { x: 0, y: 0 }\n  },\n  mutations: {\n    [mutations.SET_ZOOM_CENTER](state: State, center: Point) {\n      state.zoomCenter = center;\n    },\n    [mutations.ADD_ZOOM](state: State, delta: number) {\n      state.zoom = state.zoom * Math.pow(2, delta * ZOOM_SENSITIVITY);\n      zoomDebounce(state, state.zoom);\n    },\n    [mutations.ADD_PAN](state: State, delta: Vector) {\n      state.pan = addVector(\n        { from: { x: 0, y: 0 }, to: state.pan },\n        vectorOnNumber(delta, PAN_SENSITIVITY)\n      ).to;\n      panDebounce(state, state.pan);\n    }\n  }\n};\n","import firebase from \"firebase\";\nimport api from \"@/api/api\";\nimport { Commit } from \"vuex\";\n\nexport interface State {\n  user: firebase.User | null;\n}\n\nexport const mutations = {\n  SET_USER: \"SET_USER\"\n};\nexport const actions = {\n  signIn: \"signIn\",\n  signOut: \"signOut\"\n};\n\nexport const store = {\n  namespaced: true,\n  state: {\n    user: null\n  },\n  mutations: {\n    [mutations.SET_USER](state: State, user: firebase.User) {\n      state.user = user;\n    }\n  },\n  actions: {\n    async [actions.signIn]({ commit }: { commit: Commit }) {\n      await firebase\n        .auth()\n        .signInWithPopup(new firebase.auth.GoogleAuthProvider());\n    },\n\n    async [actions.signOut]({ commit }: { commit: Commit }) {\n      await firebase.auth().signOut();\n      commit(mutations.SET_USER, null);\n    }\n  }\n};\n","export type ResourceType = \"book\" | \"article\" | \"other\";\nexport type Resource = {\n  id: string;\n  type: ResourceType;\n  author: string;\n  title: string;\n  chapterNumber: string;\n  chapterName: string;\n  findPhrase: string; // как найти - цитата, главы, ссылки\n  url: string;\n  doi: string;\n  isbn: string;\n  createdAt: number; // = Date.UTC()\n  updatedAt: number; // = Date.UTC()\n};\n\nexport type Resources = Record<\n  string /* id of resource */,\n  Resource /* resource */\n>;\n\nexport interface State {\n  resources: Resources;\n}\n\nexport const mutations = {\n  SET_RESOURCES: \"SET_RESOURCES\",\n  ADD_TO_RESOURCES: \"ADD_TO_RESOURCES\"\n};\n\nexport const actions = {\n  find: \"find\",\n  getByID: \"getByID\"\n};\n\nexport const store = {\n  namespaced: true,\n  state: {\n    resources: {} as Resources\n  },\n  actions: {\n    [actions.find]({ state }: { state: State }, str: string): Resource[] {\n      const result = [];\n      for (const id in state.resources) {\n        const resource = state.resources[id];\n        if (\n          resource.author.indexOf(str) != -1 ||\n          resource.title.indexOf(str) != -1 ||\n          resource.chapterName.indexOf(str) != -1 ||\n          resource.doi.indexOf(str) != -1 ||\n          resource.isbn.indexOf(str) != -1\n        ) {\n          result.push(resource);\n        }\n      }\n\n      return result;\n    },\n    [actions.getByID]({ state }: { state: State }, id: string): Resource {\n      return state.resources[id];\n    }\n  },\n  mutations: {\n    [mutations.SET_RESOURCES](state: State, resources: Resources) {\n      state.resources = resources;\n    },\n    [mutations.ADD_TO_RESOURCES](state: State, resource: Resource) {\n      state.resources[resource.id] = resource;\n    }\n  }\n};\n","import { clone, printError } from \"@/tools/utils\";\nimport { Commit } from \"vuex\";\nimport api from \"@/api/api\";\nimport { ErrorKV } from \"@/types/errorkv\";\nimport { State as UserState } from \"@/store/user\";\n\nexport type NodeContent = {\n  nodeID: string;\n  content: string;\n  resourceIds: Array<string>;\n};\n\n// user private comment\nexport type NodeComment = {\n  nodeID: string;\n  comment: string;\n};\n\nexport interface State {\n  nodeContents: Record<string, NodeContent>;\n  userNodeComments: Record<string, NodeComment>;\n}\n\nexport const mutations = {\n  SET_CONTENTS: \"SET_CONTENTS\",\n  SET_USER_COMMENTS: \"SET_USER_COMMENTS\",\n  SET_NODE_CONTENT: \"SET_NODE_CONTENT\",\n  SET_NODE_COMMENT: \"SET_NODE_COMMENT\",\n  REMOVE_NODE_RESOURCE: \"REMOVE_NODE_RESOURCE\",\n  ADD_NODE_RESOURCE: \"ADD_NODE_RESOURCE\"\n};\n\nexport const actions = {\n  getNodeContent: \"getNodeContent\",\n  setNodeContent: \"setNodeContent\",\n  setNodeComment: \"setNodeComment\",\n  removeNodeResource: \"removeNodeResource\",\n  addNodeResource: \"addNodeResource\"\n};\n\nexport const EmptyNodeContent = {\n  nodeID: \"\",\n  content: \"\",\n  resourceIds: []\n} as NodeContent;\n\nfunction createContentIfNotExist(\n  nodeContents: Record<string, NodeContent>,\n  nodeID: string\n) {\n  if (!nodeContents[nodeID]) {\n    nodeContents[nodeID] = clone(EmptyNodeContent);\n    nodeContents[nodeID].nodeID = nodeID;\n  }\n}\n\nexport const EmptyNodeComment = {\n  nodeID: \"\",\n  comment: \"\"\n} as NodeComment;\n\nfunction createCommentIfNotExist(\n  userNodeComments: Record<string, NodeComment>,\n  nodeID: string\n) {\n  if (!userNodeComments[nodeID]) {\n    userNodeComments[nodeID] = clone(EmptyNodeComment);\n    userNodeComments[nodeID].nodeID = nodeID;\n  }\n}\n\nexport const store = {\n  namespaced: true,\n  state: {\n    nodeContents: {} as Record<string, NodeContent>,\n    userNodeComments: {} as Record<string, NodeComment>\n  } as State,\n  actions: {\n    [actions.getNodeContent](\n      { state }: { state: State },\n      nodeID: string\n    ): NodeContent {\n      return state.nodeContents[nodeID];\n    },\n\n    /**\n     *\n     * @param commit\n     * @param state\n     * @param v\n     */\n    async [actions.removeNodeResource](\n      { commit, state }: { commit: Commit; state: State },\n      v: { nodeID: string; resourceID: string }\n    ) {\n      // remove from DB\n      const err = await api.update({\n        [`node_content/${v.nodeID}/resourceIds/${v.resourceID}`]: null\n      });\n      if (err) {\n        printError(\"removeNodeResource: api.update error\", { err });\n        return;\n      }\n\n      // add to local store\n      commit(`${mutations.REMOVE_NODE_RESOURCE}`, v);\n    },\n\n    /**\n     *\n     * @param commit\n     * @param state\n     * @param v\n     */\n    async [actions.addNodeResource](\n      { commit, state }: { commit: Commit; state: State },\n      v: { nodeID: string; resourceID: string }\n    ) {\n      // remove from DB\n      const err = await api.update({\n        [`node_content/${v.nodeID}/resourceIds/${v.resourceID}`]: true\n      });\n      if (err) {\n        printError(\"addNodeResource: api.update error\", { err });\n        return;\n      }\n\n      // add to local store\n      commit(`${mutations.ADD_NODE_RESOURCE}`, v);\n    },\n\n    /**\n     * setNodeComment\n     * @param commit\n     * @param state\n     * @param v\n     */\n    async [actions.setNodeComment](\n      { commit, rootState }: { commit: Commit; rootState: { user: UserState } },\n      v: { nodeID: string; comment: string }\n    ): Promise<ErrorKV> {\n      // cannot save for unauthorized user\n      if (!rootState.user.user || rootState.user.user.isAnonymous) {\n        return null;\n      }\n\n      // add to DB\n      const err = await api.update({\n        [`user_data/${rootState.user.user.uid}/comment/${v.nodeID}/nodeID`]: v.nodeID,\n        [`user_data/${rootState.user.user.uid}/comment/${v.nodeID}/comment`]: v.comment\n      });\n      if (err) {\n        return err;\n      }\n\n      // change in local store\n      commit(`${mutations.SET_NODE_COMMENT}`, v);\n\n      return null;\n    },\n\n    /**\n     * setNodeContent\n     * @param commit\n     * @param state\n     * @param v\n     */\n    async [actions.setNodeContent](\n      { commit, state }: { commit: Commit; state: State },\n      v: { nodeID: string; content: string }\n    ): Promise<ErrorKV> {\n      // add to DB\n      const err = await api.update({\n        [`node_content/${v.nodeID}/nodeID`]: v.nodeID,\n        [`node_content/${v.nodeID}/content`]: v.content\n      });\n      if (err) {\n        return err;\n      }\n\n      // change in local store\n      commit(`${mutations.SET_NODE_CONTENT}`, v);\n\n      return null;\n    }\n  },\n  mutations: {\n    /**\n     * SET_CONTENTS\n     * @param state\n     * @param nodeContents\n     */\n    [mutations.SET_CONTENTS](\n      state: State,\n      nodeContents: Record<string, NodeContent>\n    ) {\n      state.nodeContents = nodeContents;\n    },\n\n    /**\n     * SET_USER_CONTENTS\n     * @param state\n     * @param userNodeComments\n     */\n    [mutations.SET_USER_COMMENTS](\n      state: State,\n      userNodeComments: Record<string, NodeComment>\n    ) {\n      state.userNodeComments = userNodeComments;\n    },\n\n    /**\n     * SET_NODE_CONTENT\n     * @param state\n     * @param v\n     */\n    [mutations.SET_NODE_CONTENT](\n      state: State,\n      v: { nodeID: string; content: string }\n    ) {\n      createContentIfNotExist(state.nodeContents, v.nodeID);\n      state.nodeContents[v.nodeID].content = v.content;\n    },\n\n    /**\n     * SET_NODE_COMMENT\n     * @param state\n     * @param v\n     */\n    [mutations.SET_NODE_COMMENT](\n      state: State,\n      v: { nodeID: string; comment: string }\n    ) {\n      createCommentIfNotExist(state.userNodeComments, v.nodeID);\n      state.userNodeComments[v.nodeID].comment = v.comment;\n    },\n\n    /**\n     * REMOVE_NODE_RESOURCE\n     * @param state\n     * @param v\n     */\n    [mutations.REMOVE_NODE_RESOURCE](\n      state: State,\n      v: { nodeID: string; resourceID: string }\n    ) {\n      if (\n        !state.nodeContents[v.nodeID] ||\n        !state.nodeContents[v.nodeID].resourceIds\n      ) {\n        return;\n      }\n      const ind = state.nodeContents[v.nodeID].resourceIds.indexOf(\n        v.resourceID\n      );\n      if (ind == -1) {\n        return;\n      }\n      state.nodeContents[v.nodeID].resourceIds.splice(ind, 1);\n    },\n    /**\n     * ADD_NODE_RESOURCE\n     * @param state\n     * @param v\n     */\n    [mutations.ADD_NODE_RESOURCE](\n      state: State,\n      v: { nodeID: string; resourceID: string }\n    ) {\n      createContentIfNotExist(state.nodeContents, v.nodeID);\n      state.nodeContents[v.nodeID].resourceIds.push(v.resourceID);\n    }\n  }\n};\n","import firebase from \"firebase\";\nimport api from \"@/api/api\";\nimport { mutations as treeMutations } from \"@/store/tree\";\nimport { mutations as pinMutations } from \"@/store/pin\";\nimport { mutations as preconditionMutations } from \"@/store/precondition\";\nimport { mutations as resourcesMutations } from \"@/store/resources\";\nimport {\n  mutations as nodeContentMutations,\n  NodeContent\n} from \"@/store/node_content\";\nimport { store } from \"@/store/index\";\nimport { printError } from \"@/tools/utils\";\n\nexport async function fetchMap(user: firebase.User | null) {\n  const [tree, err] = await api.getMap(user);\n  if (tree == null || err) {\n    printError(\"fetchMap: cannot api.getMap(user)\", { err });\n  }\n\n  store.commit(`tree/${treeMutations.SET_TREE}`, tree);\n}\n\nexport async function fetchPins(user: firebase.User | null) {\n  let [pins, err] = await api.getPins(user);\n  if (pins == null || err) {\n    console.error(err);\n  }\n\n  if (user && !pins) {\n    [pins, err] = await api.getPins(null);\n    if (pins == null || err) {\n      console.error(err);\n      pins = {};\n    }\n  }\n\n  store.commit(`pin/${pinMutations.SET_PINS}`, pins);\n}\n\nexport async function fetchPreconditions(user: firebase.User | null) {\n  let [preconditions, err] = await api.getPreconditions(user);\n  if (preconditions == null || err) {\n    console.error(err);\n    preconditions = {};\n  }\n\n  if (user && !preconditions) {\n    [preconditions, err] = await api.getPreconditions(null);\n    if (preconditions == null || err) {\n      console.error(err);\n      preconditions = {};\n    }\n  }\n\n  store.commit(\n    `precondition/${preconditionMutations.SET_PRECONDITIONS}`,\n    preconditions\n  );\n}\n\nexport async function fetchResources() {\n  const [resources, err] = await api.getResources();\n  if (resources == null || err) {\n    printError(\"fetchResources error\", { err });\n    return;\n  }\n\n  store.commit(`resources/${resourcesMutations.SET_RESOURCES}`, resources);\n}\n\nexport async function fetchNodeContents(user: firebase.User | null) {\n  // fetch node_content from general map\n  const [nodeContent, err] = await api.getNodeContent();\n  if (nodeContent == null || err) {\n    printError(\"fetchNodeContents error\", { err });\n    return;\n  }\n\n  const nodeContents: Record<string, NodeContent> = {};\n  for (const i in nodeContent) {\n    nodeContents[i] = {\n      nodeID: nodeContent[i].nodeID,\n      content: nodeContent[i].content,\n      resourceIds: Object.keys(nodeContent[i].resourceIds)\n    } as NodeContent;\n  }\n\n  store.commit(\n    `nodeContent/${nodeContentMutations.SET_CONTENTS}`,\n    nodeContents\n  );\n\n  if (user) {\n    const [userComments, err] = await api.getUserComments(user);\n    if (userComments == null || err) {\n      printError(\"fetchNodeContents error\", { err, user });\n      return;\n    }\n\n    // fix in store\n    store.commit(\n      `nodeContent/${nodeContentMutations.SET_USER_COMMENTS}`,\n      userComments\n    );\n  }\n}\n\nexport async function fetchData(user: firebase.User | null) {\n  await fetchMap(user);\n  await fetchPins(user);\n  await fetchPreconditions(user);\n  await fetchResources();\n  await fetchNodeContents(user);\n}\n","import {\n  Commit,\n  createStore,\n  Dispatch,\n  Store,\n  useStore as baseUseStore\n} from \"vuex\";\nimport { InjectionKey } from \"vue\";\nimport { store as pinStore, State as PinState } from \"./pin\";\n\nimport {\n  store as preconditionStore,\n  State as PreconditionState\n} from \"./precondition\";\n\nimport {\n  store as treeStore,\n  State as TreeState,\n  mutations as treeMutations,\n  actions as treeActions\n} from \"./tree\";\n\nimport { store as zoomPanStore, State as ZoomPanState } from \"./zoom_pan\";\n\nimport {\n  store as userStore,\n  State as UserState,\n  mutations as userMutations,\n  actions as userActions\n} from \"./user\";\n\nimport {\n  store as historyStore,\n  State as HistoryState,\n  mutations as historyMutations\n} from \"./history\";\n\nimport {\n  store as resourcesStore,\n  State as ResourcesState,\n  mutations as resourcesMutations,\n  Resource\n} from \"./resources\";\n\nimport {\n  store as nodeContentStore,\n  State as NodeContentState\n} from \"./node_content\";\n\nimport api from \"@/api/api\";\nimport { fetchData } from \"./helpers\";\nimport { MapNode, Point } from \"@/types/graphics\";\nimport {\n  createNewNode,\n  findMapNode,\n  getNewNodeCenter\n} from \"@/store/tree/helpers\";\nimport NewErrorKV from \"@/tools/errorkv\";\nimport { addVector, convertPosition } from \"@/tools/graphics\";\nimport { DBNode } from \"@/api/types\";\nimport { isEqual, debounce } from \"lodash\";\nimport { printError } from \"@/tools/utils\";\nimport firebase from \"firebase\";\n\nexport type State = {\n  // root states\n  editModeOn: boolean;\n  subscribedNodeIDs: string[];\n\n  // module states\n  pin: PinState;\n  precondition: PreconditionState;\n  tree: TreeState;\n  user: UserState;\n  zoomPan: ZoomPanState;\n  history: HistoryState;\n  resources: ResourcesState;\n  nodeContent: NodeContentState;\n};\n\nexport const actions = {\n  init: \"init\",\n  updateNodePosition: \"updateNodePosition\",\n  createNode: \"createNode\",\n  cutPasteNode: \"cutPasteNode\",\n  removeNode: \"removeNode\",\n  handleDBUpdate: \"handleDBUpdate\", // apply external update from server\n  setEditMode: \"setEditMode\",\n  subscribeDBChange: \"subscribeDBChange\",\n\n  // manipulating node contents\n  addNewResource: \"addNewResource\",\n\n  // confirmSignInPopup\n  confirmSignInPopup: \"confirmSignInPopup\"\n};\n\nexport const mutations = {\n  SET_EDIT_MODE: \"SET_EDIT_MODE\",\n  SET_SUBSCRIBED_NODE_IDS: \"SET_SUBSCRIBED_NODE_IDS\"\n};\n\nconst debouncedPositionSet = debounce(\n  (\n    nodeID: string,\n    newCenter: Point,\n    parentID: string,\n    mapNodeLayers: Record<string, MapNode>[]\n  ) => {\n    const [normalizedNewNodeCenter] = convertPosition(\n      \"normalize\",\n      newCenter,\n      parentID,\n      mapNodeLayers\n    );\n\n    api.update({ [`map/${nodeID}/position`]: normalizedNewNodeCenter });\n  },\n  200\n);\n\nexport const key: InjectionKey<Store<State>> = Symbol();\n\nexport const store = createStore<State>({\n  state: {\n    editModeOn: false,\n    subscribedNodeIDs: [] as string[]\n  } as State,\n  mutations: {\n    [mutations.SET_EDIT_MODE](state: State, val: boolean) {\n      state.editModeOn = val;\n    },\n    [mutations.SET_SUBSCRIBED_NODE_IDS](state: State, val: string[]) {\n      state.subscribedNodeIDs = val;\n    }\n  },\n  actions: {\n    /**\n     * confirmSignInPopup\n     * @param commit\n     * @param state\n     * @param confirm\n     */\n    async [actions.confirmSignInPopup](\n      { dispatch, state }: { dispatch: Dispatch; state: State },\n      confirm: {\n        require(args: {\n          message?: string;\n          target?: EventTarget;\n          group?: string;\n          icon?: string;\n          header?: string;\n          accept?: Function;\n          reject?: Function;\n          acceptLabel?: string;\n          rejectLabel?: string;\n          acceptIcon?: string;\n          rejectIcon?: string;\n          blockScroll?: boolean;\n          acceptClass?: string;\n          rejectClass?: string;\n        }): void;\n\n        close(): void;\n      }\n    ) {\n      confirm.require({\n        message: \"Please authorize to change node contents\",\n        header: \"SignIn\",\n        acceptLabel: \"Ok, Sign In\",\n        rejectLabel: \"No, thanks, just watching\",\n        accept: async () => {\n          await dispatch(`user/${userActions.signIn}`);\n        },\n        reject: () => {\n          return;\n        }\n      });\n    },\n\n    /**\n     *\n     * @param commit\n     * @param state\n     * @param rs\n     */\n    async [actions.addNewResource](\n      { commit, state }: { commit: Commit; state: State },\n      rs: Resource\n    ): Promise<Resource | null> {\n      // save to DB\n      const newKey = api.generateKey();\n      if (!newKey) {\n        printError(\"addNewResource: Cannot api.generateKey\", {});\n        return null;\n      }\n      rs.id = newKey;\n      const updateMap: Record<string, any> = {\n        [`resources/${newKey}`]: rs\n      };\n      const err = await api.update(updateMap);\n      if (err) {\n        printError(\"addNewResource: cannot update\", { err });\n        return null;\n      }\n\n      // add to local resources\n      commit(`resources/${resourcesMutations.ADD_TO_RESOURCES}`, rs);\n\n      return rs;\n    },\n\n    /**\n     *\n     * @param commit\n     * @param state\n     * @param val\n     */\n    [actions.setEditMode](\n      { commit, state }: { commit: Commit; state: State },\n      val: boolean\n    ) {\n      commit(mutations.SET_EDIT_MODE, val);\n      if (!val) {\n        state.subscribedNodeIDs.forEach(id =>\n          api.unsubscribeDBChange(\"map/\" + id)\n        );\n        commit(mutations.SET_SUBSCRIBED_NODE_IDS, []);\n      }\n    },\n\n    /**\n     *\n     * @param dispatch\n     * @param state\n     * @param node\n     */\n    async [actions.handleDBUpdate](\n      { dispatch, state }: { dispatch: Dispatch; state: State },\n      node: DBNode\n    ) {\n      await dispatch(`tree/${treeActions.handleDBUpdate}`, {\n        dbNode: node,\n        user: state.user.user\n      });\n    },\n\n    /**\n     *\n     * @param commit\n     */\n    async [actions.init]({ commit }: { commit: Commit }) {\n      api.initFirebase();\n      firebase.auth().onAuthStateChanged(user => {\n        if (user && !user.isAnonymous) {\n          commit(`user/${userMutations.SET_USER}`, user);\n          fetchData(user);\n        } else {\n          commit(`user/${userMutations.SET_USER}`, null);\n          fetchData(null);\n        }\n      });\n    },\n\n    /**\n     *\n     * @param commit\n     * @param state\n     * @param v\n     */\n    async [actions.createNode](\n      { commit, state }: { commit: Commit; state: State },\n      v: {\n        parentID: string;\n        title: string;\n      }\n    ) {\n      const parent = state.tree.nodeRecord[v.parentID].node;\n      const [newCenter, changedNode, err1] = getNewNodeCenter(\n        parent,\n        state.tree.mapNodeLayers\n      );\n      if (err1 !== null) {\n        printError(\"Cannot create new center\", {\n          err: err1,\n          parent,\n          \"state.tree.mapNodeLayers\": state.tree.mapNodeLayers\n        });\n        return;\n      }\n\n      const [normalizedPosition, err2] = convertPosition(\n        \"normalize\",\n        newCenter!,\n        v.parentID,\n        state.tree.mapNodeLayers\n      );\n      if (err2) {\n        printError(\"createNode: cannot create new center\", {\n          err: err2,\n          parent,\n          \"state.tree.mapNodeLayers\": state.tree.mapNodeLayers\n        });\n        return;\n      }\n      const node = createNewNode(v.title, normalizedPosition!);\n      const newDBNode = {\n        id: node.id,\n        parentID: v.parentID,\n        name: v.title,\n        children: [],\n        position: normalizedPosition\n      };\n      const newKey = api.generateKey();\n      const updateMap: Record<string, any> = {\n        [`map/${newDBNode.id}`]: newDBNode,\n        [`map/${newDBNode.parentID}/children/${newKey}`]: newDBNode.id\n      };\n\n      if (changedNode) {\n        const [normalizedChangedCenter] = convertPosition(\n          \"normalize\",\n          changedNode.position,\n          v.parentID,\n          state.tree.mapNodeLayers\n        );\n        updateMap[`map/${changedNode.id}/position`] = normalizedChangedCenter;\n      }\n\n      await api.update(updateMap);\n\n      commit(`history/${historyMutations.ADD_CREATE}`, {\n        nodeID: node.id,\n        parentID: v.parentID\n      });\n    },\n\n    /**\n     *\n     * @param commit\n     * @param state\n     * @param v\n     */\n    async [actions.cutPasteNode](\n      { commit, state }: { commit: Commit; state: State },\n      v: {\n        nodeID: string;\n        parentID: string;\n      }\n    ) {\n      // remove nodeID from oldParent children,\n      // add to newParent children,\n      // recalculate position of node, normalize it and\n      // update DB with these three modifications in one transaction\n      const oldParent = state.tree.nodeRecord[v.nodeID].parent;\n      const newParent = state.tree.nodeRecord[v.parentID].node;\n      const [newCenter, changedNode, err1] = getNewNodeCenter(\n        newParent,\n        state.tree.mapNodeLayers\n      );\n      if (err1) {\n        printError(\"cutPasteNode: cannot getNewNodeCenter\", { err: err1 });\n        return;\n      }\n      const [normalizedNewNodeCenter, err2] = convertPosition(\n        \"normalize\",\n        newCenter!,\n        v.parentID,\n        state.tree.mapNodeLayers\n      );\n      if (err2) {\n        printError(\"createNode: cannot create new center\", {\n          err: err2,\n          parent,\n          \"state.tree.mapNodeLayers\": state.tree.mapNodeLayers\n        });\n        return;\n      }\n      // generate key for new child in list of newParent\n      const newKey = api.generateKey();\n      // search for key of childID in children of oldParent\n      const oldKey = await api.findKeyOfChild(oldParent!.id, v.nodeID);\n      const updateMap = {\n        [`map/${v.nodeID}/parentID`]: newParent!.id,\n        [`map/${oldParent!.id}/children/${oldKey}`]: null, // remove from old parent children\n        [`map/${newParent!.id}/children/${newKey}`]: v.nodeID, // add to children of new parents\n        [`map/${v.nodeID}/position`]: normalizedNewNodeCenter\n      };\n      if (changedNode) {\n        const [normalizedChangedCenter] = convertPosition(\n          \"normalize\",\n          changedNode.position,\n          v.parentID,\n          state.tree.mapNodeLayers\n        );\n        updateMap[`map/${changedNode.id}/position`] = normalizedChangedCenter;\n      }\n      await api.update(updateMap);\n\n      commit(`history/${historyMutations.ADD_CUT_PASTE}`, {\n        nodeID: v.nodeID,\n        parentID: v.parentID\n      });\n    },\n\n    /**\n     *\n     * @param commit\n     * @param state\n     * @param nodeID\n     */\n    async [actions.removeNode](\n      { commit, state }: { commit: Commit; state: State },\n      nodeID: string\n    ) {\n      const parent = state.tree.nodeRecord[nodeID].parent;\n      if (!parent) {\n        return;\n      }\n      const parentID = parent.id;\n      // move node from /map to /trash\n      const node = (await api.getNode(nodeID)) as any;\n      node.removedAt = Date.now();\n      const oldKey = await api.findKeyOfChild(parent.id, nodeID);\n      await api.update({\n        [`trash/${nodeID}`]: node,\n        [`map/${parent.id}/children/${oldKey}`]: null,\n        [`map/${nodeID}`]: null\n      });\n\n      commit(`history/${historyMutations.ADD_REMOVE}`, {\n        parentNodeID: parentID,\n        nodeID: nodeID\n      });\n    },\n\n    /**\n     *\n     * @param commit\n     * @param state\n     * @param v\n     */\n    [actions.updateNodePosition](\n      { commit, state }: { commit: Commit; state: State },\n      v: { nodeId: string; delta: Point }\n    ) {\n      if (!state.editModeOn) {\n        return;\n      }\n      const [mapNode] = findMapNode(v.nodeId, state.tree.mapNodeLayers);\n      if (!mapNode) {\n        return NewErrorKV(\"UPDATE_NODE_POSITION: cannot find mapNode\", {\n          \"v.nodeId\": v.nodeId,\n          \"state.mapNodeLayers\": state.tree.mapNodeLayers\n        });\n      }\n      const newCenter = addVector(\n        { from: { x: 0, y: 0 }, to: mapNode.center },\n        { from: { x: 0, y: 0 }, to: v.delta }\n      ).to;\n\n      const args = { nodeId: v.nodeId, newCenter, returnError: null };\n      commit(`tree/${treeMutations.UPDATE_NODE_POSITION}`, args);\n      if (args.returnError === null) {\n        commit(`history/${historyMutations.ADD_POSITION_CHANGE}`, {\n          nodeID: v.nodeId,\n          oldPosition: mapNode.center,\n          newPosition: newCenter\n        });\n\n        // save to DB with debounce\n        debouncedPositionSet(\n          v.nodeId,\n          newCenter,\n          state.tree.nodeRecord[v.nodeId].parent!.id,\n          state.tree.mapNodeLayers\n        );\n      }\n    },\n\n    /**\n     *\n     * @param commit\n     * @param state\n     * @param v\n     */\n    [actions.subscribeDBChange](\n      { commit, state }: { commit: Commit; state: State },\n      v: {\n        oldNodeIDs: string[];\n        newNodeIDs: string[];\n        cb: (dbNode: DBNode) => void;\n      }\n    ) {\n      // check we really need unsubscribe/subscribe\n      if (isEqual(v.oldNodeIDs.sort(), v.newNodeIDs.sort())) {\n        return;\n      }\n\n      // unsubscribe old nodes that have visible titles\n      v.oldNodeIDs.forEach(id => api.unsubscribeNodeChange(id));\n\n      // subscribe new nodes that have visible titles\n      v.newNodeIDs.forEach(id =>\n        api.subscribeNodeChange(id, node => {\n          v.cb(node);\n        })\n      );\n\n      commit(mutations.SET_SUBSCRIBED_NODE_IDS, v.newNodeIDs);\n    }\n  },\n  modules: {\n    pin: pinStore,\n    precondition: preconditionStore,\n    tree: treeStore,\n    user: userStore,\n    zoomPan: zoomPanStore,\n    history: historyStore,\n    resources: resourcesStore,\n    nodeContent: nodeContentStore\n  }\n});\n\n// define your own `useStore` composition function\nexport function useStore() {\n  return baseUseStore(key);\n}\n","\nimport { defineComponent } from \"vue\";\nimport { useStore, actions } from \"@/store\";\nexport default defineComponent({\n  setup() {\n    const store = useStore();\n    store.dispatch(actions.init);\n  }\n});\n","import { render } from \"./App.vue?vue&type=template&id=8c892ede\"\nimport script from \"./App.vue?vue&type=script&lang=ts\"\nexport * from \"./App.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\n  This section is just for test/emulator cases for now\n  <input id=\"email\" />\n  <input id=\"password\" />\n  <button @click=\"login\">login</button>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from \"vue\";\nimport api from \"@/api/api\";\nimport { mutations } from \"@/store/user\";\nimport firebase from \"firebase\";\nimport { useStore } from \"@/store\";\n\nexport default defineComponent({\n  name: \"PasswordLogin\",\n\n  setup() {\n    const store = useStore();\n\n    return {\n      login: async () => {\n        const emailEl = document.getElementById(\"email\") as HTMLInputElement;\n        const passwordEl = document.getElementById(\n          \"password\"\n        ) as HTMLInputElement;\n        await firebase\n          .auth()\n          .signInWithEmailAndPassword(emailEl.value, passwordEl.value);\n      }\n    };\n  }\n});\n</script>\n","\nimport { defineComponent } from \"vue\";\nimport api from \"@/api/api\";\nimport { mutations } from \"@/store/user\";\nimport firebase from \"firebase\";\nimport { useStore } from \"@/store\";\n\nexport default defineComponent({\n  name: \"PasswordLogin\",\n\n  setup() {\n    const store = useStore();\n\n    return {\n      login: async () => {\n        const emailEl = document.getElementById(\"email\") as HTMLInputElement;\n        const passwordEl = document.getElementById(\n          \"password\"\n        ) as HTMLInputElement;\n        await firebase\n          .auth()\n          .signInWithEmailAndPassword(emailEl.value, passwordEl.value);\n      }\n    };\n  }\n});\n","import { render } from \"./PasswordLogin.vue?vue&type=template&id=29d3cb7f\"\nimport script from \"./PasswordLogin.vue?vue&type=script&lang=ts\"\nexport * from \"./PasswordLogin.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\n  <ConfirmDialog></ConfirmDialog>\n  <Toast position=\"bottom-left\" />\n  <NodeContent :show=\"!editModeOn && !!selectedNodeId\" />\n  <Menu\n    :clickedTitleId=\"clickedTitleId\"\n    @select-precondition-is-on=\"setSelectPreconditionON\"\n    @select-precondition-is-off=\"setSelectPreconditionOFF\"\n  />\n  <Map\n    :layers=\"zoomedPanedLayers\"\n    :viewBox=\"viewBox\"\n    :selectedNodeId=\"selectedNodeId\"\n    :preconditionNodeIds=\"preconditionNodeIds\"\n    :pin-nodes=\"pinNodes\"\n    @title-dragging=\"nodeDragging\"\n    @title-click=\"titleClick\"\n    @title-over=\"titleOver\"\n    @title-leave=\"titleLeave\"\n    @dragging-background=\"mapDragging\"\n    @wheel=\"zoom\"\n  />\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, ref, watch } from \"vue\";\nimport Map from \"@/components/map/Map.vue\";\nimport NodeContent from \"@/components/node_content/Index.vue\";\nimport ConfirmDialog from \"primevue/confirmdialog\";\nimport Toast from \"primevue/toast\";\nimport {\n  EventClickNode,\n  EventDraggingBackground,\n  EventDraggingNode,\n  EventWheel\n} from \"@/components/map/Map.ts\";\nimport Menu from \"@/components/menu/Index.vue\";\nimport { useStore } from \"@/store\";\nimport { useRouter, useRoute } from \"vue-router\";\nimport { mutations as treeMutations, NodeRecordItem } from \"@/store/tree\";\nimport { mutations as zoomPanMutations } from \"@/store/zoom_pan\";\nimport { actions } from \"@/store/\";\nimport {\n  filterNodesAndLayers,\n  findCentralNode,\n  zoomAndPanPoint,\n  zoomAnPanLayers\n} from \"@/views/Home\";\nimport { clone, printError } from \"@/tools/utils\";\nimport { MapNode } from \"@/types/graphics\";\nimport { findMapNodes } from \"@/store/tree/helpers\";\nimport { DBNode } from \"@/api/types\";\n\nexport default defineComponent({\n  name: \"Home\",\n\n  components: {\n    Map,\n    Menu,\n    NodeContent,\n    ConfirmDialog,\n    Toast\n  },\n\n  setup() {\n    const store = useStore();\n    const router = useRouter();\n    const route = useRoute();\n    const treeState = store.state.tree;\n    const zoomPanState = store.state.zoomPan;\n    const pinState = store.state.pin;\n    const clickedTitleId = ref(\"-1\");\n    let selectPreconditionIsOn = false;\n\n    watch(\n      () => route.params.id,\n      () => {\n        store.commit(\n          `tree/${treeMutations.SET_SELECTED_NODE_ID}`,\n          route.params.id\n        );\n      },\n      { immediate: true }\n    );\n\n    /**\n     * compute svg viewBox\n     */\n    const viewBox = computed(() => {\n      if (treeState.mapNodeLayers && treeState.mapNodeLayers.length) {\n        return `0 0 ${2 * treeState.mapNodeLayers[0][\"0\"].center.x} ${2 *\n          treeState.mapNodeLayers[0][\"0\"].center.y}`;\n      } else {\n        return `0 0 1000 1000`;\n      }\n    });\n\n    const updateLayers = (\n      centralNodeId: string,\n      mapNodeLayers: Array<Record<string, MapNode>>,\n      nodeRecord: Record<string, NodeRecordItem>\n    ): Array<Record<number, MapNode>> => {\n      // Вычленяем слои и узлы которые мы хотим показывать учитывая что текущий видимый узел это centralNodeId\n      const [filteredLayers, err] = filterNodesAndLayers(\n        mapNodeLayers,\n        nodeRecord,\n        centralNodeId\n      );\n      if (err) {\n        printError(\"Home.vue: error in filterNodesAndLayers:\", { err });\n        return [];\n      }\n      return filteredLayers.reverse();\n    };\n\n    const centralNodeId = ref<string | null>(null);\n    const layers = ref<Array<Record<string, MapNode>>>([]);\n    watch(\n      () => [\n        treeState.mapNodeLayers,\n        zoomPanState.debouncedZoom,\n        zoomPanState.debouncedPan\n      ],\n      () => {\n        const [newCentralNodeId, err] = findCentralNode(\n          treeState.mapNodeLayers,\n          treeState.nodeRecord,\n          { width: window.innerWidth, height: window.innerHeight },\n          zoomPanState.debouncedZoom,\n          zoomPanState.pan,\n          zoomPanState.zoomCenter\n        );\n        if (err != null) {\n          printError(\"filterNodesAndLayers: error in findCurrentNode\", { err });\n        }\n\n        const oldVisibleNodeIDs = [];\n        for (const layer of layers.value) {\n          oldVisibleNodeIDs.push(\n            ...Object.values(layer)\n              .filter((n: MapNode) => !!n.title)\n              .map((n: MapNode) => n.id)\n          );\n        }\n\n        centralNodeId.value = newCentralNodeId;\n        layers.value = updateLayers(\n          newCentralNodeId,\n          treeState.mapNodeLayers,\n          treeState.nodeRecord\n        );\n\n        const newVisibleNodeIDs = [];\n        for (const layer of layers.value) {\n          newVisibleNodeIDs.push(\n            ...Object.values(layer)\n              .filter((n: MapNode) => !!n.title)\n              .map((n: MapNode) => n.id)\n          );\n        }\n\n        store.dispatch(actions.subscribeDBChange, {\n          oldNodeIDs: oldVisibleNodeIDs,\n          newNodeIDs: newVisibleNodeIDs,\n          cb: (dbNode: DBNode) => store.dispatch(actions.handleDBUpdate, dbNode)\n        });\n      },\n      { immediate: true, deep: true }\n    );\n\n    const zoomedPanedLayers = ref<Array<Record<string, MapNode>>>([]);\n    watch(\n      () => [zoomPanState.pan.x, zoomPanState.pan.y, zoomPanState.zoom, layers],\n      () => {\n        // layers это всегда слои с zoom=1 и pan={0, 0} состоящий из только видимых прямо сейчас элементов.\n        // Мы применяем к этому объекту текущий zoomPanState но сам эталон не трогаем, поэтому здесь clone\n        // Это не дорогая операция так как layers всегда содержит небольшое кол-во элементов\n        // видимых только прямо сейчас\n        const layersToZoomAndPan = clone(layers.value);\n        zoomedPanedLayers.value = zoomAnPanLayers(\n          layersToZoomAndPan,\n          zoomPanState.zoom,\n          zoomPanState.pan\n        );\n      },\n      { immediate: true, deep: true }\n    );\n\n    return {\n      pinNodes: computed(() => {\n        if (centralNodeId.value == null) {\n          return [];\n        }\n        const pinNodeIDs = pinState.pinsReverse[centralNodeId.value];\n        if (!pinNodeIDs) {\n          return [];\n        }\n\n        // remove pins that already exists on layers\n        for (const layer of layers.value) {\n          for (const nodeID in layer) {\n            const node = layer[nodeID];\n            if (node.title != \"\") {\n              const ind = pinNodeIDs.indexOf(node.id);\n              if (ind != -1) {\n                pinNodeIDs.splice(ind, 1);\n              }\n            }\n          }\n        }\n\n        const pinMapNodes = findMapNodes(pinNodeIDs, treeState.mapNodeLayers);\n        const result = [];\n        for (const pinMapNode of pinMapNodes) {\n          const cl = clone(pinMapNode);\n          cl.center = zoomAndPanPoint(\n            pinMapNode.center,\n            zoomPanState.zoom,\n            zoomPanState.pan\n          );\n          result.push(cl);\n        }\n\n        return result;\n      }),\n      viewBox,\n      editModeOn: computed(() => store.state.editModeOn),\n      selectedNodeId: computed(() => treeState.selectedNodeId),\n      preconditionNodeIds: computed(() =>\n        treeState.selectedNodeId\n          ? store.state.precondition.preconditions[treeState.selectedNodeId]\n          : []\n      ),\n      zoomedPanedLayers,\n      nodeDragging: (e: EventDraggingNode) => {\n        store.dispatch(`${actions.updateNodePosition}`, {\n          nodeId: e.id,\n          delta: {\n            x: e.delta.x / zoomPanState.zoom,\n            y: e.delta.y / zoomPanState.zoom\n          }\n        });\n      },\n      setSelectPreconditionON: () => {\n        selectPreconditionIsOn = true;\n      },\n      setSelectPreconditionOFF: () => {\n        selectPreconditionIsOn = false;\n      },\n      clickedTitleId,\n      titleClick: (e: EventClickNode) => {\n        if (!selectPreconditionIsOn) {\n          router.push({ name: \"node\", params: { id: e.id } });\n        } else {\n          clickedTitleId.value = e.id;\n        }\n      },\n      titleOver: (e: EventClickNode) => {\n        store.commit(`tree/${treeMutations.SET_SELECTED_NODE_ID}`, e.id);\n      },\n      titleLeave: (e: EventClickNode) => {\n        store.commit(\n          `tree/${treeMutations.SET_SELECTED_NODE_ID}`,\n          route.params.id\n        );\n      },\n      mapDragging: (event: EventDraggingBackground) => {\n        store.commit(`zoomPan/${zoomPanMutations.ADD_PAN}`, event);\n      },\n      zoom: (event: EventWheel) => {\n        // initial value of center (when root.border == viewport)\n        const initial = {\n          x: (event.center.x - zoomPanState.pan.x) / zoomPanState.zoom,\n          y: (event.center.y - zoomPanState.pan.y) / zoomPanState.zoom\n        };\n        store.commit(`zoomPan/${zoomPanMutations.ADD_ZOOM}`, -1 * event.delta);\n        const after = {\n          x: initial.x * zoomPanState.zoom + zoomPanState.pan.x,\n          y: initial.y * zoomPanState.zoom + zoomPanState.pan.y\n        };\n        store.commit(`zoomPan/${zoomPanMutations.ADD_PAN}`, {\n          from: after,\n          to: event.center\n        });\n        store.commit(\n          `zoomPan/${zoomPanMutations.SET_ZOOM_CENTER}`,\n          event.center\n        );\n      }\n    };\n  }\n});\n</script>\n","<template>\n  <svg xmlns=\"http://www.w3.org/2000/svg\" :viewBox=\"viewBox\" :id=\"mapID\">\n    <MapLayer\n      v-for=\"(layer, index) of layers\"\n      :key=\"index\"\n      :map-nodes=\"layer\"\n      :border-color=\"\n        `rgb(${200 - 100 * index},${200 - 100 * index},${200 - 100 * index})`\n      \"\n      :font-size=\"10 * (index + 1)\"\n      :selectedNodeId=\"selectedNodeId\"\n      :preconditionNodeIds=\"preconditionNodeIds\"\n      :map-id=\"mapID\"\n      @title-dragging=\"draggingNode\"\n      @title-click=\"titleClick\"\n      @title-over=\"titleOver\"\n      @title-leave=\"titleLeave\"\n    />\n    <PinLayer\n      :pinNodes=\"pinNodes\"\n      :selectedNodeId=\"selectedNodeId\"\n      @click=\"titleClick\"\n      @title-mouse-down=\"pinNodeMouseDown\"\n    />\n    <PreconditionLayer\n      :preconditionNodeIds=\"preconditionNodeIds\"\n      :selectedNodeId=\"selectedNodeId\"\n    />\n  </svg>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, onMounted, PropType, watch } from \"vue\";\nimport { MapNode } from \"@/types/graphics\";\nimport MapLayer from \"@/components/map_layer/MapLayer.vue\";\nimport {\n  EventClickNode,\n  EventDraggingNode\n} from \"@/components/map_layer/MapLayer\";\nimport pan from \"./MapPan\";\nimport PinLayer from \"@/components/pin_layer/PinLayer.vue\";\nimport { printError } from \"@/tools/utils\";\nimport PreconditionLayer from \"@/components/precondition_layer/PreconditionLayer.vue\";\n\nconst mapID = \"mapID\";\n\nexport default defineComponent({\n  name: \"Map\",\n  emits: [\n    \"title-dragging\",\n    \"title-click\",\n    \"title-over\",\n    \"title-leave\",\n    \"dragging-background\",\n    \"wheel\"\n  ],\n  components: {\n    PreconditionLayer,\n    PinLayer,\n    MapLayer\n  },\n  props: {\n    viewBox: {\n      type: String,\n      required: true\n    },\n    layers: Object as PropType<Array<Record<string, MapNode>>>,\n    selectedNodeId: {\n      type: String || null,\n      validator: (prop: string | null) =>\n        typeof prop === \"string\" || prop === null,\n      required: true\n    },\n    preconditionNodeIds: Object as PropType<string[]>,\n    pinNodes: Object as PropType<MapNode[]>\n  },\n  setup(props, ctx) {\n    onMounted(() => {\n      const map = document.getElementById(mapID);\n      if (!map) {\n        printError(\"Map.vue: cannot find map id for event listener\", {});\n        return;\n      }\n      map.addEventListener(\"mousedown\", async event => {\n        await pan.mouseDown(event);\n      });\n      map.addEventListener(\"mouseup\", async event => {\n        await pan.mouseUp(event);\n      });\n      map.addEventListener(\"mousemove\", event => {\n        pan.mouseMove(ctx.emit, event);\n      });\n      map.addEventListener(\"wheel\", event => {\n        ctx.emit(\"wheel\", {\n          delta: event.deltaY,\n          center: { x: event.clientX, y: event.clientY }\n        });\n      });\n    });\n\n    return {\n      draggingNode: (e: EventDraggingNode) => {\n        ctx.emit(\"title-dragging\", {\n          id: e.nodeId,\n          delta: e.delta\n        });\n      },\n      titleClick: (e: EventClickNode) => {\n        ctx.emit(\"title-click\", { id: e.id });\n      },\n      titleOver: (e: EventClickNode) => {\n        ctx.emit(\"title-over\", { id: e.id });\n      },\n      titleLeave: (e: EventClickNode) => {\n        ctx.emit(\"title-leave\", { id: e.id });\n      },\n      pinNodeMouseDown: () => {\n        pan.pinNodeMouseDownHandler();\n      },\n      mapID: mapID\n    };\n  }\n});\n</script>\n\n<style scoped></style>\n","<template>\n  <polygon\n    v-for=\"(mapNode, i) of mapNodes\"\n    :key=\"i\"\n    :stroke=\"borderColor\"\n    :fill=\"polygonFill(selectedNodeId, mapNode.id, preconditionNodeIds)\"\n    :fill-opacity=\"\n      polygonFillOpacity(selectedNodeId, mapNode.id, preconditionNodeIds)\n    \"\n    stroke-width=\"2\"\n    :points=\"polygonToPath(mapNode.border)\"\n    pointer-events=\"none\"\n  />\n  <!--    <circle-->\n  <!--      v-for=\"mapNode of mapNodes\"-->\n  <!--      :key=\"mapNode.id\"-->\n  <!--      :cx=\"mapNode.center.x\"-->\n  <!--      :cy=\"mapNode.center.y\"-->\n  <!--      r=\"10\"-->\n  <!--      stroke=\"black\"-->\n  <!--      stroke-width=\"1\"-->\n  <!--      fill=\"red\"-->\n  <!--    />-->\n  <text\n    v-for=\"mapNode of mapNodes\"\n    :id=\"`${TITLE_PREFIX}${mapNode.id}`\"\n    :key=\"mapNode.id\"\n    font-family=\"Roboto\"\n    :font-size=\"fontSize\"\n    :font-weight=\"\n      selectedNodeId && selectedNodeId == mapNode.id ? 'bold' : 'normal'\n    \"\n    :fill=\"borderColor\"\n    class=\"text\"\n  >\n    <tspan\n      :x=\"titleBox[mapNode.id] ? titleBox[mapNode.id].position.x : 0\"\n      :y=\"titleBox[mapNode.id] ? titleBox[mapNode.id].position.y : 0\"\n      alignment-baseline=\"hanging\"\n    >\n      {{ mapNode.title }}\n    </tspan>\n  </text>\n  <!-- Add rectangle to change cursor to pointer when hover on text -->\n  <rect\n    v-for=\"mapNode of mapNodes\"\n    :key=\"mapNode.id\"\n    :x=\"titleBox[mapNode.id] ? titleBox[mapNode.id].position.x : 0\"\n    :y=\"titleBox[mapNode.id] ? titleBox[mapNode.id].position.y : 0\"\n    :width=\"titleBox[mapNode.id] ? titleBox[mapNode.id].bbox.width : 0\"\n    :height=\"titleBox[mapNode.id] ? titleBox[mapNode.id].bbox.height : 0\"\n    fill=\"transparent\"\n    stroke-width=\"0\"\n    @mouseover=\"titleOver(mapNode.id)\"\n    @mouseleave=\"titleLeave(mapNode.id)\"\n    @click=\"titleClick(mapNode.id)\"\n    @mousedown=\"titleMouseDown(mapNode.id)\"\n    stroke=\"pink\"\n    cursor=\"pointer\"\n    pointer-events=\"fill\"\n  />\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType, toRef, onMounted, onUnmounted } from \"vue\";\nimport { MapNode } from \"@/types/graphics\";\nimport {\n  polygonToPath,\n  polygonFill,\n  polygonFillOpacity\n} from \"@/tools/graphics\";\nimport {\n  getTitleBoxes,\n  MouseDownInfo,\n  mouseMoveListener,\n  mouseUpListener\n} from \"@/components/map_layer/MapLayer\";\nimport { printError } from \"@/tools/utils\";\n\nconst TITLE_PREFIX = \"title_\";\n\nexport default defineComponent({\n  name: \"MapLayer\",\n  emits: [\n    \"title-over\",\n    \"title-leave\",\n    \"title-click\",\n    \"title-drop\",\n    \"title-dragging\"\n  ],\n  props: {\n    mapId: {\n      type: String,\n      required: true\n    },\n    mapNodes: {\n      type: Object as PropType<Record<string, MapNode>>,\n      required: true\n    },\n    borderColor: {\n      type: String,\n      required: true\n    },\n    fontSize: {\n      type: Number,\n      required: true\n    },\n    selectedNodeId: {\n      type: String,\n      validator: (prop: string | null) =>\n        typeof prop === \"string\" || prop === null,\n      required: true\n    },\n    preconditionNodeIds: Object as PropType<string[]>\n  },\n\n  setup(props, ctx) {\n    const mapNodes = toRef(props, \"mapNodes\");\n\n    const titleBox = getTitleBoxes(TITLE_PREFIX, \"center\", mapNodes);\n\n    /**\n     * Send event on titleBox click, drag and drop\n     */\n    const titleMouseDownInfo: MouseDownInfo = {\n      nodeId: null,\n      dragStart: false\n    };\n    const mouseMove = (event: MouseEvent) =>\n      mouseMoveListener(ctx.emit, event, titleMouseDownInfo);\n    const mouseUp = () => mouseUpListener(ctx.emit, titleMouseDownInfo);\n    onMounted(() => {\n      const map = document.getElementById(props.mapId);\n      if (!map) {\n        printError(\"MapLayer.vue: cannot find map id for event listener\", {});\n        return;\n      }\n      map.addEventListener(\"mousemove\", mouseMove);\n      map.addEventListener(\"mouseup\", mouseUp);\n    });\n    onUnmounted(() => {\n      const map = document.getElementById(props.mapId);\n      if (!map) {\n        printError(\"MapLayer.vue: cannot find map id for event listener\", {});\n        return;\n      }\n      map.removeEventListener(\"mousemove\", mouseMove);\n      map.removeEventListener(\"mouseup\", mouseUp);\n    });\n\n    return {\n      TITLE_PREFIX,\n      titleBox,\n      titleClick: (nodeID: string) => {\n        ctx.emit(\"title-click\", {\n          id: nodeID\n        });\n      },\n      titleOver: (nodeID: string) => {\n        ctx.emit(\"title-over\", {\n          id: nodeID\n        });\n      },\n      titleLeave: (nodeID: string) => {\n        ctx.emit(\"title-leave\", {\n          id: nodeID\n        });\n      },\n      titleMouseDown: (id: string) => {\n        titleMouseDownInfo.nodeId = id;\n        titleMouseDownInfo.dragStart = false;\n      }\n    };\n  },\n\n  methods: {\n    polygonToPath: polygonToPath,\n    polygonFill: polygonFill,\n    polygonFillOpacity: polygonFillOpacity\n  }\n});\n</script>\n\n<style scoped>\n.text {\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n  pointer-events: none;\n}\n</style>\n","import { MapNode, Point } from \"@/types/graphics\";\nimport { nextTick, ref, Ref, watch } from \"vue\";\n\nexport type EventClickNode = {\n  id: string;\n};\n\nexport type EventDraggingNode = {\n  nodeId: string;\n  delta: Point;\n};\n\nexport type MouseDownInfo = {\n  nodeId: string | null;\n  dragStart: boolean;\n};\n\ntype emitFn = (event: \"title-dragging\" | \"title-drop\", ...args: any[]) => void;\n\ntype TitleBox = {\n  position: Point;\n  bbox: {\n    width: number;\n    height: number;\n  };\n};\n\nexport const mouseMoveListener = (\n  emit: emitFn,\n  event: MouseEvent,\n  mouseDownInfo: MouseDownInfo\n) => {\n  if (mouseDownInfo.nodeId) {\n    mouseDownInfo.dragStart = true;\n    emit(\"title-dragging\", {\n      nodeId: mouseDownInfo.nodeId,\n      delta: {\n        x: event.movementX,\n        y: event.movementY\n      }\n    });\n  }\n};\n\nexport const mouseUpListener = (emit: emitFn, mouseDownInfo: MouseDownInfo) => {\n  if (mouseDownInfo.nodeId) {\n    if (mouseDownInfo.dragStart) {\n      emit(\"title-drop\", { id: mouseDownInfo.nodeId });\n    }\n    mouseDownInfo.dragStart = false;\n    mouseDownInfo.nodeId = null;\n  }\n};\n\nexport const nodeToTitleBox = (\n  nodes: Record<string, MapNode>\n): Record<string, TitleBox> => {\n  const titleBox: Record<string, TitleBox> = {};\n  for (const i in nodes) {\n    const node = nodes[i];\n    titleBox[node.id] = {\n      position: node.center,\n      bbox: {\n        width: 0,\n        height: 0\n      }\n    };\n  }\n\n  return titleBox;\n};\n\nconst updateTitleBox = (\n  titleIdPrefix: string,\n  position: \"center\" | \"left\",\n  mapNodes: Record<string, MapNode>,\n  titleBox: Record<string, TitleBox>\n) => {\n  // Code that will run only after the entire view has been rendered\n  nextTick(() => {\n    // clean previous version\n    for (const i in titleBox) {\n      delete titleBox[i];\n    }\n    // fill new ones\n    for (const i in mapNodes) {\n      const node = mapNodes[i];\n      const dom = document.getElementById(`${titleIdPrefix}${node.id}`);\n      if (dom == null) {\n        continue;\n      }\n      if (position == \"center\") {\n        titleBox[node.id] = {\n          position: {\n            x: node.center.x - dom.getBoundingClientRect().width / 2,\n            y: node.center.y - dom.getBoundingClientRect().height / 2\n          },\n          bbox: {\n            width: dom.getBoundingClientRect().width,\n            height: dom.getBoundingClientRect().height\n          }\n        };\n      } else if (position == \"left\") {\n        titleBox[node.id] = {\n          position: {\n            x: node.center.x - dom.getBoundingClientRect().width,\n            y: node.center.y - dom.getBoundingClientRect().height / 2\n          },\n          bbox: {\n            width: dom.getBoundingClientRect().width,\n            height: dom.getBoundingClientRect().height\n          }\n        };\n      }\n    }\n  });\n};\n\nexport const getTitleBoxes = (\n  titleIdPrefix: string,\n  position: \"center\" | \"left\",\n  mapNodes: Ref<Record<string, MapNode>>\n): Ref<Record<string, TitleBox>> => {\n  const titleBox = ref(nodeToTitleBox(mapNodes.value));\n  /**\n   * Update titleBox on every prop change after DOM rerender\n   */\n  watch(\n    mapNodes,\n    mps => updateTitleBox(titleIdPrefix, position, mps, titleBox.value),\n    {\n      immediate: true\n    }\n  );\n\n  return titleBox;\n};\n","\nimport { defineComponent, PropType, toRef, onMounted, onUnmounted } from \"vue\";\nimport { MapNode } from \"@/types/graphics\";\nimport {\n  polygonToPath,\n  polygonFill,\n  polygonFillOpacity\n} from \"@/tools/graphics\";\nimport {\n  getTitleBoxes,\n  MouseDownInfo,\n  mouseMoveListener,\n  mouseUpListener\n} from \"@/components/map_layer/MapLayer\";\nimport { printError } from \"@/tools/utils\";\n\nconst TITLE_PREFIX = \"title_\";\n\nexport default defineComponent({\n  name: \"MapLayer\",\n  emits: [\n    \"title-over\",\n    \"title-leave\",\n    \"title-click\",\n    \"title-drop\",\n    \"title-dragging\"\n  ],\n  props: {\n    mapId: {\n      type: String,\n      required: true\n    },\n    mapNodes: {\n      type: Object as PropType<Record<string, MapNode>>,\n      required: true\n    },\n    borderColor: {\n      type: String,\n      required: true\n    },\n    fontSize: {\n      type: Number,\n      required: true\n    },\n    selectedNodeId: {\n      type: String,\n      validator: (prop: string | null) =>\n        typeof prop === \"string\" || prop === null,\n      required: true\n    },\n    preconditionNodeIds: Object as PropType<string[]>\n  },\n\n  setup(props, ctx) {\n    const mapNodes = toRef(props, \"mapNodes\");\n\n    const titleBox = getTitleBoxes(TITLE_PREFIX, \"center\", mapNodes);\n\n    /**\n     * Send event on titleBox click, drag and drop\n     */\n    const titleMouseDownInfo: MouseDownInfo = {\n      nodeId: null,\n      dragStart: false\n    };\n    const mouseMove = (event: MouseEvent) =>\n      mouseMoveListener(ctx.emit, event, titleMouseDownInfo);\n    const mouseUp = () => mouseUpListener(ctx.emit, titleMouseDownInfo);\n    onMounted(() => {\n      const map = document.getElementById(props.mapId);\n      if (!map) {\n        printError(\"MapLayer.vue: cannot find map id for event listener\", {});\n        return;\n      }\n      map.addEventListener(\"mousemove\", mouseMove);\n      map.addEventListener(\"mouseup\", mouseUp);\n    });\n    onUnmounted(() => {\n      const map = document.getElementById(props.mapId);\n      if (!map) {\n        printError(\"MapLayer.vue: cannot find map id for event listener\", {});\n        return;\n      }\n      map.removeEventListener(\"mousemove\", mouseMove);\n      map.removeEventListener(\"mouseup\", mouseUp);\n    });\n\n    return {\n      TITLE_PREFIX,\n      titleBox,\n      titleClick: (nodeID: string) => {\n        ctx.emit(\"title-click\", {\n          id: nodeID\n        });\n      },\n      titleOver: (nodeID: string) => {\n        ctx.emit(\"title-over\", {\n          id: nodeID\n        });\n      },\n      titleLeave: (nodeID: string) => {\n        ctx.emit(\"title-leave\", {\n          id: nodeID\n        });\n      },\n      titleMouseDown: (id: string) => {\n        titleMouseDownInfo.nodeId = id;\n        titleMouseDownInfo.dragStart = false;\n      }\n    };\n  },\n\n  methods: {\n    polygonToPath: polygonToPath,\n    polygonFill: polygonFill,\n    polygonFillOpacity: polygonFillOpacity\n  }\n});\n","import { render } from \"./MapLayer.vue?vue&type=template&id=f5f2b9d4&scoped=true\"\nimport script from \"./MapLayer.vue?vue&type=script&lang=ts\"\nexport * from \"./MapLayer.vue?vue&type=script&lang=ts\"\n\nimport \"./MapLayer.vue?vue&type=style&index=0&id=f5f2b9d4&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-f5f2b9d4\"\n\nexport default script","import { MapNode } from \"@/types/graphics\";\n\nconst mouseDownBg = {\n  on: false\n};\n\nlet pinNodeMouseDown = false;\n\nconst mouseDown = async (event: MouseEvent) => {\n  mouseDownBg.on = true;\n};\nconst mouseUp = async (event: MouseEvent) => {\n  mouseDownBg.on = false;\n  pinNodeMouseDown = false;\n};\n\nconst pinNodeMouseDownHandler = () => {\n  pinNodeMouseDown = true;\n};\n\nconst mouseMove = (\n  emit: (name: \"dragging-background\", o: any) => void,\n  event: MouseEvent\n) => {\n  if (!mouseDownBg.on) {\n    return;\n  }\n  emit(\"dragging-background\", {\n    from: {\n      x: event.clientX - event.movementX,\n      y: event.clientY - event.movementY\n    },\n    to: { x: event.clientX, y: event.clientY }\n  });\n};\n\nexport default {\n  mouseDown,\n  mouseUp,\n  mouseMove,\n  pinNodeMouseDownHandler\n};\n","<template>\n  <!--  <circle-->\n  <!--    v-for=\"node of pinNodes\"-->\n  <!--    :key=\"node.id\"-->\n  <!--    :cx=\"node.center.x\"-->\n  <!--    :cy=\"node.center.y\"-->\n  <!--    r=\"10\"-->\n  <!--    stroke=\"black\"-->\n  <!--    stroke-width=\"1\"-->\n  <!--    fill=\"red\"-->\n  <!--  />-->\n  <PinMarker\n    v-for=\"node of pinNodes\"\n    :key=\"node.id\"\n    :x=\"node.center.x\"\n    :y=\"node.center.y\"\n    color=\"#ffa500\"\n  />\n  <SVGTextBox\n    v-for=\"node of pinNodes\"\n    :text=\"node.title\"\n    :id=\"`${TITLE_PREFIX}${node.id}`\"\n    :key=\"node.id\"\n    :x=\"titleXY[node.id].x\"\n    :y=\"titleXY[node.id].y\"\n    line-height=\"8\"\n    :max-char-per-line=\"10\"\n    font-family=\"Roboto\"\n    :font-size=\"8\"\n    :font-weight=\"\n      selectedNodeId && selectedNodeId === node.id ? 'bold' : 'normal'\n    \"\n    color=\"#ffa500\"\n  />\n  <rect\n    v-for=\"node of pinNodes\"\n    :key=\"node.id\"\n    :x=\"titleXY[node.id].x\"\n    :y=\"titleXY[node.id].y\"\n    :width=\"titleBox[node.id] ? titleBox[node.id].bbox.width : 0\"\n    :height=\"titleBox[node.id] ? titleBox[node.id].bbox.height : 0\"\n    cursor=\"pointer\"\n    fill=\"transparent\"\n    @click=\"titleBoxClick(node.id)\"\n    @mousedown=\"nodeMouseDown(node.id)\"\n    stroke-width=\"0\"\n    stroke=\"pink\"\n  />\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, PropType, toRef } from \"vue\";\nimport { MapNode, Point } from \"@/types/graphics\";\nimport { getTitleBoxes } from \"@/components/map_layer/MapLayer\";\nimport PinMarker from \"@/components/pin_layer/PinMarker.vue\";\nimport {\n  WIDTH as PIN_MARKER_WIDTH,\n  HEIGHT as PIN_MARKER_HEIGHT\n} from \"@/components/pin_layer/PinMarker.vue\";\nimport SVGTextBox from \"@/components/SVGTextBox.vue\";\n\nconst TITLE_PREFIX = \"pin_title_\";\n\nexport default defineComponent({\n  name: \"PinLayer\",\n  components: { SVGTextBox, PinMarker },\n  emits: [\"click\", \"title-mouse-down\"],\n  props: {\n    pinNodes: {\n      type: Object as PropType<Record<string, MapNode>>,\n      required: true\n    },\n    selectedNodeId: {\n      type: String,\n      validator: (prop: string | null) =>\n        typeof prop === \"string\" || prop === null,\n      required: true\n    }\n  },\n  setup(props, ctx) {\n    const pinNodes = toRef(props, \"pinNodes\");\n\n    const titleBox = getTitleBoxes(TITLE_PREFIX, \"left\", pinNodes);\n\n    return {\n      TITLE_PREFIX,\n      PIN_MARKER_HEIGHT,\n      PIN_MARKER_WIDTH,\n      titleBox,\n      titleXY: computed(() => {\n        const alignedXY: Record<string, Point> = {};\n        for (const i in pinNodes.value) {\n          const node = pinNodes.value[i];\n          alignedXY[node.id] = {\n            x: titleBox.value[node.id]\n              ? titleBox.value[node.id].position.x - PIN_MARKER_WIDTH / 2 - 1\n              : 0,\n            y: titleBox.value[node.id]\n              ? titleBox.value[node.id].position.y - PIN_MARKER_HEIGHT / 2\n              : 0\n          };\n        }\n        return alignedXY;\n      }),\n      titleBoxClick: (nodeId: string) => {\n        ctx.emit(\"click\", { id: nodeId });\n      },\n      nodeMouseDown: (nodeId: string) => {\n        ctx.emit(\"title-mouse-down\", { id: nodeId });\n      }\n    };\n  }\n});\n</script>\n","<template>\n  <g :transform=\"`translate(${x - WIDTH / 2} ${y - HEIGHT}) scale(0.05 0.05)`\">\n    <path\n      :fill=\"`${color}`\"\n      d=\"M182.9,551.7c0,0.1,0.2,0.3,0.2,0.3S358.3,283,358.3,194.6c0-130.1-88.8-186.7-175.4-186.9\n        C96.3,7.9,7.5,64.5,7.5,194.6c0,88.4,175.3,357.4,175.3,357.4S182.9,551.7,182.9,551.7z M122.2,187.2c0-33.6,27.2-60.8,60.8-60.8\n        c33.6,0,60.8,27.2,60.8,60.8S216.5,248,182.9,248C149.4,248,122.2,220.8,122.2,187.2z\"\n    />\n  </g>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from \"vue\";\n\nexport const WIDTH = 18;\nexport const HEIGHT = 26;\n\nexport default defineComponent({\n  name: \"PinMarker\",\n  props: {\n    x: {\n      type: Number,\n      required: true\n    },\n    y: {\n      type: Number,\n      required: true\n    },\n    color: {\n      type: String,\n      required: true\n    }\n  },\n  setup() {\n    return {\n      WIDTH,\n      HEIGHT\n    };\n  }\n});\n</script>\n","\nimport { defineComponent } from \"vue\";\n\nexport const WIDTH = 18;\nexport const HEIGHT = 26;\n\nexport default defineComponent({\n  name: \"PinMarker\",\n  props: {\n    x: {\n      type: Number,\n      required: true\n    },\n    y: {\n      type: Number,\n      required: true\n    },\n    color: {\n      type: String,\n      required: true\n    }\n  },\n  setup() {\n    return {\n      WIDTH,\n      HEIGHT\n    };\n  }\n});\n","import { render } from \"./PinMarker.vue?vue&type=template&id=d238f9c2\"\nimport script from \"./PinMarker.vue?vue&type=script&lang=ts\"\nexport * from \"./PinMarker.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\n  <text\n    :id=\"id\"\n    :font-family=\"fontFamily\"\n    :font-size=\"fontSize\"\n    :font-weight=\"fontWeight\"\n    :fill=\"color\"\n  >\n    <tspan\n      v-for=\"(line, i) of lines\"\n      :key=\"i\"\n      :x=\"x\"\n      :y=\"y + i * lineHeight\"\n      alignment-baseline=\"hanging\"\n    >\n      {{ line }}\n    </tspan>\n  </text>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from \"vue\";\nimport { splitLines } from \"@/components/SVGTextBox\";\n\nexport default defineComponent({\n  name: \"SVGTextBox\",\n  props: {\n    id: {\n      type: String,\n      required: true\n    },\n    text: {\n      type: String,\n      required: true\n    },\n    x: {\n      type: Number,\n      required: true\n    },\n    y: {\n      type: Number,\n      required: true\n    },\n    lineHeight: {\n      type: String,\n      required: true\n    },\n    maxCharPerLine: {\n      type: Number,\n      required: true\n    },\n    fontFamily: {\n      type: String,\n      required: true\n    },\n    fontSize: {\n      type: Number,\n      required: true\n    },\n    fontWeight: {\n      type: String,\n      required: true\n    },\n    color: {\n      type: String,\n      required: true\n    }\n  },\n  setup(props) {\n    return {\n      lines: splitLines(props.text, props.maxCharPerLine)\n    };\n  }\n});\n</script>\n","export function splitLines(text: string, maxCharNum: number): string[] {\n  if (maxCharNum <= 0) {\n    return [];\n  }\n  if (text == \"\") {\n    return [];\n  }\n  const words = text.split(\" \");\n  const lines: string[] = [];\n  let currLine: string[] = [];\n  while (words.length) {\n    if (currLine.join(\" \").length > maxCharNum) {\n      const nextLine: string[] = [];\n      if (currLine.length > 1) {\n        nextLine.push(currLine.pop()!);\n      }\n      lines.push(currLine.join(\" \"));\n      currLine = nextLine;\n    } else {\n      currLine.push(words.shift()!);\n    }\n  }\n\n  if (currLine.join(\" \").length > maxCharNum) {\n    const nextLine: string[] = [];\n    if (currLine.length > 1) {\n      nextLine.push(currLine.pop()!);\n    }\n    lines.push(currLine.join(\" \"));\n    currLine = nextLine;\n  }\n  if (currLine.length) {\n    lines.push(currLine.join(\" \"));\n  }\n  return lines;\n}\n","\nimport { defineComponent } from \"vue\";\nimport { splitLines } from \"@/components/SVGTextBox\";\n\nexport default defineComponent({\n  name: \"SVGTextBox\",\n  props: {\n    id: {\n      type: String,\n      required: true\n    },\n    text: {\n      type: String,\n      required: true\n    },\n    x: {\n      type: Number,\n      required: true\n    },\n    y: {\n      type: Number,\n      required: true\n    },\n    lineHeight: {\n      type: String,\n      required: true\n    },\n    maxCharPerLine: {\n      type: Number,\n      required: true\n    },\n    fontFamily: {\n      type: String,\n      required: true\n    },\n    fontSize: {\n      type: Number,\n      required: true\n    },\n    fontWeight: {\n      type: String,\n      required: true\n    },\n    color: {\n      type: String,\n      required: true\n    }\n  },\n  setup(props) {\n    return {\n      lines: splitLines(props.text, props.maxCharPerLine)\n    };\n  }\n});\n","import { render } from \"./SVGTextBox.vue?vue&type=template&id=22b28a68\"\nimport script from \"./SVGTextBox.vue?vue&type=script&lang=ts\"\nexport * from \"./SVGTextBox.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","\nimport { computed, defineComponent, PropType, toRef } from \"vue\";\nimport { MapNode, Point } from \"@/types/graphics\";\nimport { getTitleBoxes } from \"@/components/map_layer/MapLayer\";\nimport PinMarker from \"@/components/pin_layer/PinMarker.vue\";\nimport {\n  WIDTH as PIN_MARKER_WIDTH,\n  HEIGHT as PIN_MARKER_HEIGHT\n} from \"@/components/pin_layer/PinMarker.vue\";\nimport SVGTextBox from \"@/components/SVGTextBox.vue\";\n\nconst TITLE_PREFIX = \"pin_title_\";\n\nexport default defineComponent({\n  name: \"PinLayer\",\n  components: { SVGTextBox, PinMarker },\n  emits: [\"click\", \"title-mouse-down\"],\n  props: {\n    pinNodes: {\n      type: Object as PropType<Record<string, MapNode>>,\n      required: true\n    },\n    selectedNodeId: {\n      type: String,\n      validator: (prop: string | null) =>\n        typeof prop === \"string\" || prop === null,\n      required: true\n    }\n  },\n  setup(props, ctx) {\n    const pinNodes = toRef(props, \"pinNodes\");\n\n    const titleBox = getTitleBoxes(TITLE_PREFIX, \"left\", pinNodes);\n\n    return {\n      TITLE_PREFIX,\n      PIN_MARKER_HEIGHT,\n      PIN_MARKER_WIDTH,\n      titleBox,\n      titleXY: computed(() => {\n        const alignedXY: Record<string, Point> = {};\n        for (const i in pinNodes.value) {\n          const node = pinNodes.value[i];\n          alignedXY[node.id] = {\n            x: titleBox.value[node.id]\n              ? titleBox.value[node.id].position.x - PIN_MARKER_WIDTH / 2 - 1\n              : 0,\n            y: titleBox.value[node.id]\n              ? titleBox.value[node.id].position.y - PIN_MARKER_HEIGHT / 2\n              : 0\n          };\n        }\n        return alignedXY;\n      }),\n      titleBoxClick: (nodeId: string) => {\n        ctx.emit(\"click\", { id: nodeId });\n      },\n      nodeMouseDown: (nodeId: string) => {\n        ctx.emit(\"title-mouse-down\", { id: nodeId });\n      }\n    };\n  }\n});\n","import { render } from \"./PinLayer.vue?vue&type=template&id=29cc6f0f\"\nimport script from \"./PinLayer.vue?vue&type=script&lang=ts\"\nexport * from \"./PinLayer.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\n  <defs>\n    <marker\n      id=\"preconditionArrowHead\"\n      markerWidth=\"10\"\n      markerHeight=\"7\"\n      refX=\"9\"\n      refY=\"3.5\"\n      orient=\"auto\"\n    >\n      <polygon points=\"0 0, 10 3.5, 0 7\" />\n    </marker>\n  </defs>\n  <PreconditionArrow\n    v-for=\"precondition of preconditions\"\n    :key=\"precondition.id\"\n    markerId=\"preconditionArrow\"\n    :from=\"precondition.center\"\n    :to=\"selectedNode.center\"\n  />\n</template>\n\n<script lang=\"ts\">\nimport {\n  computed,\n  defineComponent,\n  PropType,\n  ref,\n  watch,\n  watchEffect\n} from \"vue\";\nimport PreconditionArrow from \"@/components/precondition_layer/PreconditionArrow.vue\";\nimport { useStore } from \"@/store\";\nimport { MapNode } from \"@/types/graphics\";\nimport { findMapNode, findMapNodes } from \"@/store/tree/helpers\";\nimport { clone } from \"@/tools/utils\";\nimport { zoomAndPanPoint, zoomAnPanLayers } from \"@/views/Home\";\n\nexport default defineComponent({\n  name: \"PreconditionLayer\",\n  components: { PreconditionArrow },\n  props: {\n    selectedNodeId: String,\n    preconditionNodeIds: Object as PropType<string[]>\n  },\n  setup(props, ctx) {\n    const store = useStore();\n    const preconditions = ref<Array<MapNode>>([]);\n    const zoomPanState = store.state.zoomPan;\n    const selectedNode = computed(() => {\n      if (props.selectedNodeId && store.state.tree.mapNodeLayers) {\n        const [mapNode] = findMapNode(\n          props.selectedNodeId,\n          store.state.tree.mapNodeLayers\n        );\n        const zoomedPannedSelectedNode = clone(mapNode);\n        zoomedPannedSelectedNode.center = zoomAndPanPoint(\n          zoomedPannedSelectedNode.center,\n          zoomPanState.zoom,\n          zoomPanState.pan\n        );\n        return zoomedPannedSelectedNode;\n      } else {\n        return null;\n      }\n    });\n    watchEffect(() => {\n      preconditions.value = [];\n      if (\n        props.selectedNodeId &&\n        store.state.precondition.preconditions[props.selectedNodeId] &&\n        store.state.tree.mapNodeLayers\n      ) {\n        const nodes = clone(\n          findMapNodes(\n            store.state.precondition.preconditions[props.selectedNodeId],\n            store.state.tree.mapNodeLayers\n          )\n        );\n        for (const node of nodes) {\n          node.center = zoomAndPanPoint(\n            node.center,\n            zoomPanState.zoom,\n            zoomPanState.pan\n          );\n          preconditions.value.push(node);\n        }\n      }\n    });\n    return {\n      selectedNode,\n      preconditions\n    };\n  }\n});\n</script>\n","<template>\n  <line\n    :x1=\"from.x\"\n    :y1=\"from.y\"\n    :x2=\"to.x\"\n    :y2=\"to.y\"\n    stroke=\"#000\"\n    stroke-width=\"2\"\n    marker-end=\"url(#preconditionArrowHead)\"\n  />\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType } from \"vue\";\nimport { Point } from \"@/types/graphics\";\n\nexport default defineComponent({\n  name: \"PreconditionArrow\",\n  props: {\n    markerId: String,\n    from: Object as PropType<Point>,\n    to: Object as PropType<Point>\n  }\n});\n</script>\n","\nimport { defineComponent, PropType } from \"vue\";\nimport { Point } from \"@/types/graphics\";\n\nexport default defineComponent({\n  name: \"PreconditionArrow\",\n  props: {\n    markerId: String,\n    from: Object as PropType<Point>,\n    to: Object as PropType<Point>\n  }\n});\n","import { render } from \"./PreconditionArrow.vue?vue&type=template&id=987525de\"\nimport script from \"./PreconditionArrow.vue?vue&type=script&lang=ts\"\nexport * from \"./PreconditionArrow.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","import { MapNode, Point, Polygon, Viewport } from \"@/types/graphics\";\nimport { area, getVectorLength, isInside } from \"@/tools/graphics\";\nimport { ErrorKV } from \"@/types/errorkv\";\nimport NewErrorKV from \"@/tools/errorkv\";\nimport { NodeRecordItem } from \"@/store/tree\";\nimport { findMapNode } from \"@/store/tree/helpers\";\nimport { clone } from \"@/tools/utils\";\nimport api from \"@/api/api\";\nimport { isEqual } from \"lodash\";\nimport { DBNode } from \"@/api/types\";\n\nconst MIN_VISIBLE_NUM_IN_LAYER = 2;\n\nexport function zoomAndPanPoint(p: Point, zoom: number, pan: Point): Point {\n  return { x: p.x * zoom + pan.x, y: p.y * zoom + pan.y };\n}\n\nexport function zoomAndPanPolygon(\n  p: Polygon,\n  zoom: number,\n  pan: Point\n): Polygon {\n  return p.map(point => zoomAndPanPoint(point, zoom, pan));\n}\n\n/**\n * CentralNode вычисляется следующим образом.\n * Начинаем смотреть с самого верхнего слоя.\n * Для каждого узла слоя применяем zoomFactor, затем pan\n * Потом смотрим находится ли zoomCenter внутри него. Если да, то это претендент на currentNode (назовем его N).\n * Мы берем его полную площадь и умножаем на 2.\n * Если получившееся значение ≤ площади экрана, то мы считаем что currentNode это parent узла N\n * Если больше то повторяем итерацию но только с детьми N.\n * @param layers\n * @param nodeRecord\n * @param viewport\n * @param zoomFactor\n * @param pan\n * @param zoomCenter\n */\nexport function findCentralNode(\n  layers: Array<Record<string, MapNode>>,\n  nodeRecord: Record<string, NodeRecordItem>,\n  viewport: Viewport,\n  zoomFactor: number,\n  pan: Point,\n  zoomCenter: Point\n): [string, ErrorKV] {\n  if (!layers || layers.length == 0) {\n    return [\"\", null];\n  }\n\n  let underCursorNodeId = null;\n  const viewportArea = viewport.width * viewport.height;\n  let nodesToCheck = layers[0];\n  while (Object.keys(nodesToCheck).length) {\n    underCursorNodeId = \"\";\n\n    for (const nodeId in nodesToCheck) {\n      const borderToCheck = zoomAndPanPolygon(\n        nodesToCheck[nodeId].border,\n        zoomFactor,\n        pan\n      );\n      if (isInside(zoomCenter, borderToCheck)) {\n        underCursorNodeId = nodeId;\n        break;\n      }\n    }\n\n    if (underCursorNodeId === \"\") {\n      // if zoomCenter is outside take the closest node\n      let minDist = Infinity;\n      for (const nodeId in nodesToCheck) {\n        const nodeCenter = zoomAndPanPoint(\n          nodesToCheck[nodeId].center,\n          zoomFactor,\n          pan\n        );\n        const dist = getVectorLength({ from: nodeCenter, to: zoomCenter });\n        if (dist < minDist) {\n          minDist = dist;\n          underCursorNodeId = nodeId;\n        }\n      }\n    }\n\n    const underCursorNodeArea = area(\n      zoomAndPanPolygon(nodesToCheck[underCursorNodeId].border, zoomFactor, pan)\n    );\n    if (\n      Math.floor(underCursorNodeArea) <=\n      Math.floor(viewportArea / MIN_VISIBLE_NUM_IN_LAYER)\n    ) {\n      if (nodeRecord[underCursorNodeId].parent == null) {\n        return [underCursorNodeId, null];\n      }\n      return [nodeRecord[underCursorNodeId].parent!.id, null];\n    } else {\n      nodesToCheck = {};\n      if (!nodeRecord[underCursorNodeId]) {\n        return [\n          \"\",\n          NewErrorKV(\n            \"findCurrentNode: cannot find underCursorNodeId in nodeRecord\",\n            { maxIntersectNodeId: underCursorNodeId, nodeRecord }\n          )\n        ];\n      }\n      for (const child of nodeRecord[underCursorNodeId].node.children) {\n        const [mapNode] = findMapNode(child.id, layers);\n        if (mapNode == null) {\n          return [\n            \"\",\n            NewErrorKV(\"filterNodesAndLayers: Cannot find node in layers\", {\n              \"child.id\": child.id,\n              layers: layers\n            })\n          ];\n        }\n        nodesToCheck[child.id] = mapNode;\n      }\n\n      if (Object.keys(nodesToCheck).length === 0) {\n        return [underCursorNodeId, null];\n      }\n    }\n  }\n\n  return [\"\", NewErrorKV(\"filterNodesAndLayers: unknown error\", {})];\n}\n\n/**\n * Мы показываем слой в котором находится currentNode (без названий) плюс еще 3.\n * Причем полноценно мы показываем только подузлы currentNode.\n * Узлы слоя currentNode отображаются только если у них тот же parent что и у\n * currentNode. Плюс подузлы НЕ ИЗ currentNode мы отображаем только одного следующего слоя.\n * @param layers\n * @param nodeRecord\n * @param currentNodeId\n */\nexport function filterNodesAndLayers(\n  layers: Array<Record<string, MapNode>>,\n  nodeRecord: Record<string, NodeRecordItem>,\n  currentNodeId: string\n): [Array<Record<number, MapNode>>, ErrorKV] {\n  if (!layers || !layers.length) {\n    return [[], null];\n  }\n  const resultLayers = [];\n\n  // узнаем какой слой у currentNode\n  const [currentNode, level] = findMapNode(currentNodeId, layers);\n  if (currentNode == null || level == null) {\n    return [\n      [],\n      NewErrorKV(\"filterNodesAndLayers-currentNode: error in findMapNode\", {\n        currentNodeId,\n        layers\n      })\n    ];\n  }\n\n  // убираем из этого слоя все кроме детей currentNode.parent\n  const upperLayer: Record<string, MapNode> = {};\n  if (nodeRecord[currentNode.id].parent == null) {\n    upperLayer[currentNode.id] = clone(currentNode);\n  } else {\n    for (const child of nodeRecord[currentNode.id].parent!.children) {\n      const [mapNode, l] = findMapNode(child.id, [layers[level]]);\n      if (mapNode == null || l === null) {\n        return [\n          [],\n          NewErrorKV(\"filterNodesAndLayers-upperLayer: error in findMapNode\", {\n            \"child.id\": child.id,\n            level,\n            layers: [layers[level]]\n          })\n        ];\n      }\n      upperLayer[child.id] = clone(mapNode);\n      upperLayer[child.id].title = \"\";\n    }\n  }\n  resultLayers.push(upperLayer);\n\n  // следующий слой это дети всех узлов из upperLayer, но дети всех кроме currentNode не имеют названий\n  const firstLayer: Record<string, MapNode> = {};\n  for (const nodeId in upperLayer) {\n    for (const child of nodeRecord[nodeId].node.children) {\n      const [mapNode, l] = findMapNode(child.id, [layers[level + 1]]);\n      if (mapNode == null || l === null) {\n        return [\n          [],\n          NewErrorKV(\"filterNodesAndLayers-firstLayer: error in findMapNode\", {\n            \"child.id\": child.id,\n            layers: [layers[level + 1]]\n          })\n        ];\n      }\n      if (nodeId != currentNodeId) {\n        firstLayer[child.id] = clone(mapNode);\n        firstLayer[child.id].title = \"\";\n      } else {\n        firstLayer[child.id] = clone(mapNode);\n      }\n    }\n  }\n\n  if (Object.keys(firstLayer).length > 0) {\n    resultLayers.push(firstLayer);\n  }\n\n  // следующий слой это дети детей currentNode\n  const secondLayer: Record<string, MapNode> = {};\n  //for (const childId in firstLayer) {\n  for (const child of nodeRecord[currentNodeId].node.children) {\n    for (const childOfChild of nodeRecord[child.id].node.children) {\n      const [mapNode, l] = findMapNode(childOfChild.id, [layers[level + 2]]);\n      if (mapNode == null || l === null) {\n        return [\n          [],\n          NewErrorKV(\"filterNodesAndLayers-secondLayer: error in findMapNode\", {\n            \"child.id\": child.id,\n            layers: [layers[level + 2]]\n          })\n        ];\n      }\n      secondLayer[childOfChild.id] = clone(mapNode);\n    }\n  }\n\n  if (Object.keys(secondLayer).length > 0) {\n    resultLayers.push(secondLayer);\n  }\n\n  // следующий это дети узлов из secondLayer и у них нет названий\n  const thirdLayer: Record<string, MapNode> = {};\n  for (const nodeId in secondLayer) {\n    for (const child of nodeRecord[nodeId].node.children) {\n      const [mapNode, l] = findMapNode(child.id, [layers[level + 3]]);\n      if (mapNode == null || l === null) {\n        return [\n          [],\n          NewErrorKV(\"filterNodesAndLayers-thirdLayer:cannot findMapNode\", {\n            \"child.id\": child.id,\n            level: level + 3,\n            layers: [layers[level + 3]]\n          })\n        ];\n      }\n      thirdLayer[child.id] = clone(mapNode);\n      thirdLayer[child.id].title = \"\";\n    }\n  }\n\n  if (Object.keys(thirdLayer).length > 0) {\n    resultLayers.push(thirdLayer);\n  }\n\n  return [resultLayers, null];\n}\n\nexport function zoomAnPanLayers(\n  layers: Array<Record<number, MapNode>>,\n  zoom: number,\n  pan: Point\n): Array<Record<number, MapNode>> {\n  if (!layers || layers.length == 0) {\n    return [];\n  }\n  for (const layer of layers) {\n    for (const id in layer) {\n      const node = layer[id];\n      node.center = zoomAndPanPoint(node.center, zoom, pan);\n      node.border = zoomAndPanPolygon(node.border, zoom, pan);\n    }\n  }\n\n  return layers;\n}\n","\nimport {\n  computed,\n  defineComponent,\n  PropType,\n  ref,\n  watch,\n  watchEffect\n} from \"vue\";\nimport PreconditionArrow from \"@/components/precondition_layer/PreconditionArrow.vue\";\nimport { useStore } from \"@/store\";\nimport { MapNode } from \"@/types/graphics\";\nimport { findMapNode, findMapNodes } from \"@/store/tree/helpers\";\nimport { clone } from \"@/tools/utils\";\nimport { zoomAndPanPoint, zoomAnPanLayers } from \"@/views/Home\";\n\nexport default defineComponent({\n  name: \"PreconditionLayer\",\n  components: { PreconditionArrow },\n  props: {\n    selectedNodeId: String,\n    preconditionNodeIds: Object as PropType<string[]>\n  },\n  setup(props, ctx) {\n    const store = useStore();\n    const preconditions = ref<Array<MapNode>>([]);\n    const zoomPanState = store.state.zoomPan;\n    const selectedNode = computed(() => {\n      if (props.selectedNodeId && store.state.tree.mapNodeLayers) {\n        const [mapNode] = findMapNode(\n          props.selectedNodeId,\n          store.state.tree.mapNodeLayers\n        );\n        const zoomedPannedSelectedNode = clone(mapNode);\n        zoomedPannedSelectedNode.center = zoomAndPanPoint(\n          zoomedPannedSelectedNode.center,\n          zoomPanState.zoom,\n          zoomPanState.pan\n        );\n        return zoomedPannedSelectedNode;\n      } else {\n        return null;\n      }\n    });\n    watchEffect(() => {\n      preconditions.value = [];\n      if (\n        props.selectedNodeId &&\n        store.state.precondition.preconditions[props.selectedNodeId] &&\n        store.state.tree.mapNodeLayers\n      ) {\n        const nodes = clone(\n          findMapNodes(\n            store.state.precondition.preconditions[props.selectedNodeId],\n            store.state.tree.mapNodeLayers\n          )\n        );\n        for (const node of nodes) {\n          node.center = zoomAndPanPoint(\n            node.center,\n            zoomPanState.zoom,\n            zoomPanState.pan\n          );\n          preconditions.value.push(node);\n        }\n      }\n    });\n    return {\n      selectedNode,\n      preconditions\n    };\n  }\n});\n","import { render } from \"./PreconditionLayer.vue?vue&type=template&id=4ce2f098\"\nimport script from \"./PreconditionLayer.vue?vue&type=script&lang=ts\"\nexport * from \"./PreconditionLayer.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","\nimport { defineComponent, onMounted, PropType, watch } from \"vue\";\nimport { MapNode } from \"@/types/graphics\";\nimport MapLayer from \"@/components/map_layer/MapLayer.vue\";\nimport {\n  EventClickNode,\n  EventDraggingNode\n} from \"@/components/map_layer/MapLayer\";\nimport pan from \"./MapPan\";\nimport PinLayer from \"@/components/pin_layer/PinLayer.vue\";\nimport { printError } from \"@/tools/utils\";\nimport PreconditionLayer from \"@/components/precondition_layer/PreconditionLayer.vue\";\n\nconst mapID = \"mapID\";\n\nexport default defineComponent({\n  name: \"Map\",\n  emits: [\n    \"title-dragging\",\n    \"title-click\",\n    \"title-over\",\n    \"title-leave\",\n    \"dragging-background\",\n    \"wheel\"\n  ],\n  components: {\n    PreconditionLayer,\n    PinLayer,\n    MapLayer\n  },\n  props: {\n    viewBox: {\n      type: String,\n      required: true\n    },\n    layers: Object as PropType<Array<Record<string, MapNode>>>,\n    selectedNodeId: {\n      type: String || null,\n      validator: (prop: string | null) =>\n        typeof prop === \"string\" || prop === null,\n      required: true\n    },\n    preconditionNodeIds: Object as PropType<string[]>,\n    pinNodes: Object as PropType<MapNode[]>\n  },\n  setup(props, ctx) {\n    onMounted(() => {\n      const map = document.getElementById(mapID);\n      if (!map) {\n        printError(\"Map.vue: cannot find map id for event listener\", {});\n        return;\n      }\n      map.addEventListener(\"mousedown\", async event => {\n        await pan.mouseDown(event);\n      });\n      map.addEventListener(\"mouseup\", async event => {\n        await pan.mouseUp(event);\n      });\n      map.addEventListener(\"mousemove\", event => {\n        pan.mouseMove(ctx.emit, event);\n      });\n      map.addEventListener(\"wheel\", event => {\n        ctx.emit(\"wheel\", {\n          delta: event.deltaY,\n          center: { x: event.clientX, y: event.clientY }\n        });\n      });\n    });\n\n    return {\n      draggingNode: (e: EventDraggingNode) => {\n        ctx.emit(\"title-dragging\", {\n          id: e.nodeId,\n          delta: e.delta\n        });\n      },\n      titleClick: (e: EventClickNode) => {\n        ctx.emit(\"title-click\", { id: e.id });\n      },\n      titleOver: (e: EventClickNode) => {\n        ctx.emit(\"title-over\", { id: e.id });\n      },\n      titleLeave: (e: EventClickNode) => {\n        ctx.emit(\"title-leave\", { id: e.id });\n      },\n      pinNodeMouseDown: () => {\n        pan.pinNodeMouseDownHandler();\n      },\n      mapID: mapID\n    };\n  }\n});\n","import { render } from \"./Map.vue?vue&type=template&id=37f239e9\"\nimport script from \"./Map.vue?vue&type=script&lang=ts\"\nexport * from \"./Map.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\n  <transition name=\"slide\">\n    <div v-if=\"show && selectedNode\" class=\"wrapper\">\n      <h2>\n        <InputText\n          type=\"text\"\n          placeholder=\"Node title\"\n          :value=\"selectedNode.title\"\n          @update:modelValue=\"changeNodeTitle($event)\"\n        />\n      </h2>\n      <div class=\"p-fluid\">\n        <!-- Content   -->\n        <div class=\"p-field p-grid\">\n          <div class=\"p-col-12\">\n            <TextArea\n              id=\"content\"\n              placeholder=\"Description\"\n              :autoResize=\"true\"\n              rows=\"20\"\n              :value=\"selectedNodeContent ? selectedNodeContent.content : ''\"\n              @update:modelValue=\"changeContent($event)\"\n              v-on:keydown=\"checkAuthorized\"\n            />\n          </div>\n        </div>\n\n        <!-- sources -->\n        <h3>Sources</h3>\n        <SectionResources\n          v-if=\"selectedNodeContent\"\n          :node-id=\"selectedNode.id\"\n          :resources=\"resources\"\n          :resourceIds=\"selectedNodeContent.resourceIds\"\n        />\n\n        <!-- Preconditions section -->\n        <h3>Preconditions</h3>\n        <SectionPreconditions\n          v-if=\"selectedNodeContent\"\n          :node-id=\"selectedNode.id\"\n        />\n\n        <!-- Comment -->\n        <h3>Your personal comment</h3>\n        <div class=\"p-field p-grid\">\n          <div class=\"p-col-12 p-md-12\">\n            <TextArea\n              id=\"comment\"\n              placeholder=\"Your personal comment\"\n              :autoResize=\"true\"\n              rows=\"2\"\n              :value=\"comment\"\n              @update:modelValue=\"changeComment($event)\"\n              v-on:keydown=\"checkAuthorized\"\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  </transition>\n</template>\n\n<script lang=\"ts\">\nimport { actions, useStore } from \"@/store\";\nimport { actions as nodeContentActions } from \"@/store/node_content\";\nimport { computed } from \"vue\";\nimport TextArea from \"primevue/textarea\";\nimport InputText from \"primevue/inputtext\";\nimport SectionResources from \"./resources/Index.vue\";\nimport SectionPreconditions from \"./Preconditions.vue\";\nimport { Tree } from \"@/types/graphics\";\nimport {\n  EmptyNodeContent,\n  NodeComment,\n  NodeContent\n} from \"@/store/node_content\";\nimport { Resources } from \"@/store/resources\";\nimport { clone, printError } from \"@/tools/utils\";\nimport { useConfirm } from \"primevue/useconfirm\";\nimport api from \"@/api/api\";\n\nexport default {\n  name: \"NodeContent\",\n  components: {\n    TextArea,\n    InputText,\n    SectionResources,\n    SectionPreconditions\n  },\n  props: {\n    show: {\n      type: Boolean,\n      required: true\n    }\n  },\n  setup() {\n    const store = useStore();\n    const confirm = useConfirm();\n    const tree = store.state.tree;\n    const nodeContents = computed<Record<string, NodeContent>>(\n      () => store.state.nodeContent.nodeContents\n    );\n    const userNodeComments = computed<Record<string, NodeComment>>(\n      () => store.state.nodeContent.userNodeComments\n    );\n\n    const resources = computed<Resources>(\n      () => store.state.resources.resources\n    );\n\n    const selectedNode = computed<Tree | null>(() =>\n      tree.selectedNodeId && tree.nodeRecord[tree.selectedNodeId]\n        ? tree.nodeRecord[tree.selectedNodeId].node\n        : null\n    );\n\n    const selectedNodeContent = computed<NodeContent | null>(() => {\n      if (tree.selectedNodeId && nodeContents.value[tree.selectedNodeId]) {\n        return nodeContents.value[tree.selectedNodeId];\n      }\n      const newContent = clone(EmptyNodeContent);\n      newContent.nodeID = tree.selectedNodeId;\n      return newContent;\n    });\n\n    const comment = computed<string>(() =>\n      tree.selectedNodeId && userNodeComments.value[tree.selectedNodeId]\n        ? userNodeComments.value[tree.selectedNodeId].comment\n        : \"\"\n    );\n\n    return {\n      resources,\n      selectedNode,\n      selectedNodeContent,\n      checkAuthorized: async (e: Event) => {\n        if (!store.state.user.user || store.state.user.user.isAnonymous) {\n          await store.dispatch(`${actions.confirmSignInPopup}`, confirm);\n          e.preventDefault();\n        }\n      },\n      comment,\n      changeNodeTitle: async (value: string) => {\n        if (!selectedNode.value || !selectedNode.value.id) {\n          return;\n        }\n        const err = await api.update({\n          [`map/${selectedNode.value.id}/name`]: value\n        });\n\n        if (err) {\n          printError(err.error.message, err.kv);\n        }\n      },\n      changeContent: async (value: string) => {\n        const err = await store.dispatch(\n          `nodeContent/${nodeContentActions.setNodeContent}`,\n          {\n            nodeID: selectedNode.value!.id,\n            content: value\n          }\n        );\n\n        if (err) {\n          printError(err, {});\n        }\n      },\n      changeComment: async (value: string) => {\n        const err = await store.dispatch(\n          `nodeContent/${nodeContentActions.setNodeComment}`,\n          {\n            nodeID: selectedNode.value!.id,\n            comment: value\n          }\n        );\n\n        if (err) {\n          printError(err, {});\n        }\n      }\n    };\n  }\n};\n</script>\n\n<style scoped>\n.wrapper {\n  position: absolute;\n  width: 33%;\n  height: 100%;\n  padding: 8px;\n  background-color: rgba(255, 255, 255, 1);\n  font-family: Roboto;\n  color: rgb(73, 80, 87);\n}\n\n.slide-enter-active,\n.slide-leave-active {\n  transition: left 0.5s;\n}\n\n.slide-leave-from,\n.slide-enter-to {\n  left: 0;\n}\n\n.slide-enter-from,\n.slide-leave-to {\n  left: -100%;\n}\n</style>\n","<template>\n  <AddResourceForm :resources=\"resources\" />\n  <div v-for=\"resourceId of resourceIds\" class=\"p-grid\" :key=\"resourceId\">\n    <div class=\"p-col-12\">\n      <div class=\"p-grid\">\n        <div class=\"p-col-11\">\n          {{ resources[resourceId].title }}\n        </div>\n        <div class=\"p-col-1\">\n          <Button\n            @click=\"remove(resourceId)\"\n            icon=\"pi pi-ban\"\n            class=\"p-button-rounded p-button-help p-button-outlined\"\n          />\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { PropType } from \"vue\";\nimport { Resource } from \"@/store/resources\";\nimport Tooltip from \"primevue/tooltip\";\nimport { useConfirm } from \"primevue/useconfirm\";\nimport { actions, useStore } from \"@/store\";\nimport { actions as nodeContentActions } from \"@/store/node_content\";\nimport AddResourceForm from \"./AddResourceForm.vue\";\nimport Button from \"primevue/button\";\n\nexport default {\n  name: \"Resources\",\n  props: {\n    nodeId: String,\n    resources: Object as PropType<Record<string, Resource>>,\n    resourceIds: Object as PropType<Array<string>>\n  },\n  components: {\n    Button,\n    AddResourceForm\n  },\n  directives: {\n    tooltip: Tooltip\n  },\n  setup(props: { nodeId: string; resources: Record<string, Resource> }) {\n    const store = useStore();\n    const confirm = useConfirm();\n\n    return {\n      checkAuthorized: async (e: Event) => {\n        if (!store.state.user.user || store.state.user.user.isAnonymous) {\n          await store.dispatch(`${actions.confirmSignInPopup}`, confirm);\n          e.preventDefault();\n        }\n      },\n      remove: (resourceID: string) => {\n        store.dispatch(`nodeContent/${nodeContentActions.removeNodeResource}`, {\n          nodeID: props.nodeId,\n          resourceID: resourceID\n        });\n      }\n    };\n  }\n};\n</script>\n\n<style scoped>\n.user-rated {\n  background-color: #c6f68d;\n}\n</style>\n","<template>\n  <div class=\"p-grid\">\n    <div v-if=\"!newFormShow\" class=\"p-col-12\">\n      <AddResourceFormAutocomplete\n        :resources=\"resources\"\n        @item-select=\"autoCompleteSelect($event)\"\n        v-on:keydown=\"checkAuthorized\"\n      />\n    </div>\n  </div>\n  <div v-if=\"newFormShow\" class=\"p-grid\">\n    <div class=\"p-col-12\">\n      <div class=\"p-grid\">\n        <div class=\"p-col-12\">\n          <SelectButton\n            v-model=\"selectedType\"\n            :options=\"typeOptions\"\n            optionLabel=\"name\"\n            optionValue=\"code\"\n          />\n        </div>\n      </div>\n      <div\n        v-for=\"field of types[selectedType].fields\"\n        class=\"p-field p-grid\"\n        :key=\"Object.keys(field)[0]\"\n      >\n        <label :for=\"Object.keys(field)[0]\" class=\"p-col-3 p-mb-0\">{{\n          Object.values(field)[0]\n        }}</label>\n        <div class=\"p-col-9\">\n          <InputText\n            :id=\"Object.keys(field)[0]\"\n            type=\"text\"\n            :placeholder=\"placeholders[Object.keys(field)[0]]\"\n          />\n        </div>\n      </div>\n      <div class=\"p-grid\">\n        <div class=\"p-col-3\">\n          <Button label=\"Save\" class=\"p-button-rounded\" @click=\"save\" />\n        </div>\n        <div class=\"p-col-4\">\n          <Button label=\"Cancel\" class=\"p-button-rounded\" @click=\"cancel\" />\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport InputText from \"primevue/inputtext\";\nimport AddResourceFormAutocomplete from \"./AddResourceFormAutocomplete.vue\";\nimport Button from \"primevue/button\";\nimport SelectButton from \"primevue/selectbutton\";\nimport { computed, PropType, ref } from \"vue\";\nimport { actions, useStore } from \"@/store\";\nimport { actions as nodeContentActions } from \"@/store/node_content\";\nimport { Resource, Resources, ResourceType } from \"@/store/resources\";\nimport { printError } from \"@/tools/utils\";\nimport { BRAND_NEW_RESOURCE } from \"@/components/node_content/resources/AddResourceFormAutocomplete.vue\";\nimport { useConfirm } from \"primevue/useconfirm\";\n\nexport default {\n  name: \"AddResourceForm\",\n  components: {\n    InputText,\n    AddResourceFormAutocomplete,\n    Button,\n    SelectButton\n  },\n  props: {\n    resources: Object as PropType<Resources>\n  },\n  setup() {\n    const store = useStore();\n    const newFormShow = ref(false);\n    const selectedNode = computed(() => store.getters[\"tree/selectedNode\"]);\n    const selectedType = ref<ResourceType>(\"book\");\n    const confirm = useConfirm();\n    const types = {\n      book: {\n        name: \"book\",\n        fields: [\n          { title: \"title\" },\n          { author: \"author(s)\" },\n          { chapter: \"chapter(s)\" },\n          { findPhrase: \"find phrase\" },\n          { url: \"URL\" },\n          { isbn: \"ISBN\" },\n          { doi: \"DOI\" }\n        ]\n      },\n      article: {\n        name: \"article\",\n        fields: [\n          { title: \"title\" },\n          { author: \"author(s)\" },\n          { findPhrase: \"find phrase\" },\n          { url: \"URL\" },\n          { doi: \"DOI\" }\n        ]\n      },\n      other: {\n        name: \"other\",\n        fields: [\n          { title: \"title\" },\n          { author: \"author(s)\" },\n          { url: \"URL\" },\n          { findPhrase: \"find phrase\" }\n        ]\n      }\n    };\n    const typeKeys = Object.keys(types) as ResourceType[];\n    const typeOptions = typeKeys.map(key => ({\n      name: types[key].name,\n      code: key\n    }));\n    return {\n      newFormShow,\n      selectedType,\n      checkAuthorized: async (e: Event) => {\n        if (!store.state.user.user || store.state.user.user.isAnonymous) {\n          await store.dispatch(`${actions.confirmSignInPopup}`, confirm);\n          e.preventDefault();\n        }\n      },\n      autoCompleteSelect: async (e: Resource) => {\n        if (e.id == BRAND_NEW_RESOURCE) {\n          newFormShow.value = true;\n          return;\n        }\n        await store.dispatch(\n          `nodeContent/${nodeContentActions.addNodeResource}`,\n          { nodeID: selectedNode.value.id, resourceID: e.id }\n        );\n      },\n      save: async () => {\n        if (!selectedNode.value || !selectedNode.value.id) {\n          printError(\"Bad selectedNode\", { selectedNode });\n          return;\n        }\n        const values: any = {\n          id: \"\",\n          type: \"book\",\n          author: \"\",\n          title: \"\",\n          findPhrase: \"\",\n          url: \"\",\n          doi: \"\",\n          isbn: \"\",\n          createdAt: 0, // = Date.UTC()\n          updatedAt: 0 // = Date.UTC()\n        } as Resource;\n        for (const field of types[selectedType.value].fields) {\n          const fieldID = Object.keys(field)[0] as keyof Resource;\n          const el = document.getElementById(fieldID) as HTMLInputElement;\n          const val = el.value as Resource[keyof Resource];\n          values[fieldID] = val;\n        }\n        const resource: Resource | null = await store.dispatch(\n          `${actions.addNewResource}`,\n          values\n        );\n        if (resource == null) {\n          printError(\"Cannot add addNewResource\", values);\n          return;\n        }\n        await store.dispatch(\n          `nodeContent/${nodeContentActions.addNodeResource}`,\n          { nodeID: selectedNode.value.id, resourceID: resource.id }\n        );\n      },\n      cancel: () => {\n        newFormShow.value = false;\n      },\n      typeOptions,\n      types,\n      placeholders: {\n        title:\n          \"The Feynman Lectures on Physics, Vol. 1: Mainly Mechanics, Radiation, and Heat\",\n        author: \"Richard Feynman, Robert B. Leighton, Matthew Sands\",\n        chapter: \"1\",\n        findPhrase:\n          \"If, in some cataclysm, all of scientific knowledge were to be destroyed, and only one sentence passed on to the next generations of creatures, what statement would contain the most information in the fewest words?\",\n        url: \"https://www.feynmanlectures.caltech.edu/I_01.html#Ch1-S1\",\n        doi: \"https://doi.org/10.1119/1.1972241\",\n        isbn: \"9780465023820\"\n      }\n    };\n  }\n};\n</script>\n","<template>\n  <AutoComplete\n    placeholder=\"start typing to add new educational resource...\"\n    :suggestions=\"filteredResources\"\n    v-model=\"modelValue\"\n    @complete=\"searchResource($event)\"\n    @item-select=\"selectResource($event)\"\n    field=\"title\"\n  />\n</template>\n\n<script lang=\"ts\">\nimport AutoComplete from \"primevue/autocomplete\";\nimport { PropType, ref, SetupContext } from \"vue\";\nimport { Resource, Resources } from \"@/store/resources\";\n\nexport const BRAND_NEW_RESOURCE = \"BRAND_NEW_RESOURCE\";\n\nexport default {\n  name: \"AddResourceFormAutocomplete\",\n  emits: [\"item-select\", \"update-value\"],\n  components: {\n    AutoComplete\n  },\n  props: {\n    resources: Object as PropType<Resources>\n  },\n  setup(props: { resources: Resources }, ctx: SetupContext) {\n    const filteredResources = ref<Resource[]>([]);\n    const modelValue = ref<string>(\"\");\n    return {\n      modelValue,\n      filteredResources,\n      selectResource(e: { originalEvent: Event; value: any }) {\n        ctx.emit(\"item-select\", e.value);\n      },\n      searchResource(e: { originalEvent: Event; query: string }) {\n        ctx.emit(\"update-value\", e.query);\n        filteredResources.value = [];\n        for (const id in props.resources) {\n          if (props.resources[id].title.includes(e.query)) {\n            filteredResources.value.push(props.resources[id]);\n          }\n        }\n        filteredResources.value.push({\n          id: BRAND_NEW_RESOURCE,\n          type: \"book\",\n          author: \"\",\n          title: \"Not in list? Click me to add brand new\",\n          chapterNumber: \"\",\n          chapterName: \"\",\n          findPhrase: \"\", // как найти - цитата, главы, ссылки\n          url: \"\",\n          doi: \"\",\n          isbn: \"\",\n          createdAt: 0,\n          updatedAt: 0\n        });\n      }\n    };\n  }\n};\n</script>\n","\nimport AutoComplete from \"primevue/autocomplete\";\nimport { PropType, ref, SetupContext } from \"vue\";\nimport { Resource, Resources } from \"@/store/resources\";\n\nexport const BRAND_NEW_RESOURCE = \"BRAND_NEW_RESOURCE\";\n\nexport default {\n  name: \"AddResourceFormAutocomplete\",\n  emits: [\"item-select\", \"update-value\"],\n  components: {\n    AutoComplete\n  },\n  props: {\n    resources: Object as PropType<Resources>\n  },\n  setup(props: { resources: Resources }, ctx: SetupContext) {\n    const filteredResources = ref<Resource[]>([]);\n    const modelValue = ref<string>(\"\");\n    return {\n      modelValue,\n      filteredResources,\n      selectResource(e: { originalEvent: Event; value: any }) {\n        ctx.emit(\"item-select\", e.value);\n      },\n      searchResource(e: { originalEvent: Event; query: string }) {\n        ctx.emit(\"update-value\", e.query);\n        filteredResources.value = [];\n        for (const id in props.resources) {\n          if (props.resources[id].title.includes(e.query)) {\n            filteredResources.value.push(props.resources[id]);\n          }\n        }\n        filteredResources.value.push({\n          id: BRAND_NEW_RESOURCE,\n          type: \"book\",\n          author: \"\",\n          title: \"Not in list? Click me to add brand new\",\n          chapterNumber: \"\",\n          chapterName: \"\",\n          findPhrase: \"\", // как найти - цитата, главы, ссылки\n          url: \"\",\n          doi: \"\",\n          isbn: \"\",\n          createdAt: 0,\n          updatedAt: 0\n        });\n      }\n    };\n  }\n};\n","import { render } from \"./AddResourceFormAutocomplete.vue?vue&type=template&id=274a44a4\"\nimport script from \"./AddResourceFormAutocomplete.vue?vue&type=script&lang=ts\"\nexport * from \"./AddResourceFormAutocomplete.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","\nimport InputText from \"primevue/inputtext\";\nimport AddResourceFormAutocomplete from \"./AddResourceFormAutocomplete.vue\";\nimport Button from \"primevue/button\";\nimport SelectButton from \"primevue/selectbutton\";\nimport { computed, PropType, ref } from \"vue\";\nimport { actions, useStore } from \"@/store\";\nimport { actions as nodeContentActions } from \"@/store/node_content\";\nimport { Resource, Resources, ResourceType } from \"@/store/resources\";\nimport { printError } from \"@/tools/utils\";\nimport { BRAND_NEW_RESOURCE } from \"@/components/node_content/resources/AddResourceFormAutocomplete.vue\";\nimport { useConfirm } from \"primevue/useconfirm\";\n\nexport default {\n  name: \"AddResourceForm\",\n  components: {\n    InputText,\n    AddResourceFormAutocomplete,\n    Button,\n    SelectButton\n  },\n  props: {\n    resources: Object as PropType<Resources>\n  },\n  setup() {\n    const store = useStore();\n    const newFormShow = ref(false);\n    const selectedNode = computed(() => store.getters[\"tree/selectedNode\"]);\n    const selectedType = ref<ResourceType>(\"book\");\n    const confirm = useConfirm();\n    const types = {\n      book: {\n        name: \"book\",\n        fields: [\n          { title: \"title\" },\n          { author: \"author(s)\" },\n          { chapter: \"chapter(s)\" },\n          { findPhrase: \"find phrase\" },\n          { url: \"URL\" },\n          { isbn: \"ISBN\" },\n          { doi: \"DOI\" }\n        ]\n      },\n      article: {\n        name: \"article\",\n        fields: [\n          { title: \"title\" },\n          { author: \"author(s)\" },\n          { findPhrase: \"find phrase\" },\n          { url: \"URL\" },\n          { doi: \"DOI\" }\n        ]\n      },\n      other: {\n        name: \"other\",\n        fields: [\n          { title: \"title\" },\n          { author: \"author(s)\" },\n          { url: \"URL\" },\n          { findPhrase: \"find phrase\" }\n        ]\n      }\n    };\n    const typeKeys = Object.keys(types) as ResourceType[];\n    const typeOptions = typeKeys.map(key => ({\n      name: types[key].name,\n      code: key\n    }));\n    return {\n      newFormShow,\n      selectedType,\n      checkAuthorized: async (e: Event) => {\n        if (!store.state.user.user || store.state.user.user.isAnonymous) {\n          await store.dispatch(`${actions.confirmSignInPopup}`, confirm);\n          e.preventDefault();\n        }\n      },\n      autoCompleteSelect: async (e: Resource) => {\n        if (e.id == BRAND_NEW_RESOURCE) {\n          newFormShow.value = true;\n          return;\n        }\n        await store.dispatch(\n          `nodeContent/${nodeContentActions.addNodeResource}`,\n          { nodeID: selectedNode.value.id, resourceID: e.id }\n        );\n      },\n      save: async () => {\n        if (!selectedNode.value || !selectedNode.value.id) {\n          printError(\"Bad selectedNode\", { selectedNode });\n          return;\n        }\n        const values: any = {\n          id: \"\",\n          type: \"book\",\n          author: \"\",\n          title: \"\",\n          findPhrase: \"\",\n          url: \"\",\n          doi: \"\",\n          isbn: \"\",\n          createdAt: 0, // = Date.UTC()\n          updatedAt: 0 // = Date.UTC()\n        } as Resource;\n        for (const field of types[selectedType.value].fields) {\n          const fieldID = Object.keys(field)[0] as keyof Resource;\n          const el = document.getElementById(fieldID) as HTMLInputElement;\n          const val = el.value as Resource[keyof Resource];\n          values[fieldID] = val;\n        }\n        const resource: Resource | null = await store.dispatch(\n          `${actions.addNewResource}`,\n          values\n        );\n        if (resource == null) {\n          printError(\"Cannot add addNewResource\", values);\n          return;\n        }\n        await store.dispatch(\n          `nodeContent/${nodeContentActions.addNodeResource}`,\n          { nodeID: selectedNode.value.id, resourceID: resource.id }\n        );\n      },\n      cancel: () => {\n        newFormShow.value = false;\n      },\n      typeOptions,\n      types,\n      placeholders: {\n        title:\n          \"The Feynman Lectures on Physics, Vol. 1: Mainly Mechanics, Radiation, and Heat\",\n        author: \"Richard Feynman, Robert B. Leighton, Matthew Sands\",\n        chapter: \"1\",\n        findPhrase:\n          \"If, in some cataclysm, all of scientific knowledge were to be destroyed, and only one sentence passed on to the next generations of creatures, what statement would contain the most information in the fewest words?\",\n        url: \"https://www.feynmanlectures.caltech.edu/I_01.html#Ch1-S1\",\n        doi: \"https://doi.org/10.1119/1.1972241\",\n        isbn: \"9780465023820\"\n      }\n    };\n  }\n};\n","import { render } from \"./AddResourceForm.vue?vue&type=template&id=19599008\"\nimport script from \"./AddResourceForm.vue?vue&type=script&lang=ts\"\nexport * from \"./AddResourceForm.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","\nimport { PropType } from \"vue\";\nimport { Resource } from \"@/store/resources\";\nimport Tooltip from \"primevue/tooltip\";\nimport { useConfirm } from \"primevue/useconfirm\";\nimport { actions, useStore } from \"@/store\";\nimport { actions as nodeContentActions } from \"@/store/node_content\";\nimport AddResourceForm from \"./AddResourceForm.vue\";\nimport Button from \"primevue/button\";\n\nexport default {\n  name: \"Resources\",\n  props: {\n    nodeId: String,\n    resources: Object as PropType<Record<string, Resource>>,\n    resourceIds: Object as PropType<Array<string>>\n  },\n  components: {\n    Button,\n    AddResourceForm\n  },\n  directives: {\n    tooltip: Tooltip\n  },\n  setup(props: { nodeId: string; resources: Record<string, Resource> }) {\n    const store = useStore();\n    const confirm = useConfirm();\n\n    return {\n      checkAuthorized: async (e: Event) => {\n        if (!store.state.user.user || store.state.user.user.isAnonymous) {\n          await store.dispatch(`${actions.confirmSignInPopup}`, confirm);\n          e.preventDefault();\n        }\n      },\n      remove: (resourceID: string) => {\n        store.dispatch(`nodeContent/${nodeContentActions.removeNodeResource}`, {\n          nodeID: props.nodeId,\n          resourceID: resourceID\n        });\n      }\n    };\n  }\n};\n","import { render } from \"./Index.vue?vue&type=template&id=70d44aa0&scoped=true\"\nimport script from \"./Index.vue?vue&type=script&lang=ts\"\nexport * from \"./Index.vue?vue&type=script&lang=ts\"\n\nimport \"./Index.vue?vue&type=style&index=0&id=70d44aa0&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-70d44aa0\"\n\nexport default script","<template>\n  <div\n    v-for=\"precondition of preconditions\"\n    class=\"p-grid\"\n    :key=\"precondition.id\"\n  >\n    <div class=\"p-col-12\">\n      <div class=\"p-grid\">\n        <div class=\"p-col-11\">\n          {{ precondition.title }}\n        </div>\n        <div class=\"p-col-1\">\n          <Button\n            @click=\"remove(precondition.id)\"\n            icon=\"pi pi-ban\"\n            class=\"p-button-rounded p-button-help p-button-outlined\"\n          />\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport Button from \"primevue/button\";\nimport { ref, watchEffect } from \"vue\";\nimport { useStore } from \"@/store\";\nimport { actions as preconditionActions } from \"@/store/precondition\";\nimport api from \"@/api/api\";\nimport { Tree } from \"@/types/graphics\";\n\nexport default {\n  name: \"Vacancies\",\n  props: {\n    nodeId: String\n  },\n  components: {\n    Button\n  },\n  setup(props: { nodeId: string }) {\n    const store = useStore();\n    const preconditions = ref<Array<Tree>>([]);\n    watchEffect(() => {\n      preconditions.value = [];\n      if (\n        props.nodeId &&\n        store.state.precondition.preconditions[props.nodeId]\n      ) {\n        for (const id of store.state.precondition.preconditions[props.nodeId]) {\n          preconditions.value.push(store.state.tree.nodeRecord[id].node);\n        }\n      }\n    });\n\n    return {\n      preconditions,\n      remove: (id: string) => {\n        store.dispatch(\n          `precondition/${preconditionActions.RemovePrecondition}`,\n          {\n            nodeId: props.nodeId,\n            preconditionId: id\n          }\n        );\n        api.savePreconditions(store.state.user.user, {\n          nodeId: props.nodeId,\n          preconditionIds: store.state.precondition.preconditions[props.nodeId]\n        });\n      }\n    };\n  }\n};\n</script>\n","\nimport Button from \"primevue/button\";\nimport { ref, watchEffect } from \"vue\";\nimport { useStore } from \"@/store\";\nimport { actions as preconditionActions } from \"@/store/precondition\";\nimport api from \"@/api/api\";\nimport { Tree } from \"@/types/graphics\";\n\nexport default {\n  name: \"Vacancies\",\n  props: {\n    nodeId: String\n  },\n  components: {\n    Button\n  },\n  setup(props: { nodeId: string }) {\n    const store = useStore();\n    const preconditions = ref<Array<Tree>>([]);\n    watchEffect(() => {\n      preconditions.value = [];\n      if (\n        props.nodeId &&\n        store.state.precondition.preconditions[props.nodeId]\n      ) {\n        for (const id of store.state.precondition.preconditions[props.nodeId]) {\n          preconditions.value.push(store.state.tree.nodeRecord[id].node);\n        }\n      }\n    });\n\n    return {\n      preconditions,\n      remove: (id: string) => {\n        store.dispatch(\n          `precondition/${preconditionActions.RemovePrecondition}`,\n          {\n            nodeId: props.nodeId,\n            preconditionId: id\n          }\n        );\n        api.savePreconditions(store.state.user.user, {\n          nodeId: props.nodeId,\n          preconditionIds: store.state.precondition.preconditions[props.nodeId]\n        });\n      }\n    };\n  }\n};\n","import { render } from \"./Preconditions.vue?vue&type=template&id=7e021b3e\"\nimport script from \"./Preconditions.vue?vue&type=script&lang=ts\"\nexport * from \"./Preconditions.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","\nimport { actions, useStore } from \"@/store\";\nimport { actions as nodeContentActions } from \"@/store/node_content\";\nimport { computed } from \"vue\";\nimport TextArea from \"primevue/textarea\";\nimport InputText from \"primevue/inputtext\";\nimport SectionResources from \"./resources/Index.vue\";\nimport SectionPreconditions from \"./Preconditions.vue\";\nimport { Tree } from \"@/types/graphics\";\nimport {\n  EmptyNodeContent,\n  NodeComment,\n  NodeContent\n} from \"@/store/node_content\";\nimport { Resources } from \"@/store/resources\";\nimport { clone, printError } from \"@/tools/utils\";\nimport { useConfirm } from \"primevue/useconfirm\";\nimport api from \"@/api/api\";\n\nexport default {\n  name: \"NodeContent\",\n  components: {\n    TextArea,\n    InputText,\n    SectionResources,\n    SectionPreconditions\n  },\n  props: {\n    show: {\n      type: Boolean,\n      required: true\n    }\n  },\n  setup() {\n    const store = useStore();\n    const confirm = useConfirm();\n    const tree = store.state.tree;\n    const nodeContents = computed<Record<string, NodeContent>>(\n      () => store.state.nodeContent.nodeContents\n    );\n    const userNodeComments = computed<Record<string, NodeComment>>(\n      () => store.state.nodeContent.userNodeComments\n    );\n\n    const resources = computed<Resources>(\n      () => store.state.resources.resources\n    );\n\n    const selectedNode = computed<Tree | null>(() =>\n      tree.selectedNodeId && tree.nodeRecord[tree.selectedNodeId]\n        ? tree.nodeRecord[tree.selectedNodeId].node\n        : null\n    );\n\n    const selectedNodeContent = computed<NodeContent | null>(() => {\n      if (tree.selectedNodeId && nodeContents.value[tree.selectedNodeId]) {\n        return nodeContents.value[tree.selectedNodeId];\n      }\n      const newContent = clone(EmptyNodeContent);\n      newContent.nodeID = tree.selectedNodeId;\n      return newContent;\n    });\n\n    const comment = computed<string>(() =>\n      tree.selectedNodeId && userNodeComments.value[tree.selectedNodeId]\n        ? userNodeComments.value[tree.selectedNodeId].comment\n        : \"\"\n    );\n\n    return {\n      resources,\n      selectedNode,\n      selectedNodeContent,\n      checkAuthorized: async (e: Event) => {\n        if (!store.state.user.user || store.state.user.user.isAnonymous) {\n          await store.dispatch(`${actions.confirmSignInPopup}`, confirm);\n          e.preventDefault();\n        }\n      },\n      comment,\n      changeNodeTitle: async (value: string) => {\n        if (!selectedNode.value || !selectedNode.value.id) {\n          return;\n        }\n        const err = await api.update({\n          [`map/${selectedNode.value.id}/name`]: value\n        });\n\n        if (err) {\n          printError(err.error.message, err.kv);\n        }\n      },\n      changeContent: async (value: string) => {\n        const err = await store.dispatch(\n          `nodeContent/${nodeContentActions.setNodeContent}`,\n          {\n            nodeID: selectedNode.value!.id,\n            content: value\n          }\n        );\n\n        if (err) {\n          printError(err, {});\n        }\n      },\n      changeComment: async (value: string) => {\n        const err = await store.dispatch(\n          `nodeContent/${nodeContentActions.setNodeComment}`,\n          {\n            nodeID: selectedNode.value!.id,\n            comment: value\n          }\n        );\n\n        if (err) {\n          printError(err, {});\n        }\n      }\n    };\n  }\n};\n","import { render } from \"./Index.vue?vue&type=template&id=06976913&scoped=true\"\nimport script from \"./Index.vue?vue&type=script&lang=ts\"\nexport * from \"./Index.vue?vue&type=script&lang=ts\"\n\nimport \"./Index.vue?vue&type=style&index=0&id=06976913&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-06976913\"\n\nexport default script","<template>\n  <div :class=\"$style.wrapper\">\n    <div v-if=\"email\">\n      {{ email }}\n      <Feedback />\n      <EditMode />\n      <span v-if=\"editModeOn\">\n        <CutPaste v-if=\"isNodeSelected\" />\n        <AddNode />\n        <RemoveNode v-if=\"isNodeSelected\" />\n      </span>\n      <AddPrecondition\n        v-if=\"isNodeSelected\"\n        :clickedTitleId=\"clickedTitleId\"\n        @select-precondition-is-on=\"$emit('select-precondition-is-on')\"\n        @select-precondition-is-off=\"$emit('select-precondition-is-off')\"\n      />\n      <PinNode v-if=\"isNodeSelected && !isPinned\" />\n      <UnpinNode v-if=\"isNodeSelected && isPinned\" />\n      <button @click=\"signOut\">Sign Out</button>\n    </div>\n    <button v-else @click=\"signIn\">\n      Sign In\n    </button>\n  </div>\n</template>\n\n<script>\nimport { useStore } from \"@/store\";\nimport { computed } from \"vue\";\nimport { actions as userActions } from \"@/store/user\";\nimport PinNode from \"./PinNode\";\nimport AddPrecondition from \"./AddPrecondition\";\nimport AddNode from \"./AddNode\";\nimport RemoveNode from \"./RemoveNode\";\nimport EditMode from \"./EditMode\";\nimport UnpinNode from \"@/components/menu/UnpinNode\";\nimport CutPaste from \"@/components/menu/CutPaste\";\nimport Feedback from \"@/components/menu/Feedback\";\n\nexport default {\n  name: \"Menu\",\n  components: {\n    Feedback,\n    CutPaste,\n    UnpinNode,\n    PinNode,\n    AddNode,\n    AddPrecondition,\n    RemoveNode,\n    EditMode\n  },\n  props: {\n    clickedTitleId: {\n      type: String,\n      required: true\n    }\n  },\n  setup() {\n    const store = useStore();\n    const user = store.state.user;\n\n    // user info\n    const email = computed(() => (user.user ? user.user.email : null));\n\n    return {\n      email,\n      editModeOn: computed(() => store.state.editModeOn),\n      isNodeSelected: computed(() => store.state.tree.selectedNodeId),\n      isPinned: computed(\n        () =>\n          store.state.pin.pins[store.state.tree.selectedNodeId] !== undefined\n      ),\n      // SignIn SignOut\n      signIn: () => store.dispatch(`user/${userActions.signIn}`),\n      signOut: () => store.dispatch(`user/${userActions.signOut}`)\n    };\n  }\n};\n</script>\n\n<style module>\n.wrapper {\n  position: fixed;\n  display: flex;\n  justify-content: flex-end;\n  padding: 8px;\n  background-color: rgba(255, 255, 255, 0.2);\n}\n</style>\n","<template>\n  <button @mousedown.stop=\"toggleAddDialog\">pin</button>\n  <Dialog\n    v-model:visible=\"addDialogVisible\"\n    :dismissableMask=\"true\"\n    :closable=\"true\"\n    :modal=\"true\"\n    :closeOnEscape=\"true\"\n  >\n    <template #header>\n      <h3>\n        {{ `Choose parent from which pin will be visible` }}\n      </h3>\n    </template>\n\n    <Listbox v-model=\"selectedParent\" :options=\"parents\" optionLabel=\"title\" />\n\n    <template #footer>\n      <Button\n        label=\"No\"\n        icon=\"pi pi-times\"\n        class=\"p-button-text\"\n        @click=\"cancelAdd\"\n      />\n      <Button label=\"Yes\" icon=\"pi pi-check\" @click=\"add\" />\n    </template>\n  </Dialog>\n</template>\n\n<script>\nimport Dialog from \"primevue/dialog\";\nimport Button from \"primevue/button\";\nimport Listbox from \"primevue/listbox\";\nimport { useStore } from \"@/store\";\nimport { computed, ref } from \"vue\";\nimport { actions as pinActions } from \"@/store/pin\";\nimport api from \"@/api/api\";\n\nexport default {\n  name: \"PinNode\",\n  components: {\n    Dialog,\n    Button,\n    Listbox\n  },\n  setup() {\n    const store = useStore();\n    const treeState = store.state.tree;\n    const addDialogVisible = ref(false);\n    const selectedParent = ref(false);\n    const selectedNode = computed(() => store.getters[\"tree/selectedNode\"]);\n    const newNodeTitle = ref(\"\");\n    const parents = computed(() => {\n      const selectedNodeParents = [];\n      let currentParent = treeState.nodeRecord[treeState.selectedNodeId].parent;\n      while (treeState.nodeRecord[currentParent.id].parent) {\n        selectedNodeParents.push({\n          title: currentParent.title,\n          id: currentParent.id\n        });\n        currentParent = treeState.nodeRecord[currentParent.id].parent;\n      }\n      selectedNodeParents.push({ title: \"root\", id: 0 });\n      return selectedNodeParents;\n    });\n\n    return {\n      toggleAddDialog: () => {\n        addDialogVisible.value = !addDialogVisible.value;\n      },\n      selectedParent,\n      parents,\n      add: () => {\n        addDialogVisible.value = false;\n        store.dispatch(`pin/${pinActions.AddPin}`, {\n          parentId: selectedParent.value.id,\n          nodeId: selectedNode.value.id\n        });\n        api.savePins(store.state.user.user, store.state.pin.pins);\n        selectedParent.value = null;\n      },\n      cancelAdd: () => {\n        addDialogVisible.value = false;\n      },\n      addDialogVisible,\n      newNodeTitle\n    };\n  }\n};\n</script>\n","import { render } from \"./PinNode.vue?vue&type=template&id=4dea212a\"\nimport script from \"./PinNode.vue?vue&type=script&lang=js\"\nexport * from \"./PinNode.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\n  <button @click=\"showAddBanner\">Add Premise</button>\n  <Dialog\n    v-model:visible=\"addBannerVisible\"\n    :dismissableMask=\"false\"\n    :closable=\"true\"\n    :modal=\"false\"\n    :closeOnEscape=\"true\"\n    @mousedown.stop\n  >\n    <template #header>\n      <h3>\n        Set \"{{\n          preconditionNode.title\n            ? preconditionNode.title\n            : selectedNode\n            ? selectedNode.title\n            : \"\"\n        }}\" as precondition for \"{{ targetNode ? targetNode.title : \"\" }}\"\n      </h3>\n    </template>\n\n    <template #footer>\n      <Button\n        label=\"Cancel\"\n        icon=\"pi pi-times\"\n        class=\"p-button-text\"\n        @click=\"cancelAdd\"\n      />\n      <Button label=\"Done\" icon=\"pi pi-check\" @click=\"add\" />\n    </template>\n  </Dialog>\n</template>\n\n<script>\nimport Dialog from \"primevue/dialog\";\nimport Button from \"primevue/button\";\nimport { useStore } from \"@/store\";\nimport { computed, ref, watch } from \"vue\";\nimport { actions as preconditionActions } from \"@/store/precondition\";\nimport api from \"@/api/api\";\nimport { Tree } from \"@/types/graphics\";\n\nexport default {\n  name: \"AddPrecondition\",\n  components: {\n    Dialog,\n    Button\n  },\n  emits: [\"select-precondition-is-on\", \"select-precondition-is-off\"],\n  props: {\n    clickedTitleId: {\n      type: String,\n      required: true\n    }\n  },\n  setup(props, ctx) {\n    const store = useStore();\n    const addBannerVisible = ref(false);\n    const targetNode = ref({}); // node where precondition must be added\n    const preconditionNode = ref({}); // node where precondition must be added\n    const selectedNode = computed(() => store.getters[\"tree/selectedNode\"]); // current selected node\n\n    watch(\n      () => props.clickedTitleId,\n      () => {\n        if (\n          props.clickedTitleId > 0 &&\n          store.state.tree.nodeRecord[props.clickedTitleId]\n        ) {\n          preconditionNode.value =\n            store.state.tree.nodeRecord[props.clickedTitleId].node;\n        }\n      },\n      { immediate: true }\n    );\n\n    return {\n      showAddBanner: () => {\n        ctx.emit(\"select-precondition-is-on\");\n        targetNode.value = store.getters[\"tree/selectedNode\"];\n        addBannerVisible.value = !addBannerVisible.value;\n      },\n      add: () => {\n        store.dispatch(`precondition/${preconditionActions.AddPrecondition}`, {\n          nodeId: targetNode.value.id,\n          preconditionId: preconditionNode.value.id\n        });\n        api.savePreconditions(store.state.user.user, {\n          nodeId: targetNode.value.id,\n          preconditionIds:\n            store.state.precondition.preconditions[targetNode.value.id]\n        });\n        ctx.emit(\"select-precondition-is-off\");\n        addBannerVisible.value = false;\n        preconditionNode.value = {};\n      },\n      cancelAdd: () => {\n        addBannerVisible.value = false;\n        preconditionNode.value = {};\n        ctx.emit(\"select-precondition-is-off\");\n      },\n      addBannerVisible,\n      targetNode,\n      preconditionNode,\n      selectedNode\n    };\n  }\n};\n</script>\n","import { render } from \"./AddPrecondition.vue?vue&type=template&id=019c41a1\"\nimport script from \"./AddPrecondition.vue?vue&type=script&lang=js\"\nexport * from \"./AddPrecondition.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\n  <button @click=\"toggleAddDialog\">+</button>\n  <Dialog\n    v-model:visible=\"addDialogVisible\"\n    :dismissableMask=\"true\"\n    :closable=\"true\"\n    :modal=\"true\"\n    :closeOnEscape=\"true\"\n    @mousedown.stop\n  >\n    <template #header>\n      <h3>\n        {{\n          selectedNodeTitle\n            ? `Add subsection to ${selectedNodeTitle}`\n            : `Add section`\n        }}\n      </h3>\n    </template>\n\n    <Input type=\"text\" v-model=\"newNodeTitle\" />\n\n    <template #footer>\n      <Button\n        label=\"No\"\n        icon=\"pi pi-times\"\n        class=\"p-button-text\"\n        @click=\"cancelAdd\"\n      />\n      <Button label=\"Yes\" icon=\"pi pi-check\" @click=\"add\" />\n    </template>\n  </Dialog>\n</template>\n\n<script>\nimport Dialog from \"primevue/dialog\";\nimport Button from \"primevue/button\";\nimport Input from \"primevue/inputtext\";\nimport { useStore } from \"@/store\";\nimport { computed, ref } from \"vue\";\nimport { actions } from \"@/store\";\n\nexport default {\n  name: \"AddNode\",\n  components: {\n    Dialog,\n    Button,\n    Input\n  },\n  setup() {\n    const store = useStore();\n    const addDialogVisible = ref(false);\n    const selectedNode = computed(() => store.getters[\"tree/selectedNode\"]);\n    const newNodeTitle = ref(\"\");\n\n    return {\n      selectedNodeTitle: computed(() =>\n        selectedNode.value ? selectedNode.value.title : \"\"\n      ),\n      toggleAddDialog: () => (addDialogVisible.value = !addDialogVisible.value),\n      add: () => {\n        store.dispatch(`${actions.createNode}`, {\n          parentID: selectedNode.value ? selectedNode.value.id : null,\n          title: newNodeTitle.value\n        });\n        newNodeTitle.value = \"\";\n        addDialogVisible.value = false;\n      },\n      cancelAdd: () => {\n        newNodeTitle.value = \"\";\n        addDialogVisible.value = false;\n      },\n      addDialogVisible,\n      newNodeTitle\n    };\n  }\n};\n</script>\n","import { render } from \"./AddNode.vue?vue&type=template&id=cc2457ce\"\nimport script from \"./AddNode.vue?vue&type=script&lang=js\"\nexport * from \"./AddNode.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\n  <button @click=\"toggleDialog\" :disabled=\"!selectedNodeTitle\">-</button>\n  <Dialog\n    v-model:visible=\"addDialogVisible\"\n    :dismissableMask=\"true\"\n    :closable=\"true\"\n    :modal=\"true\"\n    :closeOnEscape=\"true\"\n  >\n    <template #header>\n      <h3>\n        {{ `Remove ${selectedNodeTitle} and all its descendants?` }}\n      </h3>\n    </template>\n\n    <template #footer>\n      <Button\n        label=\"No\"\n        icon=\"pi pi-times\"\n        class=\"p-button-text\"\n        @click=\"cancel\"\n      />\n      <Button label=\"Yes\" icon=\"pi pi-check\" @click=\"remove\" />\n    </template>\n  </Dialog>\n</template>\n\n<script>\nimport Dialog from \"primevue/dialog\";\nimport Button from \"primevue/button\";\nimport { useStore } from \"@/store\";\nimport { computed, ref } from \"vue\";\nimport { actions } from \"@/store\";\n\nexport default {\n  name: \"RemoveNode\",\n  components: {\n    Dialog,\n    Button\n  },\n  setup() {\n    const store = useStore();\n    const addDialogVisible = ref(false);\n    const selectedNode = computed(() => store.getters[\"tree/selectedNode\"]);\n\n    return {\n      selectedNodeTitle: computed(() =>\n        selectedNode.value ? selectedNode.value.title : \"\"\n      ),\n      toggleDialog: () => (addDialogVisible.value = !addDialogVisible.value),\n      remove: () => {\n        addDialogVisible.value = false;\n        store.dispatch(`${actions.removeNode}`, selectedNode.value.id);\n      },\n      cancel: () => {\n        addDialogVisible.value = false;\n      },\n      addDialogVisible\n    };\n  }\n};\n</script>\n","import { render } from \"./RemoveNode.vue?vue&type=template&id=35d0a755\"\nimport script from \"./RemoveNode.vue?vue&type=script&lang=js\"\nexport * from \"./RemoveNode.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\n  <button v-if=\"editModeOn\" @click=\"off\">Back to view mode</button>\n  <button v-if=\"!editModeOn\" @click=\"on\">Edit Map</button>\n</template>\n\n<script>\nimport { actions, useStore } from \"@/store\";\nimport { computed } from \"vue\";\n\nexport default {\n  name: \"EditMode\",\n  setup() {\n    const store = useStore();\n\n    return {\n      editModeOn: computed(() => store.state.editModeOn),\n      on: () => {\n        store.dispatch(`${actions.setEditMode}`, true);\n      },\n      off: () => {\n        store.dispatch(`${actions.setEditMode}`, false);\n      }\n    };\n  }\n};\n</script>\n","import { render } from \"./EditMode.vue?vue&type=template&id=8541d8a2\"\nimport script from \"./EditMode.vue?vue&type=script&lang=js\"\nexport * from \"./EditMode.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\n  <button @click=\"unpin\">unpin</button>\n</template>\n\n<script>\nimport { useStore } from \"@/store\";\nimport { actions as pinActions } from \"@/store/pin\";\nimport api from \"@/api/api\";\n\nexport default {\n  name: \"UnpinNode\",\n  setup() {\n    const store = useStore();\n\n    return {\n      unpin: () => {\n        store.dispatch(\n          `pin/${pinActions.RemovePin}`,\n          store.state.tree.selectedNodeId\n        );\n        api.savePins(store.state.user.user, store.state.pin.pins);\n      }\n    };\n  }\n};\n</script>\n","import { render } from \"./UnpinNode.vue?vue&type=template&id=44539b10\"\nimport script from \"./UnpinNode.vue?vue&type=script&lang=js\"\nexport * from \"./UnpinNode.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\n  <button @click=\"cut\">cut</button>\n  <button v-if=\"cutNodeID != null\" @click=\"paste\">Paste</button>\n</template>\n\n<script>\nimport { useStore } from \"@/store\";\nimport { computed, ref } from \"vue\";\nimport { actions } from \"@/store\";\n\nexport default {\n  name: \"CutPaste\",\n  setup() {\n    const store = useStore();\n    const selectedNode = computed(() => store.getters[\"tree/selectedNode\"]);\n    const cutNodeID = ref(null);\n\n    return {\n      cutNodeID,\n      cut: () => {\n        cutNodeID.value = selectedNode.value.id;\n      },\n      paste: () => {\n        store.dispatch(`${actions.cutPasteNode}`, {\n          nodeID: cutNodeID.value,\n          parentID: selectedNode.value.id\n        });\n        cutNodeID.value = null;\n      }\n    };\n  }\n};\n</script>\n","import { render } from \"./CutPaste.vue?vue&type=template&id=0b1d1725\"\nimport script from \"./CutPaste.vue?vue&type=script&lang=js\"\nexport * from \"./CutPaste.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\n  <Button iconPos=\"right\" @click=\"send\">\n    <img\n      alt=\"logo\"\n      src=\"../../assets/images/telegram.svg\"\n      style=\"width: 20px\"\n    />\n    <span class=\"p-ml-2 p-text-bold\">give us feedback!</span>\n  </Button>\n</template>\n\n<script>\nimport Button from \"primevue/button\";\n\nexport default {\n  name: \"Feedback\",\n  components: {\n    Button\n  },\n  setup() {\n    return {\n      send: () => {\n        window.open(\"https://t.me/scimap\", \"_blank\");\n      }\n    };\n  }\n};\n</script>\n","import { render } from \"./Feedback.vue?vue&type=template&id=f7953e84\"\nimport script from \"./Feedback.vue?vue&type=script&lang=js\"\nexport * from \"./Feedback.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","import { render } from \"./Index.vue?vue&type=template&id=7d80bcb9\"\nimport script from \"./Index.vue?vue&type=script&lang=js\"\nexport * from \"./Index.vue?vue&type=script&lang=js\"\n\nconst cssModules = script.__cssModules = {}\nimport style0 from \"./Index.vue?vue&type=style&index=0&id=7d80bcb9&module=true&lang=css\"\ncssModules[\"$style\"] = style0\nscript.render = render\n\nexport default script","\nimport { computed, defineComponent, ref, watch } from \"vue\";\nimport Map from \"@/components/map/Map.vue\";\nimport NodeContent from \"@/components/node_content/Index.vue\";\nimport ConfirmDialog from \"primevue/confirmdialog\";\nimport Toast from \"primevue/toast\";\nimport {\n  EventClickNode,\n  EventDraggingBackground,\n  EventDraggingNode,\n  EventWheel\n} from \"@/components/map/Map.ts\";\nimport Menu from \"@/components/menu/Index.vue\";\nimport { useStore } from \"@/store\";\nimport { useRouter, useRoute } from \"vue-router\";\nimport { mutations as treeMutations, NodeRecordItem } from \"@/store/tree\";\nimport { mutations as zoomPanMutations } from \"@/store/zoom_pan\";\nimport { actions } from \"@/store/\";\nimport {\n  filterNodesAndLayers,\n  findCentralNode,\n  zoomAndPanPoint,\n  zoomAnPanLayers\n} from \"@/views/Home\";\nimport { clone, printError } from \"@/tools/utils\";\nimport { MapNode } from \"@/types/graphics\";\nimport { findMapNodes } from \"@/store/tree/helpers\";\nimport { DBNode } from \"@/api/types\";\n\nexport default defineComponent({\n  name: \"Home\",\n\n  components: {\n    Map,\n    Menu,\n    NodeContent,\n    ConfirmDialog,\n    Toast\n  },\n\n  setup() {\n    const store = useStore();\n    const router = useRouter();\n    const route = useRoute();\n    const treeState = store.state.tree;\n    const zoomPanState = store.state.zoomPan;\n    const pinState = store.state.pin;\n    const clickedTitleId = ref(\"-1\");\n    let selectPreconditionIsOn = false;\n\n    watch(\n      () => route.params.id,\n      () => {\n        store.commit(\n          `tree/${treeMutations.SET_SELECTED_NODE_ID}`,\n          route.params.id\n        );\n      },\n      { immediate: true }\n    );\n\n    /**\n     * compute svg viewBox\n     */\n    const viewBox = computed(() => {\n      if (treeState.mapNodeLayers && treeState.mapNodeLayers.length) {\n        return `0 0 ${2 * treeState.mapNodeLayers[0][\"0\"].center.x} ${2 *\n          treeState.mapNodeLayers[0][\"0\"].center.y}`;\n      } else {\n        return `0 0 1000 1000`;\n      }\n    });\n\n    const updateLayers = (\n      centralNodeId: string,\n      mapNodeLayers: Array<Record<string, MapNode>>,\n      nodeRecord: Record<string, NodeRecordItem>\n    ): Array<Record<number, MapNode>> => {\n      // Вычленяем слои и узлы которые мы хотим показывать учитывая что текущий видимый узел это centralNodeId\n      const [filteredLayers, err] = filterNodesAndLayers(\n        mapNodeLayers,\n        nodeRecord,\n        centralNodeId\n      );\n      if (err) {\n        printError(\"Home.vue: error in filterNodesAndLayers:\", { err });\n        return [];\n      }\n      return filteredLayers.reverse();\n    };\n\n    const centralNodeId = ref<string | null>(null);\n    const layers = ref<Array<Record<string, MapNode>>>([]);\n    watch(\n      () => [\n        treeState.mapNodeLayers,\n        zoomPanState.debouncedZoom,\n        zoomPanState.debouncedPan\n      ],\n      () => {\n        const [newCentralNodeId, err] = findCentralNode(\n          treeState.mapNodeLayers,\n          treeState.nodeRecord,\n          { width: window.innerWidth, height: window.innerHeight },\n          zoomPanState.debouncedZoom,\n          zoomPanState.pan,\n          zoomPanState.zoomCenter\n        );\n        if (err != null) {\n          printError(\"filterNodesAndLayers: error in findCurrentNode\", { err });\n        }\n\n        const oldVisibleNodeIDs = [];\n        for (const layer of layers.value) {\n          oldVisibleNodeIDs.push(\n            ...Object.values(layer)\n              .filter((n: MapNode) => !!n.title)\n              .map((n: MapNode) => n.id)\n          );\n        }\n\n        centralNodeId.value = newCentralNodeId;\n        layers.value = updateLayers(\n          newCentralNodeId,\n          treeState.mapNodeLayers,\n          treeState.nodeRecord\n        );\n\n        const newVisibleNodeIDs = [];\n        for (const layer of layers.value) {\n          newVisibleNodeIDs.push(\n            ...Object.values(layer)\n              .filter((n: MapNode) => !!n.title)\n              .map((n: MapNode) => n.id)\n          );\n        }\n\n        store.dispatch(actions.subscribeDBChange, {\n          oldNodeIDs: oldVisibleNodeIDs,\n          newNodeIDs: newVisibleNodeIDs,\n          cb: (dbNode: DBNode) => store.dispatch(actions.handleDBUpdate, dbNode)\n        });\n      },\n      { immediate: true, deep: true }\n    );\n\n    const zoomedPanedLayers = ref<Array<Record<string, MapNode>>>([]);\n    watch(\n      () => [zoomPanState.pan.x, zoomPanState.pan.y, zoomPanState.zoom, layers],\n      () => {\n        // layers это всегда слои с zoom=1 и pan={0, 0} состоящий из только видимых прямо сейчас элементов.\n        // Мы применяем к этому объекту текущий zoomPanState но сам эталон не трогаем, поэтому здесь clone\n        // Это не дорогая операция так как layers всегда содержит небольшое кол-во элементов\n        // видимых только прямо сейчас\n        const layersToZoomAndPan = clone(layers.value);\n        zoomedPanedLayers.value = zoomAnPanLayers(\n          layersToZoomAndPan,\n          zoomPanState.zoom,\n          zoomPanState.pan\n        );\n      },\n      { immediate: true, deep: true }\n    );\n\n    return {\n      pinNodes: computed(() => {\n        if (centralNodeId.value == null) {\n          return [];\n        }\n        const pinNodeIDs = pinState.pinsReverse[centralNodeId.value];\n        if (!pinNodeIDs) {\n          return [];\n        }\n\n        // remove pins that already exists on layers\n        for (const layer of layers.value) {\n          for (const nodeID in layer) {\n            const node = layer[nodeID];\n            if (node.title != \"\") {\n              const ind = pinNodeIDs.indexOf(node.id);\n              if (ind != -1) {\n                pinNodeIDs.splice(ind, 1);\n              }\n            }\n          }\n        }\n\n        const pinMapNodes = findMapNodes(pinNodeIDs, treeState.mapNodeLayers);\n        const result = [];\n        for (const pinMapNode of pinMapNodes) {\n          const cl = clone(pinMapNode);\n          cl.center = zoomAndPanPoint(\n            pinMapNode.center,\n            zoomPanState.zoom,\n            zoomPanState.pan\n          );\n          result.push(cl);\n        }\n\n        return result;\n      }),\n      viewBox,\n      editModeOn: computed(() => store.state.editModeOn),\n      selectedNodeId: computed(() => treeState.selectedNodeId),\n      preconditionNodeIds: computed(() =>\n        treeState.selectedNodeId\n          ? store.state.precondition.preconditions[treeState.selectedNodeId]\n          : []\n      ),\n      zoomedPanedLayers,\n      nodeDragging: (e: EventDraggingNode) => {\n        store.dispatch(`${actions.updateNodePosition}`, {\n          nodeId: e.id,\n          delta: {\n            x: e.delta.x / zoomPanState.zoom,\n            y: e.delta.y / zoomPanState.zoom\n          }\n        });\n      },\n      setSelectPreconditionON: () => {\n        selectPreconditionIsOn = true;\n      },\n      setSelectPreconditionOFF: () => {\n        selectPreconditionIsOn = false;\n      },\n      clickedTitleId,\n      titleClick: (e: EventClickNode) => {\n        if (!selectPreconditionIsOn) {\n          router.push({ name: \"node\", params: { id: e.id } });\n        } else {\n          clickedTitleId.value = e.id;\n        }\n      },\n      titleOver: (e: EventClickNode) => {\n        store.commit(`tree/${treeMutations.SET_SELECTED_NODE_ID}`, e.id);\n      },\n      titleLeave: (e: EventClickNode) => {\n        store.commit(\n          `tree/${treeMutations.SET_SELECTED_NODE_ID}`,\n          route.params.id\n        );\n      },\n      mapDragging: (event: EventDraggingBackground) => {\n        store.commit(`zoomPan/${zoomPanMutations.ADD_PAN}`, event);\n      },\n      zoom: (event: EventWheel) => {\n        // initial value of center (when root.border == viewport)\n        const initial = {\n          x: (event.center.x - zoomPanState.pan.x) / zoomPanState.zoom,\n          y: (event.center.y - zoomPanState.pan.y) / zoomPanState.zoom\n        };\n        store.commit(`zoomPan/${zoomPanMutations.ADD_ZOOM}`, -1 * event.delta);\n        const after = {\n          x: initial.x * zoomPanState.zoom + zoomPanState.pan.x,\n          y: initial.y * zoomPanState.zoom + zoomPanState.pan.y\n        };\n        store.commit(`zoomPan/${zoomPanMutations.ADD_PAN}`, {\n          from: after,\n          to: event.center\n        });\n        store.commit(\n          `zoomPan/${zoomPanMutations.SET_ZOOM_CENTER}`,\n          event.center\n        );\n      }\n    };\n  }\n});\n","import { render } from \"./Home.vue?vue&type=template&id=e4505134\"\nimport script from \"./Home.vue?vue&type=script&lang=ts\"\nexport * from \"./Home.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\n  <h1>Oops, it looks like the page you're looking for doesn't exist.</h1>\n</template>\n","import { render } from \"./NotFound.vue?vue&type=template&id=600d9e34\"\nconst script = {}\nscript.render = render\n\nexport default script","import { createRouter, createWebHistory, RouteRecordRaw } from \"vue-router\";\nimport PasswordLogin from \"../views/PasswordLogin.vue\";\nimport Home from \"../views/Home.vue\";\nimport NotFound from \"../views/NotFound.vue\";\n\nconst routes: Array<RouteRecordRaw> = [\n  {\n    path: \"/passwordLogin\",\n    component: PasswordLogin\n  },\n  {\n    path: \"/:id?\",\n    name: \"node\",\n    component: Home\n  },\n  {\n    path: \"/:catchAll(.*)\",\n    component: NotFound\n  }\n];\n\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n});\n\nexport default router;\n","import { createApp } from \"vue\";\nimport App from \"./App.vue\";\nimport PrimeVue from \"primevue/config\";\nimport ConfirmationService from \"primevue/confirmationservice\";\nimport ToastService from \"primevue/toastservice\";\nimport router from \"./router\";\nimport { store, key } from \"./store\";\n// primevue ui stuff\nimport \"primevue/resources/themes/saga-blue/theme.css\"; //theme\nimport \"primevue/resources/primevue.min.css\"; //core css\nimport \"primeicons/primeicons.css\"; //icons\nimport \"primeflex/primeflex.css\";\n\ncreateApp(App)\n  .use(store, key)\n  .use(router)\n  .use(PrimeVue)\n  .use(ConfirmationService)\n  .use(ToastService)\n  .mount(\"#app\");\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Index.vue?vue&type=style&index=0&id=06976913&scoped=true&lang=css\""],"sourceRoot":""}