{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/components/SVGTextBox.vue?835e","webpack:///./src/assets/images/telegram.svg","webpack:///./src/components/node_content/Markdown.vue?6fbf","webpack:///./src/components/map_layer/MapLayer.vue?6b63","webpack:///./src/components/menu/Index.vue?5955","webpack:///./src/components/node_content/Index.vue?3d7b","webpack:///./src/App.vue","webpack:///./src/store/pin/index.ts","webpack:///./src/store/precondition/index.ts","webpack:///./src/tools/errorkv.ts","webpack:///./src/tools/utils.ts","webpack:///./src/store/tree/helpers.ts","webpack:///./src/api/helpers.ts","webpack:///./src/api/api.ts","webpack:///./src/tools/graphics.ts","webpack:///./src/store/tree/index.ts","webpack:///./src/store/history/index.ts","webpack:///./src/store/zoom_pan/index.ts","webpack:///./src/store/user/index.ts","webpack:///./src/store/node_content/index.ts","webpack:///./src/store/helpers.ts","webpack:///./src/store/index.ts","webpack:///./src/App.vue?3acc","webpack:///./src/App.vue?dfb6","webpack:///./src/views/PasswordLogin.vue","webpack:///./src/views/PasswordLogin.vue?76a3","webpack:///./src/views/PasswordLogin.vue?e3c1","webpack:///./src/views/Home.vue","webpack:///./src/components/map/Map.vue","webpack:///./src/components/map_layer/MapLayer.vue","webpack:///./src/components/map_layer/MapLayer.ts","webpack:///./src/components/SVGTextBox.ts","webpack:///./src/components/map_layer/MapLayer.vue?1431","webpack:///./src/components/map_layer/MapLayer.vue?0796","webpack:///./src/components/map/MapPan.ts","webpack:///./src/components/pin_layer/PinLayer.vue","webpack:///./src/components/pin_layer/PinMarker.vue","webpack:///./src/components/pin_layer/PinMarker.vue?bbb0","webpack:///./src/components/pin_layer/PinMarker.vue?9aa1","webpack:///./src/components/SVGTextBox.vue","webpack:///./src/components/SVGTextBox.vue?ae08","webpack:///./src/components/SVGTextBox.vue?ec46","webpack:///./src/components/pin_layer/PinLayer.vue?738a","webpack:///./src/components/pin_layer/PinLayer.vue?8bd0","webpack:///./src/components/precondition_layer/PreconditionLayer.vue","webpack:///./src/components/precondition_layer/PreconditionArrow.vue","webpack:///./src/components/precondition_layer/PreconditionArrow.vue?e51e","webpack:///./src/components/precondition_layer/PreconditionArrow.vue?74c6","webpack:///./src/views/Home.ts","webpack:///./src/components/precondition_layer/PreconditionLayer.vue?6cdc","webpack:///./src/components/precondition_layer/PreconditionLayer.vue?73c2","webpack:///./src/components/map/Map.vue?b432","webpack:///./src/components/map/Map.vue?8505","webpack:///./src/components/node_content/Index.vue","webpack:///./src/components/node_content/Preconditions.vue","webpack:///./src/components/node_content/Preconditions.vue?b5b4","webpack:///./src/components/node_content/Preconditions.vue?c4ee","webpack:///./src/components/node_content/Markdown.vue","webpack:///./src/components/node_content/Markdown.vue?6e5c","webpack:///./src/components/node_content/Markdown.vue?9efd","webpack:///./src/components/node_content/Index.vue?70b7","webpack:///./src/components/node_content/Index.vue?1dc7","webpack:///./src/components/menu/Index.vue","webpack:///./src/components/menu/PinNode.vue","webpack:///./src/components/menu/PinNode.vue?ca8f","webpack:///./src/components/menu/AddPrecondition.vue","webpack:///./src/components/menu/AddPrecondition.vue?f83e","webpack:///./src/components/menu/AddNode.vue","webpack:///./src/components/menu/AddNode.vue?9c98","webpack:///./src/components/menu/RemoveNode.vue","webpack:///./src/components/menu/RemoveNode.vue?2cae","webpack:///./src/components/menu/EditMode.vue","webpack:///./src/components/menu/EditMode.vue?1f8e","webpack:///./src/components/menu/UnpinNode.vue","webpack:///./src/components/menu/UnpinNode.vue?d34c","webpack:///./src/components/menu/CutPaste.vue","webpack:///./src/components/menu/CutPaste.vue?91c8","webpack:///./src/components/menu/Feedback.vue","webpack:///./src/components/menu/Feedback.vue?098b","webpack:///./src/components/menu/Index.vue?075d","webpack:///./src/views/Home.vue?d5e7","webpack:///./src/views/Home.vue?ab8c","webpack:///./src/views/NotFound.vue","webpack:///./src/views/NotFound.vue?8fd3","webpack:///./src/router/index.ts","webpack:///./src/main.ts","webpack:///./node_modules/markdown-it-imsize/lib/imsize/types sync ^\\.\\/.*$","webpack:///./src/components/menu/Index.vue?efb3"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","mutations","SET_PINS","ADD_TO_PINS","REMOVE_PIN","ADD_TO_PINS_REVERSE","actions","AddPin","RemovePin","namespaced","state","pins","pinsReverse","v","commit","rootState","currentParent","tree","nodeRecord","nodeId","parent","parentIds","id","parentId","pinId","index","indexOf","SET_PRECONDITIONS","UPDATE_PRECONDITIONS","preconditions","nodeID","preconditionIDs","message","kv","code","err","Error","error","ROUND_EPSILON","mod","round","num","Math","pow","clone","printError","msg","console","kvArr","findMapNode","mapNodeLayers","level","layer","Number","findMapNodes","ids","createNewNode","title","center","position","children","getNewNodeCenter","addRandom","parentMapNode","fromCenterVectors","border","map","from","to","maxFromCenterVector","getVectorLength","coeff","random","x","y","maxDiagChild","maxDiagChildMapNode","maxDiagChildId","child","childMapNode","childId","getMaxDiagonal","childDiag","err1","maxDiag","err2","finalMaxDiag","newNodeCenter","vectorOnNumber","modifiedNode","updatePosition","item","convertPosition","normalizedPosition","node","layerLevel","treeToMapNodeLayers","ls","mergeMapNodeLayers","convertChildren","Array","isArray","filter","childID","sort","forEach","arr","toString","values","convertDBMapToTree","dbNodes","root","stack","pop","FUNCTION_DOMAIN","database","ref","update","debouncedUpdate","ROOT_WIDTH","innerWidth","ROOT_HEIGHT","innerHeight","ST_WIDTH","ST_HEIGHT","initFirebase","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","analytics","callFunction","method","params","currentUser","auth","getIdToken","idToken","a","response","e","getMapFromDB","snapshot","exists","val","getMapFromStorage","user","storage","uid","getDownloadURL","url","getMap","getPins","savePins","putString","btoa","unescape","encodeURIComponent","JSON","stringify","getPreconditions","savePreconditions","set","preconditionIds","subscribeMapNodeChange","cb","this","subscribeDBChange","snap","log","subscribeNodeContentChange","subscribePreconditionNodeChange","unsubscribeMapNodeChange","off","path","on","unsubscribeDBChange","transaction","setNode","getNode","pr","generateKey","findKeyInList","orderByValue","equalTo","limitToFirst","findKeyOfChild","getUserComments","userID","nodeComment","getNodeContent","NORMALIZED_BORDER","api","sqrt","polygonToTurf","pp","point","isInside","polygon","polygonToPCPolygon","abs","intersect","p1","p2","np1","np2","cf","tp1","tp2","polygonIntersect","intersection","resultPolys","poly","resultPoly","getBoundingBorders","minX","reduce","previousValue","currentValue","minY","maxX","maxY","leftBottom","rightTop","getVoronoiCellsInSquare","centers","turfPoints","collection","cells","bbox","cellMap","features","cell","cellBorder","geometry","coordinates","getVoronoiCells","outerBorder","bb","res","BoundingBorders","intersections","polygonFill","selectedNodeId","currentNodeId","selectedNodePreconditionIds","polygonFillOpacity","polygonToPath","join","treeToNodeRecord","transferToPoint","vector","addVector","b","bTransferred","aTr","transferPointOnVector","getVectorIntersection","v1","v2","x1","y1","x2","y2","x3","y3","x4","y4","denom","numeA","numeB","uA","uB","morphChildrenPoints","oldBorder","newBorder","oldPoints","oldCenterTf","newCenterTf","oldCenter","newCenter","maxDiameter","max","newPoints","oldPoint","centerToPoint","oldBorderIntersection","segment","newBorderIntersection","NewEmptyVector","diagonals","middle","maxDiagonal","diag","type","parentID","convertedPosition","morphedPositions","normalizedBorder","tmp","rootBorder","rootPosition","keys","treeLayers","lastTreeLayer","lastMapNodeLayer","newTreeLayer","newMapNodeLayer","treeNode","tmpMap","strPos","firstId","secondId","treeNodeChildren","denormalizedPosition","ch","recipientLayers","insertedLayers","startFromLevel","changeTypeEnum","XSkew","ROOT_BORDER","ROOT_CENTER","SET_SELECTED_NODE_ID","SET_TREE","UPDATE_NODE_POSITION","REMOVE_NODE","handleMapNodeUpdate","getters","selectedNode","dbNode","dispatch","dbNodeRecord","oldDBNode","newChildren","includes","removedChildren","returnError","addedDBNode","toProcess","inProcessNode","childNode","ind","findIndex","ADD_ZOOM","ADD_PAN","SET_PAN","SET_ZOOM_CENTER","zoomDebounce","debouncedZoom","panDebounce","debouncedPan","ZOOM_SENSITIVITY","PAN_SENSITIVITY","zoom","pan","zoomCenter","delta","newZoom","SET_USER","signIn","signOut","signInWithPopup","GoogleAuthProvider","ADD_CUT_PASTE","ADD_CREATE","ADD_REMOVE","ADD_POSITION_CHANGE","changeTypes","CUT_PASTE","CREATE","REMOVE","POSITION_CHANGE","stableChangeList","localChangeList","change","newParentID","firstOldPosition","oldPosition","newPosition","SET_CONTENTS","SET_USER_COMMENTS","SET_NODE_CONTENT","SET_NODE_COMMENT","setNodeContent","setNodeComment","EmptyNodeContent","content","createContentIfNotExist","nodeContents","EmptyNodeComment","comment","createCommentIfNotExist","userNodeComments","isAnonymous","initMap","convErr","fetchPins","initPreconditions","initNodeContents","nodeContent","userComments","initData","init","updateNodePosition","createNode","cutPasteNode","removeNode","setEditMode","confirmSignInPopup","SET_EDIT_MODE","SET_SUBSCRIBED_NODE_IDS","debouncedPositionSet","normalizedNewNodeCenter","editModeOn","subscribedNodeIDs","confirm","require","header","acceptLabel","rejectLabel","accept","reject","onAuthStateChanged","changedNode","newDBNode","newKey","updateMap","normalizedChangedCenter","oldParent","newParent","oldKey","allChildrenID","allChildrenIDMap","moveChildrenToTrash","parentNodeID","mapNode","args","pin","precondition","zoomPan","history","useStore","setup","store","render","login","emailEl","document","getElementById","passwordEl","signInWithEmailAndPassword","show","clickedTitleId","setSelectPreconditionON","setSelectPreconditionOFF","layers","visibleZoomedPanedLayers","viewBox","pin-nodes","pinNodes","nodeDragging","titleClick","titleOver","titleLeave","mapDragging","xmlns","mapID","style","map-nodes","border-color","borderColor","font-color","fontColor","font-size","fontSize","font-opacity","fontOpacity","map-id","draggingNode","visibleTitleIds","mapNodes","stroke","fill","fill-opacity","stroke-width","points","pointer-events","TITLE_PREFIX","font-family","font-weight","class","splitLines","line","titleBox","alignment-baseline","width","height","titleMouseDown","cursor","mouseMoveListener","emit","event","mouseDownInfo","dragStart","movementX","movementY","mouseUpListener","nodeToTitleBox","nodes","titleIdPrefix","dom","getBoundingClientRect","mps","immediate","text","maxCharNum","words","split","lines","currLine","nextLine","emits","props","mapId","String","required","validator","prop","ctx","titleMouseDownInfo","mouseMove","mouseUp","addEventListener","removeEventListener","methods","__scopeId","mouseDownBg","mouseDown","visiblePinNodes","color","useLineBreak","titleXY","line-height","max-char-per-line","titleBoxClick","transform","WIDTH","HEIGHT","fontFamily","fontWeight","lineHeight","Boolean","maxCharPerLine","components","SVGTextBox","PinMarker","allPinNodes","PIN_MARKER_HEIGHT","PIN_MARKER_WIDTH","alignedXY","markerWidth","markerHeight","refX","refY","orient","markerId","visibleTitleNodes","visibleTitleNodeBoxes","titleBoxOver","titleBoxLeave","marker-end","MIN_VISIBLE_NUM_IN_LAYER","zoomAndPanPoint","zoomAndPanPolygon","findCentralNode","viewport","zoomFactor","underCursorNodeId","viewportArea","nodesToCheck","borderToCheck","minDist","Infinity","nodeCenter","dist","underCursorNodeArea","floor","maxIntersectNodeId","filterNodesAndLayers","resultLayers","currentNode","upperLayer","firstLayer","secondLayer","childOfChild","thirdLayer","zoomAnPanLayers","PreconditionArrow","zoomPanState","zoomedPannedSelectedNode","PreconditionLayer","PinLayer","MapLayer","clientX","clientY","deltaY","passive","prevDist","prevPoint","touches","hypot","pageX","pageY","idx","size","levelSizes","0","1","2","3","levelColors","rows","autoResize","placeholder","changeNodeTitle","$event","selectedNodeContent","changeContent","changeComment","checkAuthorized","node-id","href","remove","icon","Button","renderedContent","setEditOn","editOn","target","mdKatex","mdImsize","mdContainer","md","use","output","validate","trim","match","tokens","info","nesting","utils","escapeHtml","txtarea","display","focus","Markdown","TextArea","SectionPreconditions","newContent","preventDefault","$style","wrapper","email","isNodeSelected","$emit","isPinned","toggleAddDialog","visible","addDialogVisible","dismissableMask","closable","modal","closeOnEscape","footer","label","cancelAdd","add","selectedParent","options","parents","optionLabel","Dialog","Listbox","treeState","newNodeTitle","selectedNodeParents","showAddBanner","addBannerVisible","preconditionNode","targetNode","preconditionsIDs","selectedNodeTitle","Input","toggleDialog","disabled","cancel","unpin","cut","cutNodeID","paste","alt","src","iconPos","send","open","Feedback","CutPaste","UnpinNode","PinNode","AddNode","AddPrecondition","RemoveNode","EditMode","undefined","cssModules","__cssModules","Map","Menu","NodeContent","ConfirmDialog","Toast","router","route","pinState","selectPreconditionIsOn","updateLayers","centralNodeId","filteredLayers","reverse","visibleLayers","isFirstPageLoad","firstNode","newCentralNodeId","deep","layersToZoomAndPan","pinNodeIDs","pinMapNodes","pinMapNode","cl","initial","after","script","routes","component","PasswordLogin","Home","NotFound","App","mount","webpackContext","req","webpackContextResolve","resolve"],"mappings":"aACE,SAASA,EAAqBC,GAQ7B,IAPA,IAMIC,EAAUC,EANVC,EAAWH,EAAK,GAChBI,EAAcJ,EAAK,GACnBK,EAAiBL,EAAK,GAIHM,EAAI,EAAGC,EAAW,GACpCD,EAAIH,EAASK,OAAQF,IACzBJ,EAAUC,EAASG,GAChBG,OAAOC,UAAUC,eAAeC,KAAKC,EAAiBX,IAAYW,EAAgBX,IACpFK,EAASO,KAAKD,EAAgBX,GAAS,IAExCW,EAAgBX,GAAW,EAE5B,IAAID,KAAYG,EACZK,OAAOC,UAAUC,eAAeC,KAAKR,EAAaH,KACpDc,EAAQd,GAAYG,EAAYH,IAG/Be,GAAqBA,EAAoBhB,GAE5C,MAAMO,EAASC,OACdD,EAASU,OAATV,GAOD,OAHAW,EAAgBJ,KAAKK,MAAMD,EAAiBb,GAAkB,IAGvDe,IAER,SAASA,IAER,IADA,IAAIC,EACIf,EAAI,EAAGA,EAAIY,EAAgBV,OAAQF,IAAK,CAG/C,IAFA,IAAIgB,EAAiBJ,EAAgBZ,GACjCiB,GAAY,EACRC,EAAI,EAAGA,EAAIF,EAAed,OAAQgB,IAAK,CAC9C,IAAIC,EAAQH,EAAeE,GACG,IAA3BX,EAAgBY,KAAcF,GAAY,GAE3CA,IACFL,EAAgBQ,OAAOpB,IAAK,GAC5Be,EAASM,EAAoBA,EAAoBC,EAAIN,EAAe,KAItE,OAAOD,EAIR,IAAIQ,EAAmB,GAKnBhB,EAAkB,CACrB,IAAO,GAGJK,EAAkB,GAGtB,SAASS,EAAoB1B,GAG5B,GAAG4B,EAAiB5B,GACnB,OAAO4B,EAAiB5B,GAAU6B,QAGnC,IAAIC,EAASF,EAAiB5B,GAAY,CACzCK,EAAGL,EACH+B,GAAG,EACHF,QAAS,IAUV,OANAf,EAAQd,GAAUW,KAAKmB,EAAOD,QAASC,EAAQA,EAAOD,QAASH,GAG/DI,EAAOC,GAAI,EAGJD,EAAOD,QAKfH,EAAoBM,EAAIlB,EAGxBY,EAAoBO,EAAIL,EAGxBF,EAAoBQ,EAAI,SAASL,EAASM,EAAMC,GAC3CV,EAAoBW,EAAER,EAASM,IAClC3B,OAAO8B,eAAeT,EAASM,EAAM,CAAEI,YAAY,EAAMC,IAAKJ,KAKhEV,EAAoBe,EAAI,SAASZ,GACX,qBAAXa,QAA0BA,OAAOC,aAC1CnC,OAAO8B,eAAeT,EAASa,OAAOC,YAAa,CAAEC,MAAO,WAE7DpC,OAAO8B,eAAeT,EAAS,aAAc,CAAEe,OAAO,KAQvDlB,EAAoBmB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQlB,EAAoBkB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,kBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKxC,OAAOyC,OAAO,MAGvB,GAFAvB,EAAoBe,EAAEO,GACtBxC,OAAO8B,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOlB,EAAoBQ,EAAEc,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRtB,EAAoB0B,EAAI,SAAStB,GAChC,IAAIM,EAASN,GAAUA,EAAOiB,WAC7B,WAAwB,OAAOjB,EAAO,YACtC,WAA8B,OAAOA,GAEtC,OADAJ,EAAoBQ,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRV,EAAoBW,EAAI,SAASgB,EAAQC,GAAY,OAAO9C,OAAOC,UAAUC,eAAeC,KAAK0C,EAAQC,IAGzG5B,EAAoB6B,EAAI,IAExB,IAAIC,EAAaC,OAAO,gBAAkBA,OAAO,iBAAmB,GAChEC,EAAmBF,EAAW3C,KAAKsC,KAAKK,GAC5CA,EAAW3C,KAAOf,EAClB0D,EAAaA,EAAWG,QACxB,IAAI,IAAItD,EAAI,EAAGA,EAAImD,EAAWjD,OAAQF,IAAKP,EAAqB0D,EAAWnD,IAC3E,IAAIU,EAAsB2C,EAI1BzC,EAAgBJ,KAAK,CAAC,EAAE,kBAEjBM,K,6ECvJT,W,uBCAAW,EAAOD,QAAU,IAA0B,6B,sFCA3C,W,kCCAA,W,uDCAA,oE,yDCAA,W,qLCCE,eAAe,G,0LCeJ+B,EAAY,CACvBC,SAAU,WACVC,YAAa,cACbC,WAAY,aACZC,oBAAqB,uBAGVC,EAAU,CACrBC,OAAQ,SACRC,UAAW,aAGA,EAAQ,CACnBC,YAAY,EACZC,MAAO,CACLC,KAAM,GACNC,YAAa,IAEfN,SAAO,sBAEJA,EAAQC,QAFJ,WAUHM,GAAuC,IANrCC,EAMqC,EANrCA,OACAC,EAKqC,EALrCA,UAQEC,EAAgBD,EAAUE,KAAKC,WAAWL,EAAEM,QAAQC,OACxD,GAAKJ,EAAL,CAGA,IAAMK,EAAY,GAClB,MAAOL,GAAiBA,EAAcM,IAAMT,EAAEU,SAC5CF,EAAUnE,KAAK8D,EAAcM,IAC7BN,EAAgBD,EAAUE,KAAKC,WAAWF,EAAcM,IAAIF,OAE9DC,EAAUnE,KAAK2D,EAAEU,UAEjBT,EAAOb,EAAUE,YAAa,CAAEgB,OAAQN,EAAEM,OAAQE,cAGlD,cAAuBA,EAAvB,eAAkC,CAA7B,IAAME,EAAQ,KACjBT,EAAOb,EAAUI,oBAAqB,CACpCc,OAAQI,EACRC,MAAOX,EAAEM,cA9BV,iBAkCJb,EAAQE,WAlCJ,WAkC+CW,GAAc,IAA5CL,EAA4C,EAA5CA,OACpBA,EAAOb,EAAUG,WAAYe,MAnC1B,GAsCPlB,WAAS,sBACNA,EAAUC,UADJ,SACcQ,EAAcC,GAGjC,IAAK,IAAMa,KAFXd,EAAMC,KAAOA,EACbD,EAAME,YAAc,GACAD,EAAM,wBACDA,EAAKa,IADJ,IACxB,2BAAoC,KAAzBD,EAAyB,QAC7Bb,EAAME,YAAYW,KACrBb,EAAME,YAAYW,GAAY,IAEhCb,EAAME,YAAYW,GAAUrE,KAAKsE,IALX,mCAJrB,iBAaNvB,EAAUE,aAbJ,SAcLO,EACAG,GAEAH,EAAMC,KAAKE,EAAEM,QAAUN,EAAEQ,aAjBpB,iBAmBNpB,EAAUI,qBAnBJ,SAoBLK,EACAG,GAEKH,EAAME,YAAYC,EAAEM,UACvBT,EAAME,YAAYC,EAAEM,QAAU,IAEhCT,EAAME,YAAYC,EAAEM,QAAQjE,KAAK2D,EAAEW,UA1B9B,iBA4BNvB,EAAUG,YA5BJ,SA4BgBM,EAAcS,GAAc,uBAC1BT,EAAMC,KAAKQ,IADe,IACjD,2BAA2C,KAAhCI,EAAgC,QACnCE,EAAQf,EAAME,YAAYW,GAAUG,QAAQP,GAClDT,EAAME,YAAYW,GAAUzD,OAAO2D,EAAO,IAHK,qCAK1Cf,EAAMC,KAAKQ,MAjCb,IC9DE,EAAY,CACvBQ,kBAAmB,oBACnBC,qBAAsB,wBAGX,EAAQ,CACnBnB,YAAY,EACZC,MAAO,CACLmB,cAAe,IAEjB5B,WAAS,sBACN,EAAU0B,mBADJ,SACuBjB,EAAcmB,GAC1CnB,EAAMmB,cAAgBA,KAFjB,iBAIN,EAAUD,sBAJJ,SAKLlB,EACAG,GAEKH,EAAMmB,cAAchB,EAAEiB,UACzBpB,EAAMmB,cAAchB,EAAEiB,QAAU,IAElCpB,EAAMmB,cAAchB,EAAEiB,QAAUjB,EAAEkB,mBAX7B,I,0ICfI,WACbC,EACAC,EACAC,GAEA,IAAMC,EAAM,IAAIC,MAAMJ,GAEtB,MAAO,CACLK,MAAOF,EACPF,GAAIA,EACJC,S,6CCTSI,EAAgB,EAOvB,SAAUC,EAAI9C,EAAWpB,GAC7B,OAASoB,EAAIpB,EAAKA,GAAKA,EAGnB,SAAUmE,EAAMC,GACpB,IAAMvD,EAAIwD,KAAKC,IAAI,GAAIL,GACvB,OAAOI,KAAKF,MAAMC,EAAMvD,GAAKA,EAQzB,SAAU0D,EAAM/B,GACpB,OAAO,uBAAUA,GAgIb,SAAUgC,EAAWC,EAAab,GAAO,MACxCA,GACHc,QAAQV,MAAMS,GAYhB,IAAME,EAAQ,GACd,IAAK,IAAMtG,KAAKuF,EACde,EAAM9F,KAAKR,EAAGuF,EAAGvF,KAMnB,EAAAqG,SAAQV,MAAR,SAAcS,GAAd,OAAsBE,I,gBCnKlB,SAAUC,EACd3B,EACA4B,GAEA,IAAK,IAAMC,KAASD,EAAe,CACjC,IAAME,EAAQF,EAAcG,OAAOF,IACnC,GAAIC,GAASA,EAAM9B,GACjB,MAAO,CAAC8B,EAAM9B,GAAK+B,OAAOF,IAI9B,MAAO,CAAC,KAAM,MAGV,SAAUG,EACdC,EACAL,GAEA,IAF6C,EAEvCzF,EAAoB,GAFmB,iBAGzByF,GAHyB,IAG7C,2BAAmC,KAAxBE,EAAwB,QACjC,GAAKA,EAAL,CADiC,uBAIhBG,GAJgB,IAIjC,2BAAsB,KAAXjC,EAAW,QAChB8B,EAAM9B,IACR7D,EAAOP,KAAKkG,EAAM9B,KANW,iCAHU,8BAc7C,OAAO7D,EAGH,SAAU+F,EAAcC,EAAeC,GAC3C,MAAO,CACLpC,GAAI,iBACJqC,SAAUD,EACVD,MAAOA,EACPG,SAAU,IAsBR,SAAUC,EACdzC,EACA8B,EACAY,GAAkB,MAMMb,EAAY7B,EAAOE,GAAI4B,GAN7B,sBAMXa,EANW,KAOlB,GAAsB,OAAlBA,EACF,MAAO,CACL,KACA,KACA,EAAW,mDAAoD,CAC7DxC,SAAUH,EAAOE,GACjB4B,cAAeA,KAKrB,GAA+B,IAA3B9B,EAAOwC,SAAShH,OAAc,CAChC,IADgC,EAC1BoH,EAAoBD,EAAcE,OAAOC,KAAI,SAAAtE,GAAC,MAAK,CACvDuE,KAAMJ,EAAcL,OACpBU,GAAIxE,MAEFyE,EAAsBL,EAAkB,GALZ,iBAMhBA,GANgB,IAMhC,2BAAmC,KAAxBnD,EAAwB,QAC7ByD,EAAgBzD,GAAKyD,EAAgBD,KACvCA,EAAsBxD,IARM,8BAYhC,IAAI0D,EAAQ,GAKZ,OAJIT,IACFS,EAAQ,GAAA7B,KAAK8B,SAAmB,EAAE,GAG7B,CACL,CACEC,EACEJ,EAAoBF,KAAKM,EACzBF,GAASF,EAAoBD,GAAGK,EAAIJ,EAAoBF,KAAKM,GAC/DC,EACEL,EAAoBF,KAAKO,EACzBH,GAASF,EAAoBD,GAAGM,EAAIL,EAAoBF,KAAKO,IAEjE,KACA,MAGF,IAAMC,EAAevD,EAAOwC,SAAS,GADhC,EAEuBX,EAAY0B,EAAarD,GAAI4B,GAFpD,sBAEA0B,EAFA,KAGL,GAA4B,OAAxBA,EACF,MAAO,CACL,KACA,KACA,EAAW,uDAAwD,CACjEC,eAAgBF,EAAarD,GAC7B4B,cAAeA,KAThB,uBAae9B,EAAOwC,UAbtB,IAaL,2BAAqC,KAA1BkB,EAA0B,UACZ7B,EAAY6B,EAAMxD,GAAI4B,GADV,sBAC5B6B,EAD4B,KAEnC,GAAqB,OAAjBA,EACF,MAAO,CACL,KACA,KACA,EAAW,gDAAiD,CAC1DC,QAASF,EAAMxD,GACf4B,cAAeA,KARc,MAaT+B,GAAeF,EAAad,QAbnB,sBAa5BiB,EAb4B,KAajBC,EAbiB,KAcnC,GAAIA,EACF,MAAO,CACL,KACA,KACA,EAAW,yCAA0C,CACnDJ,eACAI,UApB6B,MAwBXF,GAAeL,EAAoBX,QAxBxB,sBAwB5BmB,EAxB4B,KAwBnBC,EAxBmB,KAyBnC,GAAIA,EACF,MAAO,CACL,KACA,KACA,EAAW,yCAA0C,CACnDT,sBACAS,UAIFf,EAAgBY,GAAaZ,EAAgBc,KAC/CR,EAAsBG,IAjDrB,8BAqDL,IAAI,EAAQ,EAAI,EACZjB,IACF,EAAQpB,KAAK8B,UAAY,EAAE,GAAK,MAvD7B,MA0DkBS,GAAeL,EAAoBX,QA1DrD,sBA0DEqB,EA1DF,KA2DCC,EAAgBC,GAAeF,EAAe,GAAOlB,GACrDqB,EAAe7C,EAAM+B,GAE3B,OADAc,EAAa9B,SAAW6B,GAAeF,EAAe,EAAI,GAAGlB,GACtD,CAACmB,EAAeE,EAAc,MAInC,SAAUC,EACdhF,EAKAG,GAEA,GAAkB,MAAdH,EAAMO,KACR,OAAO,EAAW,qBAAsB,IAG1C,IAAM0E,EAAOjF,EAAMQ,WAAWL,EAAEM,QAChC,IAAKwE,EACH,OAAO,EAAW,qDAAsD,CACtE,WAAY9E,EAAEM,OACd,mBAAoBT,EAAMQ,aAI9B,IAAKyE,EAAKvE,OACR,OAAO,EAAW,+CAAgD,CAChE,WAAYP,EAAEM,SAhBoB,MAoBTyE,GAC3B,YACA/E,EAAE8C,SACFgC,EAAKvE,OAAOE,GACZZ,EAAMwC,eAxB8B,sBAoB/B2C,EApB+B,KA0BtCF,EAAKG,KAAKnC,SAAWkC,EA1BiB,MA8BF5C,EAClC0C,EAAKvE,OAAOE,GACZZ,EAAMwC,eAhC8B,sBA8B/Ba,EA9B+B,KA8BhBgC,EA9BgB,KAkCtC,IAAKhC,GAAgC,OAAfgC,EACpB,OAAO,EAAW,qDAAsD,CACtEzE,GAAIqE,EAAKvE,OAAOE,GAChB,sBAAuBZ,EAAMwC,gBArCK,MAwCpB8C,GAChBL,EAAKvE,OACL2C,EAAcE,OACdF,EAAcL,QA3CsB,sBAwC/BuC,EAxC+B,KAwC3B9D,EAxC2B,KA6CtC,OAAU,MAAN8D,GAAqB,MAAP9D,EACT,EAAW,+CAAgD,CAChEb,GAAIqE,EAAKvE,OAAOE,GAChByC,cAAeA,IAGZmC,GAAmBxF,EAAMwC,cAAe+C,EAAIF,G,yDClP/C,SAAUI,EAAgBvC,GAC9B,IAAInG,EAaJ,OAXKmG,EAEMwC,MAAMC,QAAQzC,IACvBnG,EAASmG,EAAS0C,QAAO,SAAAC,GAAO,QAAMA,KAASC,OAC/C/I,EAAOgJ,SAAQ,SAACF,EAAS7J,EAAGgK,GAAb,OAAsBA,EAAIhK,GAAK6J,EAAQI,gBAEtDlJ,EAASZ,OAAO+J,OAAOhD,GACpB0C,QAAO,SAAAC,GAAO,QAAMA,KACpBC,OACH/I,EAAOgJ,SAAQ,SAACF,EAAS7J,EAAGgK,GAAb,OAAsBA,EAAIhK,GAAK6J,EAAQI,eARtDlJ,EAAS,GAUJA,EAGH,SAAUoJ,EACdC,GAEA,IAAMC,EAAa,CACjBzF,GAAIwF,EAAQ,KAAKxF,GAAGqF,WACpBlD,MAAOqD,EAAQ,KAAKtI,KACpBmF,SAAUmD,EAAQ,KAAKnD,SACvBC,SAAU,IAENoD,EAAQ,CAACD,GAEf,MAAOC,EAAMpK,OAAS,EAAG,CACvB,IAAMkJ,EAAOkB,EAAMC,MACnB,GAAKnB,EAAL,CAGA,IAAKgB,EAAQhB,EAAKxE,IAChB,MAAO,CACL,KACA,EAAW,4BAA6B,CAAE,UAAWwE,EAAKxE,GAAIwF,aAIlE,GADAA,EAAQhB,EAAKxE,IAAIsC,SAAWuC,EAAgBW,EAAQhB,EAAKxE,IAAIsC,UACxDkD,EAAQhB,EAAKxE,IAAIsC,SAAShH,OAA/B,CAGA,IAfuB,EAejBgH,EAAmB,GAfF,iBAgBDkD,EAAQhB,EAAKxE,IAAIsC,UAhBhB,IAgBvB,2BAAiD,KAAtC2C,EAAsC,QAC/C,IAAKO,EAAQP,GACX,MAAO,CACL,KACA,EAAW,kCAAmC,CAAEA,UAAS,SAAWT,EAAKxE,MAG7EsC,EAAS1G,KAAK,CACZoE,GAAIiF,EAAQI,WACZlD,MAAOqD,EAAQP,GAAS/H,KACxBmF,SAAUmD,EAAQP,GAAS5C,SAC3BC,SAAU,MA3BS,8BA+BvBkC,EAAKlC,SAAWA,EAChBoD,EAAM9J,KAAN,MAAA8J,EAAcpD,KAGhB,MAAO,CAACmD,EAAM,M,gBCrDZG,EAAkB,uDAGhB,EAAM,yDAAG,WAAO9K,GAAP,0GAEL,OACH+K,WACAC,MACAC,OAAOjL,GALC,gCAMJ,MANI,4DAQJ,EAAW,uBAAwB,CAAE+F,IAAK,EAAF,MARpC,wDAAH,sDAYNmF,EAAkB,sBAAS,EAAQ,KAE1B,GACbC,WAAYzH,OAAO0H,WACnBC,YAAa3H,OAAO4H,YAAc5H,OAAO4H,YAAY,IACrDC,SAAU,IACVC,UAAW,IACXC,aALa,WAQX,IAAMC,EAAiB,CACrBC,OAAQ,0CACRC,WAAY,+BACZC,YAAa,sCACbC,UAAW,eACXC,cAAe,2BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,gBAIjB,OAASC,cAAcT,GACvB,OAASU,aAiBLC,aAtCO,SAuCXC,EACAC,GAA8B,0JAExBC,EAAc,OAASC,OAAOD,YAC/BA,EAHyB,yCAIrB,CACL,GACA,EAAW,8CAA+C,MANhC,uBASRA,EAAYE,YAAW,GATf,cASxBC,EATwB,OAU9BJ,EAAOI,QAAUA,EAVa,mBAYL,EAAAC,EAAMnK,IAAIqI,EAAkBwB,EAAQ,CAAEC,WAZjC,eAYtBM,EAZsB,yBAarB,CAACA,EAAS7M,KAAM,OAbK,8DAerB,CAAC,GAAI,EAAW,wBAAyB,CAAEsM,SAAQC,SAAQO,EAAC,SAfvC,6DAmB1BC,aA3DO,WA2DK,qKACO,OACpBhC,WACAC,IAAI,OACJvI,MAJa,UACVuK,EADU,OAKXA,EAASC,SALE,yCAMP,CAAC,KAAM,EAAW,mBAAoB,MAN/B,cAQVnF,EAAMkF,EAASE,MARL,kBAUT,CAACpF,EAAK,OAVG,8CAaZqF,kBAxEO,SAyEXC,GAA0B,2KAEpBC,EAAU,OAASA,UAAUrC,MAC/BA,EAAMqC,EAAQ3E,MAAR,aACN0E,IACFpC,EAAMqC,EAAQ3E,MAAR,gBAAuB0E,EAAKE,IAA5B,eALkB,SAORtC,EAAIuC,iBAPI,cAOpBC,EAPoB,gBASH,EAAAZ,EAAMnK,IAAI+K,GATP,cASpBX,EAToB,yBAUnB,CACL,CACE3H,GAAI,IACJmC,MAAO,GACPE,SAAU,CAAEc,EAAG,EAAK8C,WAAa,EAAG7C,EAAG,EAAK+C,YAAc,GAE1D7D,SAAUqF,EAAS7M,MAErB,OAlBwB,+CAsBtByN,OA/FO,SA+FAL,GAA0B,iLAEtB,EAAKL,eAFiB,oGAI5B,CAAC,KAAM,EAAW,KAAEnH,QAAS,CAAEkH,EAAG,EAAF,OAJJ,2DAQjCY,QAvGO,SAuGCN,GAA0B,yKAE9BC,EAAU,OAASA,UAAUrC,MAC/BA,EAAMqC,EAAQ3E,MAAR,cACN0E,IACFpC,EAAMqC,EAAQ3E,MAAR,gBAAuB0E,EAAKE,IAA5B,gBAL4B,SAOlBtC,EAAIuC,iBAPc,cAO9BC,EAP8B,gBASb,EAAAZ,EAAMnK,IAAI+K,GATG,cAS9BX,EAT8B,yBAU7B,CAACA,EAAS7M,KAAM,OAVa,8DAY7B,CAAC,KAAM,EAAW,KAAE4F,QAAS,CAAEkH,EAAG,EAAF,OAZH,6DAgBlCa,SAvHO,SAuHEP,EAAqB7I,GAAU,wJACvC6I,EADyC,CAAF,uDAKtCC,EAAU,OAASA,UAAUrC,MAC7BA,EAAMqC,EAAQ3E,MAAR,gBAAuB0E,EAAKE,IAA5B,eANgC,SAOtCtC,EAAI4C,UACRC,KAAKC,SAASC,mBAAmBC,KAAKC,UAAU1J,MAChD,UAT0C,8CAaxC2J,iBApIO,SAqIXd,GAA0B,8KAGD,OACpBrC,WACAC,IAAI,gBACJvI,MANqB,UAGlBuK,EAHkB,OAOnBA,EAASC,SAPU,yCAQf,CAAC,KAAM,EAAW,mBAAoB,MARvB,cAUlBxH,EAAgBuH,EAASE,MAVP,kBAYjB,CAACzH,EAAe,OAZC,8DAcjB,CAAC,KAAM,EAAW,KAAEG,QAAS,CAAEkH,EAAG,EAAF,OAdf,6DAkBtBqB,kBAvJO,SAwJXf,EACA3H,GAA4D,gJAEvD2H,EAFuD,iEAKtD,OACHrC,WACAC,IAAI,gBAAkBvF,EAAcV,QACpCqJ,IAAI3I,EAAc4I,iBARuC,8CAW9DC,uBApKa,SAoKU5I,EAAgB6I,GACrCC,KAAKC,kBAAL,cACS/I,IACP,SAACgJ,GACC,GAAKA,EAAKzB,SAAV,CAGA,IAAMvD,EAAOgF,EAAKxB,MAClBvG,QAAQgI,IAAI,0BAA2BjF,GACvCA,EAAKxE,GAAKwE,EAAKxE,GAAGqF,WAClBb,EAAKlC,SAAWuC,EAAgBL,EAAKlC,UACrC+G,EAAG7E,QAKTkF,2BApLa,SAoLclJ,EAAgB6I,GACzCC,KAAKC,kBAAL,uBACkB/I,IAChB,SAACgJ,GACC,GAAKA,EAAKzB,SAAV,CAGA,IAAMvD,EAAOgF,EAAKxB,MAClBvG,QAAQgI,IAAI,8BAA+BjF,GAC3C6E,EAAG7E,QAKTmF,gCAlMa,SAkMmBnJ,EAAgB6I,GAC9CC,KAAKC,kBAAL,uBACkB/I,IAChB,SAACgJ,GACC,GAAKA,EAAKzB,SAAV,CAGA,IAAMtH,EAAkB+I,EAAKxB,MAC7BvG,QAAQgI,IAAI,mCAAoC,SAAUjJ,EAAQ,kBAAmBC,GACrF4I,EAAG7I,EAAQC,QAKjBmJ,yBAhNa,SAgNYpJ,GACvB,OACGqF,WACAC,IAFH,cAEctF,IACXqJ,IAAI,UAGTN,kBAvNa,SAwNXO,EACAT,GAEA,OACGxD,WACAC,IAAIgE,GACJC,GAAG,QAASV,IAGjBW,oBAjOa,SAkOXF,EACAT,GAEA,OACGxD,WACAC,IAAIgE,GACJD,IAAI,QAASR,IAGZY,YA3OO,SA2OKzJ,EAAgBuF,GAAyB,6JACnD,OACHF,WACAC,IAAI,OAAStF,GACbyJ,YACClE,GACA,eAGA,GATqD,8CAarDmE,QAxPO,SAwPC1F,GAAY,6JAClB,OACHqB,WACAC,IAAI,OAAStB,EAAKxE,IAClBkJ,IAAI1E,GAJiB,8CAOpB2F,QA/PO,SA+PC3J,GAAc,qKACT,OACdqF,WACAC,IAAI,OAAStF,GACbjD,MAJuB,cACpB6M,EADoB,OAKpB5F,EAAO4F,EAAGpC,MAChBxD,EAAKxE,GAAKwE,EAAKxE,GAAGqF,WAClBb,EAAKlC,SAAWuC,EAAgBL,EAAKlC,UAPX,kBAQnBkC,GARmB,8CAW5B6F,YA1Qa,WA2QX,OAAO,OACJxE,WACAC,MACAlK,OAAOqC,KAGNqM,cAjRO,SAiROR,EAAcnM,GAAa,mKAC1B,OAChBkI,WACAC,IAAIgE,GACJS,eACAC,QAAQ7M,GACR8M,aAAa,GACblN,MAP0C,cACvCiM,EADuC,yBAQtCA,EAAKvL,KARiC,8CAWzCyM,eA5RO,SA6RXlK,EACAyE,GAAe,uKAEE,OACdY,WACAC,IAAI,OAAStF,GACbjD,MALY,UAET6M,EAFS,OAMT5F,EAAO4F,EAAGpC,MACXxD,EAAKlC,SAPK,yCAQN,MARM,oCAWGkC,EAAKlC,UAXR,iDAWJrE,EAXI,WAYTuG,EAAKlC,SAASrE,GAAKoH,aAAeJ,EAZzB,0CAaJhH,GAbI,wDAgBR,MAhBQ,+CAmBjB8H,OAAA,EACAC,kBAEM2E,gBApTO,SAqTXzC,GAAmB,8JAEb0C,EAAS1C,EAAKE,IAFD,SAGI,OACpBvC,WACAC,IAFoB,oBAEH8E,EAFG,aAGpBrN,MANgB,UAGbuK,EAHa,OAOdA,EAASC,SAPK,yCAQV,CAAC,KAAM,EAAW,mBAAoB,MAR5B,cAUb8C,EAAc/C,EAASE,MAVV,kBAYZ,CAAC6C,EAAa,OAZF,8CAefC,eApUO,WAoUO,mKAGK,OACpBjF,WACAC,IAFoB,gBAGpBvI,MANe,UAGZuK,EAHY,OAQbA,EAASC,SARI,yCAST,CAAC,GAAI,OATI,gCAYX,CAACD,EAASE,MAAO,OAZN,+CClVhB+C,EAAoB,CACxB,CAAE5H,EAAG,EAAGC,EAAG,GACX,CAAED,EAAG,EAAGC,EAAG4H,EAAI1E,WACf,CAAEnD,EAAG6H,EAAI3E,SAAUjD,EAAG4H,EAAI1E,WAC1B,CAAEnD,EAAG6H,EAAI3E,SAAUjD,EAAG,IAGlB,SAAUJ,EAAgBzD,GAC9B,OAAO6B,KAAK6J,KACV7J,KAAKC,IAAI9B,EAAEsD,KAAKM,EAAI5D,EAAEuD,GAAGK,EAAG,GAAK/B,KAAKC,IAAI9B,EAAEsD,KAAKO,EAAI7D,EAAEuD,GAAGM,EAAG,IAI3D,SAAU8H,EACd5M,GAEA,IAAKA,EACH,MAAM,IAAIwC,MAAM,6BAElB,IAAMqK,EAAK7M,EAAEsE,KAAI,SAAAwI,GAAK,MAAI,CAACA,EAAMjI,EAAGiI,EAAMhI,MAE1C,OADA+H,EAAGvP,KAAK,CAAC0C,EAAE,GAAG6E,EAAG7E,EAAE,GAAG8E,IACf,aAAa,CAAC+H,IAGjB,SAAUE,EAASD,EAAcE,GACrC,OAAO,2BACL,WAAW,CAACF,EAAMjI,EAAGiI,EAAMhI,IAC3B8H,EAAcI,IAIZ,SAAUC,EAAmBjN,GACjC,IAAM6M,EAAK7M,EAAEsE,KAAI,SAAAwI,GAAK,MAAI,CAACA,EAAMjI,EAAGiI,EAAMhI,MAE1C,OADA+H,EAAGvP,KAAK,CAAC0C,EAAE,GAAG6E,EAAG7E,EAAE,GAAG8E,IACf,CAAC+H,GAGJ,SAAU,EAAK7M,GACnB,OAAO8C,KAAKoK,IAAI,eAAYlN,EAAEsE,KAAI,SAAAwI,GAAK,MAAI,CAACA,EAAMjI,EAAGiI,EAAMhI,QAGvD,SAAUqI,EACdC,EACAC,GAKA,IAAIC,EAAetK,EAAMoK,GACrBG,EAAevK,EAAMqK,GACrBG,EAAK,EACT,MAAO,EAAKF,GAAO,KAAQ,EAAKC,GAAO,IACrCC,GAAU,GACVF,EAAMF,EAAG9I,KAAI,SAAAtE,GAAC,MAAK,CAAE6E,EAAG7E,EAAE6E,EAAI2I,EAAI1I,EAAG9E,EAAE8E,EAAI0I,MAC3CD,EAAMF,EAAG/I,KAAI,SAAAtE,GAAC,MAAK,CAAE6E,EAAG7E,EAAE6E,EAAI2I,EAAI1I,EAAG9E,EAAE8E,EAAI0I,MAE7CF,EAAMA,EAAIhJ,KAAI,SAAAtE,GAAC,MAAK,CAAE6E,EAAGjC,EAAM5C,EAAE6E,GAAIC,EAAGlC,EAAM5C,EAAE8E,OAChDyI,EAAMA,EAAIjJ,KAAI,SAAAtE,GAAC,MAAK,CAAE6E,EAAGjC,EAAM5C,EAAE6E,GAAIC,EAAGlC,EAAM5C,EAAE8E,OAEhD,IAAM2I,EAAMR,EAAmBK,GACzBI,EAAMT,EAAmBM,GAC/B,GAAW,MAAPE,GAAsB,MAAPC,EACjB,MAAO,CACL,KACA,EAAW,yCAA0C,CAAEN,GAAIA,EAAIC,GAAIA,KAKvE,IAAMM,EAAmB,IAAgBC,aAAaH,EAAKC,GAC3D,GAAwB,MAApBC,IAA6BA,EAAiB3Q,OAChD,MAAO,CAAC,GAAI,MAGd,IA/BW,EA+BL6Q,EAAc,GA/BT,iBAiCQF,EAAiB,IAjCzB,IAiCX,2BAAwC,OAA7BG,EAA6B,QAChCC,EAAa,GADmB,iBAEtBD,GAFsB,IAEtC,2BAAsB,KAAX9N,EAAW,QACpB+N,EAAWzQ,KAAK,CAAEuH,EAAG7E,EAAE,GAAKwN,EAAI1I,EAAG9E,EAAE,GAAKwN,KAHN,8BAMtCO,EAAW1G,MACXwG,EAAYvQ,KAAKyQ,IAxCR,8BA2CX,MAAO,CAACF,EAAa,MAIjB,SAAUG,GAAmB3J,GAC5BA,GACHlB,QAAQV,MAAM,aAAc4B,GAE9B,IAAM4J,EAAO5J,EAAO6J,QAAO,SAACC,EAAeC,GAAhB,OACzBD,EAActJ,EAAIuJ,EAAavJ,EAAIuJ,EAAeD,KAClDtJ,EACIwJ,EAAOhK,EAAO6J,QAAO,SAACC,EAAeC,GAAhB,OACzBD,EAAcrJ,EAAIsJ,EAAatJ,EAAIsJ,EAAeD,KAClDrJ,EACIwJ,EAAOjK,EAAO6J,QAAO,SAACC,EAAeC,GAAhB,OACzBD,EAActJ,EAAIuJ,EAAavJ,EAAIuJ,EAAeD,KAClDtJ,EACI0J,EAAOlK,EAAO6J,QAAO,SAACC,EAAeC,GAAhB,OACzBD,EAAcrJ,EAAIsJ,EAAatJ,EAAIsJ,EAAeD,KAClDrJ,EACF,MAAO,CACL0J,WAAY,CAAE3J,EAAGoJ,EAAMnJ,EAAGuJ,GAC1BI,SAAU,CAAE5J,EAAGyJ,EAAMxJ,EAAGyJ,IAItB,SAAUG,GACdC,EACAH,EACAC,GAEA,IAFe,EAETG,EAAaD,EAAQrK,KAAI,SAAAtE,GAAC,OAAI,WAAW,CAACA,EAAE6E,EAAG7E,EAAE8E,OACjD+J,EAAa,uBAAuBD,GACpCE,EAAQ,aAAaD,EAAY,CACrCE,KAAM,CAACP,EAAW3J,EAAG2J,EAAW1J,EAAG2J,EAAS5J,EAAG4J,EAAS3J,KAEpDkK,EAAmC,GACrCnN,EAAQ,EARG,iBASIiN,EAAMG,UATV,IASf,2BAAmC,KAAxBC,EAAwB,QACjC,IAAKA,EACH,MAAO,CACL,GACA,EAAW,0CAA2C,CACpDP,UACAH,aACAC,WACAK,WAIN,IAAMK,EAAaD,EAAKE,SAAUC,YAAY,GAAG/K,KAAI,SAAAtE,GAAC,MAAK,CACzD6E,EAAG7E,EAAE,GACL8E,EAAG9E,EAAE,OAEPmP,EAAW9H,MACX2H,EAAQnN,GAASsN,EACjBtN,KA3Ba,8BA8Bf,MAAO,CAACmN,EAAS,MAGb,SAAUM,GACdC,EACAZ,GAEA,IAAKY,EACH,MAAO,CACL,GACA,EAAW,mCAAoC,CAAEA,cAAaZ,aAGlE,IAAMa,EAAKxB,GAAmBuB,G,EACPb,GACrBC,EACAa,EAAGhB,WACHgB,EAAGf,U,sBAHEO,E,KAASzM,E,KAKhB,GAAIA,EACF,MAAO,CACL,GACA,EAAW,oDAAqD,CAC9DA,MACAiN,KACAb,aAKN,IAAMc,EAAM,GACZ,IAAK,IAAM5N,KAAS8M,EAAS,CAC3B,IAAKK,EAAQnN,GACX,MAAO,CACL,GACA,EAAW,+BAAgC,CACzCA,MAAOA,EACP8M,QAASA,EACTK,QAASA,EACTU,gBAAiBF,EACjBD,iBATqB,MAcEpC,EAAU6B,EAAQnN,GAAQ0N,GAd5B,sBAcpBI,EAdoB,KAcL,EAdK,KAe3B,GAAqB,MAAjBA,GAAgC,MAAP,EAC3B,MAAO,CACL,GACA,EAAW,wBAAyB,CAClCpN,IAAA,EACA4M,WAAYH,EAAQnN,GACpB0N,iBAKN,GAAII,GAAiB,GACnB,MAAO,CACL,GACA,EAAW,oDAAqD,CAC9D7C,MAAO6B,EAAQ9M,MAIrB,GAAI8N,EAAc3S,OAAS,EACzB,MAAO,CACL,GACA,EACE,+DACA,CAAE8P,MAAO6B,EAAQ9M,MAIvB4N,EAAInS,KAAK,CACP+G,OAAQsL,EAAc,GACtB7L,OAAQ6K,EAAQ9M,KAIpB,MAAO,CAAC4N,EAAK,MA0BT,SAAUG,GACdC,EACAC,EACAC,GAEA,OAAIF,GAAkBA,GAAkBC,EAC/B,UAELC,IAAsF,GAAvDA,EAA4BjO,QAAQgO,GAC9D,UAEF,cAGH,SAAUE,GACdH,EACAC,EACAC,GAEA,OAAIF,GAAkBA,GAAkBC,GAGpCC,IAAsF,GAAvDA,EAA4BjO,QAAQgO,GAF9D,MAKF,IAGH,SAAUG,GAAcjD,GAC5B,OAAOA,EAAQ1I,KAAI,SAACwI,GAAD,gBAAqBA,EAAMjI,EAA3B,YAAgCiI,EAAMhI,MAAKoL,KAAK,KAG/D,SAAUC,GAAiB9O,GAC/B,IAAMC,EAA6C,GAC7C8F,EAA0B,CAAC,CAAElB,KAAM7E,EAAMG,OAAQ,OAFd,aAIvC,IAAMuE,EAAOqB,EAAMC,MACnB,IAAKtB,EACH,cAEFzE,EAAWyE,EAAKG,KAAKxE,IAAMqE,EAC3BqB,EAAM9J,KAAN,MAAA8J,EAAK,eACArB,EAAKG,KAAKlC,SAASM,KAAI,SAAAY,GAAK,MAAK,CAClCgB,KAAMhB,EACN1D,OAAQuE,EAAKG,YATnB,MAAOkB,EAAMpK,OAAQ,0BAGjB,MAWJ,OAAOsE,EAGH,SAAU8O,GAAgBC,EAAgBvD,GAC9C,MAAO,CACLvI,KAAM,CACJM,EAAGiI,EAAMjI,EACTC,EAAGgI,EAAMhI,GAEXN,GAAI,CACFK,EAAGiI,EAAMjI,GAAKwL,EAAO7L,GAAGK,EAAIwL,EAAO9L,KAAKM,GACxCC,EAAGgI,EAAMhI,GAAKuL,EAAO7L,GAAGM,EAAIuL,EAAO9L,KAAKO,KASxC,SAAUwL,GAAUlH,EAAWmH,GACnC,IAAMC,EAAeJ,GAAgBG,EAAGnH,EAAE5E,IAC1C,MAAO,CACLD,KAAM,CAAEM,EAAGuE,EAAE7E,KAAKM,EAAGC,EAAGsE,EAAE7E,KAAKO,GAC/BN,GAAI,CAAEK,EAAG2L,EAAahM,GAAGK,EAAGC,EAAG0L,EAAahM,GAAGM,IAc7C,SAAUc,GAAewD,EAAW1K,GACxC,IAAM+R,EAAML,GAAgBhH,EAAG,CAAEvE,EAAG,EAAGC,EAAG,IAC1C,OAAOsL,GACL,CAAE7L,KAAM,CAAEM,EAAG,EAAGC,EAAG,GAAKN,GAAI,CAAEK,EAAG4L,EAAIjM,GAAGK,EAAInG,EAAGoG,EAAG2L,EAAIjM,GAAGM,EAAIpG,IAC7D0K,EAAE7E,MAYA,SAAUmM,GAAsB1Q,EAAUiB,GAC9C,OAAOmP,GAAgBnP,EAAGjB,GAAGwE,GAIzB,SAAUmM,GAAsBC,EAAYC,GAChD,IAAMC,EAAKF,EAAGrM,KAAKM,EACbkM,EAAKH,EAAGrM,KAAKO,EACbkM,EAAKJ,EAAGpM,GAAGK,EACXoM,EAAKL,EAAGpM,GAAGM,EACXoM,EAAKL,EAAGtM,KAAKM,EACbsM,EAAKN,EAAGtM,KAAKO,EACbsM,EAAKP,EAAGrM,GAAGK,EACXwM,EAAKR,EAAGrM,GAAGM,EACXwM,GAASD,EAAKF,IAAOH,EAAKF,IAAOM,EAAKF,IAAOD,EAAKF,GAClDQ,GAASH,EAAKF,IAAOH,EAAKI,IAAOE,EAAKF,IAAOL,EAAKI,GAClDM,GAASR,EAAKF,IAAOC,EAAKI,IAAOF,EAAKF,IAAOD,EAAKI,GAExD,GAAa,GAATI,EACF,OAAO,KAGT,IAAMG,EAAKF,EAAQD,EACbI,EAAKF,EAAQF,EAEnB,OAAIG,GAAM,GAAKA,GAAM,GAAKC,GAAM,GAAKA,GAAM,EAClC,CACL7M,EAAGiM,EAAKW,GAAMT,EAAKF,GACnBhM,EAAGiM,EAAKU,GAAMR,EAAKF,IAIhB,KAGH,SAAUY,GACdC,EACAC,EACAC,GAEA,IAAMC,EAAc,kBAAkBnF,EAAcgF,IAAYxC,SAChE,GAAmB,MAAf2C,EACF,MAAO,CACL,KACA,EAAW,mDAAoD,CAC7DH,UAAWA,EACXE,UAAWA,KAIjB,IAAME,EAAc,kBAAkBpF,EAAciF,IAAYzC,SAChE,GAAmB,MAAf4C,EACF,MAAO,CACL,KACA,EAAW,mDAAoD,CAC7DH,UAAWA,EACXC,UAAWA,KAIjB,IAAMG,EAAY,CAChBpN,EAAGkN,EAAY1C,YAAY,GAC3BvK,EAAGiN,EAAY1C,YAAY,IAEvB6C,EAAY,CAChBrN,EAAGmN,EAAY3C,YAAY,GAC3BvK,EAAGkN,EAAY3C,YAAY,IAS7B,IAAK,IAAM3N,KALXkQ,EAAYA,EAAUtN,KACpB,SAACtE,GACC,OAAO0Q,GAAsB1Q,EAAG,CAAEuE,KAAM0N,EAAWzN,GAAI0N,OAG1CJ,EACfA,EAAUpQ,GAAMgP,GAAsBoB,EAAUpQ,GAAK,CACnD6C,KAAM0N,EACNzN,GAAI0N,IAKR,IAAMC,EAAcrP,KAAKsP,IACvB1N,EAAgB,CACdH,KAAMyJ,GAAmB4D,GAAWpD,WACpChK,GAAIwJ,GAAmB4D,GAAWnD,WAEpC/J,EAAgB,CACdH,KAAMyJ,GAAmB6D,GAAWrD,WACpChK,GAAIwJ,GAAmB6D,GAAWpD,YAIhC4D,EAAmC,GACzC,IAAK,IAAM,KAAMP,EAAW,CAC1B,IAAMQ,EAAWR,EAAU,GAC3B,GAAII,EAAUrN,GAAKyN,EAASzN,GAAKqN,EAAUpN,GAAKwN,EAASxN,EAAzD,CAIA,IAAIyN,EAAgB,CAAEhO,KAAM2N,EAAW1N,GAAIsN,EAAU,IAErDS,EAAgB3M,GACd2M,EACAJ,EAAczN,EAAgB6N,IAEhC,IAAIC,EAAwB,KAC5B,IAAK,IAAM1V,KAAK8U,EAAW,CACzB,IAAMa,EAAU,CACdlO,KAAMqN,EAAU9U,GAChB0H,GAAIoN,GAAWnO,OAAO3G,GAAK,GAAK8U,EAAU5U,SAEtCgD,EAAI2Q,GAAsB4B,EAAeE,GAC/C,GAAS,MAALzS,EAAW,CACbwS,EAAwBxS,EACxB,OAGJ,GAA6B,MAAzBwS,EACF,MAAO,CACL,KACA,EACE,8DACA,CACED,cAAeA,EACfX,UAAWA,KAMnB,IAAIc,EAAwB,KAC5B,IAAK,IAAM,KAAKb,EAAW,CACzB,IAAM,EAAU,CACdtN,KAAMsN,EAAU,GAChBrN,GAAIqN,GAAWpO,OAAO,GAAK,GAAKoO,EAAU7U,SAEtC,EAAI2T,GAAsB4B,EAAe,GAC/C,GAAS,MAAL,EAAW,CACbG,EAAwB,EACxB,OAGJ,GAA6B,MAAzBA,EACF,MAAO,CACL,KACA,EACE,8DACA,CACEH,cAAeA,EACfV,UAAWA,KAMnB,GACEW,EAAsB3N,GAAK6N,EAAsB7N,GACjD2N,EAAsB1N,GAAK4N,EAAsB5N,EAFnD,CAQA,IAAMH,EACJD,EAAgB,CAAEH,KAAM2N,EAAW1N,GAAIkO,IACvChO,EAAgB,CAAEH,KAAM2N,EAAW1N,GAAIgO,IACzCH,EAAU,GAAMzM,GAAe,CAAErB,KAAM2N,EAAW1N,GAAI8N,GAAY3N,GAAOH,QAPvE6N,EAAU,GAAMC,OA/DhBD,EAAU,GAAMC,EAyEpB,MAAO,CAACD,EAAW,MAGf,SAAUM,KACd,MAAO,CAAEpO,KAAM,CAAEM,EAAG,EAAGC,EAAG,GAAKN,GAAI,CAAEK,EAAG,EAAGC,EAAG,IAG1C,SAAUO,GAAe2H,GAC7B,IAAKA,GAAWA,EAAQhQ,OAAS,EAC/B,MAAO,CACL2V,KACA,EAAW,8BAA+B,CAAE3F,aAIhD,IAAM4F,EAAsB,GAC5B,GAAsB,GAAlB5F,EAAQhQ,OAEV,IAAK,IAAMF,KAAKkQ,EAAS,CACvB,IAAM6F,EAASjN,GACb,CACErB,KAAMyI,EAAQrK,EAAIc,OAAO3G,GAAK,EAAGkQ,EAAQhQ,SACzCwH,GAAIwI,EAAQrK,EAAIc,OAAO3G,GAAK,EAAGkQ,EAAQhQ,UAEzC,IAEF4V,EAAUtV,KAAK,CAAEiH,KAAMyI,EAAQlQ,GAAI0H,GAAIqO,EAAOrO,UAGhD,IAAK,IAAM,KAAKwI,EACd,IAAK,IAAMhP,KAAKgP,EAEZvJ,OAAOzF,IAAM2E,EAAIc,OAAO,GAAK,EAAGuJ,EAAQhQ,SACxCyG,OAAOzF,IAAMyF,OAAO,IACpBA,OAAOzF,IAAM2E,EAAIc,OAAO,GAAK,EAAGuJ,EAAQhQ,SAExC4V,EAAUtV,KAAK,CAAEiH,KAAMyI,EAAQ,GAAIxI,GAAIwI,EAAQhP,KAOvD,IADA,IAAI8U,EAAcF,EAAU,GAC5B,MAAmBA,EAAnB,eAA8B,CAAzB,IAAMG,EAAI,KACTrO,EAAgBqO,GAAQrO,EAAgBoO,KAC1CA,EAAcC,GAIlB,MAAO,CAACD,EAAa,MAGjB,SAAU9M,GACdgN,EACAjP,EACAkP,EACA3P,GAEA,IAAI4P,EACJ,GAAID,EAAU,KASRE,EAAgD,EATxC,EACY9P,EAAY4P,EAAU3P,GADlC,sBACLa,EADK,KAEZ,IAAKA,EACH,MAAO,CACL,KACA,EAAW,kCAAmC,CAAEzC,GAAIuR,KAKxD,GAAa,gBAATD,EAAwB,CAC1B,IAAKjG,EAAShJ,EAAU0I,GACtB,MAAO,CACL,KACA,EAAW,sDAAuD,CAChE2G,iBAAkB3G,EAClB1I,WACAkP,cAPoB,MAWAtB,GACxBlF,EACAtI,EAAcE,OACd,CAAEgP,IAAKtP,IAdiB,sBAWzBoP,EAXyB,KAWP,EAXO,SAgBrB,CACL,IAAKpG,EAAShJ,EAAUI,EAAcE,QACpC,MAAO,CACL,KACA,EAAW,yDAA0D,CACnE,uBAAwBF,EAAcE,OACtC,uBAAwBF,EAAcL,OACtCC,WACAkP,cARD,MAYqBtB,GACxBxN,EAAcE,OACdoI,EACA,CAAE4G,IAAKtP,IAfJ,sBAiBL,GALCoP,EAZI,KAYc,EAZd,KAiBO,OAAR,EACF,MAAO,CACL,KACA,EAAW,0CAA2C,CACpDH,KAAMA,EACNI,iBAAkB3G,EAClB,uBAAwBtI,EAAcE,OACtC,kBAAmBN,KAKrBoP,EAAkB,OAAOtO,EAAI,IAC/BsO,EAAkB,OAAOtO,EAAI,GAE3BsO,EAAkB,OAAOtO,EAAI6H,EAAI3E,WACnCoL,EAAkB,OAAOtO,EAAI6H,EAAI3E,SAAW,GAE1CoL,EAAkB,OAAOrO,EAAI,IAC/BqO,EAAkB,OAAOrO,EAAI,GAE3BqO,EAAkB,OAAOrO,EAAI4H,EAAI1E,YACnCmL,EAAkB,OAAOrO,EAAI4H,EAAI1E,UAAY,GAGjD,GAAY,OAAR,EACF,MAAO,CACL,KACA,EAAW,0CAA2C,CACpDgL,KAAMA,EACNI,iBAAkB3G,EAClB,uBAAwBtI,EAAcE,OACtC,kBAAmBN,KAIzBmP,EAAoBC,EAAkB,YAGpCD,EADW,gBAATF,EACkB,CAAEnO,EAAG6H,EAAI/E,WAAa,EAAG7C,EAAG4H,EAAI7E,YAAc,GAE9C,CAAEhD,EAAG6H,EAAI3E,SAAW,EAAGjD,EAAG4H,EAAI1E,UAAY,GAIlE,MAAO,CAACkL,EAAmB,MASvB,SAAU9M,GACd/E,EACAiS,EACAC,GAEA,GAAgC,GAA5BtW,OAAOuW,KAAKnS,GAAMrE,OACpB,MAAO,CAAC,GAAI,MAEd,IAAMyW,EAAiC,CAAC,CAACpS,IACnCiC,EAAgD,CAAC,kBAElDjC,EAAKK,GAAK,CACTA,GAAIL,EAAKK,GACT2C,OAAQiP,EACRzP,MAAOxC,EAAKwC,MACZC,OAAQyP,KAKd,MAAO,EAAM,CACX,IADW,EACLG,EAAgBD,EAAWA,EAAWzW,OAAS,GAC/C2W,EAAmBrQ,EAAcmQ,EAAWzW,OAAS,GACrD4W,EAAe,GACfC,EAA2C,GAJtC,iBAKYH,GALZ,IAKX,2BAAsC,KAA3BI,EAA2B,QACpC,IAAKA,EAAS9P,SACZ,MAAO,CACL,KACA,EAAW,wDAAyD,CAClE8P,cAIN,GAAKA,EAAS9P,SAAShH,OAAvB,CAKA,IAAM+W,EAAS,GACXC,EAAS,GACb,IAAK,IAAMlX,KAAKgX,EAAS9P,SAAU,CAEjC,GADAgQ,EAASxJ,KAAKC,UAAUqJ,EAAS9P,SAASlH,GAAGiH,UACzCgQ,EAAOC,IAAWD,EAAOC,GAAQhX,OAAS,EAC5C,MAAO,CACL,KACA,EAAW,mCAAoC,CAC7CiX,QAASF,EAAOC,GAChBE,SAAUJ,EAAS9P,SAASlH,GAAG4E,MAInCqS,EAAOC,GAAUF,EAAS9P,SAASlH,GAAG4E,GAK1C,GADAkS,EAAatW,KAAb,MAAAsW,EAAY,eAASE,EAAS9P,YACzB2P,EAAiBG,EAASpS,IAC7B,MAAO,CACL,KACA,EAAW,oCAAqC,CAC9C8B,MAAOF,EAAcA,EAActG,OAAS,GAC5C8W,SAAUA,KAMhB,IA3CoC,EA2C9BK,EAAmBnR,EAAM8Q,EAAS9P,UA3CJ,iBA4ChBmQ,GA5CgB,IA4CpC,2BAAsC,KAA3BjP,EAA2B,UACAc,GAClC,cACAd,EAAMnB,SACN+P,EAASpS,GACT,CAACiS,IALiC,sBAC7BS,EAD6B,KACP,EADO,KAOpC,GAAI,EACF,MAAO,CAAC,KAAM,GAEhBlP,EAAMnB,SAAWqQ,GAtDiB,oCAwDb9E,GACrBqE,EAAiBG,EAASpS,IAAI2C,OAC9B8P,EAAiB7P,KAAI,SAAA+P,GAAE,MAAK,CAAExP,EAAGwP,EAAGtQ,SAASc,EAAGC,EAAGuP,EAAGtQ,SAASe,OA1D7B,sBAwD7BgK,EAxD6B,KAwDtBrM,EAxDsB,KA4DpC,GAAa,MAATA,EACF,MAAO,CAAC,KAAMA,GA7DoB,uBAgEjBqM,GAhEiB,IAgEpC,2BAA0B,OAAfI,EAAe,yBACJiF,GADI,IACxB,2BAAsC,KAA3B,EAA2B,QAElC,EAAMpQ,SAASc,GAAKqK,EAAKpL,OAAOe,GAChC,EAAMd,SAASe,GAAKoK,EAAKpL,OAAOgB,IAEhC+O,EAAgB,EAAMnS,IAAM,CAC1BA,GAAI,EAAMA,GACVmC,MAAO,EAAMA,MACbC,OAAQ,EAAMC,SACdM,OAAQ6K,EAAK7K,UAVK,gCAhEU,iCAL3B,8BAsFX,IAAIuP,EAAa5W,OAIf,MAAO,CAACsG,EAAe,MAHvBmQ,EAAWnW,KAAKsW,GAChBtQ,EAAchG,KAAKuW,IAOnB,SAAUvN,GACdgO,EACAC,EACAC,GAEA,GAAIA,GAAkBF,EAAgBtX,QAAUwX,EAAiB,EAC/D,OAAO,EACL,iEACA,CACEA,iBACA,yBAA0BF,EAAgBtX,SAIhD,IAAIF,EAAI0X,EACR,MAAO1X,EAAI0X,EAAiBD,EAAevX,OAAQ,CACjD,IAAK,IAAM0E,KAAM6S,EAAezX,EAAI0X,GAClCF,EAAgBxX,GAAG4E,GAAM6S,EAAezX,EAAI0X,GAAgB9S,GAE9D5E,IAGF,OAAO,KCvzBT,I,SCLK2X,GDKCC,GAAQhI,EAAI/E,WAAa,EACzBgN,GAAc,CAClB,CAAE9P,EAAG6P,GAAO5P,EAAG,GACf,CAAED,EAAG,EAAGC,EAAG,GAAM4H,EAAI7E,aACrB,CAAEhD,EAAG,EAAGC,EAAG,GAAM4H,EAAI7E,aACrB,CAAEhD,EAAG6P,GAAO5P,EAAG4H,EAAI7E,aACnB,CAAEhD,EAAG,IAAO6H,EAAI/E,WAAa,EAAI+M,IAASA,GAAO5P,EAAG,IAAM4H,EAAI7E,aAC9D,CAAEhD,EAAG,IAAO6H,EAAI/E,WAAa,EAAI+M,IAASA,GAAO5P,EAAG,IAAM4H,EAAI7E,aAC9D,CAAEhD,EAAG6H,EAAI/E,WAAa,EAAI+M,GAAQA,GAAO5P,EAAG4H,EAAI7E,aAChD,CAAEhD,EAAG6H,EAAI/E,WAAY7C,EAAG,GAAM4H,EAAI7E,aAClC,CAAEhD,EAAG6H,EAAI/E,WAAY7C,EAAG,GAAM4H,EAAI7E,aAClC,CAAEhD,EAAG6H,EAAI/E,WAAa+M,GAAO5P,EAAG,GAChC,CACED,EAAG6H,EAAI/E,WAAa+M,GAAQ,IAAOhI,EAAI/E,WAAa,EAAI+M,IACxD5P,GAAI,GAAM4H,EAAI7E,aAEhB,CACEhD,EAAG6H,EAAI/E,WAAa+M,GAAQ,IAAOhI,EAAI/E,WAAa,EAAI+M,IACxD5P,GAAI,GAAM4H,EAAI7E,cAGZ+M,GAAc,CAAE/P,EAAG6H,EAAI/E,WAAa,EAAG7C,EAAG4H,EAAI7E,YAAc,GAcrD,GAAY,CACvBgN,qBAAsB,uBACtBC,SAAU,WACVC,qBAAsB,uBACtBC,YAAa,eAGF,GAAU,CACrBC,oBAAqB,uBAGV,GAAQ,CACnBpU,YAAY,EACZC,MAFmB,WAGjB,MAAO,CACLO,KAAM,KACNC,WAAY,GACZgC,cAAe,GACfuM,eAAgB,OAIpBqF,QAAS,CACPC,aAAc,SAACrU,GACb,OAAKA,EAAM+O,gBAGN/O,EAAMQ,WAAWR,EAAM+O,gBAGrB/O,EAAMQ,WAAWR,EAAM+O,gBAAgB3J,KALrC,OASbxF,QAAS,kBA4BA,GAAQuU,qBA5BV,WA8BHG,GAAc,wMADZlU,EACY,EADZA,OAAQJ,EACI,EADJA,MAAOuU,EACH,EADGA,SAGXC,EAAexU,EAAMQ,WAAW8T,EAAO1T,IACxC4T,EAHS,uBAIZrS,EAAW,kDAAmD,CAC5D,YAAamS,EAAO1T,KALV,6BAUR6T,EAAY,CAChB7T,GAAI4T,EAAapP,KAAKxE,GACtBuR,SAAUqC,EAAa9T,OAAS8T,EAAa9T,OAAOE,GAAK,KACzD9C,KAAM0W,EAAapP,KAAKrC,MACxBG,SAAUsR,EAAapP,KAAKlC,SAASM,KAAI,SAAAzE,GAAC,OAAIA,EAAE6B,MAAIkF,OACpD7C,SAAUuR,EAAapP,KAAKnC,UAGxByR,EAAcJ,EAAOpR,SAAS0C,QAClC,SAAA7B,GAAC,OAAK0Q,EAAUvR,SAASyR,SAAS5Q,MAE9B6Q,EAAkBH,EAAUvR,SAAS0C,QACzC,SAAA7B,GAAC,OAAKuQ,EAAOpR,SAASyR,SAAS5Q,OAI7B2Q,EAAYxY,OA1BF,kCA2BUwY,GA3BV,0JA2BD7O,EA3BC,QA4BN7F,EAAMQ,WAAWqF,KACnBxD,QAAQgI,IACN,wDACArK,EAAMQ,WAAWqF,IAIb1F,EAAI,CACRiB,OAAQyE,EACRgP,YAAa,MAEfzU,EAAO,GAAU8T,YAAa,CAC5B9S,OAAQyE,EACRgP,YAAa,OAEX1U,EAAE0U,aACJ1S,EAAW,kCAAmC,CAC5CV,IAAKtB,EAAE0U,eA7CH,SAmDgBjJ,EAAIb,QAAQlF,GAnD5B,UAmDJiP,EAnDI,OAoDVzS,QAAQgI,IACN,qDACAyK,GAGIC,EAAY,CAACD,GACdA,EA1DK,wBA4DRR,EAAOpR,SAAWoR,EAAOpR,SAAS0C,QAChC,SAAAhF,GAAE,OAAIA,GAAMiF,KAEd1D,EAAW,gCAAiC,CAAEf,OAAQyE,IA/D9C,kLAmEFmP,EAAgBD,EAAUxO,MAC3ByO,EApEG,+DAwEFhC,EAAW,CACfpS,GAAIoU,EAAcpU,GAClBmC,MAAOiS,EAAclX,KACrBmF,SAAU+R,EAAc/R,SACxBC,SAAU,IAEPlD,EAAMQ,WAAWwU,EAAc7C,UA9E5B,uBA+ENhQ,EAAW,mCAAoC,CAC7Cf,OAAQ4T,EAAc7C,WAhFlB,yCAqFRnS,EAAMQ,WACJwU,EAAc7C,UACd/M,KAAKlC,SAAWlD,EAAMQ,WACtBwU,EAAc7C,UACd/M,KAAKlC,SAAS0C,QAAO,SAAA7G,GAAC,OAAIA,EAAE6B,IAAMoS,EAASpS,MAE7CZ,EAAMQ,WAAWwU,EAAc7C,UAAU/M,KAAKlC,SAAS1G,KACrDwW,GAGFhT,EAAMQ,WAAWwS,EAASpS,IAAM,CAC9BF,OAAQV,EAAMQ,WAAWwU,EAAc7C,UAAU/M,KACjDA,KAAM4N,GAGRpH,EAAI5B,uBAAuBgJ,EAASpS,IAAI,SAAC0T,GAAD,OAAoBC,EAAS,GAAQJ,oBAAqBG,MApG1F,iBAqGcU,EAAc9R,UArG5B,kJAqGG2C,EArGH,iBAsGkB+F,EAAIb,QAAQlF,GAtG9B,UAsGAoP,EAtGA,OAuGDA,EAvGC,uBAyGJD,EAAc9R,SAAW8R,EAAc9R,SAAS0C,QAC9C,SAAAhF,GAAE,OAAIA,GAAMiF,KAEd1D,EAAW,gCAAiC,CAC1Cf,OAAQyE,IA7GN,qCAiHNkP,EAAUvY,KAAKyY,GAjHT,waAkEHF,EAAU7Y,OAlEP,qrBAwHV0Y,EAAgB1Y,OAxHN,kCAyHU0Y,GAzHV,8DAyHD/O,EAzHC,QA0HL7F,EAAMQ,WAAWqF,IAAa7F,EAAMQ,WAAWqF,GAASnF,OA1HnD,4DA+HRV,EAAMQ,WAAWqF,IACjB7F,EAAMQ,WAAWqF,GAASnF,OAAQE,KAAO0T,EAAO1T,GAhIxC,wDAqIVyB,QAAQgI,IACN,4CACArK,EAAMQ,WAAWqF,IAEb1F,EAAI,CAAEiB,OAAQyE,EAASgP,YAAa,MAC1CzU,EAAO,GAAU8T,YAAa/T,GAC1BA,EAAE0U,aACJ1S,EAAW,6CAA8C,CACvDV,IAAKtB,EAAE0U,YACPjU,GAAIiF,IAIR+F,EAAIpB,yBAAyB3E,GAlJnB,wJAsJV+O,EAAgB1Y,SAAUwY,EAAYxY,OAtJ5B,sBAuJOoJ,GACjBtF,EAAMO,KACNsT,GACAC,IA1JU,sBAuJLvO,EAvJK,KAuJDZ,EAvJC,MA4JRA,EA5JQ,wBA6JVxC,EAAW,6BAA8B,CAAEV,IAAKkD,IA7JtC,2BAgKZ3E,EAAMwC,cAAgB+C,EAhKV,WAqKZzD,EAAMwS,EAAOrR,SAASc,KAAOjC,EAAM2S,EAAUxR,SAASc,IACtDjC,EAAMwS,EAAOrR,SAASe,KAAOlC,EAAM2S,EAAUxR,SAASe,GAtK1C,sBAyKmBkB,GAC7B,cACAoP,EAAOrR,SACPuR,EAAa9T,OAAS8T,EAAa9T,OAAOE,GAAK,KAC/CZ,EAAMwC,eA7KI,sBAyKL8Q,EAzKK,KA+KRmB,EAAUtC,UAAYmC,EAAOnC,SA/KrB,oBAiLJ,EAAI,CACR1R,OAAQ6T,EAAO1T,GACfwQ,UAAWkC,EACXuB,YAAa,MAEfzU,EAAO,GAAU6T,qBAAsB,GACjB,OAAlB,EAAEY,YAvLI,wBAwLR1S,EACE,wDACA,CAAE,OAAUmS,EAAQ7S,IAAK,EAAEoT,cA1LrB,8BAkMVJ,EAAU3W,OAASwW,EAAOxW,KAlMhB,oBAmMZ0W,EAAapP,KAAKrC,MAAQuR,EAAOxW,KAnMrB,EAoMGyE,EAAYkS,EAAU7T,GAAIZ,EAAMwC,eApMnC,sBAoML4C,EApMK,KAqMPA,EArMO,mDAwMZA,EAAKrC,MAAQuR,EAAOxW,KAxMR,oFA4MlByB,WAAS,sBAMN,GAAU2U,aANJ,SAOLlU,EACAG,GAEA,GAAmB,OAAfH,EAAMO,KAKV,GAAKP,EAAMQ,WAAWL,EAAEiB,QAAxB,CAOA,IAAMV,EAASV,EAAMQ,WAAWL,EAAEiB,QAAQV,OAC1C,GAAKA,EAAL,CAQA,IAAM4F,EAAQ,CAACnG,EAAEiB,QACjB,MAAOkF,EAAMpK,OAAQ,CACnB,IAAM0E,EAAK0F,EAAMC,MACZ3F,IAGL0F,EAAM9J,KAAN,MAAA8J,EAAK,eAAStG,EAAMQ,WAAWI,GAAIwE,KAAKlC,SAASM,KAAI,SAAA4B,GAAI,OAAIA,EAAKxE,eAC3DZ,EAAMQ,WAAWI,IAI1B,IAAMsU,EAAMxU,EAAOwC,SAASiS,WAAU,SAAA/P,GAAI,OAAIA,EAAKxE,KAAOT,EAAEiB,UAC5DV,EAAOwC,SAAS9F,OAAO8X,EAAK,QAnB1B/U,EAAE0U,YAAc,EAAW,uCAAwC,CACjEpU,OAAQN,EAAEiB,cATZjB,EAAE0U,YAAc,EACd,gDACA,CAAEzT,OAAQjB,EAAEiB,OAAQZ,WAAYR,EAAMQ,kBAPxCL,EAAE0U,YAAc,EAAW,sBAAuB,OAX/C,iBAmDN,GAAUd,sBAnDJ,SAmD0B/T,EAAcY,GAC7CZ,EAAM+O,eAAiBnO,KApDlB,iBA4DN,GAAUoT,UA5DJ,SA4DchU,EAAcO,GACjC,GAAY,MAARA,EAIF,OAHAP,EAAMO,KAAO,KACbP,EAAMQ,WAAa,QACnBR,EAAMwC,cAAgB,IAGxBxC,EAAMO,KAAOA,EAGbP,EAAMQ,WAAa6O,GAAiB9O,GAVc,MAahC+E,GAAoB/E,EAAMsT,GAAaC,IAbP,sBAa3CvO,EAb2C,KAavC9D,EAbuC,KAcxC,MAAN8D,GAAqB,MAAP9D,EAIlBzB,EAAMwC,cAAgB+C,EAHpBlD,QAAQV,MAAMF,MA3EX,iBAsFN,GAAUwS,sBAtFJ,SAuFLjU,EACAG,GAOA,IAAMO,EAASV,EAAMQ,WAAWL,EAAEM,QAAQC,OAC1C,GAAe,OAAXA,EAAiB,OACK6B,EAAY7B,EAAOE,GAAIZ,EAAMwC,eADlC,sBACZa,EADY,KAEnB,IAAKA,EAQH,YAPAlD,EAAE0U,YAAc,EACd,mDACA,CACE,YAAanU,EAAOE,GACpB,sBAAuBZ,EAAMwC,iBAMnC,IAAKyJ,EAAS9L,EAAEiR,UAAW/N,EAAcE,QAKvC,YAJApD,EAAE0U,YAAc,EAAW,YAAa,CACtCzD,UAAWjR,EAAEiR,UACb,uBAAwB/N,EAAcE,UAM5CpD,EAAE0U,YAAc7P,EAAehF,EAAO,CACpCS,OAAQN,EAAEM,OACVwC,SAAU9C,EAAEiR,eAxHT,IEjTE,GAAY,CACvBgE,SAAU,WACVC,QAAS,UACTC,QAAS,UACTC,gBAAiB,mBAGbC,GAAe,uBAAS,SAACxV,EAAOzB,GACpCyB,EAAMyV,cAAgBlX,IACrB,KAEGmX,GAAc,uBAAS,SAAC1V,EAAOzB,GACnCyB,EAAM2V,aAAepX,IACpB,KAEGqX,GAAmB,KACnBC,GAAkB,EAEX,GAAQ,CACnB9V,YAAY,EACZC,MAAO,CACL8V,KAAM,EACNC,IAAK,CAAEhS,EAAG,EAAGC,EAAG,GAChByR,cAAe,EACfE,aAAc,CAAE5R,EAAG,EAAGC,EAAG,GACzBgS,WAAY,CAAEjS,EAAG,EAAGC,EAAG,IAEzBzE,WAAS,wBACN,GAAUgW,iBADJ,SACqBvV,EAAcgD,GACxChD,EAAMgW,WAAahT,KAFd,kBAIN,GAAUoS,UAJJ,SAIcpV,EAAciW,GACjC,IAAMC,EAASlW,EAAM8V,KAAO9T,KAAKC,IAAI,EAAGgU,EAAQL,IAC5CM,EAAU,KAIdlW,EAAM8V,KAAOI,EACbV,GAAaxV,EAAOA,EAAM8V,UAXrB,kBAaN,GAAUT,SAbJ,SAaarV,EAAciW,GAChCjW,EAAM+V,IAAMvG,GACV,CAAE/L,KAAM,CAAEM,EAAG,EAAGC,EAAG,GAAKN,GAAI1D,EAAM+V,KAClCjR,GAAemR,EAAOJ,KACtBnS,GACFgS,GAAY1V,EAAOA,EAAM+V,QAlBpB,kBAoBN,GAAUT,SApBJ,SAoBatV,EAAcgM,GAChChM,EAAM+V,IAAM/J,EACZ0J,GAAY1V,EAAOA,EAAM+V,QAtBpB,KC/BE,GAAY,CACvBI,SAAU,YAEC,GAAU,CACrBC,OAAQ,SACRC,QAAS,WAGE,GAAQ,CACnBtW,YAAY,EACZC,MAAO,CACL8I,KAAM,MAERvJ,UAAW,kBACR,GAAU4W,UADJ,SACcnW,EAAc8I,GACjC9I,EAAM8I,KAAOA,KAGjBlJ,SAAO,wBACE,GAAQwW,QADV,YACgD,sJAA5BhW,OAA4B,SAC7C,OACH+H,OACAmO,gBAAgB,IAAI,OAASnO,KAAKoO,oBAHc,gDADhD,kBAOE,GAAQF,SAPV,YAOiD,0JAA5BjW,EAA4B,EAA5BA,OAA4B,SAC9C,OAAS+H,OAAOkO,UAD8B,OAEpDjW,EAAO,GAAU+V,SAAU,MAFyB,gDAPjD,KFxBI,GAAY,CACvBK,cAAe,gBACfC,WAAY,aACZC,WAAY,aACZC,oBAAqB,wBAGvB,SAAKhD,GACH,2BACA,qBACA,qBACA,wCAJF,CAAKA,QAAc,KAOnB,I,MAAMiD,GAAc,CAClBC,UAAW,YACXC,OAAQ,SACRC,OAAQ,SACRC,gBAAiB,mBA2CN,GAAQ,CACnBjX,YAAY,EACZC,MAAO,CACLiX,iBAAkB,GAClBC,gBAAiB,IAEnB3X,WAAS,wBACN,GAAUiX,eADJ,SACmBxW,EAAcmX,GACjCnX,EAAMkX,gBAAgBC,EAAO/V,UAChCpB,EAAMkX,gBAAgBC,EAAO/V,QAAU,IAErCpB,EAAMkX,gBAAgBC,EAAO/V,QAAQwV,GAAYE,QAEnD9W,EAAMkX,gBAAgBC,EAAO/V,QAAQwV,GAAYE,QAAS3E,SACxDgF,EAAOC,YAETpX,EAAMkX,gBAAgBC,EAAO/V,QAAQwV,GAAYC,WAAaM,KAV3D,kBAaN,GAAUV,YAbJ,SAagBzW,EAAcmX,GAC9BnX,EAAMkX,gBAAgBC,EAAO/V,UAChCpB,EAAMkX,gBAAgBC,EAAO/V,QAAU,IAEzCpB,EAAMkX,gBAAgBC,EAAO/V,QAAQwV,GAAYE,QAAUK,KAjBtD,kBAmBN,GAAUT,YAnBJ,SAmBgB1W,EAAcmX,GAEnCnX,EAAMkX,gBAAgBC,EAAO/V,QAAU,GACvCpB,EAAMkX,gBAAgBC,EAAO/V,QAAQwV,GAAYG,QAAUI,KAtBtD,kBAwBN,GAAUR,qBAxBJ,SAwByB3W,EAAcmX,GACvCnX,EAAMkX,gBAAgBC,EAAO/V,UAChCpB,EAAMkX,gBAAgBC,EAAO/V,QAAU,IAEzC,IAAIiW,EAAmBF,EAAOG,YAC1BtX,EAAMkX,gBAAgBC,EAAO/V,QAAQwV,GAAYI,mBACnDK,EAAmBrX,EAAMkX,gBAAgBC,EAAO/V,QAC9CwV,GAAYI,iBACXM,aAELtX,EAAMkX,gBAAgBC,EAAO/V,QAAQwV,GAAYI,iBAAmB,CAClE5V,OAAQ+V,EAAO/V,OACfkW,YAAaD,EACbE,YAAaJ,EAAOI,gBArCjB,IAyCT3X,QAAS,IGxFE,GAAY,CACvB4X,aAAc,eACdC,kBAAmB,oBACnBC,iBAAkB,mBAClBC,iBAAkB,oBAGP,GAAU,CACrBjM,eAAgB,iBAChBkM,eAAgB,iBAChBC,eAAgB,kBAGLC,GAAmB,CAC9B1W,OAAQ,GACR2W,QAAS,IAGX,SAASC,GACPC,EACA7W,GAEK6W,EAAa7W,KAChB6W,EAAa7W,GAAUc,EAAM4V,IAC7BG,EAAa7W,GAAQA,OAASA,GAI3B,IAAM8W,GAAmB,CAC9B9W,OAAQ,GACR+W,QAAS,IAGX,SAASC,GACPC,EACAjX,GAEKiX,EAAiBjX,KACpBiX,EAAiBjX,GAAUc,EAAMgW,IACjCG,EAAiBjX,GAAQA,OAASA,GAI/B,I,MAAM,GAAQ,CACnBrB,YAAY,EACZC,MAAO,CACLiY,aAAc,GACdI,iBAAkB,IAEpBzY,SAAO,wBACJ,GAAQ8L,gBADJ,WAGHtK,GAAc,IADZpB,EACY,EADZA,MAGF,OAAOA,EAAMiY,aAAa7W,MALvB,kBAcE,GAAQyW,gBAdV,WAgBH1X,GAAsC,4JADpCC,EACoC,EADpCA,OAAQC,EAC4B,EAD5BA,UAILA,EAAUyI,KAAKA,OAAQzI,EAAUyI,KAAKA,KAAKwP,YAHV,yCAI7B,MAJ6B,uBAQpB1M,EAAIhF,iBAAJ,0CACFvG,EAAUyI,KAAKA,KAAKE,IADlB,oBACiC7I,EAAEiB,OADnC,WACqDjB,EAAEiB,QADvD,qCAEFf,EAAUyI,KAAKA,KAAKE,IAFlB,oBAEiC7I,EAAEiB,OAFnC,YAEsDjB,EAAEgY,SAFxD,IARoB,UAQhC1W,EARgC,QAYlCA,EAZkC,yCAa7BA,GAb6B,cAiBtCrB,EAAO,GAAD,OAAI,GAAUuX,kBAAoBxX,GAjBF,kBAmB/B,MAnB+B,iDAhBnC,kBA4CE,GAAQyX,gBA5CV,WA8CHzX,GAAsC,8JADpCC,EACoC,EADpCA,OACoC,EAD5BJ,MAIVI,EAAO,GAAD,OAAI,GAAUsX,kBAAoBvX,GAHF,SAMpByL,EAAIhF,iBAAJ,6CACCzG,EAAEiB,OADH,WACqBjB,EAAEiB,QADvB,wCAECjB,EAAEiB,OAFH,YAEsBjB,EAAE4X,SAFxB,IANoB,UAMhCtW,EANgC,QAUlCA,EAVkC,yCAW7BA,GAX6B,gCAc/B,MAd+B,gDA9CnC,IA+DPlC,WAAS,wBAMN,GAAUiY,cANJ,SAOLxX,EACAiY,GAEAjY,EAAMiY,aAAeA,KAVhB,kBAkBN,GAAUR,mBAlBJ,SAmBLzX,EACAqY,GAEArY,EAAMqY,iBAAmBA,KAtBpB,kBA8BN,GAAUX,kBA9BJ,SA+BL1X,EACAG,GAEA6X,GAAwBhY,EAAMiY,aAAc9X,EAAEiB,QAC9CpB,EAAMiY,aAAa9X,EAAEiB,QAAQ2W,QAAU5X,EAAE4X,WAnCpC,kBA2CN,GAAUJ,kBA3CJ,SA4CL3X,EACAG,GAEAiY,GAAwBpY,EAAMqY,iBAAkBlY,EAAEiB,QAClDpB,EAAMqY,iBAAiBlY,EAAEiB,QAAQ+W,QAAUhY,EAAEgY,WAhDxC,KClHJ,SAAeI,GAAtB,mC,gEAAO,WAAuBzP,GAAvB,uHACoB8C,EAAIzC,OAAOL,GAD/B,yCACEtF,EADF,KACO/B,EADP,MAEO,OAAR+B,GAAgB/B,IAClBU,EAAW,oCAAqC,CAAEV,QAH/C,EAMmB0E,EAAmB3C,GANtC,sBAMEjD,EANF,KAMQiY,EANR,KAOW,OAAZA,EAPC,0CAQI,CAAC,KAAMA,IARX,QAaL,IAAW5X,KAHX,GAAMR,OAAN,eAAqB,GAAc4T,UAAYzT,GAG9BiD,EACfoI,EAAI5B,uBAAuBpJ,GAAI,SAAC0T,GAAD,OAAoB,GAAMC,SAAN,eAAuB,GAAYJ,qBAAuBG,MAd1G,4C,yBAkBA,SAAemE,GAAtB,mC,gEAAO,WAAyB3P,GAAzB,iHACmB8C,EAAIxC,QAAQN,GAD/B,yCACA7I,EADA,KACMwB,EADN,MAEO,MAARxB,GAAgBwB,IAClBY,QAAQV,MAAMF,IAGZqH,GAAS7I,EANR,kCAOiB2L,EAAIxC,QAAQ,MAP7B,uCAOFnJ,EAPE,KAOIwB,EAPJ,MAQS,MAARxB,GAAgBwB,KAClBY,QAAQV,MAAMF,GACdxB,EAAO,IAVN,QAcL,GAAMG,OAAN,cAAoB,EAAaZ,UAAYS,GAdxC,4C,yBAiBA,SAAeyY,GAAtB,mC,gEAAO,WAAiC5P,GAAjC,mHAC4B8C,EAAIhC,iBAAiBd,GADjD,yCACA3H,EADA,KACeM,EADf,MAEgB,MAAjBN,GAAyBM,KAC3BY,QAAQV,MAAMF,GACdN,EAAgB,KAGd2H,GAAS3H,EAPR,kCAQ0ByK,EAAIhC,iBAAiB,MAR/C,uCAQFzI,EARE,KAQaM,EARb,MASkB,MAAjBN,GAAyBM,KAC3BY,QAAQV,MAAMF,GACdN,EAAgB,IAXf,QAgBL,IAAWP,KAAMO,EACfyK,EAAIrB,gCACF3J,GACA,SAACQ,EAAQC,GACP,OAAO,GAAMjB,OAAN,uBACW,EAAsBc,sBACtC,CAACE,OAAOA,EAAQC,gBAAiBA,OAKzC,GAAMjB,OAAN,uBACkB,EAAsBa,mBACtCE,GA7BG,4C,yBAqCA,SAAewX,GAAtB,mC,gEAAO,WAAgC7P,GAAhC,yHAE4B8C,EAAIF,iBAFhC,yCAEEkN,EAFF,KAEenX,EAFf,KAGc,MAAfmX,IAAuBnX,EAHtB,uBAIHU,EAAW,0BAA2B,CAAEV,QAJrC,0BASL,IAAWzF,KADLic,EAA4C,GAClCW,EACdX,EAAajc,GAAK,CAChBoF,OAAQwX,EAAY5c,GAAGoF,OACvB2W,QAASa,EAAY5c,GAAG+b,SAG1BnM,EAAItB,2BAA2B2N,EAAajc,GAAGoF,QAAQ,SAACjB,GAAD,OAA6C,GAAMC,OAAN,sBACjF,GAAqBsX,kBACpCvX,MAjBD,GAsBL,GAAMC,OAAN,sBACiB,GAAqBoX,cACpCS,IAGEnP,EA3BC,kCA4B+B8C,EAAIL,gBAAgBzC,GA5BnD,0CA4BI+P,EA5BJ,KA4BkB,EA5BlB,MA6BC,EA7BD,wBA8BD1W,EAAW,2BAA4B,CAAEV,IAAA,EAAKqH,SA9B7C,8BAiCkB,OAAjB+P,EAjCD,mDAsCH,GAAMzY,OAAN,sBACiB,GAAqBqX,mBACpCoB,GAxCC,4C,yBA6CA,SAAeC,GAAtB,mC,gEAAO,WAAwBhQ,GAAxB,iGACCyP,GAAQzP,GADT,uBAEC2P,GAAU3P,GAFX,uBAGC4P,GAAkB5P,GAHnB,uBAIC6P,GAAiB7P,GAJlB,2C,yBClEA,IAAM,GAAU,CACrBiQ,KAAM,OACNC,mBAAoB,qBACpBC,WAAY,aACZC,aAAc,eACdC,WAAY,aACZC,YAAa,cACbjP,kBAAmB,oBAGnBkP,mBAAoB,sBAGT,GAAY,CACvBC,cAAe,gBACfC,wBAAyB,2BAGrBC,GAAuB,uBAC3B,SACEpY,EACAgQ,EACAe,EACA3P,GACE,MACgC0C,GAChC,YACAkM,EACAe,EACA3P,GALA,sBACKiX,EADL,KAQF7N,EAAIjF,OAAJ,gCAAqBvF,EAArB,aAAyCqY,MAE3C,KAGW,GAAkCpb,SAElC,GAAQ,eAAmB,CACtC2B,MAAO,CACL0Z,YAAY,EACZC,kBAAmB,IAErBpa,WAAS,wBACN,GAAU+Z,eADJ,SACmBtZ,EAAc4I,GACtC5I,EAAM0Z,WAAa9Q,KAFd,kBAIN,GAAU2Q,yBAJJ,SAI6BvZ,EAAc4I,GAChD5I,EAAM2Z,kBAAoB/Q,KALrB,IAQThJ,SAAO,wBAOE,GAAQyZ,oBAPV,WASHO,GAmBC,mJApBCrF,EAoBD,EApBCA,SAoBD,EApBWvU,MAsBZ4Z,EAAQC,QAAQ,CACdvY,QAAS,2CACTwY,OAAQ,SACRC,YAAa,cACbC,YAAa,4BACbC,OAAQ,WAAF,8CAAE,8GACA1F,EAAS,QAAD,OAAS,GAAY6B,SAD7B,2CAAF,qDAAE,GAGR8D,OAAQ,eAVT,gDA5BE,kBAkDJ,GAAQd,aAlDJ,WAoDHxQ,GAAY,IADVxI,EACU,EADVA,OAAQJ,EACE,EADFA,MAGVI,EAAO,GAAUkZ,cAAe1Q,GAC3BA,IACH5I,EAAM2Z,kBAAkB5T,SAAQ,SAAAnF,GAAE,OAChCgL,EAAIhB,oBAAoB,OAAShK,MAEnCR,EAAO,GAAUmZ,wBAAyB,QA3DzC,kBAmEE,GAAQR,MAnEV,YAmE8C,mJAA5B3Y,EAA4B,EAA5BA,OACrBwL,EAAIzE,eACJ,OAASgB,OAAOgS,oBAAmB,SAAArR,GAC7BA,IAASA,EAAKwP,aAChBlY,EAAO,QAAD,OAAS,GAAc+V,UAAYrN,GACzCgQ,GAAShQ,KAET1I,EAAO,QAAD,OAAS,GAAc+V,UAAY,MACzC2C,GAAS,UARoC,gDAnE9C,kBAsFE,GAAQG,YAtFV,WAwFH9Y,GAGC,4LAJCC,EAID,EAJCA,OAAQJ,EAIT,EAJSA,MAMJU,EAASV,EAAMO,KAAKC,WAAWL,EAAEgS,UAAU/M,KAFhD,EAGsCjC,EACrCzC,EACAV,EAAMO,KAAKiC,eACX,GAND,sBAGM4O,EAHN,KAGiBgJ,EAHjB,KAG8B3V,EAH9B,KAQY,OAATA,EARH,uBASCtC,EAAW,2BAA4B,CACrCV,IAAKgD,EACL/D,SACA,2BAA4BV,EAAMO,KAAKiC,gBAZ1C,+BAiBkC0C,GACjC,YACAkM,EACAjR,EAAEgS,SACFnS,EAAMO,KAAKiC,eArBZ,sBAiBM2C,EAjBN,KAiB0BR,EAjB1B,MAuBGA,EAvBH,wBAwBCxC,EAAW,uCAAwC,CACjDV,IAAKkD,EACLjE,SACA,2BAA4BV,EAAMO,KAAKiC,gBA3B1C,kCA+BK4C,EAAOtC,EAAc3C,EAAE4C,MAAOoC,GAC9BkV,EAAY,CAChBzZ,GAAIwE,EAAKxE,GACTuR,SAAUhS,EAAEgS,SACZrU,KAAMqC,EAAE4C,MACRG,SAAU,GACVD,SAAUkC,GAENmV,EAAS1O,EAAIX,cAvClB,oCAyCSoP,EAAUzZ,IAAOyZ,GAzC1B,+BA0CSA,EAAUlI,SA1CnB,qBA0CwCmI,GAAWD,EAAUzZ,IAFxD2Z,EAxCL,EA6CGH,IAAa,EACmBlV,GAChC,YACAkV,EAAYnX,SACZ9C,EAAEgS,SACFnS,EAAMO,KAAKiC,eALE,sBACRgY,EADQ,KAOfD,EAAU,OAAD,OAAQH,EAAYxZ,GAApB,cAAqC4Z,GApD/C,UAuDK5O,EAAIjF,OAAO4T,GAvDhB,QAyDDna,EAAO,WAAD,OAAY,GAAiBqW,YAAc,CAC/CrV,OAAQgE,EAAKxE,GACbuR,SAAUhS,EAAEgS,WA3Db,iDA3FE,kBAgKE,GAAQ+G,cAhKV,WAkKH/Y,GAGC,4LAJCC,EAID,EAJCA,OAAQJ,EAIT,EAJSA,MAUJya,EAAYza,EAAMO,KAAKC,WAAWL,EAAEiB,QAAQV,OAC5Cga,EAAY1a,EAAMO,KAAKC,WAAWL,EAAEgS,UAAU/M,KAPnD,EAQsCjC,EACrCuX,EACA1a,EAAMO,KAAKiC,eACX,GAXD,sBAQM4O,EARN,KAQiBgJ,EARjB,KAQ8B3V,EAR9B,MAaGA,EAbH,uBAcCtC,EAAW,wCAAyC,CAAEV,IAAKgD,IAd5D,+BAiBuCS,GACtC,YACAkM,EACAjR,EAAEgS,SACFnS,EAAMO,KAAKiC,eArBZ,sBAiBMiX,EAjBN,KAiB+B9U,EAjB/B,MAuBGA,EAvBH,wBAwBCxC,EAAW,yCAA0C,CACnDV,IAAKkD,EACLjE,cACA,2BAA4BV,EAAMO,KAAKiC,gBA3B1C,kCAgCK8X,EAAS1O,EAAIX,cAhClB,UAkCoBW,EAAIN,eAAemP,EAAW7Z,GAAIT,EAAEiB,QAlCxD,eAkCKuZ,EAlCL,2CAoCSxa,EAAEiB,OApCX,aAoC+BsZ,EAAW9Z,IApC1C,+BAqCS6Z,EAAW7Z,GArCpB,qBAqCmC+Z,GAAW,MArC9C,+BAsCSD,EAAW9Z,GAtCpB,qBAsCmC0Z,GAAWna,EAAEiB,QAtChD,+BAuCSjB,EAAEiB,OAvCX,aAuC+BqY,GAJ1Bc,EAnCL,EAyCGH,IAAa,EACmBlV,GAChC,YACAkV,EAAYnX,SACZ9C,EAAEgS,SACFnS,EAAMO,KAAKiC,eALE,sBACRgY,EADQ,KAOfD,EAAU,OAAD,OAAQH,EAAYxZ,GAApB,cAAqC4Z,GAhD/C,UAkDK5O,EAAIjF,OAAO4T,GAlDhB,QAoDDna,EAAO,WAAD,OAAY,GAAiBoW,eAAiB,CAClDpV,OAAQjB,EAAEiB,OACV+Q,SAAUhS,EAAEgS,WAtDb,iDArKE,kBAqOE,GAAQgH,YArOV,WAuOH/X,GAAc,4KADZhB,EACY,EADZA,OAAQJ,EACI,EADJA,MAGJU,EAASV,EAAMO,KAAKC,WAAWY,GAAQV,OACxCA,EAHS,wDAMRyR,EAAWzR,EAAOE,GANV,SAOMgL,EAAIb,QAAQ3J,GAPlB,OAORgE,EAPQ,OASRwV,EAAgBxV,EAAKlC,SACrB2X,EAAmB,GAVX,aAWPD,EAAc1e,OAAS,GAXhB,oBAYN0E,EAAKga,EAAcrU,MACpBvG,EAAMO,KAAKC,WAAWI,IAASZ,EAAMO,KAAKC,WAAWI,GAAKwE,MAASpF,EAAMO,KAAKC,WAAWI,GAAKF,OAbvF,wDAgBZma,EAAiBja,GAAO,CACtBA,GAAIA,EACJuR,SAAUnS,EAAMO,KAAKC,WAAWI,GAAKF,OAAQE,GAC7C9C,KAAMkC,EAAMO,KAAKC,WAAWI,GAAKwE,KAAKrC,MACtCG,SAAUlD,EAAMO,KAAKC,WAAWI,GAAKwE,KAAKlC,SAASM,KAAI,SAAC4B,GAAD,OAAQA,EAAKxE,MACpEqC,SAAUjD,EAAMO,KAAKC,WAAWI,GAAKwE,KAAKnC,UAE5C2X,EAAcpe,KAAd,MAAAoe,EAAa,eAAS5a,EAAMO,KAAKC,WAAWI,GAAKwE,KAAKlC,SAASM,KAAI,SAAC4B,GAAD,OAAQA,EAAKxE,QAvBpE,yCA0BOgL,EAAIN,eAAe5K,EAAOE,GAAIQ,GA1BrC,eA0BRuZ,EA1BQ,iBA2BR/O,EAAIjF,QAAJ,sCACMvF,GAAWgE,GADjB,+BAEI1E,EAAOE,GAFX,qBAE0B+Z,GAAW,MAFrC,+BAGIvZ,GAAW,MAHf,IA3BQ,QAkCd,IAAW,KADL0Z,EAAsB,GACXD,EACfC,EAAoB,SAAD,OAAU,IAAQD,EAAiB,GACtDC,EAAoB,OAAD,OAAQ,IAAQ,KApCvB,iBAsCRlP,EAAIjF,OAAOmU,GAtCH,QAwCd1a,EAAO,WAAD,OAAY,GAAiBsW,YAAc,CAC/CqE,aAAc5I,EACd/Q,OAAQA,IA1CI,iDAvOX,kBA2RJ,GAAQ4X,oBA3RJ,WA6RH7Y,GAAmC,IADjCC,EACiC,EADjCA,OAAQJ,EACyB,EADzBA,MAGV,GAAKA,EAAM0Z,WAAX,CAFmC,MAKjBnX,EAAYpC,EAAEM,OAAQT,EAAMO,KAAKiC,eALhB,sBAK5BwY,EAL4B,KAMnC,IAAKA,EACH,OAAO,EAAW,4CAA6C,CAC7D,WAAY7a,EAAEM,OACd,sBAAuBT,EAAMO,KAAKiC,gBAGtC,IAAM4O,EAAY5B,GAChB,CAAE/L,KAAM,CAAEM,EAAG,EAAGC,EAAG,GAAKN,GAAIsX,EAAQhY,QACpC,CAAES,KAAM,CAAEM,EAAG,EAAGC,EAAG,GAAKN,GAAIvD,EAAE8V,QAC9BvS,GAEIuX,EAAO,CAAExa,OAAQN,EAAEM,OAAQ2Q,YAAWyD,YAAa,MACzDzU,EAAO,QAAD,OAAS,GAAc6T,sBAAwBgH,GAC5B,OAArBA,EAAKpG,cACPzU,EAAO,WAAD,OAAY,GAAiBuW,qBAAuB,CACxDvV,OAAQjB,EAAEM,OACV6W,YAAa0D,EAAQhY,OACrBuU,YAAanG,IAIfoI,GACErZ,EAAEM,OACF2Q,EACApR,EAAMO,KAAKC,WAAWL,EAAEM,QAAQC,OAAQE,GACxCZ,EAAMO,KAAKiC,oBA5TZ,IAiUP/F,QAAS,CACPye,IAAK,EACLC,aAAc,EACd5a,KAAM,GACNuI,KAAM,GACNsS,QAAS,GACTC,QAAS,GACTzC,YAAa,MAKX,SAAU0C,KACd,OAAO,eAAa,ICtcP,sBAAgB,CAC7BC,MAD6B,WAE3B,IAAMC,EAAQF,KACdE,EAAMjH,SAAS,GAAQwE,SCH3B,GAAO0C,OAASA,EAED,U,sECHb,0D,GAAA,eAAoB,SAAb7a,GAAG,SAAO,S,GACjB,eAAuB,SAAhBA,GAAG,YAAU,S,gFADpB,GACA,GACA,eAAqC,UAA5B,QAAK,8BAAE,EAAA8a,OAAA,EAAAA,MAAA,sBAAO,U,ICGV,sBAAgB,CAC7B5d,KAAM,gBAENyd,MAH6B,WAIbD,KAEd,MAAO,CACLI,MAAO,WAAF,8CAAE,6GACCC,EAAUC,SAASC,eAAe,SAClCC,EAAaF,SAASC,eAC1B,YAHG,SAKC,OACH1T,OACA4T,2BAA2BJ,EAAQpd,MAAOud,EAAWvd,OAPnD,2CAAF,qDAAE,OCXb,GAAOkd,OAAS,GAED,U,8NCJb,eAA+B,GAC/B,eAAgC,GAAzBxY,SAAS,gBAChB,eAAuD,GAAzC+Y,MAAO,EAAAtC,cAAgB,EAAA3K,gB,iBACrC,eAIE,GAHCkN,eAAgB,EAAAA,eAChB,yBAA2B,EAAAC,wBAC3B,0BAA4B,EAAAC,0B,kFAE/B,eAYE,GAXCC,OAAQ,EAAAC,yBACRC,QAAS,EAAAA,QACTvN,eAAgB,EAAAA,eAChBE,4BAA6B,EAAAA,4BAC7BsN,YAAW,EAAAC,SACX,gBAAgB,EAAAC,aAChB,aAAa,EAAAC,WACb,YAAY,EAAAC,UACZ,aAAa,EAAAC,WACb,qBAAqB,EAAAC,YACrB,QAAO,EAAA/G,M,iVCnBV,eA+BM,OA/BDgH,MAAM,6BAA8BR,QAAS,EAAAA,QAAU1b,GAAI,EAAAmc,MAAOC,MAAA,yB,qBACrE,eAeE,2BAdyB,EAAAZ,QAAM,SAAvB1Z,EAAO3B,G,wBADjB,eAeE,GAbClC,IAAKkC,EACLkc,YAAWva,EACXwa,eAAc,EAAAC,YAAYpc,GAC1Bqc,aAAY,EAAAC,UAAUtc,GACtBuc,YAAW,EAAAC,SAASxc,GACpByc,eAAc,EAAAC,YAAY1c,GAC1BgO,eAAgB,EAAAA,eAChBE,4BAA6B,EAAAA,4BAC7ByO,SAAQ,EAAAX,MACR,gBAAgB,EAAAY,aAChB,aAAa,EAAAjB,WACb,YAAY,EAAAC,UACZ,aAAa,EAAAC,Y,4MAEhB,eAME,GALG7N,eAAgB,EAAAA,eAChB6O,gBAAiB,EAAAA,gBACjB,aAAa,EAAAlB,WACb,YAAY,EAAAC,UACZ,aAAa,EAAAC,Y,yFAElB,eAME,GALCJ,SAAU,EAAAA,SACVzN,eAAgB,EAAAA,eAChB,aAAa,EAAA2N,WACb,YAAY,EAAAC,UACZ,aAAa,EAAAC,Y,+PC7BlB,eAWE,2BAVuB,EAAAiB,UAAQ,SAAvB7C,EAAShf,G,wBADnB,eAWE,WATC6C,IAAK7C,EACL8hB,OAAQ,EAAAX,YACRY,KAAM,EAAAjP,YAAY,EAAAC,eAAgBiM,EAAQpa,GAAI,EAAAqO,6BAC9C+O,eAAqB,qBAAmB,iBAAgB,EAAQ,GAAI,+BAGrEC,eAAa,IACZC,OAAQ,EAAA/O,cAAc6L,EAAQzX,QAC/B4a,iBAAe,Q,+EAajB,eAoBO,2BAnBe,EAAAN,UAAQ,SAAnB7C,GAAO,Q,wBADlB,eAoBO,QAlBFpa,GAAE,UAAK,EAAAwd,cAAL,OAAoBpD,EAAQpa,IAC9B/B,IAAKmc,EAAQpa,GACdyd,cAAY,SACXf,YAAW,EAAAC,SACXe,cAAa,EAAAvP,gBAAkB,EAAAA,gBAAkBiM,EAAQpa,GAAE,gBAC3Dmd,KAAO,EAAAhP,gBAAkB,EAAAA,gBAAkBiM,EAAQpa,KAAQ,YAAAqO,mCAAA,eAA6B/S,QAAM,IAAqD,IAA/C,YAAA+S,mCAAA,eAA6BjO,QAAQga,EAAQpa,KAAE,UAAuB,EAAAyc,UAC1KW,eAAc,EAAAP,YACfc,MAAM,Q,qBAER,eAQQ,2BAPgB,EAAAC,WAAWxD,EAAQjY,MAAK,cAApC0b,EAAMziB,G,wBADlB,eAQQ,SANH6C,IAAK7C,EACL+H,EAAG,EAAA2a,SAAS1D,EAAQpa,IAAM,EAAA8d,SAAS1D,EAAQpa,IAAIqC,SAASc,EAAC,EACzDC,EAAG,EAAA0a,SAAS1D,EAAQpa,IAAM,EAAA8d,SAAS1D,EAAQpa,IAAIqC,SAASe,EAAIhI,EAAE,EAAAuhB,SAAQ,EACvEoB,qBAAmB,W,eAElBF,GAAI,gB,8FAIX,eAgBE,2BAfkB,EAAAZ,UAAQ,SAAnB7C,G,wBADT,eAgBE,QAdCnc,IAAKmc,EAAQpa,GACbmD,EAAG,EAAA2a,SAAS1D,EAAQpa,IAAM,EAAA8d,SAAS1D,EAAQpa,IAAIqC,SAASc,EAAC,EACzDC,EAAG,EAAA0a,SAAS1D,EAAQpa,IAAM,EAAA8d,SAAS1D,EAAQpa,IAAIqC,SAASe,EAAC,EACzD4a,MAAO,EAAAF,SAAS1D,EAAQpa,IAAM,EAAA8d,SAAS1D,EAAQpa,IAAIqN,KAAK2Q,MAAK,EAC7DC,OAAQ,EAAAH,SAAS1D,EAAQpa,IAAM,EAAA8d,SAAS1D,EAAQpa,IAAIqN,KAAK4Q,OAAM,EAChEd,KAAK,cACLE,eAAa,IACZ,YAAS,mBAAE,EAAAtB,UAAU3B,EAAQpa,KAC7B,aAAU,mBAAE,EAAAgc,WAAW5B,EAAQpa,KAC/B,QAAK,mBAAE,EAAA8b,WAAW1B,EAAQpa,KAC1B,YAAS,mBAAE,EAAAke,eAAe9D,EAAQpa,KACnCkd,OAAO,OACPiB,OAAO,UACPZ,iBAAe,Q,0GClCNa,GAAoB,SAC/BC,EACAC,EACAC,GAEIA,EAAc1e,SAChB0e,EAAcC,WAAY,EAC1BH,EAAK,iBAAkB,CACrBxe,OAAQ0e,EAAc1e,OACtBwV,MAAO,CACLlS,EAAGmb,EAAMG,UACTrb,EAAGkb,EAAMI,eAMJC,GAAkB,SAACN,EAAcE,GACxCA,EAAc1e,SACZ0e,EAAcC,WAChBH,EAAK,aAAc,CAAEre,GAAIue,EAAc1e,SAEzC0e,EAAcC,WAAY,EAC1BD,EAAc1e,OAAS,OAId+e,GAAiB,SAC5BC,GAEA,IAAMf,EAAqC,GAC3C,IAAK,IAAM1iB,KAAKyjB,EAAO,CACrB,IAAMra,EAAOqa,EAAMzjB,GACnB0iB,EAAStZ,EAAKxE,IAAM,CAClBqC,SAAUmC,EAAKpC,OACfiL,KAAM,CACJ2Q,MAAO,EACPC,OAAQ,IAKd,OAAOH,GAGH,GAAiB,SACrBgB,EACAzc,EACA4a,EACAa,GAGA,gBAAS,WAEP,IAAK,IAAM1iB,KAAK0iB,SACPA,EAAS1iB,GAGlB,IAAK,IAAM,KAAK6hB,EAAU,CACxB,IAAMzY,EAAOyY,EAAS,GAChB8B,EAAM/D,SAASC,eAAT,UAA2B6D,GAA3B,OAA2Cta,EAAKxE,KACjD,MAAP+e,IAGY,UAAZ1c,EACFyb,EAAStZ,EAAKxE,IAAM,CAClBqC,SAAU,CACRc,EAAGqB,EAAKpC,OAAOe,EAAI4b,EAAIC,wBAAwBhB,MAAQ,EACvD5a,EAAGoB,EAAKpC,OAAOgB,EAAI2b,EAAIC,wBAAwBf,OAAS,GAE1D5Q,KAAM,CACJ2Q,MAAOe,EAAIC,wBAAwBhB,MACnCC,OAAQc,EAAIC,wBAAwBf,SAGnB,QAAZ5b,IACTyb,EAAStZ,EAAKxE,IAAM,CAClBqC,SAAU,CACRc,EAAGqB,EAAKpC,OAAOe,EAAI4b,EAAIC,wBAAwBhB,MAC/C5a,EAAGoB,EAAKpC,OAAOgB,EAAI2b,EAAIC,wBAAwBf,OAAS,GAE1D5Q,KAAM,CACJ2Q,MAAOe,EAAIC,wBAAwBhB,MACnCC,OAAQc,EAAIC,wBAAwBf,gBAQnC,GAAgB,SAC3Ba,EACAzc,EACA4a,GAEA,IAAMa,EAAW,eAAIc,GAAe3B,EAAStf,QAY7C,OARA,eACEsf,GACA,SAAAgC,GAAG,OAAI,GAAeH,EAAezc,EAAU4c,EAAKnB,EAASngB,SAC7D,CACEuhB,WAAW,IAIRpB,G,oBCvIH,SAAUF,GAAWuB,EAAcC,GACvC,GAAIA,GAAc,EAChB,MAAO,GAET,GAAY,IAARD,EACF,MAAO,GAET,IAAME,EAAQF,EAAKG,MAAM,KACnBC,EAAkB,GACpBC,EAAqB,GACzB,MAAOH,EAAM/jB,OACX,GAAIkkB,EAAShR,KAAK,KAAKlT,OAAS8jB,EAAY,CAC1C,IAAMK,EAAqB,GACvBD,EAASlkB,OAAS,GACpBmkB,EAAS7jB,KAAK4jB,EAAS7Z,OAEzB4Z,EAAM3jB,KAAK4jB,EAAShR,KAAK,MACzBgR,EAAWC,OAEXD,EAAS5jB,KAAKyjB,EAAMtjB,SAIxB,GAAIyjB,EAAShR,KAAK,KAAKlT,OAAS8jB,EAAY,CAC1C,IAAM,EAAqB,GACvBI,EAASlkB,OAAS,GACpB,EAASM,KAAK4jB,EAAS7Z,OAEzB4Z,EAAM3jB,KAAK4jB,EAAShR,KAAK,MACzBgR,EAAW,EAKb,OAHIA,EAASlkB,QACXikB,EAAM3jB,KAAK4jB,EAAShR,KAAK,MAEpB+Q,ECjBT,IAAM/B,GAAe,SAEN,kBAAgB,CAC7BtgB,KAAM,WACNwiB,MAAO,CACL,aACA,cACA,cACA,aACA,kBAEFC,MAAO,CACLC,MAAO,CACLtO,KAAMuO,OACNC,UAAU,GAEZ7C,SAAU,CACR3L,KAAM/V,OACNukB,UAAU,GAEZvD,YAAa,CACXjL,KAAMuO,OACNC,UAAU,GAEZnD,SAAU,CACRrL,KAAMvP,OACN+d,UAAU,GAEZrD,UAAW,CACTnL,KAAMuO,OACNC,UAAU,GAEZjD,YAAa,CACXvL,KAAMvP,OACN+d,UAAU,GAEZ3R,eAAgB,CACdmD,KAAMuO,OACNE,UAAW,SAACC,GAAD,MACO,kBAATA,GAA8B,OAATA,GAC9BF,UAAU,GAEZzR,4BAA6B9S,QAG/Bof,MA3C6B,SA2CvBgF,EAAOM,GACX,IAAMhD,EAAW,eAAM0C,EAAO,YAExB7B,EAAW,GAAcN,GAAc,SAAUP,GAKjDiD,EAAoC,CACxCrgB,OAAQ,KACR2e,WAAW,GAEP2B,EAAY,SAAC7B,GAAD,OAChBF,GAAkB6B,EAAI5B,KAAMC,EAAO4B,IAC/BE,EAAU,kBAAMzB,GAAgBsB,EAAI5B,KAAM6B,IAoBhD,OAnBA,gBAAU,WACR,IAAMtd,EAAMoY,SAASC,eAAe0E,EAAMC,OACrChd,GAILA,EAAIyd,iBAAiB,YAAaF,GAClCvd,EAAIyd,iBAAiB,UAAWD,IAJ9B7e,EAAW,sDAAuD,OAMtE,gBAAY,WACV,IAAMqB,EAAMoY,SAASC,eAAe0E,EAAMC,OACrChd,GAILA,EAAI0d,oBAAoB,YAAaH,GACrCvd,EAAI0d,oBAAoB,UAAWF,IAJjC7e,EAAW,sDAAuD,OAO/D,CACLic,gBACAM,WACAhC,WAAY,SAACtb,GACXyf,EAAI5B,KAAK,cAAe,CACtBre,GAAIQ,KAGRub,UAAW,SAACvb,GACVyf,EAAI5B,KAAK,aAAc,CACrBre,GAAIQ,KAGRwb,WAAY,SAACxb,GACXyf,EAAI5B,KAAK,cAAe,CACtBre,GAAIQ,KAGR0d,eAAgB,SAACle,GACfkgB,EAAmBrgB,OAASG,EAC5BkgB,EAAmB1B,WAAY,KAKrC+B,QAAS,CACP3C,cACArP,cAAeA,GACfL,YAAaA,GACbI,mBAAoBA,M,UCxHxB,GAAOuM,OAAS,GAChB,GAAO2F,UAAY,kBAEJ,UCNTC,GAAc,CAClB1W,IAAI,GAGA2W,GAAY,WAChBD,GAAY1W,IAAK,GAEb,GAAU,WACd0W,GAAY1W,IAAK,GAGb,GAAY,SAChBsU,EACA1P,GAEK8R,GAAY1W,IAGjBsU,EAAK,sBAAuB1P,IAGf,IACb+R,aACAN,QAAA,GACAD,UAAA,I,kKCfA,eAME,2BALe,EAAAQ,iBAAe,SAAvBnc,G,wBADT,eAME,GAJCvG,IAAKuG,EAAKxE,GACVmD,EAAGqB,EAAKpC,OAAOe,EACfC,EAAGoB,EAAKpC,OAAOgB,EAChBwd,MAAM,Q,+CAER,eAcE,2BAbe,EAAAD,iBAAe,SAAvBnc,G,wBADT,eAcE,GAZC2a,KAAM3a,EAAKrC,MACXnC,GAAE,UAAK,EAAAwd,cAAL,OAAoBhZ,EAAKxE,IAC3B/B,IAAKuG,EAAKxE,GACV6gB,cAAc,EACd1d,EAAG,EAAA2d,QAAQtc,EAAKxE,IAAImD,EACpBC,EAAG,EAAA0d,QAAQtc,EAAKxE,IAAIoD,EACpB2d,cAAa,EACbC,oBAAmB,GACpBvD,cAAY,SACXf,YAAW,EACZgB,cAAY,SACZkD,MAAM,Q,2DAER,eAcE,2BAbe,EAAAhF,UAAQ,SAAhBpX,G,wBADT,eAcE,QAZCvG,IAAKuG,EAAKxE,GACVmD,EAAG,EAAA2d,QAAQtc,EAAKxE,IAAImD,EACpBC,EAAG,EAAA0d,QAAQtc,EAAKxE,IAAIoD,EACpB4a,MAAO,EAAAF,SAAStZ,EAAKxE,IAAM,EAAA8d,SAAStZ,EAAKxE,IAAIqN,KAAK2Q,MAAK,EACvDC,OAAQ,EAAAH,SAAStZ,EAAKxE,IAAM,EAAA8d,SAAStZ,EAAKxE,IAAIqN,KAAK4Q,OAAM,EAC1DE,OAAO,UACPhB,KAAK,cACJ,QAAK,mBAAE,EAAA8D,cAAczc,EAAKxE,KAC1B,YAAS,mBAAE,EAAA+b,UAAUvX,EAAKxE,KAC1B,aAAU,mBAAE,EAAAgc,WAAWxX,EAAKxE,KAC7Bqd,eAAa,IACbH,OAAO,Q,0IC7CT,eAOI,KAPAgE,UAAS,oBAAe,EAAA/d,EAAI,EAAAge,MAAK,EAAxB,YAAgC,EAAA/d,EAAI,EAAAge,OAApC,uB,CACX,eAKE,QAJCjE,KAAI,UAAK,EAAAyD,OACV3jB,EAAE,6T,mCCDD,IAAMkkB,GAAQ,GACRC,GAAS,GAEP,kBAAgB,CAC7BlkB,KAAM,YACNyiB,MAAO,CACLxc,EAAG,CACDmO,KAAMvP,OACN+d,UAAU,GAEZ1c,EAAG,CACDkO,KAAMvP,OACN+d,UAAU,GAEZc,MAAO,CACLtP,KAAMuO,OACNC,UAAU,IAGdnF,MAhB6B,WAiB3B,MAAO,CACLwG,SACAC,cCtBN,GAAOvG,OAAS,GAED,U,0FCJb,eAiBO,QAhBJ7a,GAAI,EAAAA,GACJyd,cAAa,EAAA4D,WACb3E,YAAW,EAAAC,SACXe,cAAa,EAAA4D,WACbnE,KAAM,EAAAyD,MACPjD,MAAM,Q,qBAEN,eAQQ,2BAPc,EAAA4B,OAAK,SAAjB1B,EAAMziB,G,wBADhB,eAQQ,SANL6C,IAAK7C,EACL+H,EAAG,EAAAA,EACHC,EAAG,EAAAA,EAAC,EAAO,EAAAA,EAAIhI,EAAI,EAAAmmB,WAAU,EAC9BxD,qBAAmB,W,eAEhBF,GAAI,gB,mECZE,kBAAgB,CAC7B3gB,KAAM,aACNyiB,MAAO,CACL3f,GAAI,CACFsR,KAAMuO,OACNC,UAAU,GAEZe,aAAc,CACZvP,KAAMkQ,QACN1B,UAAU,GAEZX,KAAM,CACJ7N,KAAMuO,OACNC,UAAU,GAEZ3c,EAAG,CACDmO,KAAMvP,OACN+d,UAAU,GAEZ1c,EAAG,CACDkO,KAAMvP,OACN+d,UAAU,GAEZyB,WAAY,CACVjQ,KAAMvP,OACN+d,UAAU,GAEZ2B,eAAgB,CACdnQ,KAAMvP,OACN+d,UAAU,GAEZuB,WAAY,CACV/P,KAAMuO,OACNC,UAAU,GAEZnD,SAAU,CACRrL,KAAMvP,OACN+d,UAAU,GAEZwB,WAAY,CACVhQ,KAAMuO,OACNC,UAAU,GAEZc,MAAO,CACLtP,KAAMuO,OACNC,UAAU,IAGdnF,MAhD6B,SAgDvBgF,GACJ,IAAIJ,EAAQ,GAMZ,OAJEA,EADEI,EAAMkB,aACAjD,GAAW+B,EAAMR,KAAMQ,EAAM8B,gBAE7B,CAAC9B,EAAMR,MAEV,CACLI,Y,UCvDN,GAAO1E,OAAS,GAChB,GAAO2F,UAAY,kBAEJ,UCGT,GAAe,aAEN,kBAAgB,CAC7BtjB,KAAM,WACNwkB,WAAY,CAAEC,cAAYC,cAC1BlC,MAAO,CACL,cACA,aACA,eAEFC,MAAO,CACL/D,SAAU,CACRtK,KAAM/V,OACNukB,UAAU,GAEZ3R,eAAgB,CACdmD,KAAMuO,OACNE,UAAW,SAACC,GAAD,MACO,kBAATA,GAA8B,OAATA,GAC9BF,UAAU,IAGdnF,MApB6B,SAoBvBgF,EAAOM,GACX,IAAM4B,EAAc,gBAAS,WAC3B,IADgC,EAC1B1lB,EAAiC,GADP,iBAEbwjB,EAAM/D,UAFO,IAEhC,2BAAmC,KAAxBpX,EAAwB,QACjCrI,EAAOqI,EAAKxE,IAAMwE,GAHY,8BAKhC,OAAOrI,KAEHwkB,EAAkB,gBAAS,WAC/B,IADoC,EAC9BxkB,EAAiC,GADH,iBAEjBwjB,EAAM/D,UAFW,IAEpC,2BAAmC,KAAxBpX,EAAwB,QAC7BA,EAAKxE,IAAM2f,EAAMxR,iBACnBhS,EAAOqI,EAAKxE,IAAMwE,IAJc,8BAOpC,OAAOrI,KAGH2hB,EAAW,GAAc,GAAc,OAAQ+D,GAErD,MAAO,CACLrE,aAAA,GACAsE,kBAAA,GACAC,iBAAA,GACApB,kBACA7C,WACAgD,QAAS,gBAAS,WAChB,IAAMkB,EAAmC,GACzC,IAAK,IAAM5mB,KAAKymB,EAAYlkB,MAAO,CACjC,IAAM6G,EAAOqd,EAAYlkB,MAAMvC,GAC/B4mB,EAAUxd,EAAKxE,IAAM,CACnBmD,EAAG2a,EAASngB,MAAM6G,EAAKxE,IACnB8d,EAASngB,MAAM6G,EAAKxE,IAAIqC,SAASc,EACjC,EACJC,EAAG0a,EAASngB,MAAM6G,EAAKxE,IACnB8d,EAASngB,MAAM6G,EAAKxE,IAAIqC,SAASe,EACjC,GAGR,OAAO4e,KAETf,cAAe,SAACphB,GACdogB,EAAI5B,KAAK,cAAe,CAAEre,GAAIH,KAEhCkc,UAAW,SAAClc,GACVogB,EAAI5B,KAAK,aAAc,CAAEre,GAAIH,KAE/Bmc,WAAY,SAACnc,GACXogB,EAAI5B,KAAK,cAAe,CAAEre,GAAIH,SC9EtC,GAAOgb,OAAS,GAED,U,GCJb,eAWO,aAVL,eASS,UARP7a,GAAG,wBACHiiB,YAAY,IACZC,aAAa,IACbC,KAAK,IACLC,KAAK,MACLC,OAAO,Q,CAEP,eAAoE,WAA3DlF,KAAK,UAAUD,OAAO,UAAUI,OAAO,wB,yJATpD,I,mBAYA,eAOE,2BANyB,EAAA/c,eAAa,SAA7Bga,G,wBADX,eAOE,GALGtc,IAAKsc,EAAava,GACnBsiB,SAAS,oBACRzf,KAAM0X,EAAanY,OACnBU,GAAI,EAAA2Q,aAAarR,OAClBwe,MAAM,W,mDAEV,eAcE,2BAbiB,EAAA2B,mBAAiB,SAAzB/d,G,wBADX,eAcE,GAZG2a,KAAM3a,EAAKrC,MACXnC,GAAE,UAAK,EAAAwd,cAAL,OAAoBhZ,EAAKxE,IAC3B/B,IAAKuG,EAAKxE,GACV6gB,cAAc,EACd1d,EAAG,EAAAqf,sBAAsBhe,EAAKxE,IAAM,EAAAwiB,sBAAsBhe,EAAKxE,IAAIqC,SAASc,EAAC,EAC7EC,EAAG,EAAAof,sBAAsBhe,EAAKxE,IAAM,EAAAwiB,sBAAsBhe,EAAKxE,IAAIqC,SAASe,EAAC,EAC7E2d,cAAa,EACbC,oBAAmB,GACpBvD,cAAY,SACXf,YAAW,EACZgB,cAAY,SACZkD,MAAM,W,2DAEV,eAcE,2BAbiB,EAAA2B,mBAAiB,SAAzB/d,G,wBADX,eAcE,QAZGvG,IAAKuG,EAAKxE,GACVmD,EAAG,EAAAqf,sBAAsBhe,EAAKxE,IAAM,EAAAwiB,sBAAsBhe,EAAKxE,IAAIqC,SAASc,EAAC,EAC7EC,EAAG,EAAAof,sBAAsBhe,EAAKxE,IAAM,EAAAwiB,sBAAsBhe,EAAKxE,IAAIqC,SAASe,EAAC,EAC7E4a,MAAO,EAAAwE,sBAAsBhe,EAAKxE,IAAM,EAAAwiB,sBAAsBhe,EAAKxE,IAAIqN,KAAK2Q,MAAK,EACjFC,OAAQ,EAAAuE,sBAAsBhe,EAAKxE,IAAM,EAAAwiB,sBAAsBhe,EAAKxE,IAAIqN,KAAK4Q,OAAM,EACpFE,OAAO,UACPhB,KAAK,cACJ,QAAK,mBAAE,EAAA8D,cAAczc,EAAKxE,KAC1B,YAAS,mBAAE,EAAAyiB,aAAaje,EAAKxE,KAC7B,aAAU,mBAAE,EAAA0iB,cAAcle,EAAKxE,KAChCqd,eAAa,IACbH,OAAO,Q,0IChDX,eAQE,QAPC9N,GAAI,EAAAvM,KAAKM,EACTkM,GAAI,EAAAxM,KAAKO,EACTkM,GAAI,EAAAxM,GAAGK,EACPoM,GAAI,EAAAzM,GAAGM,EACP8Z,OAAQ,EAAA0D,MACTvD,eAAa,IACbsF,aAAW,+B,uCCJA,sBAAgB,CAC7BzlB,KAAM,oBACNyiB,MAAO,CACL2C,SAAUzC,OACVe,MAAOf,OACPhd,KAAMtH,OACNuH,GAAIvH,UCPR,GAAOsf,OAAS,GAED,UCMT+H,GAA2B,EAE3B,SAAUC,GAAgBvkB,EAAU4W,EAAcC,GACtD,MAAO,CAAEhS,EAAG7E,EAAE6E,EAAI+R,EAAOC,EAAIhS,EAAGC,EAAG9E,EAAE8E,EAAI8R,EAAOC,EAAI/R,GAGhD,SAAU0f,GACdxkB,EACA4W,EACAC,GAEA,OAAO7W,EAAEsE,KAAI,SAAAwI,GAAK,OAAIyX,GAAgBzX,EAAO8J,EAAMC,MAkB/C,SAAU4N,GACdvH,EACA5b,EACAojB,EACAC,EACA9N,EACAC,GAEA,IAAKoG,GAA2B,GAAjBA,EAAOlgB,OACpB,MAAO,CAAC,GAAI,MAGd,IAAI4nB,EAAoB,KAClBC,EAAeH,EAAShF,MAAQgF,EAAS/E,OAC3CmF,EAAe5H,EAAO,GAC1B,MAAOjgB,OAAOuW,KAAKsR,GAAc9nB,OAAQ,CAGvC,IAAK,IAAMuE,KAFXqjB,EAAoB,GAECE,EAAc,CACjC,IAAMC,EAAgBP,GACpBM,EAAavjB,GAAQ8C,OACrBsgB,EACA9N,GAEF,GAAI9J,EAAS+J,EAAYiO,GAAgB,CACvCH,EAAoBrjB,EACpB,OAIJ,GAA0B,KAAtBqjB,EAA0B,CAE5B,IAAII,EAAUC,IACd,IAAK,IAAM,KAAUH,EAAc,CACjC,IAAMI,EAAaX,GACjBO,EAAa,GAAQhhB,OACrB6gB,EACA9N,GAEIsO,EAAOzgB,EAAgB,CAAEH,KAAM2gB,EAAY1gB,GAAIsS,IACjDqO,EAAOH,IACTA,EAAUG,EACVP,EAAoB,IAK1B,IAAMQ,EAAsB,EAC1BZ,GAAkBM,EAAaF,GAAmBvgB,OAAQsgB,EAAY9N,IAExE,GACE/T,KAAKuiB,MAAMD,IACXtiB,KAAKuiB,MAAMR,EAAeP,IAE1B,OAA4C,MAAxChjB,EAAWsjB,GAAmBpjB,OACzB,CAACojB,EAAmB,MAEtB,CAACtjB,EAAWsjB,GAAmBpjB,OAAQE,GAAI,MAGlD,GADAojB,EAAe,IACVxjB,EAAWsjB,GACd,MAAO,CACL,GACA,EACE,+DACA,CAAEU,mBAAoBV,EAAmBtjB,gBAP1C,uBAWeA,EAAWsjB,GAAmB1e,KAAKlC,UAXlD,IAWL,2BAAiE,KAAtDkB,EAAsD,UAC7C7B,EAAY6B,EAAMxD,GAAIwb,GADuB,sBACxDpB,EADwD,KAE/D,GAAe,MAAXA,EACF,MAAO,CACL,GACA,EAAW,mDAAoD,CAC7D,WAAY5W,EAAMxD,GAClBwb,OAAQA,KAId4H,EAAa5f,EAAMxD,IAAMoa,GAtBtB,8BAyBL,GAAyC,IAArC7e,OAAOuW,KAAKsR,GAAc9nB,OAC5B,MAAO,CAAC4nB,EAAmB,MAKjC,MAAO,CAAC,GAAI,EAAW,sCAAuC,KAY1D,SAAUW,GACdrI,EACA5b,EACAwO,GAEA,IAAKoN,IAAWA,EAAOlgB,OACrB,MAAO,CAAC,GAAI,MAEd,IAAMwoB,EAAe,GALA,EAQQniB,EAAYyM,EAAeoN,GARnC,sBAQduI,EARc,KAQDliB,EARC,KASrB,GAAmB,MAAfkiB,GAAgC,MAATliB,EACzB,MAAO,CACL,GACA,EAAW,yDAA0D,CACnEuM,gBACAoN,YAMN,IAAMwI,EAAsC,GAC5C,GAAyC,MAArCpkB,EAAWmkB,EAAY/jB,IAAIF,OAC7BkkB,EAAWD,EAAY/jB,IAAMsB,EAAMyiB,OAC9B,wBACenkB,EAAWmkB,EAAY/jB,IAAIF,OAAQwC,UADlD,IACL,2BAAiE,KAAtDkB,EAAsD,UAC1C7B,EAAY6B,EAAMxD,GAAI,CAACwb,EAAO3Z,KADY,sBACxDuY,EADwD,KAC/Ctd,EAD+C,KAE/D,GAAe,MAAXsd,GAAyB,OAANtd,EACrB,MAAO,CACL,GACA,EAAW,wDAAyD,CAClE,WAAY0G,EAAMxD,GAClB6B,QACA2Z,OAAQ,CAACA,EAAO3Z,OAItBmiB,EAAWxgB,EAAMxD,IAAMsB,EAAM8Y,GAC7B4J,EAAWxgB,EAAMxD,IAAImC,MAAQ,IAd1B,+BAiBP2hB,EAAaloB,KAAKooB,GAGlB,IAAMC,EAAsC,GAC5C,IAAK,IAAMpkB,KAAUmkB,EAAY,wBACXpkB,EAAWC,GAAQ2E,KAAKlC,UADb,IAC/B,2BAAsD,KAA3C,EAA2C,UAC/BX,EAAY,EAAM3B,GAAI,CAACwb,EAAO3Z,EAAQ,KADP,sBAC7C,EAD6C,KACpC,EADoC,KAEpD,GAAe,MAAX,GAAyB,OAAN,EACrB,MAAO,CACL,GACA,EAAW,wDAAyD,CAClE,WAAY,EAAM7B,GAClBwb,OAAQ,CAACA,EAAO3Z,EAAQ,OAI1BhC,GAAUuO,GACZ6V,EAAW,EAAMjkB,IAAMsB,EAAM,GAC7B2iB,EAAW,EAAMjkB,IAAImC,MAAQ,IAE7B8hB,EAAW,EAAMjkB,IAAMsB,EAAM,IAhBF,+BAqB7B/F,OAAOuW,KAAKmS,GAAY3oB,OAAS,GACnCwoB,EAAaloB,KAAKqoB,GAIpB,IAtEqB,EAsEfC,EAAuC,GAtExB,iBAwEDtkB,EAAWwO,GAAe5J,KAAKlC,UAxE9B,IAwErB,2BAA6D,OAAlD,EAAkD,yBAChC1C,EAAW,EAAMI,IAAIwE,KAAKlC,UADM,IAC3D,2BAA+D,KAApD6hB,EAAoD,UACxCxiB,EAAYwiB,EAAankB,GAAI,CAACwb,EAAO3Z,EAAQ,KADL,sBACtD,EADsD,KAC7C,EAD6C,KAE7D,GAAe,MAAX,GAAyB,OAAN,EACrB,MAAO,CACL,GACA,EAAW,yDAA0D,CACnE,WAAY,EAAM7B,GAClBwb,OAAQ,CAACA,EAAO3Z,EAAQ,OAI9BqiB,EAAYC,EAAankB,IAAMsB,EAAM,IAZoB,gCAxExC,8BAwFjB/F,OAAOuW,KAAKoS,GAAa5oB,OAAS,GACpCwoB,EAAaloB,KAAKsoB,GAIpB,IAAME,EAAsC,GAC5C,IAAK,IAAM,KAAUF,EAAa,wBACZtkB,EAAW,GAAQ4E,KAAKlC,UADZ,IAChC,2BAAsD,KAA3C,EAA2C,UAC/BX,EAAY,EAAM3B,GAAI,CAACwb,EAAO3Z,EAAQ,KADP,sBAC7C,EAD6C,KACpC,EADoC,KAEpD,GAAe,MAAX,GAAyB,OAAN,EACrB,MAAO,CACL,GACA,EAAW,qDAAsD,CAC/D,WAAY,EAAM7B,GAClB6B,MAAOA,EAAQ,EACf2Z,OAAQ,CAACA,EAAO3Z,EAAQ,OAI9BuiB,EAAW,EAAMpkB,IAAMsB,EAAM,GAC7B8iB,EAAW,EAAMpkB,IAAImC,MAAQ,IAdC,+BAsBlC,OAJI5G,OAAOuW,KAAKsS,GAAY9oB,OAAS,GACnCwoB,EAAaloB,KAAKwoB,GAGb,CAACN,EAAc,MAGlB,SAAUO,GACd7I,EACAtG,EACAC,GAEA,IAAKqG,GAA2B,GAAjBA,EAAOlgB,OACpB,MAAO,GAHC,uBAKUkgB,GALV,IAKV,2BAA4B,KAAjB1Z,EAAiB,QAC1B,IAAK,IAAM9B,KAAM8B,EAAO,CACtB,IAAM0C,EAAO1C,EAAM9B,GACnBwE,EAAKpC,OAASygB,GAAgBre,EAAKpC,OAAQ8S,EAAMC,GACjD3Q,EAAK7B,OAASmgB,GAAkBte,EAAK7B,OAAQuS,EAAMC,KAT7C,8BAaV,OAAOqG,ECvQT,IAAM,GAAe,sBAEN,kBAAgB,CAC7Bte,KAAM,oBACNwiB,MAAO,CACL,aACA,cACA,eAEFgC,WAAY,CAACC,cAAY2C,sBACzB3E,MAAO,CACLxR,eAAgB0R,OAChB7C,gBAAiBzhB,QAEnBof,MAZ6B,SAYvBgF,EAAOM,GACX,IAAMrF,EAAQF,KACR6J,EAAe3J,EAAMxb,MAAMob,QAK3B/G,EAAe,gBAAS,WAC5B,GAAIkM,EAAMxR,gBAAkByM,EAAMxb,MAAMO,KAAKiC,cAAe,OACxCD,EAChBge,EAAMxR,eACNyM,EAAMxb,MAAMO,KAAKiC,eAHuC,sBACnDwY,EADmD,KAK1D,IAAKA,EACH,OAAO,KAET,IAAMoK,EAA2BljB,EAAM8Y,GAMvC,OALAoK,EAAyBpiB,OAASygB,GAChC2B,EAAyBpiB,OACzBmiB,EAAarP,KACbqP,EAAapP,KAERqP,EAEP,OAAO,QAOLjkB,EAAgB,eAA6B,IAC7CgiB,EAAoB,eAA6B,IACjDC,EAAwB,GAAc,GAAc,OAAQD,GAsClE,OArCA,gBAAY,WAAK,MAGf,GAFAhiB,EAAc5C,MAAQ,GACtB4kB,EAAkB5kB,MAAQ,GAExBgiB,EAAMxR,gBACNyM,EAAMxb,MAAMmb,aAAaha,cAAcof,EAAMxR,iBAC7CyM,EAAMxb,MAAMO,KAAKiC,cACjB,CACA,IADA,EACMid,EAAQvd,EACZU,EACE4Y,EAAMxb,MAAMmb,aAAaha,cAAcof,EAAMxR,gBAC7CyM,EAAMxb,MAAMO,KAAKiC,gBAJrB,iBAOmBid,GAPnB,IAOA,2BAA0B,KAAfra,EAAe,QACxBA,EAAKpC,OAASygB,GACZre,EAAKpC,OACLmiB,EAAarP,KACbqP,EAAapP,KAEf5U,EAAc5C,MAAM6G,EAAKxE,IAAMwE,GAbjC,+BAgBF,IAAK,IAAMxE,KAAMO,EAAc5C,MAAO,QACO,IAAvC,UAAAgiB,EAAM3C,uBAAN,eAAuB5c,QAAQJ,MACjCuiB,EAAkB5kB,MAAMqC,GAAMO,EAAc5C,MAAMqC,IAGlD2f,EAAMxR,gBACNsF,EAAa9V,OACbid,EAAMxb,MAAMO,KAAKiC,gBACwC,IAAzD,UAAA+d,EAAM3C,uBAAN,eAAuB5c,QAAQuf,EAAMxR,mBAEvCoU,EAAkB5kB,MAAMgiB,EAAMxR,gBAAkBsF,EAAa9V,UAI1D,CACL6f,aAAA,GACA/J,eACAlT,gBACAgiB,oBACAC,wBACAvB,cAAe,SAACphB,GACdogB,EAAI5B,KAAK,cAAe,CAAEre,GAAIH,KAEhC4iB,aAAc,SAAC5iB,GACbogB,EAAI5B,KAAK,aAAc,CAAEre,GAAIH,KAE/B6iB,cAAe,SAAC7iB,GACdogB,EAAI5B,KAAK,cAAe,CAAEre,GAAIH,SC/GtC,GAAOgb,OAAS,GAED,UCQTsB,GAAQ,QAEC,kBAAgB,CAC7Bjf,KAAM,MACNwiB,MAAO,CACL,iBACA,cACA,aACA,cACA,sBACA,SAEFgC,WAAY,CACV+C,qBACAC,YACAC,aAEFhF,MAAO,CACLjE,QAAS,CACPpK,KAAMuO,OACNC,UAAU,GAEZtE,OAAQjgB,OACR4S,eAAgB,CACdmD,KAAMuO,QAAU,KAChBE,UAAW,SAACC,GAAD,MACO,kBAATA,GAA8B,OAATA,GAC9BF,UAAU,GAEZzR,4BAA6B9S,OAC7BqgB,SAAUrgB,QAEZof,MA9B6B,SA8BvBgF,EAAOM,GA8EX,OA7EA,gBAAU,WACR,IAAMrd,EAAMoY,SAASC,eAAekB,IACpC,GAAKvZ,EAAL,CAKAA,EAAIyd,iBAAiB,aAAa,SAAA/B,GAChC,GAAIoC,eAEN9d,EAAIyd,iBAAiB,WAAW,SAAA/B,GAC9B,GAAI8B,aAENxd,EAAIyd,iBAAiB,aAAa,SAAA/B,GAChC,GAAI6B,UAAUF,EAAI5B,KAAM,CACtBxb,KAAM,CACJM,EAAGmb,EAAMsG,QAAUtG,EAAMG,UACzBrb,EAAGkb,EAAMuG,QAAUvG,EAAMI,WAE3B5b,GAAI,CAAEK,EAAGmb,EAAMsG,QAASxhB,EAAGkb,EAAMuG,cAKrCjiB,EAAIyd,iBAAiB,SAAS,SAAA/B,GAC5B2B,EAAI5B,KAAK,QAAS,CAChBhJ,MAAOiJ,EAAMwG,OACb1iB,OAAQ,CAAEe,EAAGmb,EAAMsG,QAASxhB,EAAGkb,EAAMuG,aAEtC,CAACE,SAAQ,IAEZ,IAAIC,EAAWzB,IACT0B,EAAY,CAAC9hB,EAAEogB,IAAUngB,EAAEmgB,KACjC3gB,EAAIyd,iBAAiB,cAAc,SAAA/B,GAC/B,GAAIoC,cACL,CAACqE,SAAQ,IACZniB,EAAIyd,iBAAiB,YAAY,SAAA/B,GAC/B0G,EAAWzB,IACX0B,EAAU9hB,EAAIogB,IACd0B,EAAU7hB,EAAImgB,IACd,GAAInD,aAINxd,EAAIyd,iBAAiB,aAAa,SAAAzY,GAChC,GAAyB,IAArBA,EAAEsd,QAAQ5pB,OACR2pB,EAAU9hB,GAAKogB,KAAY0B,EAAU7hB,GAAKmgB,KAC5C,GAAIpD,UAAUF,EAAI5B,KAAM,CACtBxb,KAAMoiB,EACNniB,GAAI,CAAEK,EAAGyE,EAAEsd,QAAQ,GAAGN,QAASxhB,EAAGwE,EAAEsd,QAAQ,GAAGL,WAGnDI,EAAU9hB,EAAIyE,EAAEsd,QAAQ,GAAGN,QAC3BK,EAAU7hB,EAAIwE,EAAEsd,QAAQ,GAAGL,aACtB,GAAyB,IAArBjd,EAAEsd,QAAQ5pB,OAAc,CACjC,IAAI+Z,EAAQ,EACNoO,EAAOriB,KAAK+jB,MACdvd,EAAEsd,QAAQ,GAAGE,MAAQxd,EAAEsd,QAAQ,GAAGE,MAClCxd,EAAEsd,QAAQ,GAAGG,MAAQzd,EAAEsd,QAAQ,GAAGG,OAClCL,IAAazB,MACflO,EAAQ2P,EAAWvB,GAErBuB,EAAWvB,EAEXxD,EAAI5B,KAAK,QAAS,CAChBhJ,MAAOA,EACPjT,OAAQ,CACNe,GAAIyE,EAAEsd,QAAQ,GAAGE,MAAQxd,EAAEsd,QAAQ,GAAGE,OAAS,EAC/ChiB,GAAIwE,EAAEsd,QAAQ,GAAGG,MAAQzd,EAAEsd,QAAQ,GAAGG,OAAS,QAIpD,CAACN,SAAQ,SArEVxjB,EAAW,iDAAkD,OA0E1D,CACLyb,gBAAiB,gBAAS,WACxB,IAAK2C,EAAMnE,OACT,MAAO,GAET,IAJ6B,EAIvBvZ,EAAM,GAJiB,iBAKT0d,EAAMnE,QALG,IAK7B,2BAAkC,KAAvB1Z,EAAuB,QAChC,IAAK,IAAMwjB,KAAOxjB,EACQ,IAApBA,EAAMwjB,GAAKnjB,OACbF,EAAIrG,KAAK0pB,IARc,8BAY7B,OAAOrjB,KAET8a,aAAc,SAACnV,GACbqY,EAAI5B,KAAK,iBAAkB,CACzBre,GAAI4H,EAAE/H,OACNwV,MAAOzN,EAAEyN,SAGbyG,WAAY,SAAClU,GACXqY,EAAI5B,KAAK,cAAe,CAAEre,GAAI4H,EAAE5H,MAElC+b,UAAW,SAACnU,GACVqY,EAAI5B,KAAK,aAAc,CAAEre,GAAI4H,EAAE5H,MAEjCgc,WAAY,SAACpU,GACXqY,EAAI5B,KAAK,cAAe,CAAEre,GAAI4H,EAAE5H,MAElCmc,MAAOA,GACPQ,SAAU,SAACxc,GACT,IAAIolB,EAAO,EACLC,EAAqC,CACzCC,EAAG,EACHC,EAAG,GACHC,EAAG,GACHC,EAAG,IAQL,OANIjG,EAAMnE,OAAQlgB,QAAU,IAC1BiqB,EAAOC,EAAWrlB,IAEQ,GAAxBwf,EAAMnE,OAAQlgB,SAChBiqB,EAAOC,EAAWrlB,EAAM,IAEnBolB,GAET1I,YAAa,SAAC1c,GACZ,IAAI6H,EAAM,EACJwd,EAAqC,CACzCC,EAAG,EACHC,EAAG,EACHC,EAAG,GACHC,EAAG,GAQL,OANIjG,EAAMnE,OAAQlgB,QAAU,IAC1B0M,EAAMwd,EAAWrlB,IAES,GAAxBwf,EAAMnE,OAAQlgB,SAChB0M,EAAMwd,EAAWrlB,EAAM,IAElB6H,GAETyU,UAAW,SAACtc,GACV,OAAIwf,EAAMnE,OAAQlgB,QAAU,EAC1B,cAAc,IAAM,IAAM6E,EAA1B,YAAmC,IAAM,IAAMA,EAA/C,YAAwD,IAAM,IAAMA,EAApE,KAE0B,GAAxBwf,EAAMnE,OAAQlgB,OAChB,cAAc,IAAM,KAAO6E,EAAM,GAAjC,YAAuC,IAAM,KAAOA,EAAM,GAA1D,YAAgE,IAAM,KAAOA,EAAM,GAAnF,KAEK,IAEToc,YAAa,SAACpc,GACZ,IAAIygB,EAAQ,EACNiF,EAAsC,CAC1CJ,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IAQL,OANIjG,EAAMnE,OAAQlgB,QAAU,IAC1BslB,EAAQiF,EAAY1lB,IAEM,GAAxBwf,EAAMnE,OAAQlgB,SAChBslB,EAAQiF,EAAY1lB,EAAM,IAE5B,cAAcygB,EAAd,YAAuBA,EAAvB,YAAgCA,EAAhC,UC9MR,GAAO/F,OAAS,GAED,U,qFCHwB8C,MAAM,W,IAChCA,MAAM,W,IAEJA,MAAM,kB,IACJA,MAAM,Y,IASNA,MAAM,Y,IAURA,MAAM,kB,IACJA,MAAM,oB,GAcb,eAAwB,WAApB,eAAe,SAAZ,c,oLAvCf,eA+Ca,QA/CDzgB,KAAK,SAAO,C,YACpB,iBA4CM,CA5CK,EAAAke,MAAQ,EAAA3H,c,iBAAnB,eA4CM,MA5CN,GA4CM,CA3CJ,eA0CM,MA1CN,GA0CM,CAxCJ,eAiBM,MAjBN,GAiBM,CAhBJ,eAQM,MARN,GAQM,CAPJ,eAME,GALAqS,KAAK,IACJC,YAAY,EACbC,YAAY,aACXroB,MAAO,EAAA8V,aAAatR,MACpB,sBAAiB,+BAAE,EAAA8jB,gBAAgBC,M,oBAGxC,eAMM,MANN,GAMM,CALJ,eAIE,GAHC/O,QAAW,EAAAgP,oBAAsB,EAAAA,oBAAoBhP,QAAO,GAC5D2O,KAAM,GACN,iBAAe,+BAAE,EAAAM,cAAcF,M,wBAMtC,eAYM,MAZN,GAYM,CAXJ,eAUM,MAVN,GAUM,CATN,eAQE,GAPElmB,GAAG,UACHgmB,YAAY,mCACXD,YAAY,EACbD,KAAK,IACJnoB,MAAO,EAAA4Z,QACP,sBAAiB,+BAAE,EAAA8O,cAAcH,KAC7B,UAAS,EAAAI,iB,kCAMpB,GAEU,EAAAH,qB,iBADV,eAGE,G,MADGI,UAAS,EAAA9S,aAAazT,I,oGCrC5B2d,MAAM,Y,IACJA,MAAM,U,IACJA,MAAM,Y,IAGNA,MAAM,W,kFAVjB,eAmBM,2BAlBmB,EAAApd,eAAa,SAA7Bga,G,wBADT,eAmBM,OAjBJoD,MAAM,SACL1f,IAAKsc,EAAava,I,CAEnB,eAaM,MAbN,GAaM,CAZJ,eAWM,MAXN,GAWM,CAVJ,eAEM,MAFN,GAEM,CADJ,eAAsD,KAAlDwmB,KAAKjM,EAAava,I,eAAOua,EAAapY,OAAK,cAEjD,eAMM,MANN,GAMM,CALJ,eAIE,GAHC,QAAK,mBAAE,EAAAskB,OAAOlM,EAAava,KAC5B0mB,KAAK,YACL/I,MAAM,oD,qDCRH,IACbzgB,KAAM,gBACNyiB,MAAO,CACL9f,OAAQggB,QAEV6B,WAAY,CACViF,OAAA,SAEFhM,MARa,SAQPgF,GACJ,IAAM/E,EAAQF,KACRna,EAAgB,eAAiB,IAavC,OAZA,gBAAY,WAEV,GADAA,EAAc5C,MAAQ,GAEpBgiB,EAAM9f,QACN+a,EAAMxb,MAAMmb,aAAaha,cAAcof,EAAM9f,QAC7C,wBACiB+a,EAAMxb,MAAMmb,aAAaha,cAAcof,EAAM9f,SAD9D,IACA,2BAAuE,KAA5DG,EAA4D,QACrEO,EAAc5C,MAAM/B,KAAKgf,EAAMxb,MAAMO,KAAKC,WAAWI,GAAIwE,OAF3D,mCAOG,CACLjE,gBACAkmB,OAAQ,SAACzmB,GACP,IAAM1B,EAAIsc,EAAMxb,MAAMmb,aAAaha,cAAcof,EAAM9f,QAClDvB,IAGiB,GAAlBA,EAAE8B,QAAQJ,IAIdgL,EAAI/B,kBAAkB2R,EAAMxb,MAAM8I,KAAKA,KAAM,CAC3CrI,OAAQ8f,EAAM9f,OACdsJ,gBAAiB7K,EAAE9B,OAAO8B,EAAE8B,QAAQJ,GAAK,SCxCnD,GAAO6a,OAAS,GAED,U,kJCJb,eAKE,KAHA,UAAQ,EAAA+L,gBACP,QAAK,+BAAE,EAAAC,WAAS,KACjBlJ,MAAM,mB,gCAHG,EAAAmJ,UAKX,eAQE,YAPEnJ,MAAM,+EACNvB,MAAA,iBACAtW,IAAI,UACHggB,KAAM,EAAAA,KACNnoB,MAAO,EAAAwZ,QACP,QAAK,+BAAE,EAAAiP,cAAcF,EAAOa,OAAOppB,SACnC,WAAQ,+BAAE,EAAAkpB,WAAS,M,gFCXpBG,GAAU,EAAQ,QAClBC,GAAW,EAAQ,QACnBC,GAAc,EAAQ,QACtBC,GAAK,IAAI,KACfA,GAAGC,IAAIJ,GAAS,CAACK,OAAQ,SAASD,IAAIH,IAAUG,IAAIF,GAAa,UAAW,CAC1EI,SAAU,SAASjgB,GAEjB,OADA5F,QAAQgI,IAAI,WAAYpC,EAAOkgB,OAAyB,WAAjBlgB,EAAOkgB,QACvClgB,EAAOkgB,OAAOC,MAAM,cAE7B3M,OAAQ,SAAU4M,EAAanC,GAC7B,IAAMvoB,EAAI0qB,EAAOnC,GAAKoC,KAAKH,OAAOC,MAAM,iBACxC,OAA4B,IAAxBC,EAAOnC,GAAKqC,QAEP,yDAA2DR,GAAGS,MAAMC,WAAW9qB,EAAE,IAAM,KAGvF,cAKE,QACbG,KAAM,WACNwiB,MAAO,CACL,mBAEFC,MAAO,CACLxI,QAAS,CACP7F,KAAMuO,OACNC,UAAU,GAEZgG,KAAM,CACJxU,KAAMvP,OACN+d,UAAU,IAGdnF,MAfa,SAePgF,EAAYM,GAChB,IAAM2G,EAAkB,gBAAS,WAC/B,OAAOO,GAAGtM,OAAO8E,EAAMxI,YAEnB2P,EAAS,gBAAI,GAEbgB,EAAU,eAA2B,MAE3C,MAAO,CACLhB,SACAgB,UACAjB,UAAW,SAAC7e,GACV8e,EAAOnpB,MAAQqK,EACXA,GAAO8f,EAAQnqB,QACjBmqB,EAAQnqB,MAAMye,MAAM2L,QAAU,QAC9BD,EAAQnqB,MAAMqqB,UAEXhgB,GAAO8f,EAAQnqB,QAClBmqB,EAAQnqB,MAAMye,MAAM2L,QAAU,SAGlCnB,kBACAR,cAAe,SAACzoB,GACdsiB,EAAI5B,KAAK,kBAAmB1gB,O,UCzDpC,GAAOkd,OAAS,GAChB,GAAO2F,UAAY,kBAEJ,UCSA,IACbtjB,KAAM,cACNwkB,WAAY,CACVuG,YACAC,SAAA,QACAC,qBAAA,IAEFxI,MAAO,CACLvE,KAAM,CACJ9J,KAAMkQ,QACN1B,UAAU,IAGdnF,MAba,WAcX,IAAMC,EAAQF,KACR1B,EAAU,kBACVrZ,EAAOib,EAAMxb,MAAMO,KACnB0X,EAAe,gBACnB,kBAAMuD,EAAMxb,MAAM4Y,YAAYX,gBAE1BI,EAAmB,gBACvB,kBAAMmD,EAAMxb,MAAM4Y,YAAYP,oBAG1BhE,EAAe,gBAAsB,kBACzC9T,EAAKwO,gBAAkBxO,EAAKC,WAAWD,EAAKwO,gBACxCxO,EAAKC,WAAWD,EAAKwO,gBAAgB3J,KACrC,QAGA2hB,EAAsB,gBAA6B,WACvD,GAAIxmB,EAAKwO,gBAAkBkJ,EAAa1Z,MAAMgC,EAAKwO,gBACjD,OAAOkJ,EAAa1Z,MAAMgC,EAAKwO,gBAEjC,IAAMia,EAAa9mB,EAAM4V,IAEzB,OADAkR,EAAW5nB,OAASb,EAAKwO,eAClBia,KAGH7Q,EAAU,gBAAiB,kBAC/B5X,EAAKwO,gBAAkBsJ,EAAiB9Z,MAAMgC,EAAKwO,gBAC/CsJ,EAAiB9Z,MAAMgC,EAAKwO,gBAAgBoJ,QAC5C,MAGN,MAAO,CACL9D,eACA0S,sBACAG,gBAAiB,WAAF,8CAAE,WAAO1e,GAAP,oFACVgT,EAAMxb,MAAM8I,KAAKA,OAAQ0S,EAAMxb,MAAM8I,KAAKA,KAAKwP,YADrC,gCAEPkD,EAAMjH,SAAN,UAAkB,GAAQ8E,oBAAsBO,GAFzC,OAGbpR,EAAEygB,iBAHW,2CAAF,sDAAE,GAMjB9Q,UACA0O,gBAAiB,WAAF,8CAAE,WAAOtoB,GAAP,0FACV8V,EAAa9V,OAAU8V,EAAa9V,MAAMqC,GADhC,iEAIGgL,EAAIhF,gBAAJ,gCACRyN,EAAa9V,MAAMqC,GADX,SACuBrC,IAL1B,OAITkD,EAJS,OAQXA,GACFU,EAAWV,EAAIE,MAAML,QAASG,EAAIF,IATrB,2CAAF,sDAAE,GAYjBylB,cAAe,WAAF,8CAAE,WAAOzoB,GAAP,uGACKid,EAAMjH,SAAN,sBACD,GAAmBqD,gBAClC,CACExW,OAAQiT,EAAa9V,MAAOqC,GAC5BmX,QAASxZ,IALA,OACPkD,EADO,OASTA,GACFU,EAAWV,EAAK,IAVL,2CAAF,sDAAE,GAafwlB,cAAe,WAAF,8CAAE,WAAO1oB,GAAP,uGACKid,EAAMjH,SAAN,sBACD,GAAmBsD,gBAClC,CACEzW,OAAQiT,EAAa9V,MAAOqC,GAC5BuX,QAAS5Z,IALA,OACPkD,EADO,OASTA,GACFU,EAAWV,EAAK,IAVL,2CAAF,sDAAE,M,UC5FrB,GAAOga,OAAS,GAChB,GAAO2F,UAAY,kBAEJ,U,qVCPb,eAuBM,OAvBA7C,MAAO,EAAA2K,OAAOC,S,CACP,EAAAC,O,iBAAX,eAkBM,U,8BAjBD,EAAAA,OAAQ,IACX,kBAAY,GACZ,eAAY,GACA,EAAA1P,Y,iBAAZ,eAIO,WAHW,EAAA2P,gB,iBAAhB,eAAkC,Y,sBAClC,eAAW,GACO,EAAAA,gB,iBAAlB,eAAoC,Y,+CAG9B,EAAAA,gB,iBADR,eAKE,G,MAHCpN,eAAgB,EAAAA,eAChB,yBAAyB,+BAAE,EAAAqN,MAAK,+BAChC,0BAA0B,+BAAE,EAAAA,MAAK,iC,kDAErB,EAAAD,iBAAmB,EAAAE,U,iBAAlC,eAA8C,Y,sBAC7B,EAAAF,gBAAkB,EAAAE,U,iBAAnC,eAA+C,Y,sBAC/C,eAA0C,UAAjC,QAAK,8BAAE,EAAAlT,SAAA,EAAAA,QAAA,sBAAS,gB,iBAE3B,eAES,U,MAFO,QAAK,8BAAE,EAAAD,QAAA,EAAAA,OAAA,sBAAQ,e,UCX7B,eAEK,yBADA,iDAA8C,G,mKAVvD,eAAsD,UAA7C,YAAS,8CAAO,EAAAoT,iBAAA,EAAAA,gBAAA,qBAAe,YAAE,MAAG,IAC7C,eAwBS,GAvBCC,QAAS,EAAAC,iB,kDAAA,EAAAA,iBAAgB,IAChCC,iBAAiB,EACjBC,UAAU,EACVC,OAAO,EACPC,eAAe,G,CAELhQ,OAAM,gBACf,iBAEK,CAFL,OAOSiQ,OAAM,gBACf,iBAKE,CALF,eAKE,GAJAC,MAAM,KACN1C,KAAK,cACL/I,MAAM,gBACL,QAAO,EAAA0L,W,oBAEV,eAAsD,GAA9CD,MAAM,MAAM1C,KAAK,cAAe,QAAO,EAAA4C,K,gDATjD,iBAA2E,CAA3E,eAA2E,G,WAAzD,EAAAC,e,qDAAA,EAAAA,eAAc,IAAGC,QAAS,EAAAC,QAASC,YAAY,S,4FAuBtD,IACbxsB,KAAM,UACNwkB,WAAY,CACViI,OAAA,QACAhD,OAAA,QACAiD,QAAA,SAEFjP,MAPa,WAQX,IAAMC,EAAQF,KACRmP,EAAYjP,EAAMxb,MAAMO,KACxBmpB,EAAmB,gBAAI,GACvBS,EAAiB,gBAAI,GACrB9V,EAAe,gBAAS,kBAAMmH,EAAMpH,QAAQ,wBAC5CsW,EAAe,eAAI,IACnBL,EAAU,gBAAS,WACvB,IAAMM,EAAsB,GACxBrqB,EAAgBmqB,EAAUjqB,WAAWiqB,EAAU1b,gBAAgBrO,OACnE,MAAO+pB,EAAUjqB,WAAWF,EAAcM,IAAIF,OAC5CiqB,EAAoBnuB,KAAK,CACvBuG,MAAOzC,EAAcyC,MACrBnC,GAAIN,EAAcM,KAEpBN,EAAgBmqB,EAAUjqB,WAAWF,EAAcM,IAAIF,OAGzD,OADAiqB,EAAoBnuB,KAAK,CAAEuG,MAAO,OAAQnC,GAAI,IACvC+pB,KAGT,MAAO,CACLnB,gBAAiB,WACfE,EAAiBnrB,OAASmrB,EAAiBnrB,OAE7C4rB,iBACAE,UACAH,IAAK,WACHR,EAAiBnrB,OAAQ,EACzBid,EAAMjH,SAAN,cAAsB,EAAW1U,QAAU,CACzCgB,SAAUspB,EAAe5rB,MAAMqC,GAC/BH,OAAQ4T,EAAa9V,MAAMqC,KAE7BgL,EAAIvC,SAASmS,EAAMxb,MAAM8I,KAAKA,KAAM0S,EAAMxb,MAAMkb,IAAIjb,MACpDkqB,EAAe5rB,MAAQ,MAEzB0rB,UAAW,WACTP,EAAiBnrB,OAAQ,GAE3BmrB,mBACAgB,kBClFN,GAAOjP,OAAS,GAED,U,uICJb,eAAwD,UAA/C,QAAK,8BAAE,EAAAmP,eAAA,EAAAA,cAAA,sBAAe,oBAC/B,eA6BS,GA5BCnB,QAAS,EAAAoB,iB,kDAAA,EAAAA,iBAAgB,IAChClB,iBAAiB,EACjBC,UAAU,EACVC,OAAO,EACPC,eAAe,EACf,YAAS,4BAAV,cAAe,Y,CAEJhQ,OAAM,gBACf,iBAQK,CARL,eAQK,UARD,SACG,eACH,EAAAgR,iBAAiB/nB,MAAoB,mBAAiB,MAAoB,eAA2B,eAAa,M,IAKlH,0BAAuB,eAAG,EAAAgoB,WAAa,EAAAA,WAAWhoB,MAAK,IAAQ,KACnE,OAGSgnB,OAAM,gBACf,iBAKE,CALF,eAKE,GAJAC,MAAM,SACN1C,KAAK,cACL/I,MAAM,gBACL,QAAO,EAAA0L,W,oBAEV,eAAuD,GAA/CD,MAAM,OAAO1C,KAAK,cAAe,QAAO,EAAA4C,K,+DAavC,IACbpsB,KAAM,kBACNwkB,WAAY,CACViI,OAAA,QACAhD,OAAA,SAEFjH,MAAO,CAAC,4BAA6B,8BACrCC,MAAO,CACLtE,eAAgB,CACd/J,KAAMuO,OACNC,UAAU,IAGdnF,MAba,SAaPgF,EAAOM,GACX,IAAMrF,EAAQF,KACRuP,EAAmB,gBAAI,GACvBE,EAAa,eAAI,IACjBD,EAAmB,eAAI,IACvBzW,EAAe,gBAAS,kBAAMmH,EAAMpH,QAAQ,wBAgBlD,OAdA,gBACE,kBAAMmM,EAAMtE,kBACZ,WAE6B,OAAzBsE,EAAMtE,gBACNT,EAAMxb,MAAMO,KAAKC,WAAW+f,EAAMtE,kBAElC6O,EAAiBvsB,MACfid,EAAMxb,MAAMO,KAAKC,WAAW+f,EAAMtE,gBAAgB7W,QAGxD,CAAE0a,WAAW,IAGR,CACL8K,cAAe,WACb/J,EAAI5B,KAAK,6BACT8L,EAAWxsB,MAAQid,EAAMpH,QAAQ,qBACjCyW,EAAiBtsB,OAASssB,EAAiBtsB,OAE7C2rB,IAAK,WACH,IAAIc,EAAmB,GACnBxP,EAAMxb,MAAMmb,aAAaha,cAAc4pB,EAAWxsB,MAAMqC,MAC1DoqB,EAAmBxP,EAAMxb,MAAMmb,aAAaha,cAAc4pB,EAAWxsB,MAAMqC,KAE7EoqB,EAAiBxuB,KAAKsuB,EAAiBvsB,MAAMqC,IAE7CgL,EAAI/B,kBAAkB2R,EAAMxb,MAAM8I,KAAKA,KAAM,CAC3CrI,OAAQsqB,EAAWxsB,MAAMqC,GACzBmJ,gBAAiBihB,IAEnBnK,EAAI5B,KAAK,8BACT4L,EAAiBtsB,OAAQ,EACzBusB,EAAiBvsB,MAAQ,IAE3B0rB,UAAW,WACTY,EAAiBtsB,OAAQ,EACzBusB,EAAiBvsB,MAAQ,GACzBsiB,EAAI5B,KAAK,+BAEX4L,mBACAE,aACAD,mBACAzW,kBCtGN,GAAOoH,OAAS,GAED,U,iKCJb,eAA2C,UAAlC,QAAK,8BAAE,EAAA+N,iBAAA,EAAAA,gBAAA,sBAAiB,KACjC,eA6BS,GA5BCC,QAAS,EAAAC,iB,kDAAA,EAAAA,iBAAgB,IAChCC,iBAAiB,EACjBC,UAAU,EACVC,OAAO,EACPC,eAAe,EACf,YAAS,4BAAV,cAAe,Y,CAEJhQ,OAAM,gBACf,iBAMK,CANL,eAMK,yBAJD,EAAAmR,kBAAA,4BAAqD,qBAArD,e,OASKlB,OAAM,gBACf,iBAKE,CALF,eAKE,GAJAC,MAAM,KACN1C,KAAK,cACL/I,MAAM,gBACL,QAAO,EAAA0L,W,oBAEV,eAAsD,GAA9CD,MAAM,MAAM1C,KAAK,cAAe,QAAO,EAAA4C,K,gDATjD,iBAA4C,CAA5C,eAA4C,GAArChY,KAAK,O,WAAgB,EAAAwY,a,qDAAA,EAAAA,aAAY,K,qEAsB7B,IACb5sB,KAAM,UACNwkB,WAAY,CACViI,OAAA,QACAhD,OAAA,QACA2D,MAAA,SAEF3P,MAPa,WAQX,IAAMC,EAAQF,KACRoO,EAAmB,gBAAI,GACvBrV,EAAe,gBAAS,kBAAMmH,EAAMpH,QAAQ,wBAC5CsW,EAAe,eAAI,IAEzB,MAAO,CACLO,kBAAmB,gBAAS,kBAC1B5W,EAAa9V,MAAQ8V,EAAa9V,MAAMwE,MAAQ,MAElDymB,gBAAiB,kBAAOE,EAAiBnrB,OAASmrB,EAAiBnrB,OACnE2rB,IAAK,WACH1O,EAAMjH,SAAN,UAAkB,GAAQ0E,YAAc,CACtC9G,SAAUkC,EAAa9V,MAAQ8V,EAAa9V,MAAMqC,GAAK,EACvDmC,MAAO2nB,EAAansB,QAEtBmsB,EAAansB,MAAQ,GACrBmrB,EAAiBnrB,OAAQ,GAE3B0rB,UAAW,WACTS,EAAansB,MAAQ,GACrBmrB,EAAiBnrB,OAAQ,GAE3BmrB,mBACAgB,kBCtEN,GAAOjP,OAAS,GAED,U,uICJb,eAAuE,UAA9D,QAAK,8BAAE,EAAA0P,cAAA,EAAAA,aAAA,qBAAeC,UAAW,EAAAH,mBAAmB,IAAC,gBAC9D,eAsBS,GArBCxB,QAAS,EAAAC,iB,kDAAA,EAAAA,iBAAgB,IAChCC,iBAAiB,EACjBC,UAAU,EACVC,OAAO,EACPC,eAAe,G,CAELhQ,OAAM,gBACf,iBAEK,CAFL,eAEK,0CADU,EAAAmR,kBACV,8BAD2B,OAIvBlB,OAAM,gBACf,iBAKE,CALF,eAKE,GAJAC,MAAM,KACN1C,KAAK,cACL/I,MAAM,gBACL,QAAO,EAAA8M,Q,oBAEV,eAAyD,GAAjDrB,MAAM,MAAM1C,KAAK,cAAe,QAAO,EAAAD,Q,iDAYtC,QACbvpB,KAAM,aACNwkB,WAAY,CACViI,OAAA,QACAhD,OAAA,SAEFhM,MANa,WAOX,IAAMC,EAAQF,KACRoO,EAAmB,gBAAI,GACvBrV,EAAe,gBAAS,kBAAMmH,EAAMpH,QAAQ,wBAElD,MAAO,CACL6W,kBAAmB,gBAAS,kBAC1B5W,EAAa9V,MAAQ8V,EAAa9V,MAAMwE,MAAQ,MAElDooB,aAAc,kBAAOzB,EAAiBnrB,OAASmrB,EAAiBnrB,OAChE8oB,OAAQ,WACNqC,EAAiBnrB,OAAQ,EACzBid,EAAMjH,SAAN,UAAkB,GAAQ4E,YAAc9E,EAAa9V,MAAMqC,KAE7DyqB,OAAQ,WACN3B,EAAiBnrB,OAAQ,GAE3BmrB,sBCtDN,GAAOjO,OAAS,GAED,U,6ECJC,EAAA/B,Y,iBAAd,eAAiE,U,MAAtC,QAAK,8BAAE,EAAAjP,KAAA,EAAAA,IAAA,sBAAK,sB,sBACxB,EAAAiP,W,wCAAf,eAAwD,U,MAA5B,QAAK,8BAAE,EAAA/O,IAAA,EAAAA,GAAA,sBAAI,c,IAO1B,QACb7M,KAAM,WACNyd,MAFa,WAGX,IAAMC,EAAQF,KAEd,MAAO,CACL5B,WAAY,gBAAS,kBAAM8B,EAAMxb,MAAM0Z,cACvC/O,GAAI,WACF6Q,EAAMjH,SAAN,UAAkB,GAAQ6E,cAAe,IAE3C3O,IAAK,WACH+Q,EAAMjH,SAAN,UAAkB,GAAQ6E,cAAe,OCjBjD,GAAOqC,OAAS,GAED,U,iDCJb,eAAqC,UAA5B,QAAK,8BAAE,EAAA6P,OAAA,EAAAA,MAAA,sBAAO,SAQV,QACbxtB,KAAM,YACNyd,MAFa,WAGX,IAAMC,EAAQF,KAEd,MAAO,CACLgQ,MAAO,WACL9P,EAAMjH,SAAN,cACS,EAAWzU,WAClB0b,EAAMxb,MAAMO,KAAKwO,gBAEnBnD,EAAIvC,SAASmS,EAAMxb,MAAM8I,KAAKA,KAAM0S,EAAMxb,MAAMkb,IAAIjb,UCjB5D,GAAOwb,OAAS,GAED,U,6ECJb,eAAiC,UAAxB,QAAK,8BAAE,EAAA8P,KAAA,EAAAA,IAAA,sBAAK,OACE,MAAT,EAAAC,W,iBAAd,eAA8D,U,MAA5B,QAAK,8BAAE,EAAAC,OAAA,EAAAA,MAAA,sBAAO,U,2BAQnC,QACb3tB,KAAM,WACNyd,MAFa,WAGX,IAAMC,EAAQF,KACRjH,EAAe,gBAAS,kBAAMmH,EAAMpH,QAAQ,wBAC5CoX,EAAY,eAAI,MAEtB,MAAO,CACLA,YACAD,IAAK,WACHC,EAAUjtB,MAAQ8V,EAAa9V,MAAMqC,IAEvC6qB,MAAO,WACLjQ,EAAMjH,SAAN,UAAkB,GAAQ2E,cAAgB,CACxC9X,OAAQoqB,EAAUjtB,MAClB4T,SAAUkC,EAAa9V,MAAMqC,KAE/B4qB,EAAUjtB,MAAQ,SCxB1B,GAAOkd,OAAS,GAED,U,2BCHX,eAIE,OAHAiQ,IAAI,OACJC,IAAA,KACA3O,MAAA,gB,YAEF,eAAyD,QAAnDuB,MAAM,sBAAqB,qBAAiB,G,gFANpD,eAOS,GAPDqN,QAAQ,QAAS,QAAO,EAAAC,M,yBAC9B,iBAIE,CAJF,GAKA,O,oBAOW,QACb/tB,KAAM,WACNwkB,WAAY,CACViF,OAAA,SAEFhM,MALa,WAMX,MAAO,CACLsQ,KAAM,WACJzsB,OAAO0sB,KAAK,uEAAwE,cCnB5F,GAAOrQ,OAAS,GAED,UhBmCA,IACb3d,KAAM,OACNwkB,WAAY,CACVyJ,YACAC,YACAC,aACAC,WACAC,WACAC,mBACAC,cACAC,aAEF/L,MAAO,CACLtE,eAAgB,CACd/J,KAAMuO,OACNC,UAAU,IAGdnF,MAlBa,WAmBX,IAAMC,EAAQF,KACRxS,EAAO0S,EAAMxb,MAAM8I,KAGnBsgB,EAAQ,gBAAS,kBAAOtgB,EAAKA,KAAOA,EAAKA,KAAKsgB,MAAQ,QAE5D,MAAO,CACLA,QACA1P,WAAY,gBAAS,kBAAM8B,EAAMxb,MAAM0Z,cACvC2P,eAAgB,gBAAS,kBAAM7N,EAAMxb,MAAMO,KAAKwO,kBAChDwa,SAAU,gBACR,uBAC4DgD,IAA1D/Q,EAAMxb,MAAMkb,IAAIjb,KAAKub,EAAMxb,MAAMO,KAAKwO,mBAG1CqH,OAAQ,kBAAMoF,EAAMjH,SAAN,eAAuB,GAAY6B,UACjDC,QAAS,kBAAMmF,EAAMjH,SAAN,eAAuB,GAAY8B,c,aiBvExD,MAAMmW,GAAa,GAAOC,aAAe,GAEzCD,GAAW,UAAY,cACvB,GAAO/Q,OAAS,GAED,UCoBA,kBAAgB,CAC7B3d,KAAM,OAENwkB,WAAY,CACVoK,OACAC,KAAA,GACAC,YAAA,GACAC,cAAA,QACAC,MAAA,SAGFvR,MAX6B,WAY3B,IAAMC,EAAQF,KACRyR,EAAS,kBACTC,EAAQ,kBACRvC,EAAYjP,EAAMxb,MAAMO,KACxB4kB,EAAe3J,EAAMxb,MAAMob,QAC3B6R,EAAWzR,EAAMxb,MAAMkb,IACvBe,EAAiB,eAAI,MACvBiR,GAAyB,EACzB,GAAY,EAGhB,gBACE,kBAAMF,EAAM/kB,OAAOrH,MACnB,WACE4a,EAAMpb,OAAN,eACU,GAAc2T,sBACtBiZ,EAAM/kB,OAAOrH,MAGjB,CAAEkf,WAAW,IAMf,IAAMxD,EAAU,gBAAS,WACvB,OAAImO,EAAUjoB,eAAiBioB,EAAUjoB,cAActG,OACrD,cAAc,EAAIuuB,EAAUjoB,cAAc,GAAG,KAAKQ,OAAOe,EAAzD,YAA8D,EAC5D0mB,EAAUjoB,cAAc,GAAG,KAAKQ,OAAOgB,GAEzC,mBAWEmpB,EAAe,SACnBC,EACA5qB,EACAhC,GACkC,MAEJikB,GAC5BjiB,EACAhC,EACA4sB,GALgC,sBAE3BC,EAF2B,KAEX5rB,EAFW,KAOlC,OAAIA,GACFU,EAAW,2CAA4C,CAAEV,QAClD,IAEF4rB,EAAeC,WAGlBF,EAAgB,eAAmB,MAEnCG,EAAgB,eAAoC,IAGtDC,GAAkB,EACtB,gBAAmB,yDAAC,WAAO9pB,EAAID,GAAX,iFAClB+pB,GAAkB,EADA,2CAAD,yDAInB,gBACA,iBAAM,CACA/C,EAAUjoB,kBAEhB,WACE,GAAIgrB,GAAmBR,EAAM/kB,OAAOrH,GAAG1E,OAAS,GAAKuuB,EAAUjoB,cAActG,OAAO,EAAG,OACjEqG,EAAYyqB,EAAM/kB,OAAOrH,GAAc6pB,EAAUjoB,eADgB,sBAC9EirB,EAD8E,KAEpE,MAAbA,GACFjS,EAAMpb,OAAN,kBACe,GAAiBkV,SAC5B,CAACvR,GAAI0pB,EAAUzqB,OAAOe,EAAI0mB,EAAUjoB,cAAc,GAAG,KAAKQ,OAAOe,EAAGC,GAAIypB,EAAUzqB,OAAOgB,EAAIymB,EAAUjoB,cAAc,GAAG,KAAKQ,OAAOgB,QAQ9I,gBACF,iBAAM,CACAymB,EAAUjoB,cACV2iB,EAAa1P,cACb0P,EAAaxP,iBAEf,WAAK,MAC6BgO,GAC9B8G,EAAUjoB,cACVioB,EAAUjqB,WACV,CAAEoe,MAAOxf,OAAO0H,WAAY+X,OAAQzf,OAAO4H,aAC3Cme,EAAa1P,cACb0P,EAAapP,IACboP,EAAanP,YAPZ,sBACI0X,EADJ,KACsBjsB,EADtB,KASQ,MAAPA,GACFU,EAAW,iDAAkD,CAAEV,QAGjE2rB,EAAc7uB,MAAQmvB,EACtBH,EAAchvB,MAAQ4uB,EACpBO,EACAjD,EAAUjoB,cACVioB,EAAUjqB,cAGd,CAAEsf,WAAW,EAAM6N,MAAM,IAG3B,IAAMtR,EAA2B,eAAoC,IAkBrE,OAjBA,gBACE,iBAAM,CAAC8I,EAAapP,IAAIhS,EAAGohB,EAAapP,IAAI/R,EAAGmhB,EAAarP,KAAMyX,MAClE,WAKE,IAAMK,EAAqB1rB,EAAMqrB,EAAchvB,OAC/C8d,EAAyB9d,MAAQ0mB,GAC/B2I,EACAzI,EAAarP,KACbqP,EAAapP,OAGjB,CAAE+J,WAAW,EAAM6N,MAAM,IAGpB,CACLnR,SAAU,gBAAS,WACjB,GAA2B,MAAvB4Q,EAAc7uB,MAChB,MAAO,GAET,IAAMsvB,EAAaZ,EAAS/sB,YAAYktB,EAAc7uB,OACtD,IAAKsvB,EACH,MAAO,GANa,uBAUFN,EAAchvB,OAVZ,IAUtB,2BAAyC,KAA9BmE,EAA8B,QACvC,IAAK,IAAMtB,KAAUsB,EAAO,CAC1B,IAAM0C,EAAO1C,EAAMtB,GACnB,GAAkB,IAAdgE,EAAKrC,MAAa,CACpB,IAAMmS,EAAM2Y,EAAW7sB,QAAQoE,EAAKxE,KACxB,GAARsU,GACF2Y,EAAWzwB,OAAO8X,EAAK,MAhBT,8BAsBtB,IAtBsB,EAsBhB4Y,EAAclrB,EAAairB,EAAYpD,EAAUjoB,eACjDzF,EAAS,GAvBO,iBAwBG+wB,GAxBH,IAwBtB,2BAAsC,KAA3BC,EAA2B,QAC9BC,EAAK9rB,EAAM6rB,GACjBC,EAAGhrB,OAASygB,GACVsK,EAAW/qB,OACXmiB,EAAarP,KACbqP,EAAapP,KAEfhZ,EAAOP,KAAKwxB,IA/BQ,8BAkCtB,OAAOjxB,KAETuf,UACA5C,WAAY,gBAAS,kBAAM8B,EAAMxb,MAAM0Z,cACvC3K,eAAgB,gBAAS,kBAAM0b,EAAU1b,kBACzCE,4BAA6B,gBAAS,kBACpCwb,EAAU1b,eACNyM,EAAMxb,MAAMmb,aAAaha,cAAcspB,EAAU1b,gBACjD,MAENsN,yBAA0BA,EAC1BI,aAAc,SAACjU,GACbgT,EAAMjH,SAAN,UAAkB,GAAQyE,oBAAsB,CAC9CvY,OAAQ+H,EAAE5H,GACVqV,MAAO,CACLlS,EAAGyE,EAAEyN,MAAMlS,EAAIohB,EAAarP,KAC5B9R,EAAGwE,EAAEyN,MAAMjS,EAAImhB,EAAarP,SAIlCoG,wBAAyB,WACvBgR,GAAyB,GAE3B/Q,yBAA0B,WACxB+Q,GAAyB,GAE3BjR,iBACAS,WAAY,SAAClU,GACN0kB,EAGHjR,EAAe1d,MAAQiK,EAAE5H,GAFzBmsB,EAAOvwB,KAAK,CAAEsB,KAAM,OAAQmK,OAAQ,CAAErH,GAAI4H,EAAE5H,OAKhD+b,UAAW,SAACnU,GACV,GAAY,EACZgT,EAAMpb,OAAN,eAAqB,GAAc2T,sBAAwBvL,EAAE5H,KAE/Dgc,WAAY,SAACpU,GACX,GAAY,EACZgT,EAAMpb,OAAN,eACU,GAAc2T,sBACtBiZ,EAAM/kB,OAAOrH,KAGjBic,YAAa,SAACqC,GACR1D,EAAMxb,MAAM0Z,YAAc,GAI9B8B,EAAMpb,OAAN,kBAAwB,GAAiBiV,SAAW6J,IAEtDpJ,KAAM,SAACoJ,GAEL,IAAM+O,EAAU,CACdlqB,GAAImb,EAAMlc,OAAOe,EAAIohB,EAAapP,IAAIhS,GAAKohB,EAAarP,KACxD9R,GAAIkb,EAAMlc,OAAOgB,EAAImhB,EAAapP,IAAI/R,GAAKmhB,EAAarP,MAE1D0F,EAAMpb,OAAN,kBAAwB,GAAiBgV,WAAa,EAAI8J,EAAMjJ,OAChE,IAAMiY,EAAQ,CACZnqB,EAAGkqB,EAAQlqB,EAAIohB,EAAarP,KAAOqP,EAAapP,IAAIhS,EACpDC,EAAGiqB,EAAQjqB,EAAImhB,EAAarP,KAAOqP,EAAapP,IAAI/R,GAEtDwX,EAAMpb,OAAN,kBAAwB,GAAiBiV,SAAW,CAClD5R,KAAMyqB,EACNxqB,GAAIwb,EAAMlc,SAEZwY,EAAMpb,OAAN,kBACa,GAAiBmV,iBAC5B2J,EAAMlc,aCpRhB,GAAOyY,OAAS,GAED,U,yCCJb,eAAuE,UAAnE,kECAN,MAAM0S,GAAS,GACfA,GAAO1S,OAAS,GAED,UCCT2S,GAAgC,CACpC,CACE1jB,KAAM,iBACN2jB,UAAWC,IAEb,CACE5jB,KAAM,QACN5M,KAAM,OACNuwB,UAAWE,IAEb,CACE7jB,KAAM,iBACN2jB,UAAWG,KAIT,GAAS,gBAAa,CAC1BnT,QAAS,gBAAiB,KAC1B+S,YAGa,M,wCCbf,eAAUK,IACPzG,IAAI,GAAO,IACXA,IAAI,IACJA,IAAI,SACJA,IAAI,SACJA,IAAI,SACJ0G,MAAM,S,qBCnBT,IAAIlrB,EAAM,CACT,QAAS,OACT,WAAY,OACZ,QAAS,OACT,WAAY,OACZ,QAAS,OACT,WAAY,OACZ,QAAS,OACT,WAAY,OACZ,QAAS,OACT,WAAY,OACZ,QAAS,OACT,WAAY,OACZ,SAAU,OACV,YAAa,OACb,SAAU,OACV,YAAa,QAId,SAASmrB,EAAeC,GACvB,IAAIhuB,EAAKiuB,EAAsBD,GAC/B,OAAOvxB,EAAoBuD,GAE5B,SAASiuB,EAAsBD,GAC9B,IAAIvxB,EAAoBW,EAAEwF,EAAKorB,GAAM,CACpC,IAAIpmB,EAAI,IAAI9G,MAAM,uBAAyBktB,EAAM,KAEjD,MADApmB,EAAEhH,KAAO,mBACHgH,EAEP,OAAOhF,EAAIorB,GAEZD,EAAejc,KAAO,WACrB,OAAOvW,OAAOuW,KAAKlP,IAEpBmrB,EAAeG,QAAUD,EACzBpxB,EAAOD,QAAUmxB,EACjBA,EAAe/tB,GAAK,Q,qBCpCpBnD,EAAOD,QAAU,CAAC,QAAU,wB","file":"js/app.52ed6617.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./SVGTextBox.vue?vue&type=style&index=0&id=78117b36&scoped=true&lang=css\"","module.exports = __webpack_public_path__ + \"img/telegram.4a3b25ac.svg\";","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Markdown.vue?vue&type=style&index=0&id=92fe9ff2&scoped=true&lang=css\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./MapLayer.vue?vue&type=style&index=0&id=21e6be06&scoped=true&lang=css\"","export { default } from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-0-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-0-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-0-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Index.vue?vue&type=style&index=0&id=fa745190&module=true&lang=css\"; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-0-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-0-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-0-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Index.vue?vue&type=style&index=0&id=fa745190&module=true&lang=css\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Index.vue?vue&type=style&index=0&id=207de61e&scoped=true&lang=css\"","<template>\n  <router-view />\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from \"vue\";\nimport { useStore, actions } from \"@/store\";\nexport default defineComponent({\n  setup() {\n    const store = useStore();\n    store.dispatch(actions.init);\n  }\n});\n</script>\n","import { Commit } from \"vuex\";\nimport { NodeRecordItem } from \"@/store/tree\";\n\nexport type Pins = Record<\n  string /* node_id of pinned node */,\n  string[] /* list of parents where this node_id is visible */\n>;\n\nexport interface State {\n  pins: Pins;\n  pinsReverse: Record<\n    string /* node_id of parent whose children contain pinned nodes (that must be visible) */,\n    string[] /* array of pins (= node ids) that is visible in this node_id */\n  >;\n}\n\nexport const mutations = {\n  SET_PINS: \"SET_PINS\",\n  ADD_TO_PINS: \"ADD_TO_PINS\",\n  REMOVE_PIN: \"REMOVE_PIN\",\n  ADD_TO_PINS_REVERSE: \"ADD_TO_PINS_REVERSE\"\n};\n\nexport const actions = {\n  AddPin: \"AddPin\",\n  RemovePin: \"RemovePin\"\n};\n\nexport const store = {\n  namespaced: true,\n  state: {\n    pins: {},\n    pinsReverse: {}\n  },\n  actions: {\n    // had to use action instead of mutation to get access to rootState https://github.com/vuejs/vuex/issues/344\n    [actions.AddPin](\n      {\n        commit,\n        rootState\n      }: {\n        commit: Commit;\n        rootState: { tree: { nodeRecord: Record<string, NodeRecordItem> } };\n      },\n      v: { nodeId: string; parentId: string }\n    ) {\n      // get all parents of nodeId until parentID\n      let currentParent = rootState.tree.nodeRecord[v.nodeId].parent;\n      if (!currentParent) {\n        return;\n      }\n      const parentIds = [];\n      while (currentParent && currentParent.id != v.parentId) {\n        parentIds.push(currentParent.id);\n        currentParent = rootState.tree.nodeRecord[currentParent.id].parent;\n      }\n      parentIds.push(v.parentId);\n      // Set them to pins\n      commit(mutations.ADD_TO_PINS, { nodeId: v.nodeId, parentIds });\n\n      // And for each parent add pined node id to it\n      for (const parentId of parentIds) {\n        commit(mutations.ADD_TO_PINS_REVERSE, {\n          nodeId: parentId,\n          pinId: v.nodeId\n        });\n      }\n    },\n    [actions.RemovePin]({ commit }: { commit: Commit }, nodeId: string) {\n      commit(mutations.REMOVE_PIN, nodeId);\n    }\n  },\n  mutations: {\n    [mutations.SET_PINS](state: State, pins: Pins) {\n      state.pins = pins;\n      state.pinsReverse = {};\n      for (const pinId in pins) {\n        for (const parentId of pins[pinId]) {\n          if (!state.pinsReverse[parentId]) {\n            state.pinsReverse[parentId] = [];\n          }\n          state.pinsReverse[parentId].push(pinId);\n        }\n      }\n    },\n    [mutations.ADD_TO_PINS](\n      state: State,\n      v: { nodeId: string; parentIds: string[] }\n    ) {\n      state.pins[v.nodeId] = v.parentIds;\n    },\n    [mutations.ADD_TO_PINS_REVERSE](\n      state: State,\n      v: { nodeId: string; pinId: string }\n    ) {\n      if (!state.pinsReverse[v.nodeId]) {\n        state.pinsReverse[v.nodeId] = [];\n      }\n      state.pinsReverse[v.nodeId].push(v.pinId);\n    },\n    [mutations.REMOVE_PIN](state: State, nodeId: string) {\n      for (const parentId of state.pins[nodeId]) {\n        const index = state.pinsReverse[parentId].indexOf(nodeId);\n        state.pinsReverse[parentId].splice(index, 1);\n      }\n      delete state.pins[nodeId];\n    }\n  }\n};\n","\nexport type Preconditions = Record<\n  string /* id of node with premises */,\n  string[] /* ids of premise nodes (parent nodes) */\n>;\n\nexport interface State {\n  preconditions: Preconditions;\n}\n\nexport const mutations = {\n  SET_PRECONDITIONS: \"SET_PRECONDITIONS\",\n  UPDATE_PRECONDITIONS: \"UPDATE_PRECONDITIONS\",\n};\n\nexport const store = {\n  namespaced: true,\n  state: {\n    preconditions: {} as Record<string, string[]>\n  },\n  mutations: {\n    [mutations.SET_PRECONDITIONS](state: State, preconditions: Preconditions) {\n      state.preconditions = preconditions;\n    },\n    [mutations.UPDATE_PRECONDITIONS](\n      state: State,\n      v: { nodeID: string; preconditionIDs: Array<string> }\n    ) {\n      if (!state.preconditions[v.nodeID]) {\n        state.preconditions[v.nodeID] = [];\n      }\n      state.preconditions[v.nodeID] = v.preconditionIDs;\n    },\n  }\n};\n","/* eslint-disable  @typescript-eslint/no-explicit-any */\nimport { ErrorKV } from \"@/types/errorkv\";\n\nexport const UNAUTHORIZED = 401;\n\nexport default (\n  message: string,\n  kv: Record<string, any>,\n  code?: number\n): ErrorKV => {\n  const err = new Error(message);\n\n  return {\n    error: err,\n    kv: kv,\n    code\n  };\n};\n","import { cloneDeep } from \"lodash\";\nimport { Point, Tree, TreeSkeleton, Viewport } from \"@/types/graphics\";\nimport { ErrorKV } from \"@/types/errorkv\";\nimport NewErrorKV from \"../tools/errorkv\";\nimport { getBoundingBorders, getVoronoiCells } from \"../tools/graphics\";\n\nexport const ROUND_EPSILON = 0;\n\n/**\n * Correct modulo on negative numbers\n * @param n\n * @param m\n */\nexport function mod(n: number, m: number): number {\n  return ((n % m) + m) % m;\n}\n\nexport function round(num: number): number {\n  const t = Math.pow(10, ROUND_EPSILON);\n  return Math.round(num * t) / t;\n}\n\nexport function sleep(ms: number) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\n/* eslint-disable  @typescript-eslint/no-explicit-any */\nexport function clone(v: any): any {\n  return cloneDeep(v);\n}\n\nexport function generateTreeSkeleton(\n  levelsNum: number,\n  numOnLevel: number\n): TreeSkeleton {\n  let globalID = 0;\n  const root = { id: String(globalID), children: [] };\n  let toProcess: TreeSkeleton[] = [root];\n  for (let i = 1; i < levelsNum; i++) {\n    const nextToProcess = [];\n    while (toProcess.length) {\n      const node = toProcess.shift();\n      node!.children = [];\n      for (let j = 0; j < numOnLevel; j++) {\n        globalID++;\n        const child = { id: String(globalID) };\n        node!.children.push(child);\n        nextToProcess.push(child);\n      }\n    }\n    toProcess = nextToProcess;\n  }\n\n  return root;\n}\n\n/**\n * Fill TreeSkeleton with default values to make real Tree\n * @param sk\n */\nexport function skeletonToTree(sk: TreeSkeleton, idAsTitle: boolean): Tree {\n  const res = clone(sk);\n  const stack: TreeSkeleton[] = [res];\n  while (stack.length) {\n    const node = stack.pop();\n    if (!node) {\n      continue;\n    }\n    node.id = String(node.id);\n    if (!node.title) {\n      node.title = idAsTitle ? String(node.id) : \"\";\n    }\n    if (!node.position) {\n      node.position = { x: 0, y: 0 };\n    }\n    if (!node.children) {\n      node.children = [];\n    }\n    stack.push(...node.children);\n  }\n  return res;\n}\n\n/**\n * Traverse tree and fill position\n */\nexport function fillTreePositions(\n  tree: Tree,\n  rootWH: Viewport\n): ErrorKV | null {\n  if (tree.id !== \"0\") {\n    return NewErrorKV(\"fillTreePositions: root node id must be '0'\", { tree });\n  }\n  tree.position = { x: rootWH.width / 2, y: rootWH.height / 2 };\n  const nodeBorders: Record<string, { topLeft: Point; bottomRight: Point }> = {\n    0: {\n      topLeft: { x: 0, y: 0 },\n      bottomRight: { x: rootWH.width, y: rootWH.height }\n    }\n  };\n  const stack: Tree[] = [tree];\n  while (stack.length) {\n    const node = stack.pop();\n    if (!node || !node.children || !node.children.length) {\n      continue;\n    }\n    const borderBox = nodeBorders[node.id];\n    const height = borderBox.bottomRight.y - borderBox.topLeft.y;\n    const width = borderBox.bottomRight.x - borderBox.topLeft.x;\n    if (height > width) {\n      for (const i in node.children) {\n        node.children[i].position = {\n          x: node.position!.x,\n          y:\n            borderBox.topLeft.y +\n            (Number(i) + 1 / 2) * (height / node.children.length)\n        };\n      }\n    } else {\n      for (const i in node.children) {\n        node.children[i].position = {\n          x:\n            borderBox.topLeft.x +\n            ((Number(i) + 1 / 2) * width) / node.children.length,\n          y: node.position!.y\n        };\n      }\n    }\n\n    // compute children borders as voronoi cells bounding boxes\n    const [cells, err] = getVoronoiCells(\n      [\n        { x: borderBox.topLeft.x, y: borderBox.topLeft.y },\n        { x: borderBox.bottomRight.x, y: borderBox.topLeft.y },\n        { x: borderBox.bottomRight.x, y: borderBox.bottomRight.y },\n        { x: borderBox.topLeft.x, y: borderBox.bottomRight.y }\n      ],\n      node.children.map(ch => ch.position)\n    );\n    if (err) {\n      return NewErrorKV(\"fillTreePositions: error in getVoronoiCells\", { err });\n    }\n    for (const i in cells) {\n      const cellBBox = getBoundingBorders(cells[i].border);\n      nodeBorders[node.children[i].id] = {\n        topLeft: cellBBox.leftBottom,\n        bottomRight: cellBBox.rightTop\n      };\n    }\n\n    stack.push(...node.children);\n  }\n\n  return null;\n}\n\nexport function printError(msg: string, kv: any) {\n  if (!kv) {\n    console.error(msg);\n  }\n\n  // const callback = function(stackframes: StackFrame[]) {\n  //   const stringifiedStack = stackframes.map(function(sf) {\n  //     return sf.toString();\n  //   }).join('\\n');\n  //   console.error(msg, stringifiedStack);\n  // };\n  //\n  // const errBack = function(e: Error) { console.log(e.message); };\n  //\n  const kvArr = [];\n  for (const i in kv) {\n    kvArr.push(i, kv[i]);\n    // if (kv[i] instanceof Error) {\n    //   StackTrace.get({offline: true}).then(callback).catch(errBack);\n    // }\n  }\n\n  console.error(msg, ...kvArr);\n}\n\ntype MindMeisterNode = {\n  id: number;\n  title: string;\n  link: string | null;\n  note: string | null;\n  children: MindMeisterNode[];\n};\n\nexport function mindMeisterToTree(mm: MindMeisterNode): TreeSkeleton | null {\n  let tree = null;\n  const parents: Record<string, TreeSkeleton> = {}; // key id, value - parent\n  const stack = [mm];\n  while (stack.length) {\n    const mmNode = stack.pop();\n    if (!mmNode) {\n      return null;\n    }\n    const treeNode: TreeSkeleton = {\n      id: String(mmNode.id),\n      title: mmNode.title,\n      children: []\n    };\n    if (parents[mmNode.id]) {\n      parents[mmNode.id].children!.push(treeNode);\n    } else {\n      tree = treeNode;\n    }\n    for (const child of mmNode.children) {\n      stack.push(child);\n      parents[child.id] = treeNode;\n    }\n  }\n\n  return tree;\n}\n","import { MapNode, Point, Tree } from \"@/types/graphics\";\nimport {\n  convertPosition,\n  getMaxDiagonal,\n  getVectorLength,\n  mergeMapNodeLayers,\n  treeToMapNodeLayers,\n  vectorOnNumber\n} from \"../../tools/graphics\";\nimport { ErrorKV } from \"@/types/errorkv\";\nimport NewErrorKV from \"../../tools/errorkv\";\nimport { clone } from \"../../tools/utils\";\nimport { NodeRecordItem } from \"@/store/tree/index\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nexport function findMapNode(\n  id: string,\n  mapNodeLayers: Array<Record<string, MapNode>>\n): [MapNode | null, number | null] {\n  for (const level in mapNodeLayers) {\n    const layer = mapNodeLayers[Number(level)];\n    if (layer && layer[id]) {\n      return [layer[id], Number(level)];\n    }\n  }\n\n  return [null, null];\n}\n\nexport function findMapNodes(\n  ids: string[],\n  mapNodeLayers: Array<Record<string, MapNode>>\n): MapNode[] {\n  const result: MapNode[] = [];\n  for (const layer of mapNodeLayers) {\n    if (!layer) {\n      continue;\n    }\n    for (const id of ids) {\n      if (layer[id]) {\n        result.push(layer[id]);\n      }\n    }\n  }\n\n  return result;\n}\n\nexport function createNewNode(title: string, center: Point): Tree {\n  return {\n    id: uuidv4(),\n    position: center,\n    title: title,\n    children: []\n  } as Tree;\n}\n\n/**\n * Вычисляет где можно поставить центр для нового подузла узла parent\n *\n * Логика добавления следующая.\n * Обозначим координаты центра узла parent как (Xc, Yc)\n * Если в узле нет ни одного подузла, то находим наибольшее расстояние между (Xc, Yc)\n * и вершинами границы, делим вектор соединяющий (Xc, Yc) и эту вершину пополам\n * и ставим там центр нового подузла\n *\n * Если в узле есть подузлы, берем подузел с наибольшей диагональю,\n * находим в нем наибольшую диагональ соединяющую 2 вершины границы,\n * делим ее пополам, старый центр ставим в центре одной половины, новый в центре другой.\n *\n * Добавляем рандом (см баг https://sci-map.atlassian.net/browse/SM-118)\n * @param parent\n * @param mapNodeLayers\n * @param addRandom\n */\nexport function getNewNodeCenter(\n  parent: Tree,\n  mapNodeLayers: Array<Record<number, MapNode>>,\n  addRandom: boolean,\n): [\n  Point | null, // new node center\n  Tree | null, // existing node with corrected center (if any)\n  ErrorKV // error (if any)\n] {\n  const [parentMapNode] = findMapNode(parent.id, mapNodeLayers);\n  if (parentMapNode === null) {\n    return [\n      null,\n      null,\n      NewErrorKV(\"getNewNodeCenter: cannot find mapNode for parent\", {\n        parentId: parent.id,\n        mapNodeLayers: mapNodeLayers\n      })\n    ];\n  }\n\n  if (parent.children.length === 0) {\n    const fromCenterVectors = parentMapNode.border.map(p => ({\n      from: parentMapNode.center,\n      to: p\n    }));\n    let maxFromCenterVector = fromCenterVectors[0];\n    for (const v of fromCenterVectors) {\n      if (getVectorLength(v) > getVectorLength(maxFromCenterVector)) {\n        maxFromCenterVector = v;\n      }\n    }\n\n    let coeff = 1/2\n    if (addRandom) {\n      coeff = Math.random() * (1/2) + 1/4\n    }\n\n    return [\n      {\n        x:\n          maxFromCenterVector.from.x +\n          coeff * (maxFromCenterVector.to.x - maxFromCenterVector.from.x),\n        y:\n          maxFromCenterVector.from.y +\n          coeff * (maxFromCenterVector.to.y - maxFromCenterVector.from.y)\n      },\n      null,\n      null\n    ];\n  } else {\n    const maxDiagChild = parent.children[0];\n    let [maxDiagChildMapNode] = findMapNode(maxDiagChild.id, mapNodeLayers);\n    if (maxDiagChildMapNode === null) {\n      return [\n        null,\n        null,\n        NewErrorKV(\"getNewNodeCenter: cannot find maxDiagChild in layers\", {\n          maxDiagChildId: maxDiagChild.id,\n          mapNodeLayers: mapNodeLayers\n        })\n      ];\n    }\n    for (const child of parent.children) {\n      const [childMapNode] = findMapNode(child.id, mapNodeLayers);\n      if (childMapNode === null) {\n        return [\n          null,\n          null,\n          NewErrorKV(\"getNewNodeCenter: cannot find child in layers\", {\n            childId: child.id,\n            mapNodeLayers: mapNodeLayers\n          })\n        ];\n      }\n\n      const [childDiag, err1] = getMaxDiagonal(childMapNode.border);\n      if (err1) {\n        return [\n          null,\n          null,\n          NewErrorKV(\"getNewNodeCenter: error getMaxDiagonal\", {\n            childMapNode,\n            err1\n          })\n        ];\n      }\n      const [maxDiag, err2] = getMaxDiagonal(maxDiagChildMapNode.border);\n      if (err2) {\n        return [\n          null,\n          null,\n          NewErrorKV(\"getNewNodeCenter: error getMaxDiagonal\", {\n            maxDiagChildMapNode,\n            err2\n          })\n        ];\n      }\n      if (getVectorLength(childDiag) > getVectorLength(maxDiag)) {\n        maxDiagChildMapNode = childMapNode;\n      }\n    }\n\n    let coeff = 3 / 4\n    if (addRandom) {\n      coeff = Math.random() * (1/4) + 2.5/4\n    }\n\n    const [finalMaxDiag] = getMaxDiagonal(maxDiagChildMapNode.border);\n    const newNodeCenter = vectorOnNumber(finalMaxDiag!, coeff).to;\n    const modifiedNode = clone(maxDiagChild);\n    modifiedNode.position = vectorOnNumber(finalMaxDiag!, 1 / 4).to;\n    return [newNodeCenter, modifiedNode, null];\n  }\n}\n\nexport function updatePosition(\n  state: {\n    tree: Tree | null;\n    nodeRecord: Record<string, NodeRecordItem>;\n    mapNodeLayers: Array<Record<string, MapNode>>;\n  },\n  v: { nodeId: string; position: Point }\n): ErrorKV {\n  if (state.tree == null) {\n    return NewErrorKV(\"state.tree == null\", {});\n  }\n\n  const item = state.nodeRecord[v.nodeId];\n  if (!item) {\n    return NewErrorKV(\"updateNodePosition: cannot find node in nodeRecord\", {\n      \"v.nodeId\": v.nodeId,\n      \"state.nodeRecord\": state.nodeRecord\n    });\n  }\n\n  if (!item.parent) {\n    return NewErrorKV(\"updateNodePosition: cannot move root of tree\", {\n      \"v.nodeId\": v.nodeId\n    });\n  }\n\n  const [normalizedPosition] = convertPosition(\n    \"normalize\",\n    v.position,\n    item.parent.id,\n    state.mapNodeLayers\n  );\n  item.node.position = normalizedPosition!;\n\n  // Если мы меняем один узел, то могут поменяться границы всех соседей\n  // так что надо действовать так как будто поменялись границы всех подузлов родителя узла\n  const [parentMapNode, layerLevel] = findMapNode(\n    item.parent.id,\n    state.mapNodeLayers\n  );\n  if (!parentMapNode || layerLevel === null) {\n    return NewErrorKV(\"updateNodePosition: cannot find mapNode for parent\", {\n      id: item.parent.id,\n      \"state.mapNodeLayers\": state.mapNodeLayers\n    });\n  }\n  const [ls, err] = treeToMapNodeLayers(\n    item.parent,\n    parentMapNode.border,\n    parentMapNode.center\n  );\n  if (ls == null || err != null) {\n    return NewErrorKV(\"updateNodePosition: create layers for parent\", {\n      id: item.parent.id,\n      parentMapNode: parentMapNode\n    });\n  }\n  return mergeMapNodeLayers(state.mapNodeLayers, ls, layerLevel);\n}\n","import { DBNode } from \"@/api/types\";\nimport { Tree } from \"@/types/graphics\";\nimport { ErrorKV } from \"@/types/errorkv\";\nimport NewErrorKV from \"../tools/errorkv\";\n\n// convert children object to array\nexport function convertChildren(children: any): string[] {\n  let result: string[];\n\n  if (!children) {\n    result = [];\n  } else if (Array.isArray(children)) {\n    result = children.filter(childID => !!childID).sort();\n    result.forEach((childID, i, arr) => (arr[i] = childID.toString()));\n  } else {\n    result = Object.values(children)\n      .filter(childID => !!childID)\n      .sort() as string[];\n    result.forEach((childID, i, arr) => (arr[i] = childID.toString()));\n  }\n  return result;\n}\n\nexport function convertDBMapToTree(\n  dbNodes: Record<string, DBNode>\n): [Tree | null, ErrorKV] {\n  const root: Tree = {\n    id: dbNodes[\"0\"].id.toString(),\n    title: dbNodes[\"0\"].name,\n    position: dbNodes[\"0\"].position,\n    children: []\n  };\n  const stack = [root];\n\n  while (stack.length > 0) {\n    const node = stack.pop();\n    if (!node) {\n      continue;\n    }\n    if (!dbNodes[node.id]) {\n      return [\n        null,\n        NewErrorKV(\"Cannot find id in dbNodes\", { \"node.id\": node.id, dbNodes })\n      ];\n    }\n    dbNodes[node.id].children = convertChildren(dbNodes[node.id].children);\n    if (!dbNodes[node.id].children.length) {\n      continue;\n    }\n    const children: Tree[] = [];\n    for (const childID of dbNodes[node.id].children) {\n      if (!dbNodes[childID]) {\n        return [\n          null,\n          NewErrorKV(\"Cannot find child id in dbNodes\", { childID, \"parentID\":node.id })\n        ];\n      }\n      children.push({\n        id: childID.toString(),\n        title: dbNodes[childID].name,\n        position: dbNodes[childID].position,\n        children: []\n      });\n    }\n\n    node.children = children;\n    stack.push(...children);\n  }\n\n  return [root, null];\n}\n","import firebase from \"firebase\";\nimport { Tree } from \"@/types/graphics\";\nimport { ErrorKV } from \"@/types/errorkv\";\nimport NewErrorKV from \"../tools/errorkv\";\nimport { apiTree } from \"./mocks\";\n// import apiTree from \"./mindmeister\";\nimport axios from \"axios\";\nimport { Pins } from \"@/store/pin\";\nimport { Preconditions } from \"src/store/precondition\";\nimport { DBNode } from \"@/api/types\";\nimport { convertChildren } from \"./helpers\";\nimport { NodeComment, NodeContent } from \"@/store/node_content\";\nimport emulatorConfig from \"../../firebase.json\";\nimport { debounce } from \"lodash\";\n\nconst MAP_FROM_STORAGE = false; // is storage is source for map (or database)\nlet FUNCTION_DOMAIN = \"https://us-central1-sci-map-1982.cloudfunctions.net/\";\nexport const FUNCTION_CHANGE_RATING = \"changeRating\";\n\nconst update = async (data: Record<string, any>): Promise<ErrorKV> => {\n  try {\n    await firebase\n      .database()\n      .ref()\n      .update(data);\n    return null;\n  } catch (e) {\n    return NewErrorKV(\"api: error in update\", { err: e });\n  }\n};\n\nconst debouncedUpdate = debounce(update, 400);\n\nexport default {\n  ROOT_WIDTH: window.innerWidth,\n  ROOT_HEIGHT: window.innerHeight - window.innerHeight/100,\n  ST_WIDTH: 1000,\n  ST_HEIGHT: 1000,\n  initFirebase() {\n    // Your web app's Firebase configuration\n    // For Firebase JS SDK v7.20.0 and later, measurementId is optional\n    const firebaseConfig = {\n      apiKey: \"AIzaSyCP50k-WOkTeG8BYvRtu4Bo_x3T2RnVsxU\",\n      authDomain: \"sci-map-1982.firebaseapp.com\",\n      databaseURL: \"https://sci-map-1982.firebaseio.com\",\n      projectId: \"sci-map-1982\",\n      storageBucket: \"sci-map-1982.appspot.com\",\n      messagingSenderId: \"340899060236\",\n      appId: \"1:340899060236:web:b136e9289e342a8bb62c29\",\n      measurementId: \"G-TV74Q61H9P\"\n    };\n\n    // Initialize Firebase\n    firebase.initializeApp(firebaseConfig);\n    firebase.analytics();\n\n    if (process.env.VUE_APP_IS_EMULATOR === \"true\") {\n      console.log(\"Starting in emulator mode\");\n      firebase\n        .auth()\n        .useEmulator(`http://localhost:${emulatorConfig.emulators.auth.port}`);\n      firebase\n        .database()\n        .useEmulator(\"localhost\", emulatorConfig.emulators.database.port);\n      firebase\n        .storage()\n        .useEmulator(\"localhost\", emulatorConfig.emulators.storage.port);\n      FUNCTION_DOMAIN = \"http://localhost:5001/sci-map-1982/us-central1/\";\n    }\n  },\n\n  async callFunction(\n    method: string,\n    params: Record<string, string>\n  ): Promise<[string, ErrorKV]> {\n    const currentUser = firebase.auth().currentUser;\n    if (!currentUser) {\n      return [\n        \"\",\n        NewErrorKV(\"callFunction: cannot determine current user\", {})\n      ];\n    }\n    const idToken = await currentUser.getIdToken(true);\n    params.idToken = idToken;\n    try {\n      const response = await axios.get(FUNCTION_DOMAIN + method, { params });\n      return [response.data, null];\n    } catch (e) {\n      return [\"\", NewErrorKV(\"Error in callFunction\", { method, params, e })];\n    }\n  },\n\n  async getMapFromDB(): Promise<[Record<string, DBNode> | null, ErrorKV]> {\n    const snapshot = await firebase\n      .database()\n      .ref(\"map\")\n      .get();\n    if (!snapshot.exists()) {\n      return [null, NewErrorKV(\"!snapshot.exists\", {})];\n    }\n    const map = snapshot.val();\n\n    return [map, null];\n  },\n\n  async getMapFromStorage(\n    user: firebase.User | null\n  ): Promise<[Tree | null, ErrorKV]> {\n    const storage = firebase.storage().ref();\n    let ref = storage.child(`/map.json`);\n    if (user) {\n      ref = storage.child(`/user/${user.uid}/map.json`);\n    }\n    const url = await ref.getDownloadURL();\n\n    const response = await axios.get(url);\n    return [\n      {\n        id: \"0\",\n        title: \"\",\n        position: { x: this.ROOT_WIDTH / 2, y: this.ROOT_HEIGHT / 2 },\n        // children: apiTree.children\n        children: response.data\n      },\n      null\n    ];\n  },\n\n  async getMap(user: firebase.User | null): Promise<[Record<string, DBNode> | null, ErrorKV]> {\n    try {\n      return await this.getMapFromDB();\n    } catch (e) {\n      return [null, NewErrorKV(e.message, { e: e })];\n    }\n  },\n\n  async getPins(user: firebase.User | null): Promise<[Pins | null, ErrorKV]> {\n    try {\n      const storage = firebase.storage().ref();\n      let ref = storage.child(`/pins.json`);\n      if (user) {\n        ref = storage.child(`/user/${user.uid}/pins.json`);\n      }\n      const url = await ref.getDownloadURL();\n\n      const response = await axios.get(url);\n      return [response.data, null];\n    } catch (e) {\n      return [null, NewErrorKV(e.message, { e: e })];\n    }\n  },\n\n  async savePins(user: firebase.User, pins: Pins) {\n    if (!user) {\n      return;\n    }\n\n    const storage = firebase.storage().ref();\n    const ref = storage.child(`/user/${user.uid}/pins.json`);\n    await ref.putString(\n      btoa(unescape(encodeURIComponent(JSON.stringify(pins)))),\n      \"base64\"\n    );\n  },\n\n  async getPreconditions(\n    user: firebase.User | null\n  ): Promise<[Preconditions | null, ErrorKV]> {\n    try {\n      const snapshot = await firebase\n        .database()\n        .ref(\"precondition\")\n        .get();\n      if (!snapshot.exists()) {\n        return [null, NewErrorKV(\"!snapshot.exists\", {})];\n      }\n      const preconditions = snapshot.val();\n\n      return [preconditions, null];\n    } catch (e) {\n      return [null, NewErrorKV(e.message, { e: e })];\n    }\n  },\n\n  async savePreconditions(\n    user: firebase.User | null,\n    preconditions: { nodeId: string; preconditionIds: string[] }\n  ) {\n    if (!user) {\n      return;\n    }\n    await firebase\n      .database()\n      .ref(\"precondition/\" + preconditions.nodeId)\n      .set(preconditions.preconditionIds);\n  },\n\n  subscribeMapNodeChange(nodeID: string, cb: (a: DBNode) => any) {\n    this.subscribeDBChange(\n      `map/${nodeID}`,\n      (snap: firebase.database.DataSnapshot) => {\n        if (!snap.exists()) {\n          return;\n        }\n        const node = snap.val() as DBNode;\n        console.log('got update for map node', node)\n        node.id = node.id.toString();\n        node.children = convertChildren(node.children);\n        cb(node);\n      }\n    );\n  },\n\n  subscribeNodeContentChange(nodeID: string, cb: (a: { nodeID: string; content: string }) => any) {\n    this.subscribeDBChange(\n      `node_content/${nodeID}`,\n      (snap: firebase.database.DataSnapshot) => {\n        if (!snap.exists()) {\n          return;\n        }\n        const node = snap.val() as { nodeID: string; content: string };\n        console.log('got update for node content', node)\n        cb(node);\n      }\n    );\n  },\n\n  subscribePreconditionNodeChange(nodeID: string, cb: (nodeID: string, preconditionIDs: Array<string>) => any) {\n    this.subscribeDBChange(\n      `precondition/${nodeID}`,\n      (snap: firebase.database.DataSnapshot) => {\n        if (!snap.exists()) {\n          return;\n        }\n        const preconditionIDs = snap.val() as Array<string>;\n        console.log('got update for node precondition', 'nodeID', nodeID, 'preconditionIDs', preconditionIDs)\n        cb(nodeID, preconditionIDs);\n      }\n    );\n  },\n\n  unsubscribeMapNodeChange(nodeID: string) {\n    firebase\n      .database()\n      .ref(`map/${nodeID}`)\n      .off(\"value\");\n  },\n\n  subscribeDBChange(\n    path: string,\n    cb: (a: firebase.database.DataSnapshot) => any\n  ) {\n    firebase\n      .database()\n      .ref(path)\n      .on(\"value\", cb);\n  },\n\n  unsubscribeDBChange(\n    path: string,\n    cb?: (a: firebase.database.DataSnapshot) => any\n  ) {\n    firebase\n      .database()\n      .ref(path)\n      .off(\"value\", cb);\n  },\n\n  async transaction(nodeID: string, update: (val: any) => any) {\n    await firebase\n      .database()\n      .ref(\"map/\" + nodeID)\n      .transaction(\n        update,\n        () => {\n          return;\n        },\n        false\n      );\n  },\n\n  async setNode(node: DBNode) {\n    await firebase\n      .database()\n      .ref(\"map/\" + node.id)\n      .set(node);\n  },\n\n  async getNode(nodeID: string): Promise<DBNode | null> {\n    const pr = await firebase\n      .database()\n      .ref(\"map/\" + nodeID)\n      .get();\n    const node = pr.val();\n    node.id = node.id.toString();\n    node.children = convertChildren(node.children);\n    return node;\n  },\n\n  generateKey(): string | null {\n    return firebase\n      .database()\n      .ref()\n      .push().key;\n  },\n\n  async findKeyInList(path: string, value: string): Promise<string | null> {\n    const snap = await firebase\n      .database()\n      .ref(path)\n      .orderByValue()\n      .equalTo(value)\n      .limitToFirst(1)\n      .get();\n    return snap.key;\n  },\n\n  async findKeyOfChild(\n    nodeID: string,\n    childID: string\n  ): Promise<string | null> {\n    const pr = await firebase\n      .database()\n      .ref(\"map/\" + nodeID)\n      .get();\n    const node = pr.val();\n    if (!node.children) {\n      return null;\n    }\n\n    for (const key in node.children) {\n      if (node.children[key].toString() === childID) {\n        return key;\n      }\n    }\n    return null;\n  },\n\n  update,\n  debouncedUpdate,\n\n  async getUserComments(\n    user: firebase.User\n  ): Promise<[Record<string, NodeComment> | null, ErrorKV]> {\n    const userID = user.uid;\n    const snapshot = await firebase\n      .database()\n      .ref(`user_data/${userID}/comment`)\n      .get();\n    if (!snapshot.exists()) {\n      return [null, NewErrorKV(\"!snapshot.exists\", {})];\n    }\n    const nodeComment = snapshot.val();\n\n    return [nodeComment, null];\n  },\n\n  async getNodeContent(): Promise<\n    [Record<string, NodeContent> | null, ErrorKV]\n  > {\n    const snapshot = await firebase\n      .database()\n      .ref(`node_content`)\n      .get();\n\n    if (!snapshot.exists()) {\n      return [{}, null];\n    }\n\n    return [snapshot.val(), null];\n  }\n};\n","import {\n  Tree,\n  Point,\n  Polygon,\n  VoronoiCell,\n  MapNode,\n  Vector,\n  Rectangle\n} from \"@/types/graphics\";\nimport * as turf from \"@turf/turf\";\nimport { ErrorKV } from \"@/types/errorkv\";\nimport { default as NewErrorKV } from \"../tools/errorkv\";\nimport { NodeRecordItem } from \"@/store/tree\";\nimport { polygonArea } from \"d3-polygon\";\nimport polygonClipping from \"polygon-clipping\";\nimport { clone, mod, round } from \"../tools/utils\";\nimport { findMapNode } from \"../store/tree/helpers\";\nimport api from \"../api/api\";\n\nconst NORMALIZED_BORDER = [\n  { x: 0, y: 0 },\n  { x: 0, y: api.ST_HEIGHT },\n  { x: api.ST_WIDTH, y: api.ST_HEIGHT },\n  { x: api.ST_WIDTH, y: 0 }\n];\n\nexport function getVectorLength(v: Vector): number {\n  return Math.sqrt(\n    Math.pow(v.from.x - v.to.x, 2) + Math.pow(v.from.y - v.to.y, 2)\n  );\n}\n\nexport function polygonToTurf(\n  p: Polygon\n): turf.Feature<turf.Polygon, turf.Properties> {\n  if (!p) {\n    throw new Error(\"polygonToTurf: p is empty\");\n  }\n  const pp = p.map(point => [point.x, point.y]);\n  pp.push([p[0].x, p[0].y]);\n  return turf.polygon([pp]);\n}\n\nexport function isInside(point: Point, polygon: Polygon): boolean {\n  return turf.booleanPointInPolygon(\n    turf.point([point.x, point.y]),\n    polygonToTurf(polygon)\n  );\n}\n\nexport function polygonToPCPolygon(p: Polygon): polygonClipping.Polygon {\n  const pp = p.map(point => [point.x, point.y] as polygonClipping.Pair);\n  pp.push([p[0].x, p[0].y]);\n  return [pp];\n}\n\nexport function area(p: Polygon): number {\n  return Math.abs(polygonArea(p.map(point => [point.x, point.y])));\n}\n\nexport function intersect(\n  p1: Polygon,\n  p2: Polygon\n): [Polygon[] | null, ErrorKV] {\n  // polygonClipping.intersection does not like digits after point\n  // so we find the least multiplier that gives area > 1000 for polygon\n  // and then round coordinates\n  let np1: Polygon = clone(p1);\n  let np2: Polygon = clone(p2);\n  let cf = 1;\n  while (area(np1) < 1000 && area(np2) < 1000) {\n    cf = cf * 10;\n    np1 = p1.map(p => ({ x: p.x * cf, y: p.y * cf }));\n    np2 = p2.map(p => ({ x: p.x * cf, y: p.y * cf }));\n  }\n  np1 = np1.map(p => ({ x: round(p.x), y: round(p.y) }));\n  np2 = np2.map(p => ({ x: round(p.x), y: round(p.y) }));\n\n  const tp1 = polygonToPCPolygon(np1);\n  const tp2 = polygonToPCPolygon(np2);\n  if (tp1 == null || tp2 == null) {\n    return [\n      null,\n      NewErrorKV(\"intersect: error in polygonToPCPolygon\", { p1: p1, p2: p2 })\n    ];\n  }\n\n  // polygonClipping.intersection\n  const polygonIntersect = polygonClipping.intersection(tp1, tp2);\n  if (polygonIntersect == null || !polygonIntersect.length) {\n    return [[], null];\n  }\n\n  const resultPolys = [];\n\n  for (const poly of polygonIntersect[0]) {\n    const resultPoly = [];\n    for (const p of poly) {\n      resultPoly.push({ x: p[0] / cf, y: p[1] / cf });\n    }\n    // удаляем последнюю точку полигона потому что она всегда совпадает с первой\n    resultPoly.pop();\n    resultPolys.push(resultPoly);\n  }\n\n  return [resultPolys, null];\n}\n\n// Возвращает левый нижний и правый верхний углы описанного вокруг Polygon квадрата\nexport function getBoundingBorders(border: Polygon): Rectangle {\n  if (!border) {\n    console.error(\"bad border\", border);\n  }\n  const minX = border.reduce((previousValue, currentValue) =>\n    previousValue.x > currentValue.x ? currentValue : previousValue\n  ).x;\n  const minY = border.reduce((previousValue, currentValue) =>\n    previousValue.y > currentValue.y ? currentValue : previousValue\n  ).y;\n  const maxX = border.reduce((previousValue, currentValue) =>\n    previousValue.x < currentValue.x ? currentValue : previousValue\n  ).x;\n  const maxY = border.reduce((previousValue, currentValue) =>\n    previousValue.y < currentValue.y ? currentValue : previousValue\n  ).y;\n  return {\n    leftBottom: { x: minX, y: minY },\n    rightTop: { x: maxX, y: maxY }\n  };\n}\n\nexport function getVoronoiCellsInSquare(\n  centers: Point[],\n  leftBottom: Point,\n  rightTop: Point\n): [Record<number, Polygon>, ErrorKV] {\n  const turfPoints = centers.map(p => turf.point([p.x, p.y]));\n  const collection = turf.featureCollection(turfPoints);\n  const cells = turf.voronoi(collection, {\n    bbox: [leftBottom.x, leftBottom.y, rightTop.x, rightTop.y]\n  });\n  const cellMap: Record<number, Polygon> = {};\n  let index = 0;\n  for (const cell of cells.features) {\n    if (!cell) {\n      return [\n        {},\n        NewErrorKV(\"getVoronoiCellsInSquare: undefined cell\", {\n          centers,\n          leftBottom,\n          rightTop,\n          cells\n        })\n      ];\n    }\n    const cellBorder = cell.geometry!.coordinates[0].map(p => ({\n      x: p[0],\n      y: p[1]\n    }));\n    cellBorder.pop(); // удаляем последнюю точку полигона потому что она всегда совпадает с первой\n    cellMap[index] = cellBorder;\n    index++;\n  }\n\n  return [cellMap, null];\n}\n\nexport function getVoronoiCells(\n  outerBorder: Polygon, //(граница массива точек)\n  centers: Point[] //(точки внутри этой границы)\n): [VoronoiCell[], ErrorKV] {\n  if (!outerBorder) {\n    return [\n      [],\n      NewErrorKV(\"getVoronoiCells: bad outerBorder\", { outerBorder, centers })\n    ];\n  }\n  const bb = getBoundingBorders(outerBorder);\n  const [cellMap, err] = getVoronoiCellsInSquare(\n    centers,\n    bb.leftBottom,\n    bb.rightTop\n  );\n  if (err) {\n    return [\n      [],\n      NewErrorKV(\"getVoronoiCells: error in getVoronoiCellsInSquare\", {\n        err,\n        bb,\n        centers\n      })\n    ];\n  }\n\n  const res = [];\n  for (const index in centers) {\n    if (!cellMap[index]) {\n      return [\n        [],\n        NewErrorKV(\"Cannot find index in cellMap\", {\n          index: index,\n          centers: centers,\n          cellMap: cellMap,\n          BoundingBorders: bb,\n          outerBorder\n        })\n      ];\n    }\n\n    const [intersections, err] = intersect(cellMap[index], outerBorder); // мы хотим чтобы граница всех cell совпадала с outerBorder\n    if (intersections == null || err != null) {\n      return [\n        [],\n        NewErrorKV(\"getVoronoiCells error\", {\n          err,\n          cellBorder: cellMap[index],\n          outerBorder\n        })\n      ];\n    }\n\n    if (intersections == []) {\n      return [\n        [],\n        NewErrorKV(\"Voronoi cell has no intersection with outerBorder\", {\n          point: centers[index]\n        })\n      ];\n    }\n    if (intersections.length > 1) {\n      return [\n        [],\n        NewErrorKV(\n          \"Voronoi cell has more than one intersection with outerBorder\",\n          { point: centers[index] }\n        )\n      ];\n    }\n    res.push({\n      border: intersections[0],\n      center: centers[index]\n    });\n  }\n\n  return [res, null];\n}\n\nexport function getVoronoiCellRecords(\n  outerBorder: Polygon, //(граница массива точек)\n  centers: Record<string, Point> //(точки внутри этой границы)\n): [Record<string, Polygon>, ErrorKV] {\n  const result: Record<string, Polygon> = {};\n  const ids: string[] = [];\n  const centersArray: Point[] = [];\n  for (const id in centers) {\n    ids.push(id);\n    centersArray.push(centers[id]);\n  }\n\n  const [cells, err] = getVoronoiCells(outerBorder, centersArray);\n  if (err !== null) {\n    return [{}, err];\n  }\n  for (const i in ids) {\n    result[ids[i]] = cells[i].border;\n  }\n\n  return [result, null];\n}\n\nexport function polygonFill(\n  selectedNodeId: string,\n  currentNodeId: string,\n  selectedNodePreconditionIds: string[]\n): string {\n  if (selectedNodeId && selectedNodeId == currentNodeId) {\n    return \"#f3afaf\";\n  }\n  if (selectedNodePreconditionIds && selectedNodePreconditionIds.indexOf(currentNodeId) != -1) {\n    return \"#62f363\";\n  }\n  return \"transparent\";\n}\n\nexport function polygonFillOpacity(\n  selectedNodeId: string,\n  currentNodeId: string,\n  selectedNodePreconditionIds: string[]\n): string {\n  if (selectedNodeId && selectedNodeId == currentNodeId) {\n    return \"0.2\";\n  }\n  if (selectedNodePreconditionIds && selectedNodePreconditionIds.indexOf(currentNodeId) != -1) {\n    return \"0.2\";\n  }\n  return \"0\";\n}\n\nexport function polygonToPath(polygon: Polygon): string {\n  return polygon.map((point: Point) => `${point.x} ${point.y}`).join(\",\");\n}\n\nexport function treeToNodeRecord(tree: Tree): Record<number, NodeRecordItem> {\n  const nodeRecord: Record<string, NodeRecordItem> = {};\n  const stack: NodeRecordItem[] = [{ node: tree, parent: null }];\n  while (stack.length) {\n    const item = stack.pop();\n    if (!item) {\n      break;\n    }\n    nodeRecord[item.node.id] = item;\n    stack.push(\n      ...item.node.children.map(child => ({\n        node: child,\n        parent: item.node\n      }))\n    );\n  }\n\n  return nodeRecord;\n}\n\nexport function transferToPoint(vector: Vector, point: Point): Vector {\n  return {\n    from: {\n      x: point.x,\n      y: point.y\n    },\n    to: {\n      x: point.x + (vector.to.x - vector.from.x),\n      y: point.y + (vector.to.y - vector.from.y)\n    }\n  };\n}\n\nexport function pointToVector(p: Point): Vector {\n  return { from: { x: 0, y: 0 }, to: p };\n}\n\nexport function addVector(a: Vector, b: Vector): Vector {\n  const bTransferred = transferToPoint(b, a.to);\n  return {\n    from: { x: a.from.x, y: a.from.y },\n    to: { x: bTransferred.to.x, y: bTransferred.to.y }\n  };\n}\n\nexport function subtractVector(a: Vector, b: Vector): Vector {\n  return transferToPoint(\n    addVector(\n      { from: { x: b.from.x, y: b.from.y }, to: { x: -b.to.x, y: -b.to.y } },\n      a\n    ),\n    transferToPoint(b, a.from).to\n  );\n}\n\nexport function vectorOnNumber(a: Vector, c: number): Vector {\n  const aTr = transferToPoint(a, { x: 0, y: 0 });\n  return transferToPoint(\n    { from: { x: 0, y: 0 }, to: { x: aTr.to.x * c, y: aTr.to.y * c } },\n    a.from\n  );\n}\n\nexport function getRectangleCenter(s: Rectangle): Point {\n  const diagonal = subtractVector(\n    pointToVector(s.rightTop),\n    pointToVector(s.leftBottom)\n  );\n  return vectorOnNumber(diagonal, 1 / 2).to;\n}\n\nexport function transferPointOnVector(p: Point, v: Vector): Point {\n  return transferToPoint(v, p).to;\n}\n\n// math: https://web.archive.org/web/20060911055655/http://local.wasp.uwa.edu.au/~pbourke/geometry/lineline2d/\nexport function getVectorIntersection(v1: Vector, v2: Vector): Point | null {\n  const x1 = v1.from.x;\n  const y1 = v1.from.y;\n  const x2 = v1.to.x;\n  const y2 = v1.to.y;\n  const x3 = v2.from.x;\n  const y3 = v2.from.y;\n  const x4 = v2.to.x;\n  const y4 = v2.to.y;\n  const denom = (y4 - y3) * (x2 - x1) - (x4 - x3) * (y2 - y1);\n  const numeA = (x4 - x3) * (y1 - y3) - (y4 - y3) * (x1 - x3);\n  const numeB = (x2 - x1) * (y1 - y3) - (y2 - y1) * (x1 - x3);\n\n  if (denom == 0) {\n    return null;\n  }\n\n  const uA = numeA / denom;\n  const uB = numeB / denom;\n\n  if (uA >= 0 && uA <= 1 && uB >= 0 && uB <= 1) {\n    return {\n      x: x1 + uA * (x2 - x1),\n      y: y1 + uA * (y2 - y1)\n    };\n  }\n\n  return null;\n}\n\nexport function morphChildrenPoints(\n  oldBorder: Polygon,\n  newBorder: Polygon,\n  oldPoints: Record<string, Point>\n): [Record<string, Point> | null, ErrorKV] {\n  const oldCenterTf = turf.centerOfMass(polygonToTurf(oldBorder)).geometry;\n  if (oldCenterTf == null) {\n    return [\n      null,\n      NewErrorKV(\"morphChildrenPoints oldBorder centerOfMass error\", {\n        oldBorder: oldBorder,\n        oldPoints: oldPoints\n      })\n    ];\n  }\n  const newCenterTf = turf.centerOfMass(polygonToTurf(newBorder)).geometry;\n  if (newCenterTf == null) {\n    return [\n      null,\n      NewErrorKV(\"morphChildrenPoints newBorder centerOfMass error\", {\n        newBorder: newBorder,\n        oldPoints: oldPoints\n      })\n    ];\n  }\n  const oldCenter = {\n    x: oldCenterTf.coordinates[0],\n    y: oldCenterTf.coordinates[1]\n  };\n  const newCenter = {\n    x: newCenterTf.coordinates[0],\n    y: newCenterTf.coordinates[1]\n  };\n\n  // Move old node and its children to new node center\n  oldBorder = oldBorder.map(\n    (p): Point => {\n      return transferPointOnVector(p, { from: oldCenter, to: newCenter });\n    }\n  );\n  for (const id in oldPoints) {\n    oldPoints[id] = transferPointOnVector(oldPoints[id], {\n      from: oldCenter,\n      to: newCenter\n    });\n  }\n\n  // morph children\n  const maxDiameter = Math.max(\n    getVectorLength({\n      from: getBoundingBorders(oldBorder).leftBottom,\n      to: getBoundingBorders(oldBorder).rightTop\n    }),\n    getVectorLength({\n      from: getBoundingBorders(newBorder).leftBottom,\n      to: getBoundingBorders(newBorder).rightTop\n    })\n  );\n\n  const newPoints: Record<string, Point> = {};\n  for (const id in oldPoints) {\n    const oldPoint = oldPoints[id];\n    if (newCenter.x == oldPoint.x && newCenter.y == oldPoint.y) {\n      newPoints[id] = oldPoint;\n      continue;\n    }\n    let centerToPoint = { from: newCenter, to: oldPoints[id] };\n    // enlarge it to guarantee intersect with both newBorder and oldBorder (transferred to newBorder center)\n    centerToPoint = vectorOnNumber(\n      centerToPoint,\n      maxDiameter / getVectorLength(centerToPoint)\n    );\n    let oldBorderIntersection = null;\n    for (const i in oldBorder) {\n      const segment = {\n        from: oldBorder[i],\n        to: oldBorder[(Number(i) + 1) % oldBorder.length]\n      };\n      const p = getVectorIntersection(centerToPoint, segment);\n      if (p != null) {\n        oldBorderIntersection = p;\n        break;\n      }\n    }\n    if (oldBorderIntersection == null) {\n      return [\n        null,\n        NewErrorKV(\n          \"morphChildrenPoints cannot find intersection with oldBorder\",\n          {\n            centerToPoint: centerToPoint,\n            oldBorder: oldBorder\n          }\n        )\n      ];\n    }\n\n    let newBorderIntersection = null;\n    for (const i in newBorder) {\n      const segment = {\n        from: newBorder[i],\n        to: newBorder[(Number(i) + 1) % newBorder.length]\n      };\n      const p = getVectorIntersection(centerToPoint, segment);\n      if (p != null) {\n        newBorderIntersection = p;\n        break;\n      }\n    }\n    if (newBorderIntersection == null) {\n      return [\n        null,\n        NewErrorKV(\n          \"morphChildrenPoints cannot find intersection with newBorder\",\n          {\n            centerToPoint: centerToPoint,\n            newBorder: newBorder\n          }\n        )\n      ];\n    }\n\n    if (\n      oldBorderIntersection.x == newBorderIntersection.x &&\n      oldBorderIntersection.y == newBorderIntersection.y\n    ) {\n      newPoints[id] = oldPoint;\n      continue;\n    }\n\n    const coeff =\n      getVectorLength({ from: newCenter, to: newBorderIntersection }) /\n      getVectorLength({ from: newCenter, to: oldBorderIntersection });\n    newPoints[id] = vectorOnNumber({ from: newCenter, to: oldPoint }, coeff).to;\n  }\n\n  return [newPoints, null];\n}\n\nexport function NewEmptyVector(): Vector {\n  return { from: { x: 0, y: 0 }, to: { x: 0, y: 0 } };\n}\n\nexport function getMaxDiagonal(polygon: Polygon): [Vector, ErrorKV] {\n  if (!polygon || polygon.length < 3) {\n    return [\n      NewEmptyVector(),\n      NewErrorKV(\"getMaxDiagonal: bad polygon\", { polygon })\n    ];\n  }\n\n  const diagonals: Vector[] = [];\n  if (polygon.length == 3) {\n    // triangle does not has diagonals, so me emulate them\n    for (const i in polygon) {\n      const middle = vectorOnNumber(\n        {\n          from: polygon[mod(Number(i) - 1, polygon.length)],\n          to: polygon[mod(Number(i) + 1, polygon.length)]\n        },\n        1 / 2\n      );\n      diagonals.push({ from: polygon[i], to: middle.to });\n    }\n  } else {\n    for (const i in polygon) {\n      for (const j in polygon) {\n        if (\n          Number(j) != mod(Number(i) - 1, polygon.length) &&\n          Number(j) != Number(i) &&\n          Number(j) != mod(Number(i) + 1, polygon.length)\n        ) {\n          diagonals.push({ from: polygon[i], to: polygon[j] });\n        }\n      }\n    }\n  }\n\n  let maxDiagonal = diagonals[0];\n  for (const diag of diagonals) {\n    if (getVectorLength(diag) > getVectorLength(maxDiagonal)) {\n      maxDiagonal = diag;\n    }\n  }\n\n  return [maxDiagonal, null];\n}\n\nexport function convertPosition(\n  type: \"normalize\" | \"denormalize\",\n  position: Point,\n  parentID: string | null,\n  mapNodeLayers: Array<Record<string, MapNode>>\n): [Point | null, ErrorKV] {\n  let convertedPosition: Point;\n  if (parentID) {\n    const [parentMapNode] = findMapNode(parentID, mapNodeLayers);\n    if (!parentMapNode) {\n      return [\n        null,\n        NewErrorKV(\"UPDATE_NODE: Cannot findMapNode\", { id: parentID })\n      ];\n    }\n\n    let morphedPositions: Record<string, Point> | null, err: ErrorKV;\n    if (type === \"denormalize\") {\n      if (!isInside(position, NORMALIZED_BORDER)) {\n        return [\n          null,\n          NewErrorKV(\"convertPosition: position outside NORMALIZED_BORDER\", {\n            normalizedBorder: NORMALIZED_BORDER,\n            position,\n            parentID\n          })\n        ];\n      }\n      [morphedPositions, err] = morphChildrenPoints(\n        NORMALIZED_BORDER,\n        parentMapNode.border,\n        { tmp: position }\n      );\n    } else {\n      if (!isInside(position, parentMapNode.border)) {\n        return [\n          null,\n          NewErrorKV(\"convertPosition: position outside parentMapNode.border\", {\n            \"parentMapNode.border\": parentMapNode.border,\n            \"parentMapNode.center\": parentMapNode.center,\n            position,\n            parentID\n          })\n        ];\n      }\n      [morphedPositions, err] = morphChildrenPoints(\n        parentMapNode.border,\n        NORMALIZED_BORDER,\n        { tmp: position }\n      );\n      if (err !== null) {\n        return [\n          null,\n          NewErrorKV(\"UPDATE_NODE: Cannot morphChildrenPoints\", {\n            type: type,\n            normalizedBorder: NORMALIZED_BORDER,\n            \"parentMapNode.border\": parentMapNode.border,\n            \"dbNode.position\": position\n          })\n        ];\n      }\n      // make sure that after normalization position is strictly inside border\n      if (morphedPositions![\"tmp\"].x < 0) {\n        morphedPositions![\"tmp\"].x = 1;\n      }\n      if (morphedPositions![\"tmp\"].x > api.ST_WIDTH) {\n        morphedPositions![\"tmp\"].x = api.ST_WIDTH - 1;\n      }\n      if (morphedPositions![\"tmp\"].y < 0) {\n        morphedPositions![\"tmp\"].y = 1;\n      }\n      if (morphedPositions![\"tmp\"].y > api.ST_HEIGHT) {\n        morphedPositions![\"tmp\"].y = api.ST_HEIGHT - 1;\n      }\n    }\n    if (err !== null) {\n      return [\n        null,\n        NewErrorKV(\"UPDATE_NODE: Cannot morphChildrenPoints\", {\n          type: type,\n          normalizedBorder: NORMALIZED_BORDER,\n          \"parentMapNode.border\": parentMapNode.border,\n          \"dbNode.position\": position\n        })\n      ];\n    }\n    convertedPosition = morphedPositions![\"tmp\"];\n  } else {\n    if (type === \"denormalize\") {\n      convertedPosition = { x: api.ROOT_WIDTH / 2, y: api.ROOT_HEIGHT / 2 };\n    } else {\n      convertedPosition = { x: api.ST_WIDTH / 2, y: api.ST_HEIGHT / 2 };\n    }\n  }\n\n  return [convertedPosition, null];\n}\n\n/**\n *\n * @param tree\n * @param rootBorder\n * @param rootPosition\n */\nexport function treeToMapNodeLayers(\n  tree: Tree,\n  rootBorder: Polygon,\n  rootPosition: Point\n): [Array<Record<string, MapNode>> | null, ErrorKV] {\n  if (Object.keys(tree).length == 0) {\n    return [[], null];\n  }\n  const treeLayers: Array<Array<Tree>> = [[tree]];\n  const mapNodeLayers: Array<Record<string, MapNode>> = [\n    {\n      [tree.id]: {\n        id: tree.id,\n        border: rootBorder,\n        title: tree.title,\n        center: rootPosition\n      }\n    }\n  ];\n  /*eslint no-constant-condition: [\"error\", { \"checkLoops\": false }]*/\n  while (true) {\n    const lastTreeLayer = treeLayers[treeLayers.length - 1];\n    const lastMapNodeLayer = mapNodeLayers[treeLayers.length - 1];\n    const newTreeLayer = [];\n    const newMapNodeLayer: Record<string, MapNode> = {};\n    for (const treeNode of lastTreeLayer) {\n      if (!treeNode.children) {\n        return [\n          null,\n          NewErrorKV(\"treeToMapNodeLayers: treeNode with children undefined\", {\n            treeNode\n          })\n        ];\n      }\n      if (!treeNode.children.length) {\n        continue;\n      }\n\n      // check that no two children have the same center\n      const tmpMap = {} as Record<string, string>\n      let strPos = \"\"\n      for (const i in treeNode.children) {\n        strPos = JSON.stringify(treeNode.children[i].position)\n        if (tmpMap[strPos] && tmpMap[strPos].length > 0) {\n          return [\n            null,\n            NewErrorKV(\"two children has the same center\", {\n              firstId: tmpMap[strPos],\n              secondId: treeNode.children[i].id\n            })\n          ];\n        } else {\n          tmpMap[strPos] = treeNode.children[i].id\n        }\n      }\n\n      newTreeLayer.push(...treeNode.children);\n      if (!lastMapNodeLayer[treeNode.id]) {\n        return [\n          null,\n          NewErrorKV(\"Cannot find node in mapNodeLayers\", {\n            layer: mapNodeLayers[mapNodeLayers.length - 1],\n            treeNode: treeNode\n          })\n        ];\n      }\n\n      // denormalize positions\n      const treeNodeChildren = clone(treeNode.children) as Array<Tree>;\n      for (const child of treeNodeChildren) {\n        const [denormalizedPosition, err] = convertPosition(\n          \"denormalize\",\n          child.position,\n          treeNode.id,\n          [lastMapNodeLayer]\n        );\n        if (err) {\n          return [null, err];\n        }\n        child.position = denormalizedPosition!;\n      }\n      const [cells, error] = getVoronoiCells(\n        lastMapNodeLayer[treeNode.id].border,\n        treeNodeChildren.map(ch => ({ x: ch.position.x, y: ch.position.y }))\n      );\n      if (error != null) {\n        return [null, error];\n      }\n\n      for (const cell of cells) {\n        for (const child of treeNodeChildren) {\n          if (\n            child.position.x == cell.center.x &&\n            child.position.y == cell.center.y\n          ) {\n            newMapNodeLayer[child.id] = {\n              id: child.id,\n              title: child.title,\n              center: child.position,\n              border: cell.border\n            };\n          }\n        }\n      }\n    }\n\n    if (newTreeLayer.length) {\n      treeLayers.push(newTreeLayer);\n      mapNodeLayers.push(newMapNodeLayer);\n    } else {\n      return [mapNodeLayers, null];\n    }\n  }\n}\n\nexport function mergeMapNodeLayers(\n  recipientLayers: Record<string, MapNode>[],\n  insertedLayers: Record<string, MapNode>[],\n  startFromLevel: number\n): ErrorKV {\n  if (startFromLevel >= recipientLayers.length || startFromLevel < 0) {\n    return NewErrorKV(\n      \"startFromLevel >= recipientLayers.length or startFromLevel < 0\",\n      {\n        startFromLevel,\n        \"recipientLayers.length\": recipientLayers.length\n      }\n    );\n  }\n  let i = startFromLevel;\n  while (i < startFromLevel + insertedLayers.length) {\n    for (const id in insertedLayers[i - startFromLevel]) {\n      recipientLayers[i][id] = insertedLayers[i - startFromLevel][id];\n    }\n    i++;\n  }\n\n  return null;\n}\n","import { MapNode, Point, Tree } from \"@/types/graphics\";\nimport {\n  convertPosition,\n  isInside,\n  treeToMapNodeLayers,\n  treeToNodeRecord\n} from \"@/tools/graphics\";\nimport { findMapNode, updatePosition } from \"@/store/tree/helpers\";\nimport { ErrorKV } from \"@/types/errorkv\";\nimport NewErrorKV from \"@/tools/errorkv\";\nimport { DBNode } from \"@/api/types\";\nimport { printError, round } from \"@/tools/utils\";\nimport api from \"@/api/api\";\nimport {Commit, Dispatch} from \"vuex\";\nconst XSkew = api.ROOT_WIDTH / 7;\nconst ROOT_BORDER = [\n  { x: XSkew, y: 0 },\n  { x: 0, y: 0.3 * api.ROOT_HEIGHT },\n  { x: 0, y: 0.7 * api.ROOT_HEIGHT },\n  { x: XSkew, y: api.ROOT_HEIGHT },\n  { x: 0.3 * (api.ROOT_WIDTH - 2 * XSkew) + XSkew, y: 1.1 * api.ROOT_HEIGHT },\n  { x: 0.6 * (api.ROOT_WIDTH - 2 * XSkew) + XSkew, y: 1.1 * api.ROOT_HEIGHT },\n  { x: api.ROOT_WIDTH - 2 * XSkew + XSkew, y: api.ROOT_HEIGHT },\n  { x: api.ROOT_WIDTH, y: 0.7 * api.ROOT_HEIGHT },\n  { x: api.ROOT_WIDTH, y: 0.3 * api.ROOT_HEIGHT },\n  { x: api.ROOT_WIDTH - XSkew, y: 0 },\n  {\n    x: api.ROOT_WIDTH - XSkew - 0.3 * (api.ROOT_WIDTH - 2 * XSkew),\n    y: -0.1 * api.ROOT_HEIGHT\n  },\n  {\n    x: api.ROOT_WIDTH - XSkew - 0.7 * (api.ROOT_WIDTH - 2 * XSkew),\n    y: -0.1 * api.ROOT_HEIGHT\n  }\n];\nconst ROOT_CENTER = { x: api.ROOT_WIDTH / 2, y: api.ROOT_HEIGHT / 2 };\n\nexport interface NodeRecordItem {\n  node: Tree;\n  parent: Tree | null;\n}\n\nexport interface State {\n  tree: Tree | null;\n  nodeRecord: Record<string, NodeRecordItem>;\n  mapNodeLayers: Array<Record<string, MapNode>>;\n  selectedNodeId: string | null;\n}\n\nexport const mutations = {\n  SET_SELECTED_NODE_ID: \"SET_SELECTED_NODE_ID\",\n  SET_TREE: \"SET_TREE\",\n  UPDATE_NODE_POSITION: \"UPDATE_NODE_POSITION\",\n  REMOVE_NODE: \"REMOVE_NODE\"\n};\n\nexport const actions = {\n  handleMapNodeUpdate: \"handleMapNodeUpdate\"\n};\n\nexport const store = {\n  namespaced: true,\n  state() {\n    return {\n      tree: null,\n      nodeRecord: {} as Record<string, NodeRecordItem>, // id => NodeRecordItem\n      mapNodeLayers: [] as Array<Record<string, MapNode>>,\n      selectedNodeId: null\n    };\n  },\n\n  getters: {\n    selectedNode: (state: State) => {\n      if (!state.selectedNodeId) {\n        return null;\n      }\n      if (!state.nodeRecord[state.selectedNodeId]) {\n        return null;\n      }\n      return state.nodeRecord[state.selectedNodeId].node;\n    }\n  },\n\n  actions: {\n    /**\n     * Update tree and dependant structures on DBNode change\n     *\n     * После добавления нового узла мы не вносим изменения локально, а сохраняем в базу и ждем пока оттуда придет обновление\n     *\n     * Маппинг изменений в виде снэпшотов на изменения в формате store/history выглядит следующим образом.\n     * Мы сравниваем наш узел и пришедший новый снэпшот этого узла\n     *\n     * Если видим удаление child, то это либо перенос, либо удаление узла.\n     * В любом случае мы можем у себя удалить этот узел (мы не удаляем всю информацию, только из дерева - 'fake removal').\n     * Если это перенос, то мы либо получили событие добавления в другой узел\n     * до этого события, либо получим его после. Если получили до, то из этого узла уже должны были его удалить,\n     * так что остается вариант когда мы еще получим событие о добавлении. В этом случаем для нас это будет добавление нового узла.\n     * То есть мы запросим из базы этот узел и вставим его\n     *\n     * Если видим добавление child, то это либо перенос, либо добавление нового узла. Если мы не находим у себя child с таким id,\n     * то это добавление - нам нужно запросить из базы node с таким id и добавить его к себе.\n     * Если в nodeRecord есть такой узел, то это перенос - мы удаляем его из старого родителя и вставляем в новый\n     *\n     * Этими двумя кейсами покрываются события добавления, удаления и переноса.\n     * Событие изменения имени и позиции мапятся тривиально\n     *\n     * @param commit\n     * @param state\n     * @param dispatch\n     * @param dbNode\n     */\n    async [actions.handleMapNodeUpdate](\n      { commit, state, dispatch }: { commit: Commit; state: State; dispatch: Dispatch },\n      dbNode: DBNode\n    ) {\n      const dbNodeRecord = state.nodeRecord[dbNode.id];\n      if (!dbNodeRecord) {\n        printError(\"UPDATE_NODE: Cannot find dbNode in dbNodeRecord\", {\n          \"dbNode.id\": dbNode.id\n        });\n        return;\n      }\n\n      const oldDBNode = {\n        id: dbNodeRecord.node.id,\n        parentID: dbNodeRecord.parent ? dbNodeRecord.parent.id : null,\n        name: dbNodeRecord.node.title,\n        children: dbNodeRecord.node.children.map(n => n.id).sort(),\n        position: dbNodeRecord.node.position\n      };\n\n      const newChildren = dbNode.children.filter(\n        x => !oldDBNode.children.includes(x)\n      );\n      const removedChildren = oldDBNode.children.filter(\n        x => !dbNode.children.includes(x)\n      );\n\n      // Add/move of new child\n      if (newChildren.length) {\n        for (const childID of newChildren) {\n          if (state.nodeRecord[childID]) {\n            console.log(\n              \"actions.handleDBUpdate: remove node for cut-and-paste\",\n              state.nodeRecord[childID]\n            );\n            // if we already have this node, then it is cut-and-paste new parent\n            // so we should remove node from old parent\n            const v = {\n              nodeID: childID,\n              returnError: null\n            };\n            commit(mutations.REMOVE_NODE, {\n              nodeID: childID,\n              returnError: null\n            });\n            if (v.returnError) {\n              printError(\"handleDBUpdate: cannot cut node\", {\n                err: v.returnError\n              });\n            }\n          }\n\n          // request node and its children from the server, fill in tree\n          const addedDBNode = await api.getNode(childID);\n          console.log(\n            \"actions.handleDBUpdate: add node for cut-and-paste\",\n            addedDBNode\n          );\n\n          const toProcess = [addedDBNode];\n          if (!addedDBNode) {\n            // we cannot find node for addition, remove it from parent\n            dbNode.children = dbNode.children.filter(\n              id => id != childID\n            );\n            printError(\"Cannot find node for addition\", { nodeID: childID });\n            continue;\n          }\n          while (toProcess.length) {\n            const inProcessNode = toProcess.pop();\n            if (!inProcessNode) {\n              continue;\n            }\n            // create new MapNode\n            const treeNode = {\n              id: inProcessNode.id,\n              title: inProcessNode.name,\n              position: inProcessNode.position,\n              children: [],\n            } as Tree;\n            if (!state.nodeRecord[inProcessNode.parentID]) {\n              printError(\"Cannot find nodeID in nodeRecord\", {\n                nodeID: inProcessNode.parentID\n              });\n              return;\n            }\n            // make sure we have no duplicates\n            state.nodeRecord[\n              inProcessNode.parentID\n            ].node.children = state.nodeRecord[\n              inProcessNode.parentID\n            ].node.children.filter(n => n.id != treeNode.id);\n            // add child to parent\n            state.nodeRecord[inProcessNode.parentID].node.children.push(\n              treeNode\n            );\n            // add child to nodeRecord\n            state.nodeRecord[treeNode.id] = {\n              parent: state.nodeRecord[inProcessNode.parentID].node,\n              node: treeNode\n            };\n            // subscribe to new node changes\n            api.subscribeMapNodeChange(treeNode.id, (dbNode: DBNode) => dispatch(actions.handleMapNodeUpdate, dbNode))\n            for (const childID of inProcessNode.children) {\n              const childNode = await api.getNode(childID);\n              if (!childNode) {\n                // we cannot find node for addition, remove it from parent\n                inProcessNode.children = inProcessNode.children.filter(\n                  id => id != childID\n                );\n                printError(\"Cannot find node for addition\", {\n                  nodeID: childID\n                });\n                continue;\n              }\n              toProcess.push(childNode);\n            }\n          }\n        }\n      }\n\n      // Remove of child\n      if (removedChildren.length) {\n        for (const childID of removedChildren) {\n          if (!state.nodeRecord[childID] || !state.nodeRecord[childID].parent) {\n            // node was already removed somewhere\n            continue;\n          }\n          if (\n            state.nodeRecord[childID] &&\n            state.nodeRecord[childID].parent!.id !== dbNode.id\n          ) {\n            // node was already removed from this parent (this is cut-and-paste operation)\n            continue;\n          }\n          console.log(\n            \"actions.handleDBUpdate: removing children\",\n            state.nodeRecord[childID]\n          );\n          const v = { nodeID: childID, returnError: null };\n          commit(mutations.REMOVE_NODE, v);\n          if (v.returnError) {\n            printError(\"actions.handleDBUpdate: cannot remove node\", {\n              err: v.returnError,\n              id: childID\n            });\n          }\n          // unsubscribe from removed node changes\n          api.unsubscribeMapNodeChange(childID)\n        }\n      }\n\n      if (removedChildren.length || newChildren.length) {\n        const [ls, err2] = treeToMapNodeLayers(\n          state.tree!,\n          ROOT_BORDER,\n          ROOT_CENTER\n        );\n        if (err2) {\n          printError(\"Cannot treeToMapNodeLayers\", { err: err2 });\n          return;\n        }\n        state.mapNodeLayers = ls!;\n      }\n\n      // Change of position\n      if (\n        round(dbNode.position.x) !== round(oldDBNode.position.x) ||\n        round(dbNode.position.y) !== round(oldDBNode.position.y)\n      ) {\n        // calculate denormalized position of dbNode\n        const [denormalizedPosition] = convertPosition(\n          \"denormalize\",\n          dbNode.position,\n          dbNodeRecord.parent ? dbNodeRecord.parent.id : null,\n          state.mapNodeLayers\n        );\n        if (oldDBNode.parentID == dbNode.parentID) {\n          // we do not want to process position change due to parent change - it is already processed by ADD_NODE\n          const v = {\n            nodeId: dbNode.id,\n            newCenter: denormalizedPosition,\n            returnError: null\n          };\n          commit(mutations.UPDATE_NODE_POSITION, v);\n          if (v.returnError !== null) {\n            printError(\n              \"actions.handleDBUpdate: cannot update node's position\",\n              { \"dbNode\": dbNode, err: v.returnError }\n            );\n            return;\n          }\n        }\n      }\n\n      // Change of name\n      if (oldDBNode.name !== dbNode.name) {\n        dbNodeRecord.node.title = dbNode.name;\n        const [node] = findMapNode(oldDBNode.id, state.mapNodeLayers);\n        if (!node) {\n          return;\n        }\n        node.title = dbNode.name;\n      }\n    }\n  },\n  mutations: {\n    /**\n     * REMOVE_NODE\n     * @param state\n     * @param v\n     */\n    [mutations.REMOVE_NODE](\n      state: State,\n      v: { nodeID: string; returnError: ErrorKV }\n    ) {\n      if (state.tree === null) {\n        v.returnError = NewErrorKV(\"state.tree === null\", {});\n        return;\n      }\n\n      if (!state.nodeRecord[v.nodeID]) {\n        v.returnError = NewErrorKV(\n          \"REMOVE_NODE: cannot find nodeId in nodeRecord\",\n          { nodeID: v.nodeID, nodeRecord: state.nodeRecord }\n        );\n        return;\n      }\n      const parent = state.nodeRecord[v.nodeID].parent;\n      if (!parent) {\n        v.returnError = NewErrorKV(\"REMOVE_NODE: cannot remove root node\", {\n          nodeId: v.nodeID\n        });\n        return;\n      }\n\n      // remove node and its descendants from nodeRecord\n      const stack = [v.nodeID];\n      while (stack.length) {\n        const id = stack.pop();\n        if (!id) {\n          continue;\n        }\n        stack.push(...state.nodeRecord[id].node.children.map(node => node.id));\n        delete state.nodeRecord[id];\n      }\n\n      // remove from parent's children\n      const ind = parent.children.findIndex(node => node.id === v.nodeID);\n      parent.children.splice(ind, 1);\n    },\n\n    /**\n     * SET_SELECTED_NODE_ID\n     * @param state\n     * @param id\n     */\n    [mutations.SET_SELECTED_NODE_ID](state: State, id: string | null) {\n      state.selectedNodeId = id;\n    },\n\n    /**\n     * SET_TREE\n     * @param state\n     * @param tree\n     */\n    [mutations.SET_TREE](state: State, tree: Tree | null) {\n      if (tree == null) {\n        state.tree = null;\n        state.nodeRecord = {};\n        state.mapNodeLayers = [];\n        return;\n      }\n      state.tree = tree;\n\n      // traverse tree and fill in nodeRecord\n      state.nodeRecord = treeToNodeRecord(tree);\n\n      // fill state.mapNodeLayers\n      const [ls, err] = treeToMapNodeLayers(tree, ROOT_BORDER, ROOT_CENTER);\n      if (ls == null || err != null) {\n        console.error(err);\n        return;\n      }\n      state.mapNodeLayers = ls;\n    },\n\n    /**\n     * UPDATE_NODE_POSITION\n     * @param state\n     * @param v\n     */\n    [mutations.UPDATE_NODE_POSITION](\n      state: State,\n      v: {\n        nodeId: string;\n        newCenter: Point;\n        returnError: ErrorKV; // still waiting for vuex to implement mutation return values https://github.com/vuejs/vuex/issues/1437\n      }\n    ) {\n      // check that new position is inside parent borders\n      const parent = state.nodeRecord[v.nodeId].parent;\n      if (parent !== null) {\n        const [parentMapNode] = findMapNode(parent.id, state.mapNodeLayers);\n        if (!parentMapNode) {\n          v.returnError = NewErrorKV(\n            \"UPDATE_NODE_POSITION: cannot find parent mapNode\",\n            {\n              \"parent.id\": parent.id,\n              \"state.mapNodeLayers\": state.mapNodeLayers\n            }\n          );\n          return;\n        }\n\n        if (!isInside(v.newCenter, parentMapNode.border)) {\n          v.returnError = NewErrorKV(\"!isInside\", {\n            newCenter: v.newCenter,\n            \"parentMapNode.border\": parentMapNode.border\n          });\n          return;\n        }\n      }\n\n      v.returnError = updatePosition(state, {\n        nodeId: v.nodeId,\n        position: v.newCenter\n      });\n    }\n  }\n};\n","import { Point } from \"@/types/graphics\";\n\nexport const mutations = {\n  ADD_CUT_PASTE: \"ADD_CUT_PASTE\",\n  ADD_CREATE: \"ADD_CREATE\",\n  ADD_REMOVE: \"ADD_REMOVE\",\n  ADD_POSITION_CHANGE: \"ADD_POSITION_CHANGE\"\n};\n\nenum changeTypeEnum {\n  CUT_PASTE = \"CUT_PASTE\",\n  CREATE = \"CREATE\",\n  REMOVE = \"REMOVE\",\n  POSITION_CHANGE = \"POSITION_CHANGE\"\n}\n\nconst changeTypes = {\n  CUT_PASTE: \"CUT_PASTE\" as changeTypeEnum.CUT_PASTE,\n  CREATE: \"CREATE\" as changeTypeEnum.CREATE,\n  REMOVE: \"REMOVE\" as changeTypeEnum.REMOVE,\n  POSITION_CHANGE: \"POSITION_CHANGE\" as changeTypeEnum.POSITION_CHANGE\n};\n\nexport interface CHCutPaste {\n  nodeID: string; // object of change\n  oldParentID: string; // old parent\n  newParentID: string; // new parent\n}\n\nexport interface CHCreate {\n  nodeID: string; // object of change\n  parentID: string; // new parent\n}\n\nexport interface CHRemove {\n  nodeID: string; // object of change\n  parentID: string; // parent where object sits (we need it to revert this event)\n}\n\nexport interface CHPositionChange {\n  nodeID: string; // object of change\n  oldPosition: Point; // old position (we need it to revert this event)\n  newPosition: Point; // new position\n}\n\nexport type TreeChangeList = Record<\n  string,\n  {\n    [changeTypeEnum.CUT_PASTE]?: CHCutPaste;\n    [changeTypeEnum.CREATE]?: CHCreate;\n    [changeTypeEnum.REMOVE]?: CHRemove;\n    [changeTypeEnum.POSITION_CHANGE]?: CHPositionChange;\n  }\n>;\n\nexport interface State {\n  // список изменений который отличает текущую мастер ветку\n  // от того мастера с которого мы начали локальные изменения\n  stableChangeList: TreeChangeList;\n  // список локальных изменений\n  localChangeList: TreeChangeList;\n}\n\nexport const store = {\n  namespaced: true,\n  state: {\n    stableChangeList: {},\n    localChangeList: {}\n  },\n  mutations: {\n    [mutations.ADD_CUT_PASTE](state: State, change: CHCutPaste) {\n      if (!state.localChangeList[change.nodeID]) {\n        state.localChangeList[change.nodeID] = {};\n      }\n      if (state.localChangeList[change.nodeID][changeTypes.CREATE]) {\n        // if user ADDed then MOVEd node then it is simply addition to CUT_PASTE newParentID\n        state.localChangeList[change.nodeID][changeTypes.CREATE]!.parentID =\n          change.newParentID;\n      } else {\n        state.localChangeList[change.nodeID][changeTypes.CUT_PASTE] = change;\n      }\n    },\n    [mutations.ADD_CREATE](state: State, change: CHCreate) {\n      if (!state.localChangeList[change.nodeID]) {\n        state.localChangeList[change.nodeID] = {};\n      }\n      state.localChangeList[change.nodeID][changeTypes.CREATE] = change;\n    },\n    [mutations.ADD_REMOVE](state: State, change: CHRemove) {\n      // clear changelist for this node because REMOVE vanishes them anyway\n      state.localChangeList[change.nodeID] = {};\n      state.localChangeList[change.nodeID][changeTypes.REMOVE] = change;\n    },\n    [mutations.ADD_POSITION_CHANGE](state: State, change: CHPositionChange) {\n      if (!state.localChangeList[change.nodeID]) {\n        state.localChangeList[change.nodeID] = {};\n      }\n      let firstOldPosition = change.oldPosition;\n      if (state.localChangeList[change.nodeID][changeTypes.POSITION_CHANGE]) {\n        firstOldPosition = state.localChangeList[change.nodeID][\n          changeTypes.POSITION_CHANGE\n        ]!.oldPosition;\n      }\n      state.localChangeList[change.nodeID][changeTypes.POSITION_CHANGE] = {\n        nodeID: change.nodeID,\n        oldPosition: firstOldPosition,\n        newPosition: change.newPosition\n      };\n    }\n  },\n  actions: {}\n};\n","import { Point, Vector } from \"@/types/graphics\";\nimport { addVector, vectorOnNumber } from \"@/tools/graphics\";\nimport { debounce } from \"lodash\";\n\nexport interface State {\n  zoom: number;\n  zoomCenter: Point;\n  pan: Point;\n  debouncedZoom: number;\n  debouncedPan: Point;\n}\n\nexport const mutations = {\n  ADD_ZOOM: \"ADD_ZOOM\",\n  ADD_PAN: \"ADD_PAN\",\n  SET_PAN: \"SET_PAN\",\n  SET_ZOOM_CENTER: \"SET_ZOOM_CENTER\"\n};\n\nconst zoomDebounce = debounce((state, value: number) => {\n  state.debouncedZoom = value;\n}, 100);\n\nconst panDebounce = debounce((state, value: Point) => {\n  state.debouncedPan = value;\n}, 100);\n\nconst ZOOM_SENSITIVITY = 1 / 500;\nconst PAN_SENSITIVITY = 1;\n\nexport const store = {\n  namespaced: true,\n  state: {\n    zoom: 1,\n    pan: { x: 0, y: 0 },\n    debouncedZoom: 1,\n    debouncedPan: { x: 0, y: 0 },\n    zoomCenter: { x: 0, y: 0 }\n  },\n  mutations: {\n    [mutations.SET_ZOOM_CENTER](state: State, center: Point) {\n      state.zoomCenter = center;\n    },\n    [mutations.ADD_ZOOM](state: State, delta: number) {\n      const newZoom= state.zoom * Math.pow(2, delta * ZOOM_SENSITIVITY);\n      if (newZoom < 0.5) {\n        // foolproof from too much zoom\n        return\n      }\n      state.zoom = newZoom\n      zoomDebounce(state, state.zoom);\n    },\n    [mutations.ADD_PAN](state: State, delta: Vector) {\n      state.pan = addVector(\n        { from: { x: 0, y: 0 }, to: state.pan },\n        vectorOnNumber(delta, PAN_SENSITIVITY)\n      ).to;\n      panDebounce(state, state.pan);\n    },\n    [mutations.SET_PAN](state: State, point: Point) {\n      state.pan = point;\n      panDebounce(state, state.pan);\n    }\n  }\n};\n","import firebase from \"firebase\";\nimport api from \"@/api/api\";\nimport { Commit } from \"vuex\";\n\nexport interface State {\n  user: firebase.User | null;\n}\n\nexport const mutations = {\n  SET_USER: \"SET_USER\"\n};\nexport const actions = {\n  signIn: \"signIn\",\n  signOut: \"signOut\"\n};\n\nexport const store = {\n  namespaced: true,\n  state: {\n    user: null\n  },\n  mutations: {\n    [mutations.SET_USER](state: State, user: firebase.User) {\n      state.user = user;\n    }\n  },\n  actions: {\n    async [actions.signIn]({ commit }: { commit: Commit }) {\n      await firebase\n        .auth()\n        .signInWithPopup(new firebase.auth.GoogleAuthProvider());\n    },\n\n    async [actions.signOut]({ commit }: { commit: Commit }) {\n      await firebase.auth().signOut();\n      commit(mutations.SET_USER, null);\n    }\n  }\n};\n","import { clone, printError } from \"@/tools/utils\";\nimport { Commit } from \"vuex\";\nimport api from \"@/api/api\";\nimport { ErrorKV } from \"@/types/errorkv\";\nimport { State as UserState } from \"@/store/user\";\n\nexport type NodeContent = {\n  nodeID: string;\n  content: string;\n};\n\n// user private comment\nexport type NodeComment = {\n  nodeID: string;\n  comment: string;\n};\n\nexport interface State {\n  nodeContents: Record<string, NodeContent>;\n  userNodeComments: Record<string, NodeComment>;\n}\n\nexport const mutations = {\n  SET_CONTENTS: \"SET_CONTENTS\",\n  SET_USER_COMMENTS: \"SET_USER_COMMENTS\",\n  SET_NODE_CONTENT: \"SET_NODE_CONTENT\",\n  SET_NODE_COMMENT: \"SET_NODE_COMMENT\",\n};\n\nexport const actions = {\n  getNodeContent: \"getNodeContent\",\n  setNodeContent: \"setNodeContent\",\n  setNodeComment: \"setNodeComment\",\n};\n\nexport const EmptyNodeContent = {\n  nodeID: \"\",\n  content: \"\",\n} as NodeContent;\n\nfunction createContentIfNotExist(\n  nodeContents: Record<string, NodeContent>,\n  nodeID: string\n) {\n  if (!nodeContents[nodeID]) {\n    nodeContents[nodeID] = clone(EmptyNodeContent);\n    nodeContents[nodeID].nodeID = nodeID;\n  }\n}\n\nexport const EmptyNodeComment = {\n  nodeID: \"\",\n  comment: \"\"\n} as NodeComment;\n\nfunction createCommentIfNotExist(\n  userNodeComments: Record<string, NodeComment>,\n  nodeID: string\n) {\n  if (!userNodeComments[nodeID]) {\n    userNodeComments[nodeID] = clone(EmptyNodeComment);\n    userNodeComments[nodeID].nodeID = nodeID;\n  }\n}\n\nexport const store = {\n  namespaced: true,\n  state: {\n    nodeContents: {} as Record<string, NodeContent>,\n    userNodeComments: {} as Record<string, NodeComment>\n  } as State,\n  actions: {\n    [actions.getNodeContent](\n      { state }: { state: State },\n      nodeID: string\n    ): NodeContent {\n      return state.nodeContents[nodeID];\n    },\n\n    /**\n     * setNodeComment\n     * @param commit\n     * @param state\n     * @param v\n     */\n    async [actions.setNodeComment](\n      { commit, rootState }: { commit: Commit; rootState: { user: UserState } },\n      v: { nodeID: string; comment: string }\n    ): Promise<ErrorKV> {\n      // cannot save for unauthorized user\n      if (!rootState.user.user || rootState.user.user.isAnonymous) {\n        return null;\n      }\n\n      // add to DB\n      const err = await api.debouncedUpdate({\n        [`user_data/${rootState.user.user.uid}/comment/${v.nodeID}/nodeID`]: v.nodeID,\n        [`user_data/${rootState.user.user.uid}/comment/${v.nodeID}/comment`]: v.comment\n      });\n      if (err) {\n        return err;\n      }\n\n      // change in local store\n      commit(`${mutations.SET_NODE_COMMENT}`, v);\n\n      return null;\n    },\n\n    /**\n     * setNodeContent\n     * @param commit\n     * @param state\n     * @param v\n     */\n    async [actions.setNodeContent](\n      { commit, state }: { commit: Commit; state: State },\n      v: { nodeID: string; content: string }\n    ): Promise<ErrorKV> {\n      // change in local store before adding to DB for comfortable textbox editing experience\n      commit(`${mutations.SET_NODE_CONTENT}`, v);\n\n      // add to DB\n      const err = await api.debouncedUpdate({\n        [`node_content/${v.nodeID}/nodeID`]: v.nodeID,\n        [`node_content/${v.nodeID}/content`]: v.content\n      });\n      if (err) {\n        return err;\n      }\n\n      return null;\n    }\n  },\n  mutations: {\n    /**\n     * SET_CONTENTS\n     * @param state\n     * @param nodeContents\n     */\n    [mutations.SET_CONTENTS](\n      state: State,\n      nodeContents: Record<string, NodeContent>\n    ) {\n      state.nodeContents = nodeContents;\n    },\n\n    /**\n     * SET_USER_CONTENTS\n     * @param state\n     * @param userNodeComments\n     */\n    [mutations.SET_USER_COMMENTS](\n      state: State,\n      userNodeComments: Record<string, NodeComment>\n    ) {\n      state.userNodeComments = userNodeComments;\n    },\n\n    /**\n     * SET_NODE_CONTENT\n     * @param state\n     * @param v\n     */\n    [mutations.SET_NODE_CONTENT](\n      state: State,\n      v: { nodeID: string; content: string }\n    ) {\n      createContentIfNotExist(state.nodeContents, v.nodeID);\n      state.nodeContents[v.nodeID].content = v.content;\n    },\n\n    /**\n     * SET_NODE_COMMENT\n     * @param state\n     * @param v\n     */\n    [mutations.SET_NODE_COMMENT](\n      state: State,\n      v: { nodeID: string; comment: string }\n    ) {\n      createCommentIfNotExist(state.userNodeComments, v.nodeID);\n      state.userNodeComments[v.nodeID].comment = v.comment;\n    },\n  }\n};\n","import firebase from \"firebase\";\nimport api from \"@/api/api\";\nimport { mutations as treeMutations, actions as treeActions } from \"@/store/tree\";\nimport { mutations as pinMutations } from \"@/store/pin\";\nimport { mutations as preconditionMutations } from \"@/store/precondition\";\nimport {\n  mutations as nodeContentMutations,\n  NodeContent\n} from \"@/store/node_content\";\nimport { store } from \"@/store/index\";\nimport { printError } from \"@/tools/utils\";\nimport { convertDBMapToTree } from \"@/api/helpers\";\nimport { DBNode } from \"@/api/types\";\n\n/**\n * 1) fetch map\n * 2) subscribe to changes\n * 3) convert to tree and set to internal store\n * @param user\n */\nexport async function initMap(user: firebase.User | null) {\n  const [map, err] = await api.getMap(user);\n  if (map === null || err) {\n    printError(\"fetchMap: cannot api.getMap(user)\", { err });\n  }\n  // create Tree with denormalized positions\n  const [tree, convErr] = convertDBMapToTree(map!);\n  if (convErr !== null) {\n    return [null, convErr];\n  }\n  store.commit(`tree/${treeMutations.SET_TREE}`, tree);\n\n  // subscribe on changes for every node in map\n  for (const id in map) {\n    api.subscribeMapNodeChange(id, (dbNode: DBNode) => store.dispatch(`tree/${treeActions.handleMapNodeUpdate}`, dbNode))\n  }\n}\n\nexport async function fetchPins(user: firebase.User | null) {\n  let [pins, err] = await api.getPins(user);\n  if (pins == null || err) {\n    console.error(err);\n  }\n\n  if (user && !pins) {\n    [pins, err] = await api.getPins(null);\n    if (pins == null || err) {\n      console.error(err);\n      pins = {};\n    }\n  }\n\n  store.commit(`pin/${pinMutations.SET_PINS}`, pins);\n}\n\nexport async function initPreconditions(user: firebase.User | null) {\n  let [preconditions, err] = await api.getPreconditions(user);\n  if (preconditions == null || err) {\n    console.error(err);\n    preconditions = {};\n  }\n\n  if (user && !preconditions) {\n    [preconditions, err] = await api.getPreconditions(null);\n    if (preconditions == null || err) {\n      console.error(err);\n      preconditions = {};\n    }\n  }\n\n  // subscribe on precondition changes for every node\n  for (const id in preconditions) {\n    api.subscribePreconditionNodeChange(\n      id,\n      (nodeID, preconditionIDs) => {\n        return store.commit(\n          `precondition/${preconditionMutations.UPDATE_PRECONDITIONS}`,\n          {nodeID:nodeID, preconditionIDs: preconditionIDs},\n        )\n      })\n  }\n\n  store.commit(\n    `precondition/${preconditionMutations.SET_PRECONDITIONS}`,\n    preconditions\n  );\n}\n\n/**\n * Fetch all node content and subscribe for content change for each node\n * @param user\n */\nexport async function initNodeContents(user: firebase.User | null) {\n  // fetch node_content from general map\n  const [nodeContent, err] = await api.getNodeContent();\n  if (nodeContent == null || err) {\n    printError(\"fetchNodeContents error\", { err });\n    return;\n  }\n\n  const nodeContents: Record<string, NodeContent> = {};\n  for (const i in nodeContent) {\n    nodeContents[i] = {\n      nodeID: nodeContent[i].nodeID,\n      content: nodeContent[i].content,\n    } as NodeContent;\n\n    api.subscribeNodeContentChange(nodeContents[i].nodeID, (v: { nodeID: string; content: string }) =>  store.commit(\n        `nodeContent/${nodeContentMutations.SET_NODE_CONTENT}`,\n        v\n      )\n    )\n  }\n\n  store.commit(\n    `nodeContent/${nodeContentMutations.SET_CONTENTS}`,\n    nodeContents\n  );\n\n  if (user) {\n    const [userComments, err] = await api.getUserComments(user);\n    if (err) {\n      printError(\"fetch userComments error\", { err, user });\n      return;\n    }\n    if (userComments === null) {\n      return\n    }\n\n    // fix in store\n    store.commit(\n      `nodeContent/${nodeContentMutations.SET_USER_COMMENTS}`,\n      userComments\n    );\n  }\n}\n\nexport async function initData(user: firebase.User | null) {\n  await initMap(user);\n  await fetchPins(user);\n  await initPreconditions(user);\n  await initNodeContents(user);\n}\n","import {\n  Commit,\n  createStore,\n  Dispatch,\n  Store,\n  useStore as baseUseStore\n} from \"vuex\";\nimport { InjectionKey } from \"vue\";\nimport { store as pinStore, State as PinState } from \"./pin\";\n\nimport {\n  store as preconditionStore,\n  State as PreconditionState,\n} from \"./precondition\";\n\nimport {\n  store as treeStore,\n  State as TreeState,\n  mutations as treeMutations,\n} from \"./tree\";\n\nimport { store as zoomPanStore, State as ZoomPanState } from \"./zoom_pan\";\n\nimport {\n  store as userStore,\n  State as UserState,\n  mutations as userMutations,\n  actions as userActions\n} from \"./user\";\n\nimport {\n  store as historyStore,\n  State as HistoryState,\n  mutations as historyMutations\n} from \"./history\";\n\nimport {\n  store as nodeContentStore,\n  State as NodeContentState\n} from \"./node_content\";\n\nimport api from \"@/api/api\";\nimport { initData } from \"./helpers\";\nimport { MapNode, Point } from \"@/types/graphics\";\nimport {\n  createNewNode,\n  findMapNode,\n  getNewNodeCenter\n} from \"@/store/tree/helpers\";\nimport NewErrorKV from \"@/tools/errorkv\";\nimport { addVector, convertPosition } from \"@/tools/graphics\";\nimport { DBNode } from \"@/api/types\";\nimport { debounce } from \"lodash\";\nimport { printError } from \"@/tools/utils\";\nimport firebase from \"firebase\";\n\nexport type State = {\n  // root states\n  editModeOn: boolean;\n  subscribedNodeIDs: string[];\n\n  // module states\n  pin: PinState;\n  precondition: PreconditionState;\n  tree: TreeState;\n  user: UserState;\n  zoomPan: ZoomPanState;\n  history: HistoryState;\n  nodeContent: NodeContentState;\n};\n\nexport const actions = {\n  init: \"init\",\n  updateNodePosition: \"updateNodePosition\",\n  createNode: \"createNode\",\n  cutPasteNode: \"cutPasteNode\",\n  removeNode: \"removeNode\",\n  setEditMode: \"setEditMode\",\n  subscribeDBChange: \"subscribeDBChange\",\n\n  // confirmSignInPopup\n  confirmSignInPopup: \"confirmSignInPopup\"\n};\n\nexport const mutations = {\n  SET_EDIT_MODE: \"SET_EDIT_MODE\",\n  SET_SUBSCRIBED_NODE_IDS: \"SET_SUBSCRIBED_NODE_IDS\"\n};\n\nconst debouncedPositionSet = debounce(\n  (\n    nodeID: string,\n    newCenter: Point,\n    parentID: string,\n    mapNodeLayers: Record<string, MapNode>[]\n  ) => {\n    const [normalizedNewNodeCenter] = convertPosition(\n      \"normalize\",\n      newCenter,\n      parentID,\n      mapNodeLayers\n    );\n\n    api.update({ [`map/${nodeID}/position`]: normalizedNewNodeCenter });\n  },\n  200\n);\n\nexport const key: InjectionKey<Store<State>> = Symbol();\n\nexport const store = createStore<State>({\n  state: {\n    editModeOn: false,\n    subscribedNodeIDs: [] as string[]\n  } as State,\n  mutations: {\n    [mutations.SET_EDIT_MODE](state: State, val: boolean) {\n      state.editModeOn = val;\n    },\n    [mutations.SET_SUBSCRIBED_NODE_IDS](state: State, val: string[]) {\n      state.subscribedNodeIDs = val;\n    }\n  },\n  actions: {\n    /**\n     * confirmSignInPopup\n     * @param commit\n     * @param state\n     * @param confirm\n     */\n    async [actions.confirmSignInPopup](\n      { dispatch, state }: { dispatch: Dispatch; state: State },\n      confirm: {\n        require(args: {\n          message?: string;\n          target?: EventTarget;\n          group?: string;\n          icon?: string;\n          header?: string;\n          accept?: Function;\n          reject?: Function;\n          acceptLabel?: string;\n          rejectLabel?: string;\n          acceptIcon?: string;\n          rejectIcon?: string;\n          blockScroll?: boolean;\n          acceptClass?: string;\n          rejectClass?: string;\n        }): void;\n\n        close(): void;\n      }\n    ) {\n      confirm.require({\n        message: \"Please authorize to change node contents\",\n        header: \"SignIn\",\n        acceptLabel: \"Ok, Sign In\",\n        rejectLabel: \"No, thanks, just watching\",\n        accept: async () => {\n          await dispatch(`user/${userActions.signIn}`);\n        },\n        reject: () => {\n          return;\n        }\n      });\n    },\n\n    /**\n     *\n     * @param commit\n     * @param state\n     * @param val\n     */\n    [actions.setEditMode](\n      { commit, state }: { commit: Commit; state: State },\n      val: boolean\n    ) {\n      commit(mutations.SET_EDIT_MODE, val);\n      if (!val) {\n        state.subscribedNodeIDs.forEach(id =>\n          api.unsubscribeDBChange(\"map/\" + id)\n        );\n        commit(mutations.SET_SUBSCRIBED_NODE_IDS, []);\n      }\n    },\n\n    /**\n     *\n     * @param commit\n     */\n    async [actions.init]({ commit }: { commit: Commit }) {\n      api.initFirebase();\n      firebase.auth().onAuthStateChanged(user => {\n        if (user && !user.isAnonymous) {\n          commit(`user/${userMutations.SET_USER}`, user);\n          initData(user);\n        } else {\n          commit(`user/${userMutations.SET_USER}`, null);\n          initData(null);\n        }\n      });\n    },\n\n    /**\n     *\n     * @param commit\n     * @param state\n     * @param v\n     */\n    async [actions.createNode](\n      { commit, state }: { commit: Commit; state: State },\n      v: {\n        parentID: string;\n        title: string;\n      }\n    ) {\n      const parent = state.tree.nodeRecord[v.parentID].node;\n      const [newCenter, changedNode, err1] = getNewNodeCenter(\n        parent,\n        state.tree.mapNodeLayers,\n        true\n      );\n      if (err1 !== null) {\n        printError(\"Cannot create new center\", {\n          err: err1,\n          parent,\n          \"state.tree.mapNodeLayers\": state.tree.mapNodeLayers\n        });\n        return;\n      }\n\n      const [normalizedPosition, err2] = convertPosition(\n        \"normalize\",\n        newCenter!,\n        v.parentID,\n        state.tree.mapNodeLayers\n      );\n      if (err2) {\n        printError(\"createNode: cannot create new center\", {\n          err: err2,\n          parent,\n          \"state.tree.mapNodeLayers\": state.tree.mapNodeLayers\n        });\n        return;\n      }\n      const node = createNewNode(v.title, normalizedPosition!);\n      const newDBNode = {\n        id: node.id,\n        parentID: v.parentID,\n        name: v.title,\n        children: [],\n        position: normalizedPosition\n      };\n      const newKey = api.generateKey();\n      const updateMap: Record<string, any> = {\n        [`map/${newDBNode.id}`]: newDBNode,\n        [`map/${newDBNode.parentID}/children/${newKey}`]: newDBNode.id\n      };\n\n      if (changedNode) {\n        const [normalizedChangedCenter] = convertPosition(\n          \"normalize\",\n          changedNode.position,\n          v.parentID,\n          state.tree.mapNodeLayers\n        );\n        updateMap[`map/${changedNode.id}/position`] = normalizedChangedCenter;\n      }\n\n      await api.update(updateMap);\n\n      commit(`history/${historyMutations.ADD_CREATE}`, {\n        nodeID: node.id,\n        parentID: v.parentID\n      });\n    },\n\n    /**\n     *\n     * @param commit\n     * @param state\n     * @param v\n     */\n    async [actions.cutPasteNode](\n      { commit, state }: { commit: Commit; state: State },\n      v: {\n        nodeID: string;\n        parentID: string;\n      }\n    ) {\n      // remove nodeID from oldParent children,\n      // add to newParent children,\n      // recalculate position of node, normalize it and\n      // update DB with these three modifications in one transaction\n      const oldParent = state.tree.nodeRecord[v.nodeID].parent;\n      const newParent = state.tree.nodeRecord[v.parentID].node;\n      const [newCenter, changedNode, err1] = getNewNodeCenter(\n        newParent,\n        state.tree.mapNodeLayers,\n        true\n      );\n      if (err1) {\n        printError(\"cutPasteNode: cannot getNewNodeCenter\", { err: err1 });\n        return;\n      }\n      const [normalizedNewNodeCenter, err2] = convertPosition(\n        \"normalize\",\n        newCenter!,\n        v.parentID,\n        state.tree.mapNodeLayers\n      );\n      if (err2) {\n        printError(\"cutPasteNode: cannot create new center\", {\n          err: err2,\n          parent,\n          \"state.tree.mapNodeLayers\": state.tree.mapNodeLayers\n        });\n        return;\n      }\n      // generate key for new child in list of newParent\n      const newKey = api.generateKey();\n      // search for key of childID in children of oldParent\n      const oldKey = await api.findKeyOfChild(oldParent!.id, v.nodeID);\n      const updateMap = {\n        [`map/${v.nodeID}/parentID`]: newParent!.id,\n        [`map/${oldParent!.id}/children/${oldKey}`]: null, // remove from old parent children\n        [`map/${newParent!.id}/children/${newKey}`]: v.nodeID, // add to children of new parents\n        [`map/${v.nodeID}/position`]: normalizedNewNodeCenter\n      };\n      if (changedNode) {\n        const [normalizedChangedCenter] = convertPosition(\n          \"normalize\",\n          changedNode.position,\n          v.parentID,\n          state.tree.mapNodeLayers\n        );\n        updateMap[`map/${changedNode.id}/position`] = normalizedChangedCenter;\n      }\n      await api.update(updateMap);\n\n      commit(`history/${historyMutations.ADD_CUT_PASTE}`, {\n        nodeID: v.nodeID,\n        parentID: v.parentID\n      });\n    },\n\n    /**\n     *\n     * @param commit\n     * @param state\n     * @param nodeID\n     */\n    async [actions.removeNode](\n      { commit, state }: { commit: Commit; state: State },\n      nodeID: string\n    ) {\n      const parent = state.tree.nodeRecord[nodeID].parent;\n      if (!parent) {\n        return;\n      }\n      const parentID = parent.id;\n      const node = (await api.getNode(nodeID)) as DBNode;\n      // collect all children id recursively\n      const allChildrenID = node.children\n      const allChildrenIDMap = {} as Record<string, DBNode>\n      while (allChildrenID.length > 0) {\n        const id = allChildrenID.pop()\n        if (!state.tree.nodeRecord[id!] || !state.tree.nodeRecord[id!].node || !state.tree.nodeRecord[id!].parent) {\n          continue\n        }\n        allChildrenIDMap[id!] = {\n          id: id!,\n          parentID: state.tree.nodeRecord[id!].parent!.id,\n          name: state.tree.nodeRecord[id!].node.title,\n          children: state.tree.nodeRecord[id!].node.children.map((node)=>node.id),\n          position: state.tree.nodeRecord[id!].node.position,\n        }\n        allChildrenID.push(...state.tree.nodeRecord[id!].node.children.map((node)=>node.id));\n      }\n      // move node from /map to /trash\n      const oldKey = await api.findKeyOfChild(parent.id, nodeID);\n      await api.update({\n        [`trash/${nodeID}`]: node,\n        [`map/${parent.id}/children/${oldKey}`]: null,\n        [`map/${nodeID}`]: null\n      });\n      // move all children to /trash\n      const moveChildrenToTrash = {} as Record<string, any>\n      for (const id in allChildrenIDMap) {\n        moveChildrenToTrash[`trash/${id}`] = allChildrenIDMap[id]\n        moveChildrenToTrash[`map/${id}`] = null\n      }\n      await api.update(moveChildrenToTrash);\n\n      commit(`history/${historyMutations.ADD_REMOVE}`, {\n        parentNodeID: parentID,\n        nodeID: nodeID\n      });\n    },\n\n    /**\n     *\n     * @param commit\n     * @param state\n     * @param v\n     */\n    [actions.updateNodePosition](\n      { commit, state }: { commit: Commit; state: State },\n      v: { nodeId: string; delta: Point }\n    ) {\n      if (!state.editModeOn) {\n        return;\n      }\n      const [mapNode] = findMapNode(v.nodeId, state.tree.mapNodeLayers);\n      if (!mapNode) {\n        return NewErrorKV(\"UPDATE_NODE_POSITION: cannot find mapNode\", {\n          \"v.nodeId\": v.nodeId,\n          \"state.mapNodeLayers\": state.tree.mapNodeLayers\n        });\n      }\n      const newCenter = addVector(\n        { from: { x: 0, y: 0 }, to: mapNode.center },\n        { from: { x: 0, y: 0 }, to: v.delta }\n      ).to;\n\n      const args = { nodeId: v.nodeId, newCenter, returnError: null };\n      commit(`tree/${treeMutations.UPDATE_NODE_POSITION}`, args);\n      if (args.returnError === null) {\n        commit(`history/${historyMutations.ADD_POSITION_CHANGE}`, {\n          nodeID: v.nodeId,\n          oldPosition: mapNode.center,\n          newPosition: newCenter\n        });\n\n        // save to DB with debounce\n        debouncedPositionSet(\n          v.nodeId,\n          newCenter,\n          state.tree.nodeRecord[v.nodeId].parent!.id,\n          state.tree.mapNodeLayers\n        );\n      }\n    },\n  },\n  modules: {\n    pin: pinStore,\n    precondition: preconditionStore,\n    tree: treeStore,\n    user: userStore,\n    zoomPan: zoomPanStore,\n    history: historyStore,\n    nodeContent: nodeContentStore\n  }\n});\n\n// define your own `useStore` composition function\nexport function useStore() {\n  return baseUseStore(key);\n}\n","\nimport { defineComponent } from \"vue\";\nimport { useStore, actions } from \"@/store\";\nexport default defineComponent({\n  setup() {\n    const store = useStore();\n    store.dispatch(actions.init);\n  }\n});\n","import { render } from \"./App.vue?vue&type=template&id=8c892ede\"\nimport script from \"./App.vue?vue&type=script&lang=ts\"\nexport * from \"./App.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\n  This section is just for test/emulator cases for now\n  <input id=\"email\" />\n  <input id=\"password\" />\n  <button @click=\"login\">login</button>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from \"vue\";\nimport api from \"@/api/api\";\nimport { mutations } from \"@/store/user\";\nimport firebase from \"firebase\";\nimport { useStore } from \"@/store\";\n\nexport default defineComponent({\n  name: \"PasswordLogin\",\n\n  setup() {\n    const store = useStore();\n\n    return {\n      login: async () => {\n        const emailEl = document.getElementById(\"email\") as HTMLInputElement;\n        const passwordEl = document.getElementById(\n          \"password\"\n        ) as HTMLInputElement;\n        await firebase\n          .auth()\n          .signInWithEmailAndPassword(emailEl.value, passwordEl.value);\n      }\n    };\n  }\n});\n</script>\n","\nimport { defineComponent } from \"vue\";\nimport api from \"@/api/api\";\nimport { mutations } from \"@/store/user\";\nimport firebase from \"firebase\";\nimport { useStore } from \"@/store\";\n\nexport default defineComponent({\n  name: \"PasswordLogin\",\n\n  setup() {\n    const store = useStore();\n\n    return {\n      login: async () => {\n        const emailEl = document.getElementById(\"email\") as HTMLInputElement;\n        const passwordEl = document.getElementById(\n          \"password\"\n        ) as HTMLInputElement;\n        await firebase\n          .auth()\n          .signInWithEmailAndPassword(emailEl.value, passwordEl.value);\n      }\n    };\n  }\n});\n","import { render } from \"./PasswordLogin.vue?vue&type=template&id=29d3cb7f\"\nimport script from \"./PasswordLogin.vue?vue&type=script&lang=ts\"\nexport * from \"./PasswordLogin.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\n  <ConfirmDialog></ConfirmDialog>\n  <Toast position=\"bottom-left\" />\n  <NodeContent :show=\"!editModeOn && !!selectedNodeId\" />\n  <Menu\n    :clickedTitleId=\"clickedTitleId\"\n    @select-precondition-is-on=\"setSelectPreconditionON\"\n    @select-precondition-is-off=\"setSelectPreconditionOFF\"\n  />\n  <Map\n    :layers=\"visibleZoomedPanedLayers\"\n    :viewBox=\"viewBox\"\n    :selectedNodeId=\"selectedNodeId\"\n    :selectedNodePreconditionIds=\"selectedNodePreconditionIds\"\n    :pin-nodes=\"pinNodes\"\n    @title-dragging=\"nodeDragging\"\n    @title-click=\"titleClick\"\n    @title-over=\"titleOver\"\n    @title-leave=\"titleLeave\"\n    @dragging-background=\"mapDragging\"\n    @wheel=\"zoom\"\n  />\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, ref, watch } from \"vue\";\nimport Map from \"@/components/map/Map.vue\";\nimport NodeContent from \"@/components/node_content/Index.vue\";\nimport ConfirmDialog from \"primevue/confirmdialog\";\nimport Toast from \"primevue/toast\";\nimport {\n  EventClickNode,\n  EventDraggingBackground,\n  EventDraggingNode,\n  EventWheel\n} from \"@/components/map/Map.ts\";\nimport Menu from \"@/components/menu/Index.vue\";\nimport { useStore } from \"@/store\";\nimport { useRouter, useRoute, onBeforeRouteUpdate } from \"vue-router\";\nimport { mutations as treeMutations, NodeRecordItem } from \"@/store/tree\";\nimport { mutations as zoomPanMutations } from \"@/store/zoom_pan\";\nimport { actions } from \"@/store/\";\nimport {\n  filterNodesAndLayers,\n  findCentralNode,\n  zoomAndPanPoint,\n  zoomAnPanLayers\n} from \"@/views/Home\";\nimport { clone, printError } from \"@/tools/utils\";\nimport { MapNode } from \"@/types/graphics\";\nimport {findMapNode, findMapNodes} from \"@/store/tree/helpers\";\nimport { DBNode } from \"@/api/types\";\n\nexport default defineComponent({\n  name: \"Home\",\n\n  components: {\n    Map,\n    Menu,\n    NodeContent,\n    ConfirmDialog,\n    Toast\n  },\n\n  setup() {\n    const store = useStore();\n    const router = useRouter();\n    const route = useRoute();\n    const treeState = store.state.tree;\n    const zoomPanState = store.state.zoomPan;\n    const pinState = store.state.pin;\n    const clickedTitleId = ref(\"-1\");\n    let selectPreconditionIsOn = false;\n    let titleOver = false;\n\n    // Set node from URL as selected\n    watch(\n      () => route.params.id,\n      () => {\n        store.commit(\n          `tree/${treeMutations.SET_SELECTED_NODE_ID}`,\n          route.params.id\n        );\n      },\n      { immediate: true }\n    );\n\n    /**\n     * compute svg viewBox\n     */\n    const viewBox = computed(() => {\n      if (treeState.mapNodeLayers && treeState.mapNodeLayers.length) {\n        return `0 0 ${2 * treeState.mapNodeLayers[0][\"0\"].center.x} ${2 *\n          treeState.mapNodeLayers[0][\"0\"].center.y}`;\n      } else {\n        return `0 0 1000 1000`;\n      }\n    });\n\n    /**\n     * From mapNodeLayers method updateLayers determines visibleLayers and nodes\n     * that will be shown to user (which is always just a small part of all nodes and visibleLayers of the map)\n     * @param centralNodeId\n     * @param mapNodeLayers\n     * @param nodeRecord\n     */\n    const updateLayers = (\n      centralNodeId: string,\n      mapNodeLayers: Array<Record<string, MapNode>>,\n      nodeRecord: Record<string, NodeRecordItem>\n    ): Array<Record<number, MapNode>> => {\n      // Вычленяем слои и узлы которые мы хотим показывать учитывая что текущий видимый узел это centralNodeId\n      const [filteredLayers, err] = filterNodesAndLayers(\n        mapNodeLayers,\n        nodeRecord,\n        centralNodeId\n      );\n      if (err) {\n        printError(\"Home.vue: error in filterNodesAndLayers:\", { err });\n        return [];\n      }\n      return filteredLayers.reverse();\n    };\n\n    const centralNodeId = ref<string | null>(null);\n    // visibleLayers consists only from user visible nodes and visibleLayers of all (which is treeState.mapNodeLayers)\n    const visibleLayers = ref<Array<Record<string, MapNode>>>([]);\n\n    // Ugly hack to determine first load of page\n    let isFirstPageLoad = true;\n    onBeforeRouteUpdate(async (to, from) => {\n      isFirstPageLoad = false\n    })\n    // If this is isFirstPageLoad then pan map to node in URL\n    watch(\n    () => [\n          treeState.mapNodeLayers,\n        ],\n    () => {\n      if (isFirstPageLoad && route.params.id.length > 0 && treeState.mapNodeLayers.length>0) {\n        const [firstNode] = findMapNode(route.params.id as string, treeState.mapNodeLayers)\n        if (firstNode != null) {\n          store.commit(\n              `zoomPan/${zoomPanMutations.SET_PAN}`,\n              {x: -firstNode.center.x + treeState.mapNodeLayers[0][\"0\"].center.x, y: -firstNode.center.y + treeState.mapNodeLayers[0][\"0\"].center.y},\n          );\n        }\n      }\n    })\n\n\n    // Determine which nodes to show based on current pan and zoom\n    watch(\n  () => [\n        treeState.mapNodeLayers,\n        zoomPanState.debouncedZoom,\n        zoomPanState.debouncedPan\n      ],\n      () => {\n        const [newCentralNodeId, err] = findCentralNode(\n          treeState.mapNodeLayers,\n          treeState.nodeRecord,\n          { width: window.innerWidth, height: window.innerHeight },\n          zoomPanState.debouncedZoom,\n          zoomPanState.pan,\n          zoomPanState.zoomCenter\n        );\n        if (err != null) {\n          printError(\"filterNodesAndLayers: error in findCurrentNode\", { err });\n        }\n\n        centralNodeId.value = newCentralNodeId;\n        visibleLayers.value = updateLayers(\n          newCentralNodeId,\n          treeState.mapNodeLayers,\n          treeState.nodeRecord\n        );\n      },\n      { immediate: true, deep: true }\n    );\n\n    const visibleZoomedPanedLayers = ref<Array<Record<string, MapNode>>>([]);\n    watch(\n      () => [zoomPanState.pan.x, zoomPanState.pan.y, zoomPanState.zoom, visibleLayers],\n      () => {\n        // visibleLayers это всегда слои с zoom=1 и pan={0, 0} состоящий из только видимых прямо сейчас элементов.\n        // Мы применяем к этому объекту текущий zoomPanState но сам эталон не трогаем, поэтому здесь clone\n        // Это не дорогая операция так как visibleLayers всегда содержит небольшое кол-во элементов\n        // видимых только прямо сейчас\n        const layersToZoomAndPan = clone(visibleLayers.value);\n        visibleZoomedPanedLayers.value = zoomAnPanLayers(\n          layersToZoomAndPan,\n          zoomPanState.zoom,\n          zoomPanState.pan\n        );\n      },\n      { immediate: true, deep: true }\n    );\n\n    return {\n      pinNodes: computed(() => {\n        if (centralNodeId.value == null) {\n          return [];\n        }\n        const pinNodeIDs = pinState.pinsReverse[centralNodeId.value];\n        if (!pinNodeIDs) {\n          return [];\n        }\n\n        // remove pins that already exists on visibleLayers\n        for (const layer of visibleLayers.value) {\n          for (const nodeID in layer) {\n            const node = layer[nodeID];\n            if (node.title != \"\") {\n              const ind = pinNodeIDs.indexOf(node.id);\n              if (ind != -1) {\n                pinNodeIDs.splice(ind, 1);\n              }\n            }\n          }\n        }\n\n        const pinMapNodes = findMapNodes(pinNodeIDs, treeState.mapNodeLayers);\n        const result = [];\n        for (const pinMapNode of pinMapNodes) {\n          const cl = clone(pinMapNode);\n          cl.center = zoomAndPanPoint(\n            pinMapNode.center,\n            zoomPanState.zoom,\n            zoomPanState.pan\n          );\n          result.push(cl);\n        }\n\n        return result;\n      }),\n      viewBox,\n      editModeOn: computed(() => store.state.editModeOn),\n      selectedNodeId: computed(() => treeState.selectedNodeId),\n      selectedNodePreconditionIds: computed(() =>\n        treeState.selectedNodeId\n          ? store.state.precondition.preconditions[treeState.selectedNodeId]\n          : []\n      ),\n      visibleZoomedPanedLayers: visibleZoomedPanedLayers,\n      nodeDragging: (e: EventDraggingNode) => {\n        store.dispatch(`${actions.updateNodePosition}`, {\n          nodeId: e.id,\n          delta: {\n            x: e.delta.x / zoomPanState.zoom,\n            y: e.delta.y / zoomPanState.zoom\n          }\n        });\n      },\n      setSelectPreconditionON: () => {\n        selectPreconditionIsOn = true;\n      },\n      setSelectPreconditionOFF: () => {\n        selectPreconditionIsOn = false;\n      },\n      clickedTitleId,\n      titleClick: (e: EventClickNode) => {\n        if (!selectPreconditionIsOn) {\n          router.push({ name: \"node\", params: { id: e.id } });\n        } else {\n          clickedTitleId.value = e.id;\n        }\n      },\n      titleOver: (e: EventClickNode) => {\n        titleOver = true\n        store.commit(`tree/${treeMutations.SET_SELECTED_NODE_ID}`, e.id);\n      },\n      titleLeave: (e: EventClickNode) => {\n        titleOver = false\n        store.commit(\n          `tree/${treeMutations.SET_SELECTED_NODE_ID}`,\n          route.params.id\n        );\n      },\n      mapDragging: (event: EventDraggingBackground) => {\n        if (store.state.editModeOn && titleOver) {\n          // to prevent pan while node position editing ( = title dragging in edit mode)\n          return\n        }\n        store.commit(`zoomPan/${zoomPanMutations.ADD_PAN}`, event);\n      },\n      zoom: (event: EventWheel) => {\n        // initial value of center (when root.border == viewport)\n        const initial = {\n          x: (event.center.x - zoomPanState.pan.x) / zoomPanState.zoom,\n          y: (event.center.y - zoomPanState.pan.y) / zoomPanState.zoom\n        };\n        store.commit(`zoomPan/${zoomPanMutations.ADD_ZOOM}`, -1 * event.delta);\n        const after = {\n          x: initial.x * zoomPanState.zoom + zoomPanState.pan.x,\n          y: initial.y * zoomPanState.zoom + zoomPanState.pan.y\n        };\n        store.commit(`zoomPan/${zoomPanMutations.ADD_PAN}`, {\n          from: after,\n          to: event.center\n        });\n        store.commit(\n          `zoomPan/${zoomPanMutations.SET_ZOOM_CENTER}`,\n          event.center\n        );\n      }\n    };\n  }\n});\n</script>\n","<template>\n  <svg xmlns=\"http://www.w3.org/2000/svg\" :viewBox=\"viewBox\" :id=\"mapID\" style=\"touch-action: none;\">\n    <MapLayer\n      v-for=\"(layer, index) of layers\"\n      :key=\"index\"\n      :map-nodes=\"layer\"\n      :border-color=\"borderColor(index)\"\n      :font-color=\"fontColor(index)\"\n      :font-size=\"fontSize(index)\"\n      :font-opacity=\"fontOpacity(index)\"\n      :selectedNodeId=\"selectedNodeId\"\n      :selectedNodePreconditionIds=\"selectedNodePreconditionIds\"\n      :map-id=\"mapID\"\n      @title-dragging=\"draggingNode\"\n      @title-click=\"titleClick\"\n      @title-over=\"titleOver\"\n      @title-leave=\"titleLeave\"\n    />\n    <PreconditionLayer\n        :selectedNodeId=\"selectedNodeId\"\n        :visibleTitleIds=\"visibleTitleIds\"\n        @title-click=\"titleClick\"\n        @title-over=\"titleOver\"\n        @title-leave=\"titleLeave\"\n    />\n    <PinLayer\n      :pinNodes=\"pinNodes\"\n      :selectedNodeId=\"selectedNodeId\"\n      @title-click=\"titleClick\"\n      @title-over=\"titleOver\"\n      @title-leave=\"titleLeave\"\n    />\n  </svg>\n</template>\n\n<script lang=\"ts\">\nimport {computed, defineComponent, onMounted, PropType } from \"vue\";\nimport { MapNode } from \"@/types/graphics\";\nimport MapLayer from \"@/components/map_layer/MapLayer.vue\";\nimport {\n  EventClickNode,\n  EventDraggingNode\n} from \"@/components/map_layer/MapLayer\";\nimport pan from \"./MapPan\";\nimport PinLayer from \"@/components/pin_layer/PinLayer.vue\";\nimport { printError } from \"@/tools/utils\";\nimport PreconditionLayer from \"@/components/precondition_layer/PreconditionLayer.vue\";\n\nconst mapID = \"mapID\";\n\nexport default defineComponent({\n  name: \"Map\",\n  emits: [\n    \"title-dragging\",\n    \"title-click\",\n    \"title-over\",\n    \"title-leave\",\n    \"dragging-background\",\n    \"wheel\"\n  ],\n  components: {\n    PreconditionLayer,\n    PinLayer,\n    MapLayer\n  },\n  props: {\n    viewBox: {\n      type: String,\n      required: true\n    },\n    layers: Object as PropType<Array<Record<string, MapNode>>>,\n    selectedNodeId: {\n      type: String || null,\n      validator: (prop: string | null) =>\n        typeof prop === \"string\" || prop === null,\n      required: true\n    },\n    selectedNodePreconditionIds: Object as PropType<string[]>,\n    pinNodes: Object as PropType<MapNode[]>\n  },\n  setup(props, ctx) {\n    onMounted(() => {\n      const map = document.getElementById(mapID);\n      if (!map) {\n        printError(\"Map.vue: cannot find map id for event listener\", {});\n        return;\n      }\n\n      map.addEventListener(\"mousedown\", event => {\n        pan.mouseDown();\n      });\n      map.addEventListener(\"mouseup\", event => {\n        pan.mouseUp();\n      });\n      map.addEventListener(\"mousemove\", event => {\n        pan.mouseMove(ctx.emit, {\n          from: {\n            x: event.clientX - event.movementX,\n            y: event.clientY - event.movementY\n          },\n          to: { x: event.clientX, y: event.clientY }\n        });\n      });\n\n      // zoom with mouse wheel\n      map.addEventListener(\"wheel\", event => {\n        ctx.emit(\"wheel\", {\n          delta: event.deltaY,\n          center: { x: event.clientX, y: event.clientY }\n        });\n      }, {passive:true});\n\n      let prevDist = Infinity\n      const prevPoint = {x:Infinity, y:Infinity}\n      map.addEventListener(\"touchstart\", event => {\n          pan.mouseDown();\n      }, {passive:true});\n      map.addEventListener(\"touchend\", event => {\n        prevDist = Infinity\n        prevPoint.x = Infinity\n        prevPoint.y = Infinity\n        pan.mouseUp();\n      });\n\n      // mobile zoom\n      map.addEventListener(\"touchmove\", e => {\n        if (e.touches.length === 1) {\n          if (prevPoint.x != Infinity && prevPoint.y != Infinity) {\n            pan.mouseMove(ctx.emit, {\n              from: prevPoint,\n              to: { x: e.touches[0].clientX, y: e.touches[0].clientY }\n            });\n          }\n          prevPoint.x = e.touches[0].clientX\n          prevPoint.y = e.touches[0].clientY\n        } else if (e.touches.length === 2) {\n          let delta = 0\n          const dist = Math.hypot(\n              e.touches[0].pageX - e.touches[1].pageX,\n              e.touches[0].pageY - e.touches[1].pageY)\n          if (prevDist !== Infinity) {\n            delta = prevDist - dist\n          }\n          prevDist = dist\n\n          ctx.emit(\"wheel\", {\n            delta: delta,\n            center: {\n              x: (e.touches[0].pageX - e.touches[1].pageX) / 2,\n              y: (e.touches[0].pageY - e.touches[1].pageY) / 2,\n            }\n          });\n        }\n      }, {passive:true});\n\n\n    });\n\n    return {\n      visibleTitleIds: computed(() => {\n        if (!props.layers) {\n          return []\n        }\n        const ids = []\n        for (const layer of props.layers) {\n          for (const idx in layer) {\n            if (layer[idx].title != \"\") {\n              ids.push(idx)\n            }\n          }\n        }\n        return ids\n      }),\n      draggingNode: (e: EventDraggingNode) => {\n        ctx.emit(\"title-dragging\", {\n          id: e.nodeId,\n          delta: e.delta\n        });\n      },\n      titleClick: (e: EventClickNode) => {\n        ctx.emit(\"title-click\", { id: e.id });\n      },\n      titleOver: (e: EventClickNode) => {\n        ctx.emit(\"title-over\", { id: e.id });\n      },\n      titleLeave: (e: EventClickNode) => {\n        ctx.emit(\"title-leave\", { id: e.id });\n      },\n      mapID: mapID,\n      fontSize: (index: number): number => {\n        let size = 0\n        const levelSizes: Record<number, number> = {\n          0: 6,\n          1: 11,\n          2: 21,\n          3: 28,\n        }\n        if (props.layers!.length >= 4) {\n          size = levelSizes[index]\n        }\n        if (props.layers!.length == 3) {\n          size = levelSizes[index+1]\n        }\n        return size\n      },\n      fontOpacity: (index: number): number => {\n        let val = 0\n        const levelSizes: Record<number, number> = {\n          0: 1,\n          1: 1,\n          2: 0.2,\n          3: 1,\n        }\n        if (props.layers!.length >= 4) {\n          val = levelSizes[index]\n        }\n        if (props.layers!.length == 3) {\n          val = levelSizes[index+1]\n        }\n        return val\n      },\n      fontColor: (index: number): string => {\n        if (props.layers!.length >= 4) {\n          return `rgb(${200 - 100 * index},${200 - 100 * index},${200 - 100 * index})`\n        }\n        if (props.layers!.length == 3) {\n          return `rgb(${200 - 100 * (index+1)},${200 - 100 * (index+1)},${200 - 100 * (index+1)})`\n        }\n        return ''\n      },\n      borderColor: (index: number): string => {\n        let color = 0\n        const levelColors: Record<number, number> = {\n          0: 240,\n          1: 200,\n          2: 100,\n          3: 90,\n        }\n        if (props.layers!.length >= 4) {\n          color = levelColors[index]\n        }\n        if (props.layers!.length == 3) {\n          color = levelColors[index+1]\n        }\n        return `rgb(${color},${color},${color})`\n      },\n    };\n  }\n});\n</script>\n\n<style scoped></style>\n","<template>\n  <polygon\n    v-for=\"(mapNode, i) of mapNodes\"\n    :key=\"i\"\n    :stroke=\"borderColor\"\n    :fill=\"polygonFill(selectedNodeId, mapNode.id, selectedNodePreconditionIds)\"\n    :fill-opacity=\"\n      polygonFillOpacity(selectedNodeId, mapNode.id, selectedNodePreconditionIds)\n    \"\n    stroke-width=\"2\"\n    :points=\"polygonToPath(mapNode.border)\"\n    pointer-events=\"none\"\n  />\n  <!--    <circle-->\n  <!--      v-for=\"mapNode of mapNodes\"-->\n  <!--      :key=\"mapNode.id\"-->\n  <!--      :cx=\"mapNode.center.x\"-->\n  <!--      :cy=\"mapNode.center.y\"-->\n  <!--      r=\"10\"-->\n  <!--      stroke=\"black\"-->\n  <!--      stroke-width=\"1\"-->\n  <!--      fill=\"red\"-->\n  <!--    />-->\n<!--  <SVGTextBox> component shows unpredictable behaviour here and I didn't dig the reason so just used copy of SVGTextBox here -->\n  <text\n      v-for=\"mapNode of mapNodes\"\n      :id=\"`${TITLE_PREFIX}${mapNode.id}`\"\n      :key=\"mapNode.id\"\n      font-family=\"Roboto\"\n      :font-size=\"fontSize\"\n      :font-weight=\"selectedNodeId && selectedNodeId == mapNode.id ? 'bold' : 'normal'\"\n      :fill=\"(selectedNodeId && selectedNodeId == mapNode.id) || (selectedNodePreconditionIds?.length>0 && selectedNodePreconditionIds?.indexOf(mapNode.id) != -1) ? '#ffa500' : fontColor\"\n      :fill-opacity=\"fontOpacity\"\n      class=\"text\"\n  >\n    <tspan\n        v-for=\"(line, i) of splitLines(mapNode.title, 20)\"\n        :key=\"i\"\n        :x=\"titleBox[mapNode.id] ? titleBox[mapNode.id].position.x : 0\"\n        :y=\"titleBox[mapNode.id] ? titleBox[mapNode.id].position.y + i*fontSize : 0\"\n        alignment-baseline=\"hanging\"\n    >\n      {{ line }}\n    </tspan>\n  </text>\n  <!-- Add rectangle to change cursor to pointer when hover on text -->\n  <rect\n    v-for=\"mapNode of mapNodes\"\n    :key=\"mapNode.id\"\n    :x=\"titleBox[mapNode.id] ? titleBox[mapNode.id].position.x : 0\"\n    :y=\"titleBox[mapNode.id] ? titleBox[mapNode.id].position.y : 0\"\n    :width=\"titleBox[mapNode.id] ? titleBox[mapNode.id].bbox.width : 0\"\n    :height=\"titleBox[mapNode.id] ? titleBox[mapNode.id].bbox.height : 0\"\n    fill=\"transparent\"\n    stroke-width=\"0\"\n    @mouseover=\"titleOver(mapNode.id)\"\n    @mouseleave=\"titleLeave(mapNode.id)\"\n    @click=\"titleClick(mapNode.id)\"\n    @mousedown=\"titleMouseDown(mapNode.id)\"\n    stroke=\"pink\"\n    cursor=\"pointer\"\n    pointer-events=\"fill\"\n  />\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType, toRef, onMounted, onUnmounted } from \"vue\";\nimport { MapNode } from \"@/types/graphics\";\nimport {\n  polygonToPath,\n  polygonFill,\n  polygonFillOpacity\n} from \"@/tools/graphics\";\nimport {\n  getTitleBoxes,\n  MouseDownInfo,\n  mouseMoveListener,\n  mouseUpListener\n} from \"@/components/map_layer/MapLayer\";\nimport { printError } from \"@/tools/utils\";\nimport {splitLines} from \"@/components/SVGTextBox\";\n\nconst TITLE_PREFIX = \"title_\";\n\nexport default defineComponent({\n  name: \"MapLayer\",\n  emits: [\n    \"title-over\",\n    \"title-leave\",\n    \"title-click\",\n    \"title-drop\",\n    \"title-dragging\"\n  ],\n  props: {\n    mapId: {\n      type: String,\n      required: true\n    },\n    mapNodes: {\n      type: Object as PropType<Record<string, MapNode>>,\n      required: true\n    },\n    borderColor: {\n      type: String,\n      required: true\n    },\n    fontSize: {\n      type: Number,\n      required: true\n    },\n    fontColor: {\n      type: String,\n      required: true\n    },\n    fontOpacity: {\n      type: Number,\n      required: true\n    },\n    selectedNodeId: {\n      type: String,\n      validator: (prop: string | null) =>\n        typeof prop === \"string\" || prop === null,\n      required: true\n    },\n    selectedNodePreconditionIds: Object as PropType<string[]>\n  },\n\n  setup(props, ctx) {\n    const mapNodes = toRef(props, \"mapNodes\");\n\n    const titleBox = getTitleBoxes(TITLE_PREFIX, \"center\", mapNodes);\n\n    /**\n     * Send event on titleBox click, drag and drop\n     */\n    const titleMouseDownInfo: MouseDownInfo = {\n      nodeId: null,\n      dragStart: false\n    };\n    const mouseMove = (event: MouseEvent) =>\n      mouseMoveListener(ctx.emit, event, titleMouseDownInfo);\n    const mouseUp = () => mouseUpListener(ctx.emit, titleMouseDownInfo);\n    onMounted(() => {\n      const map = document.getElementById(props.mapId);\n      if (!map) {\n        printError(\"MapLayer.vue: cannot find map id for event listener\", {});\n        return;\n      }\n      map.addEventListener(\"mousemove\", mouseMove);\n      map.addEventListener(\"mouseup\", mouseUp);\n    });\n    onUnmounted(() => {\n      const map = document.getElementById(props.mapId);\n      if (!map) {\n        printError(\"MapLayer.vue: cannot find map id for event listener\", {});\n        return;\n      }\n      map.removeEventListener(\"mousemove\", mouseMove);\n      map.removeEventListener(\"mouseup\", mouseUp);\n    });\n\n    return {\n      TITLE_PREFIX,\n      titleBox,\n      titleClick: (nodeID: string) => {\n        ctx.emit(\"title-click\", {\n          id: nodeID\n        });\n      },\n      titleOver: (nodeID: string) => {\n        ctx.emit(\"title-over\", {\n          id: nodeID\n        });\n      },\n      titleLeave: (nodeID: string) => {\n        ctx.emit(\"title-leave\", {\n          id: nodeID\n        });\n      },\n      titleMouseDown: (id: string) => {\n        titleMouseDownInfo.nodeId = id;\n        titleMouseDownInfo.dragStart = false;\n      }\n    };\n  },\n\n  methods: {\n    splitLines,\n    polygonToPath: polygonToPath,\n    polygonFill: polygonFill,\n    polygonFillOpacity: polygonFillOpacity\n  }\n});\n</script>\n\n<style scoped>\n.text {\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n  pointer-events: none;\n}\n</style>\n","import { MapNode, Point } from \"@/types/graphics\";\nimport { nextTick, ref, Ref, watch } from \"vue\";\n\nexport type EventClickNode = {\n  id: string;\n};\n\nexport type EventDraggingNode = {\n  nodeId: string;\n  delta: Point;\n};\n\nexport type MouseDownInfo = {\n  nodeId: string | null;\n  dragStart: boolean;\n};\n\ntype emitFn = (event: \"title-dragging\" | \"title-drop\", ...args: any[]) => void;\n\ntype TitleBox = {\n  position: Point;\n  bbox: {\n    width: number;\n    height: number;\n  };\n};\n\nexport const mouseMoveListener = (\n  emit: emitFn,\n  event: MouseEvent,\n  mouseDownInfo: MouseDownInfo\n) => {\n  if (mouseDownInfo.nodeId) {\n    mouseDownInfo.dragStart = true;\n    emit(\"title-dragging\", {\n      nodeId: mouseDownInfo.nodeId,\n      delta: {\n        x: event.movementX,\n        y: event.movementY\n      }\n    });\n  }\n};\n\nexport const mouseUpListener = (emit: emitFn, mouseDownInfo: MouseDownInfo) => {\n  if (mouseDownInfo.nodeId) {\n    if (mouseDownInfo.dragStart) {\n      emit(\"title-drop\", { id: mouseDownInfo.nodeId });\n    }\n    mouseDownInfo.dragStart = false;\n    mouseDownInfo.nodeId = null;\n  }\n};\n\nexport const nodeToTitleBox = (\n  nodes: Record<string, MapNode>\n): Record<string, TitleBox> => {\n  const titleBox: Record<string, TitleBox> = {};\n  for (const i in nodes) {\n    const node = nodes[i];\n    titleBox[node.id] = {\n      position: node.center,\n      bbox: {\n        width: 0,\n        height: 0\n      }\n    };\n  }\n\n  return titleBox;\n};\n\nconst updateTitleBox = (\n  titleIdPrefix: string,\n  position: \"center\" | \"left\",\n  mapNodes: Record<string, MapNode>,\n  titleBox: Record<string, TitleBox>\n) => {\n  // Code that will run only after the entire view has been rendered\n  nextTick(() => {\n    // clean previous version\n    for (const i in titleBox) {\n      delete titleBox[i];\n    }\n    // fill new ones\n    for (const i in mapNodes) {\n      const node = mapNodes[i];\n      const dom = document.getElementById(`${titleIdPrefix}${node.id}`);\n      if (dom == null) {\n        continue;\n      }\n      if (position == \"center\") {\n        titleBox[node.id] = {\n          position: {\n            x: node.center.x - dom.getBoundingClientRect().width / 2,\n            y: node.center.y - dom.getBoundingClientRect().height / 2\n          },\n          bbox: {\n            width: dom.getBoundingClientRect().width,\n            height: dom.getBoundingClientRect().height\n          }\n        };\n      } else if (position == \"left\") {\n        titleBox[node.id] = {\n          position: {\n            x: node.center.x - dom.getBoundingClientRect().width,\n            y: node.center.y - dom.getBoundingClientRect().height / 2\n          },\n          bbox: {\n            width: dom.getBoundingClientRect().width,\n            height: dom.getBoundingClientRect().height\n          }\n        };\n      }\n    }\n  });\n};\n\nexport const getTitleBoxes = (\n  titleIdPrefix: string,\n  position: \"center\" | \"left\",\n  mapNodes: Ref<Record<string, MapNode>>\n): Ref<Record<string, TitleBox>> => {\n  const titleBox = ref(nodeToTitleBox(mapNodes.value));\n  /**\n   * Update titleBox on every prop change after DOM rerender\n   */\n  watch(\n    mapNodes,\n    mps => updateTitleBox(titleIdPrefix, position, mps, titleBox.value),\n    {\n      immediate: true\n    }\n  );\n\n  return titleBox;\n};\n","export function splitLines(text: string, maxCharNum: number): string[] {\n  if (maxCharNum <= 0) {\n    return [];\n  }\n  if (text == \"\") {\n    return [];\n  }\n  const words = text.split(\" \");\n  const lines: string[] = [];\n  let currLine: string[] = [];\n  while (words.length) {\n    if (currLine.join(\" \").length > maxCharNum) {\n      const nextLine: string[] = [];\n      if (currLine.length > 1) {\n        nextLine.push(currLine.pop()!);\n      }\n      lines.push(currLine.join(\" \"));\n      currLine = nextLine;\n    } else {\n      currLine.push(words.shift()!);\n    }\n  }\n\n  if (currLine.join(\" \").length > maxCharNum) {\n    const nextLine: string[] = [];\n    if (currLine.length > 1) {\n      nextLine.push(currLine.pop()!);\n    }\n    lines.push(currLine.join(\" \"));\n    currLine = nextLine;\n  }\n  if (currLine.length) {\n    lines.push(currLine.join(\" \"));\n  }\n  return lines;\n}\n","\nimport { defineComponent, PropType, toRef, onMounted, onUnmounted } from \"vue\";\nimport { MapNode } from \"@/types/graphics\";\nimport {\n  polygonToPath,\n  polygonFill,\n  polygonFillOpacity\n} from \"@/tools/graphics\";\nimport {\n  getTitleBoxes,\n  MouseDownInfo,\n  mouseMoveListener,\n  mouseUpListener\n} from \"@/components/map_layer/MapLayer\";\nimport { printError } from \"@/tools/utils\";\nimport {splitLines} from \"@/components/SVGTextBox\";\n\nconst TITLE_PREFIX = \"title_\";\n\nexport default defineComponent({\n  name: \"MapLayer\",\n  emits: [\n    \"title-over\",\n    \"title-leave\",\n    \"title-click\",\n    \"title-drop\",\n    \"title-dragging\"\n  ],\n  props: {\n    mapId: {\n      type: String,\n      required: true\n    },\n    mapNodes: {\n      type: Object as PropType<Record<string, MapNode>>,\n      required: true\n    },\n    borderColor: {\n      type: String,\n      required: true\n    },\n    fontSize: {\n      type: Number,\n      required: true\n    },\n    fontColor: {\n      type: String,\n      required: true\n    },\n    fontOpacity: {\n      type: Number,\n      required: true\n    },\n    selectedNodeId: {\n      type: String,\n      validator: (prop: string | null) =>\n        typeof prop === \"string\" || prop === null,\n      required: true\n    },\n    selectedNodePreconditionIds: Object as PropType<string[]>\n  },\n\n  setup(props, ctx) {\n    const mapNodes = toRef(props, \"mapNodes\");\n\n    const titleBox = getTitleBoxes(TITLE_PREFIX, \"center\", mapNodes);\n\n    /**\n     * Send event on titleBox click, drag and drop\n     */\n    const titleMouseDownInfo: MouseDownInfo = {\n      nodeId: null,\n      dragStart: false\n    };\n    const mouseMove = (event: MouseEvent) =>\n      mouseMoveListener(ctx.emit, event, titleMouseDownInfo);\n    const mouseUp = () => mouseUpListener(ctx.emit, titleMouseDownInfo);\n    onMounted(() => {\n      const map = document.getElementById(props.mapId);\n      if (!map) {\n        printError(\"MapLayer.vue: cannot find map id for event listener\", {});\n        return;\n      }\n      map.addEventListener(\"mousemove\", mouseMove);\n      map.addEventListener(\"mouseup\", mouseUp);\n    });\n    onUnmounted(() => {\n      const map = document.getElementById(props.mapId);\n      if (!map) {\n        printError(\"MapLayer.vue: cannot find map id for event listener\", {});\n        return;\n      }\n      map.removeEventListener(\"mousemove\", mouseMove);\n      map.removeEventListener(\"mouseup\", mouseUp);\n    });\n\n    return {\n      TITLE_PREFIX,\n      titleBox,\n      titleClick: (nodeID: string) => {\n        ctx.emit(\"title-click\", {\n          id: nodeID\n        });\n      },\n      titleOver: (nodeID: string) => {\n        ctx.emit(\"title-over\", {\n          id: nodeID\n        });\n      },\n      titleLeave: (nodeID: string) => {\n        ctx.emit(\"title-leave\", {\n          id: nodeID\n        });\n      },\n      titleMouseDown: (id: string) => {\n        titleMouseDownInfo.nodeId = id;\n        titleMouseDownInfo.dragStart = false;\n      }\n    };\n  },\n\n  methods: {\n    splitLines,\n    polygonToPath: polygonToPath,\n    polygonFill: polygonFill,\n    polygonFillOpacity: polygonFillOpacity\n  }\n});\n","import { render } from \"./MapLayer.vue?vue&type=template&id=21e6be06&scoped=true\"\nimport script from \"./MapLayer.vue?vue&type=script&lang=ts\"\nexport * from \"./MapLayer.vue?vue&type=script&lang=ts\"\n\nimport \"./MapLayer.vue?vue&type=style&index=0&id=21e6be06&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-21e6be06\"\n\nexport default script","import {Vector} from \"@/types/graphics\";\n\nconst mouseDownBg = {\n  on: false\n};\n\nconst mouseDown = () => {\n  mouseDownBg.on = true;\n};\nconst mouseUp = () => {\n  mouseDownBg.on = false;\n};\n\nconst mouseMove = (\n  emit: (name: \"dragging-background\", o: any) => void,\n  vector: Vector\n) => {\n  if (!mouseDownBg.on) {\n    return;\n  }\n  emit(\"dragging-background\", vector);\n};\n\nexport default {\n  mouseDown,\n  mouseUp,\n  mouseMove,\n};\n","<template>\n  <!--  <circle-->\n  <!--    v-for=\"node of pinNodes\"-->\n  <!--    :key=\"node.id\"-->\n  <!--    :cx=\"node.center.x\"-->\n  <!--    :cy=\"node.center.y\"-->\n  <!--    r=\"10\"-->\n  <!--    stroke=\"black\"-->\n  <!--    stroke-width=\"1\"-->\n  <!--    fill=\"red\"-->\n  <!--  />-->\n  <PinMarker\n    v-for=\"node of visiblePinNodes\"\n    :key=\"node.id\"\n    :x=\"node.center.x\"\n    :y=\"node.center.y\"\n    color=\"pink\"\n  />\n  <SVGTextBox\n    v-for=\"node of visiblePinNodes\"\n    :text=\"node.title\"\n    :id=\"`${TITLE_PREFIX}${node.id}`\"\n    :key=\"node.id\"\n    :useLineBreak=\"true\"\n    :x=\"titleXY[node.id].x\"\n    :y=\"titleXY[node.id].y\"\n    :line-height=\"8\"\n    :max-char-per-line=\"10\"\n    font-family=\"Roboto\"\n    :font-size=\"8\"\n    font-weight=\"normal\"\n    color=\"pink\"\n  />\n  <rect\n    v-for=\"node of pinNodes\"\n    :key=\"node.id\"\n    :x=\"titleXY[node.id].x\"\n    :y=\"titleXY[node.id].y\"\n    :width=\"titleBox[node.id] ? titleBox[node.id].bbox.width : 0\"\n    :height=\"titleBox[node.id] ? titleBox[node.id].bbox.height : 0\"\n    cursor=\"pointer\"\n    fill=\"transparent\"\n    @click=\"titleBoxClick(node.id)\"\n    @mouseover=\"titleOver(node.id)\"\n    @mouseleave=\"titleLeave(node.id)\"\n    stroke-width=\"0\"\n    stroke=\"pink\"\n  />\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, PropType, toRef } from \"vue\";\nimport { MapNode, Point } from \"@/types/graphics\";\nimport { getTitleBoxes } from \"@/components/map_layer/MapLayer\";\nimport PinMarker from \"@/components/pin_layer/PinMarker.vue\";\nimport {\n  WIDTH as PIN_MARKER_WIDTH,\n  HEIGHT as PIN_MARKER_HEIGHT\n} from \"@/components/pin_layer/PinMarker.vue\";\nimport SVGTextBox from \"@/components/SVGTextBox.vue\";\n\nconst TITLE_PREFIX = \"pin_title_\";\n\nexport default defineComponent({\n  name: \"PinLayer\",\n  components: { SVGTextBox, PinMarker },\n  emits: [\n    \"title-click\",\n    \"title-over\",\n    \"title-leave\",\n  ],\n  props: {\n    pinNodes: {\n      type: Object as PropType<MapNode[]>,\n      required: true\n    },\n    selectedNodeId: {\n      type: String,\n      validator: (prop: string | null) =>\n        typeof prop === \"string\" || prop === null,\n      required: true\n    }\n  },\n  setup(props, ctx) {\n    const allPinNodes = computed(() => {\n      const result:Record<string, MapNode> = {}\n      for (const node of props.pinNodes) {\n        result[node.id] = node\n      }\n      return result\n    })\n    const visiblePinNodes = computed(() => {\n      const result:Record<string, MapNode> = {}\n      for (const node of props.pinNodes) {\n        if (node.id != props.selectedNodeId) {\n          result[node.id] = node\n        }\n      }\n      return result\n    })\n\n    const titleBox = getTitleBoxes(TITLE_PREFIX, \"left\", allPinNodes);\n\n    return {\n      TITLE_PREFIX,\n      PIN_MARKER_HEIGHT,\n      PIN_MARKER_WIDTH,\n      visiblePinNodes,\n      titleBox,\n      titleXY: computed(() => {\n        const alignedXY: Record<string, Point> = {};\n        for (const i in allPinNodes.value) {\n          const node = allPinNodes.value[i];\n          alignedXY[node.id] = {\n            x: titleBox.value[node.id]\n              ? titleBox.value[node.id].position.x\n              : 0,\n            y: titleBox.value[node.id]\n              ? titleBox.value[node.id].position.y\n              : 0\n          };\n        }\n        return alignedXY;\n      }),\n      titleBoxClick: (nodeId: string) => {\n        ctx.emit(\"title-click\", { id: nodeId });\n      },\n      titleOver: (nodeId: string) => {\n        ctx.emit(\"title-over\", { id: nodeId });\n      },\n      titleLeave: (nodeId: string) => {\n        ctx.emit(\"title-leave\", { id: nodeId });\n      },\n    };\n  }\n});\n</script>\n","<template>\n  <g :transform=\"`translate(${x - WIDTH / 2} ${y - HEIGHT}) scale(0.05 0.05)`\">\n    <path\n      :fill=\"`${color}`\"\n      d=\"M182.9,551.7c0,0.1,0.2,0.3,0.2,0.3S358.3,283,358.3,194.6c0-130.1-88.8-186.7-175.4-186.9\n        C96.3,7.9,7.5,64.5,7.5,194.6c0,88.4,175.3,357.4,175.3,357.4S182.9,551.7,182.9,551.7z M122.2,187.2c0-33.6,27.2-60.8,60.8-60.8\n        c33.6,0,60.8,27.2,60.8,60.8S216.5,248,182.9,248C149.4,248,122.2,220.8,122.2,187.2z\"\n    />\n  </g>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from \"vue\";\n\nexport const WIDTH = 18;\nexport const HEIGHT = 26;\n\nexport default defineComponent({\n  name: \"PinMarker\",\n  props: {\n    x: {\n      type: Number,\n      required: true\n    },\n    y: {\n      type: Number,\n      required: true\n    },\n    color: {\n      type: String,\n      required: true\n    }\n  },\n  setup() {\n    return {\n      WIDTH,\n      HEIGHT\n    };\n  }\n});\n</script>\n","\nimport { defineComponent } from \"vue\";\n\nexport const WIDTH = 18;\nexport const HEIGHT = 26;\n\nexport default defineComponent({\n  name: \"PinMarker\",\n  props: {\n    x: {\n      type: Number,\n      required: true\n    },\n    y: {\n      type: Number,\n      required: true\n    },\n    color: {\n      type: String,\n      required: true\n    }\n  },\n  setup() {\n    return {\n      WIDTH,\n      HEIGHT\n    };\n  }\n});\n","import { render } from \"./PinMarker.vue?vue&type=template&id=d238f9c2\"\nimport script from \"./PinMarker.vue?vue&type=script&lang=ts\"\nexport * from \"./PinMarker.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\n  <text\n    :id=\"id\"\n    :font-family=\"fontFamily\"\n    :font-size=\"fontSize\"\n    :font-weight=\"fontWeight\"\n    :fill=\"color\"\n    class=\"text\"\n  >\n    <tspan\n      v-for=\"(line, i) of lines\"\n      :key=\"i\"\n      :x=\"x\"\n      :y=\"y > 0 ? y + i * lineHeight : 0\"\n      alignment-baseline=\"hanging\"\n    >\n      {{ line }}\n    </tspan>\n  </text>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from \"vue\";\nimport { splitLines } from \"@/components/SVGTextBox\";\n\nexport default defineComponent({\n  name: \"SVGTextBox\",\n  props: {\n    id: {\n      type: String,\n      required: true\n    },\n    useLineBreak: {\n      type: Boolean,\n      required: true\n    },\n    text: {\n      type: String,\n      required: true\n    },\n    x: {\n      type: Number,\n      required: true\n    },\n    y: {\n      type: Number,\n      required: true\n    },\n    lineHeight: {\n      type: Number,\n      required: true\n    },\n    maxCharPerLine: {\n      type: Number,\n      required: true\n    },\n    fontFamily: {\n      type: String,\n      required: true\n    },\n    fontSize: {\n      type: Number,\n      required: true\n    },\n    fontWeight: {\n      type: String,\n      required: true\n    },\n    color: {\n      type: String,\n      required: true\n    }\n  },\n  setup(props) {\n    let lines = []\n    if (props.useLineBreak) {\n      lines = splitLines(props.text, props.maxCharPerLine)\n    } else {\n      lines = [props.text]\n    }\n    return {\n      lines,\n    };\n  }\n});\n</script>\n\n\n<style scoped>\n.text {\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n  pointer-events: none;\n}\n</style>\n","\nimport { defineComponent } from \"vue\";\nimport { splitLines } from \"@/components/SVGTextBox\";\n\nexport default defineComponent({\n  name: \"SVGTextBox\",\n  props: {\n    id: {\n      type: String,\n      required: true\n    },\n    useLineBreak: {\n      type: Boolean,\n      required: true\n    },\n    text: {\n      type: String,\n      required: true\n    },\n    x: {\n      type: Number,\n      required: true\n    },\n    y: {\n      type: Number,\n      required: true\n    },\n    lineHeight: {\n      type: Number,\n      required: true\n    },\n    maxCharPerLine: {\n      type: Number,\n      required: true\n    },\n    fontFamily: {\n      type: String,\n      required: true\n    },\n    fontSize: {\n      type: Number,\n      required: true\n    },\n    fontWeight: {\n      type: String,\n      required: true\n    },\n    color: {\n      type: String,\n      required: true\n    }\n  },\n  setup(props) {\n    let lines = []\n    if (props.useLineBreak) {\n      lines = splitLines(props.text, props.maxCharPerLine)\n    } else {\n      lines = [props.text]\n    }\n    return {\n      lines,\n    };\n  }\n});\n","import { render } from \"./SVGTextBox.vue?vue&type=template&id=78117b36&scoped=true\"\nimport script from \"./SVGTextBox.vue?vue&type=script&lang=ts\"\nexport * from \"./SVGTextBox.vue?vue&type=script&lang=ts\"\n\nimport \"./SVGTextBox.vue?vue&type=style&index=0&id=78117b36&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-78117b36\"\n\nexport default script","\nimport { computed, defineComponent, PropType, toRef } from \"vue\";\nimport { MapNode, Point } from \"@/types/graphics\";\nimport { getTitleBoxes } from \"@/components/map_layer/MapLayer\";\nimport PinMarker from \"@/components/pin_layer/PinMarker.vue\";\nimport {\n  WIDTH as PIN_MARKER_WIDTH,\n  HEIGHT as PIN_MARKER_HEIGHT\n} from \"@/components/pin_layer/PinMarker.vue\";\nimport SVGTextBox from \"@/components/SVGTextBox.vue\";\n\nconst TITLE_PREFIX = \"pin_title_\";\n\nexport default defineComponent({\n  name: \"PinLayer\",\n  components: { SVGTextBox, PinMarker },\n  emits: [\n    \"title-click\",\n    \"title-over\",\n    \"title-leave\",\n  ],\n  props: {\n    pinNodes: {\n      type: Object as PropType<MapNode[]>,\n      required: true\n    },\n    selectedNodeId: {\n      type: String,\n      validator: (prop: string | null) =>\n        typeof prop === \"string\" || prop === null,\n      required: true\n    }\n  },\n  setup(props, ctx) {\n    const allPinNodes = computed(() => {\n      const result:Record<string, MapNode> = {}\n      for (const node of props.pinNodes) {\n        result[node.id] = node\n      }\n      return result\n    })\n    const visiblePinNodes = computed(() => {\n      const result:Record<string, MapNode> = {}\n      for (const node of props.pinNodes) {\n        if (node.id != props.selectedNodeId) {\n          result[node.id] = node\n        }\n      }\n      return result\n    })\n\n    const titleBox = getTitleBoxes(TITLE_PREFIX, \"left\", allPinNodes);\n\n    return {\n      TITLE_PREFIX,\n      PIN_MARKER_HEIGHT,\n      PIN_MARKER_WIDTH,\n      visiblePinNodes,\n      titleBox,\n      titleXY: computed(() => {\n        const alignedXY: Record<string, Point> = {};\n        for (const i in allPinNodes.value) {\n          const node = allPinNodes.value[i];\n          alignedXY[node.id] = {\n            x: titleBox.value[node.id]\n              ? titleBox.value[node.id].position.x\n              : 0,\n            y: titleBox.value[node.id]\n              ? titleBox.value[node.id].position.y\n              : 0\n          };\n        }\n        return alignedXY;\n      }),\n      titleBoxClick: (nodeId: string) => {\n        ctx.emit(\"title-click\", { id: nodeId });\n      },\n      titleOver: (nodeId: string) => {\n        ctx.emit(\"title-over\", { id: nodeId });\n      },\n      titleLeave: (nodeId: string) => {\n        ctx.emit(\"title-leave\", { id: nodeId });\n      },\n    };\n  }\n});\n","import { render } from \"./PinLayer.vue?vue&type=template&id=3306186d\"\nimport script from \"./PinLayer.vue?vue&type=script&lang=ts\"\nexport * from \"./PinLayer.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\n  <defs>\n    <marker\n      id=\"preconditionArrowHead\"\n      markerWidth=\"6\"\n      markerHeight=\"7\"\n      refX=\"3\"\n      refY=\"3.5\"\n      orient=\"auto\"\n    >\n      <polygon fill=\"#aae3b9\" stroke=\"#aae3b9\" points=\"0 0, 6 3.5, 0 7\" />\n    </marker>\n  </defs>\n  <PreconditionArrow\n      v-for=\"precondition of preconditions\"\n      :key=\"precondition.id\"\n      markerId=\"preconditionArrow\"\n      :from=\"precondition.center\"\n      :to=\"selectedNode.center\"\n      color=\"#aae3b9\"\n  />\n  <SVGTextBox\n      v-for=\"node of visibleTitleNodes\"\n      :text=\"node.title\"\n      :id=\"`${TITLE_PREFIX}${node.id}`\"\n      :key=\"node.id\"\n      :useLineBreak=\"true\"\n      :x=\"visibleTitleNodeBoxes[node.id] ? visibleTitleNodeBoxes[node.id].position.x : 0\"\n      :y=\"visibleTitleNodeBoxes[node.id] ? visibleTitleNodeBoxes[node.id].position.y : 0\"\n      :line-height=\"8\"\n      :max-char-per-line=\"10\"\n      font-family=\"Roboto\"\n      :font-size=\"8\"\n      font-weight='normal'\n      color=\"#ffa500\"\n  />\n  <rect\n      v-for=\"node of visibleTitleNodes\"\n      :key=\"node.id\"\n      :x=\"visibleTitleNodeBoxes[node.id] ? visibleTitleNodeBoxes[node.id].position.x : 0\"\n      :y=\"visibleTitleNodeBoxes[node.id] ? visibleTitleNodeBoxes[node.id].position.y : 0\"\n      :width=\"visibleTitleNodeBoxes[node.id] ? visibleTitleNodeBoxes[node.id].bbox.width : 0\"\n      :height=\"visibleTitleNodeBoxes[node.id] ? visibleTitleNodeBoxes[node.id].bbox.height : 0\"\n      cursor=\"pointer\"\n      fill=\"transparent\"\n      @click=\"titleBoxClick(node.id)\"\n      @mouseover=\"titleBoxOver(node.id)\"\n      @mouseleave=\"titleBoxLeave(node.id)\"\n      stroke-width=\"0\"\n      stroke=\"pink\"\n  />\n</template>\n\n<script lang=\"ts\">\nimport {\n  computed,\n  defineComponent, PropType,\n  ref,\n  watchEffect\n} from \"vue\";\nimport PreconditionArrow from \"@/components/precondition_layer/PreconditionArrow.vue\";\nimport { useStore } from \"@/store\";\nimport { MapNode } from \"@/types/graphics\";\nimport { findMapNode, findMapNodes } from \"@/store/tree/helpers\";\nimport { clone } from \"@/tools/utils\";\nimport { zoomAndPanPoint } from \"@/views/Home\";\nimport SVGTextBox from \"@/components/SVGTextBox.vue\";\nimport { getTitleBoxes } from \"@/components/map_layer/MapLayer\";\n\nconst TITLE_PREFIX = \"precondition_title_\";\n\nexport default defineComponent({\n  name: \"PreconditionLayer\",\n  emits: [\n    \"title-over\",\n    \"title-leave\",\n    \"title-click\",\n  ],\n  components: {SVGTextBox, PreconditionArrow},\n  props: {\n    selectedNodeId: String,\n    visibleTitleIds: Object as PropType<Array<string>> // all visible titles on page\n  },\n  setup(props, ctx) {\n    const store = useStore();\n    const zoomPanState = store.state.zoomPan;\n\n    /**\n     * compute selectedNode\n     */\n    const selectedNode = computed(() => {\n      if (props.selectedNodeId && store.state.tree.mapNodeLayers) {\n        const [mapNode] = findMapNode(\n          props.selectedNodeId,\n          store.state.tree.mapNodeLayers\n        );\n        if (!mapNode) {\n          return null\n        }\n        const zoomedPannedSelectedNode = clone(mapNode);\n        zoomedPannedSelectedNode.center = zoomAndPanPoint(\n          zoomedPannedSelectedNode.center,\n          zoomPanState.zoom,\n          zoomPanState.pan\n        );\n        return zoomedPannedSelectedNode;\n      } else {\n        return null;\n      }\n    });\n\n    /**\n     * compute selectedNodePreconditions\n     */\n    const preconditions = ref<Record<string, MapNode>>({});\n    const visibleTitleNodes = ref<Record<string, MapNode>>({});\n    const visibleTitleNodeBoxes = getTitleBoxes(TITLE_PREFIX, \"left\", visibleTitleNodes);\n    watchEffect(() => {\n      preconditions.value = {};\n      visibleTitleNodes.value = {}\n      if (\n        props.selectedNodeId &&\n        store.state.precondition.preconditions[props.selectedNodeId] &&\n        store.state.tree.mapNodeLayers\n      ) {\n        const nodes = clone(\n          findMapNodes(\n            store.state.precondition.preconditions[props.selectedNodeId],\n            store.state.tree.mapNodeLayers\n          )\n        );\n        for (const node of nodes) {\n          node.center = zoomAndPanPoint(\n            node.center,\n            zoomPanState.zoom,\n            zoomPanState.pan\n          );\n          preconditions.value[node.id] = node;\n        }\n      }\n      for (const id in preconditions.value) {\n        if (props.visibleTitleIds?.indexOf(id) == -1) {\n          visibleTitleNodes.value[id] = preconditions.value[id]\n        }\n      }\n      if (props.selectedNodeId &&\n          selectedNode.value &&\n          store.state.tree.mapNodeLayers &&\n          props.visibleTitleIds?.indexOf(props.selectedNodeId) == -1\n      ) {\n        visibleTitleNodes.value[props.selectedNodeId] = selectedNode.value;\n      }\n    });\n\n    return {\n      TITLE_PREFIX,\n      selectedNode,\n      preconditions,\n      visibleTitleNodes,\n      visibleTitleNodeBoxes,\n      titleBoxClick: (nodeId: string) => {\n        ctx.emit(\"title-click\", { id: nodeId });\n      },\n      titleBoxOver: (nodeId: string) => {\n        ctx.emit(\"title-over\", { id: nodeId });\n      },\n      titleBoxLeave: (nodeId: string) => {\n        ctx.emit(\"title-leave\", { id: nodeId });\n      }\n    };\n  }\n});\n</script>\n","<template>\n  <line\n    :x1=\"from.x\"\n    :y1=\"from.y\"\n    :x2=\"to.x\"\n    :y2=\"to.y\"\n    :stroke=\"color\"\n    stroke-width=\"1\"\n    marker-end=\"url(#preconditionArrowHead)\"\n  />\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType } from \"vue\";\nimport { Point } from \"@/types/graphics\";\n\nexport default defineComponent({\n  name: \"PreconditionArrow\",\n  props: {\n    markerId: String,\n    color: String,\n    from: Object as PropType<Point>,\n    to: Object as PropType<Point>\n  }\n});\n</script>\n","\nimport { defineComponent, PropType } from \"vue\";\nimport { Point } from \"@/types/graphics\";\n\nexport default defineComponent({\n  name: \"PreconditionArrow\",\n  props: {\n    markerId: String,\n    color: String,\n    from: Object as PropType<Point>,\n    to: Object as PropType<Point>\n  }\n});\n","import { render } from \"./PreconditionArrow.vue?vue&type=template&id=10f878f0\"\nimport script from \"./PreconditionArrow.vue?vue&type=script&lang=ts\"\nexport * from \"./PreconditionArrow.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","import { MapNode, Point, Polygon, Viewport } from \"@/types/graphics\";\nimport { area, getVectorLength, isInside } from \"@/tools/graphics\";\nimport { ErrorKV } from \"@/types/errorkv\";\nimport NewErrorKV from \"@/tools/errorkv\";\nimport { NodeRecordItem } from \"@/store/tree\";\nimport { findMapNode } from \"@/store/tree/helpers\";\nimport { clone } from \"@/tools/utils\";\nimport api from \"@/api/api\";\nimport { isEqual } from \"lodash\";\nimport { DBNode } from \"@/api/types\";\n\nconst MIN_VISIBLE_NUM_IN_LAYER = 3;\n\nexport function zoomAndPanPoint(p: Point, zoom: number, pan: Point): Point {\n  return { x: p.x * zoom + pan.x, y: p.y * zoom + pan.y };\n}\n\nexport function zoomAndPanPolygon(\n  p: Polygon,\n  zoom: number,\n  pan: Point\n): Polygon {\n  return p.map(point => zoomAndPanPoint(point, zoom, pan));\n}\n\n/**\n * CentralNode вычисляется следующим образом.\n * Начинаем смотреть с самого верхнего слоя.\n * Для каждого узла слоя применяем zoomFactor, затем pan\n * Потом смотрим находится ли zoomCenter внутри него. Если да, то это претендент на currentNode (назовем его N).\n * Мы берем его полную площадь и умножаем на 2.\n * Если получившееся значение ≤ площади экрана, то мы считаем что currentNode это parent узла N\n * Если больше то повторяем итерацию но только с детьми N.\n * @param layers\n * @param nodeRecord\n * @param viewport\n * @param zoomFactor\n * @param pan\n * @param zoomCenter\n */\nexport function findCentralNode(\n  layers: Array<Record<string, MapNode>>,\n  nodeRecord: Record<string, NodeRecordItem>,\n  viewport: Viewport,\n  zoomFactor: number,\n  pan: Point,\n  zoomCenter: Point\n): [string, ErrorKV] {\n  if (!layers || layers.length == 0) {\n    return [\"\", null];\n  }\n\n  let underCursorNodeId = null;\n  const viewportArea = viewport.width * viewport.height;\n  let nodesToCheck = layers[0];\n  while (Object.keys(nodesToCheck).length) {\n    underCursorNodeId = \"\";\n\n    for (const nodeId in nodesToCheck) {\n      const borderToCheck = zoomAndPanPolygon(\n        nodesToCheck[nodeId].border,\n        zoomFactor,\n        pan\n      );\n      if (isInside(zoomCenter, borderToCheck)) {\n        underCursorNodeId = nodeId;\n        break;\n      }\n    }\n\n    if (underCursorNodeId === \"\") {\n      // if zoomCenter is outside take the closest node\n      let minDist = Infinity;\n      for (const nodeId in nodesToCheck) {\n        const nodeCenter = zoomAndPanPoint(\n          nodesToCheck[nodeId].center,\n          zoomFactor,\n          pan\n        );\n        const dist = getVectorLength({ from: nodeCenter, to: zoomCenter });\n        if (dist < minDist) {\n          minDist = dist;\n          underCursorNodeId = nodeId;\n        }\n      }\n    }\n\n    const underCursorNodeArea = area(\n      zoomAndPanPolygon(nodesToCheck[underCursorNodeId].border, zoomFactor, pan)\n    );\n    if (\n      Math.floor(underCursorNodeArea) <=\n      Math.floor(viewportArea / MIN_VISIBLE_NUM_IN_LAYER)\n    ) {\n      if (nodeRecord[underCursorNodeId].parent == null) {\n        return [underCursorNodeId, null];\n      }\n      return [nodeRecord[underCursorNodeId].parent!.id, null];\n    } else {\n      nodesToCheck = {};\n      if (!nodeRecord[underCursorNodeId]) {\n        return [\n          \"\",\n          NewErrorKV(\n            \"findCurrentNode: cannot find underCursorNodeId in nodeRecord\",\n            { maxIntersectNodeId: underCursorNodeId, nodeRecord }\n          )\n        ];\n      }\n      for (const child of nodeRecord[underCursorNodeId].node.children) {\n        const [mapNode] = findMapNode(child.id, layers);\n        if (mapNode == null) {\n          return [\n            \"\",\n            NewErrorKV(\"filterNodesAndLayers: Cannot find node in layers\", {\n              \"child.id\": child.id,\n              layers: layers\n            })\n          ];\n        }\n        nodesToCheck[child.id] = mapNode;\n      }\n\n      if (Object.keys(nodesToCheck).length === 0) {\n        return [underCursorNodeId, null];\n      }\n    }\n  }\n\n  return [\"\", NewErrorKV(\"filterNodesAndLayers: unknown error\", {})];\n}\n\n/**\n * Мы показываем слой в котором находится currentNode (без названий) плюс еще 3.\n * Причем полноценно мы показываем только подузлы currentNode.\n * Узлы слоя currentNode отображаются только если у них тот же parent что и у\n * currentNode. Плюс подузлы НЕ ИЗ currentNode мы отображаем только одного следующего слоя.\n * @param layers\n * @param nodeRecord\n * @param currentNodeId\n */\nexport function filterNodesAndLayers(\n  layers: Array<Record<string, MapNode>>,\n  nodeRecord: Record<string, NodeRecordItem>,\n  currentNodeId: string\n): [Array<Record<number, MapNode>>, ErrorKV] {\n  if (!layers || !layers.length) {\n    return [[], null];\n  }\n  const resultLayers = [];\n\n  // узнаем какой слой у currentNode\n  const [currentNode, level] = findMapNode(currentNodeId, layers);\n  if (currentNode == null || level == null) {\n    return [\n      [],\n      NewErrorKV(\"filterNodesAndLayers-currentNode: error in findMapNode\", {\n        currentNodeId,\n        layers\n      })\n    ];\n  }\n\n  // убираем из этого слоя все кроме детей currentNode.parent\n  const upperLayer: Record<string, MapNode> = {};\n  if (nodeRecord[currentNode.id].parent == null) {\n    upperLayer[currentNode.id] = clone(currentNode);\n  } else {\n    for (const child of nodeRecord[currentNode.id].parent!.children) {\n      const [mapNode, l] = findMapNode(child.id, [layers[level]]);\n      if (mapNode == null || l === null) {\n        return [\n          [],\n          NewErrorKV(\"filterNodesAndLayers-upperLayer: error in findMapNode\", {\n            \"child.id\": child.id,\n            level,\n            layers: [layers[level]]\n          })\n        ];\n      }\n      upperLayer[child.id] = clone(mapNode);\n      upperLayer[child.id].title = \"\";\n    }\n  }\n  resultLayers.push(upperLayer);\n\n  // следующий слой это дети всех узлов из upperLayer, но дети всех кроме currentNode не имеют названий\n  const firstLayer: Record<string, MapNode> = {};\n  for (const nodeId in upperLayer) {\n    for (const child of nodeRecord[nodeId].node.children) {\n      const [mapNode, l] = findMapNode(child.id, [layers[level + 1]]);\n      if (mapNode == null || l === null) {\n        return [\n          [],\n          NewErrorKV(\"filterNodesAndLayers-firstLayer: error in findMapNode\", {\n            \"child.id\": child.id,\n            layers: [layers[level + 1]]\n          })\n        ];\n      }\n      if (nodeId != currentNodeId) {\n        firstLayer[child.id] = clone(mapNode);\n        firstLayer[child.id].title = \"\";\n      } else {\n        firstLayer[child.id] = clone(mapNode);\n      }\n    }\n  }\n\n  if (Object.keys(firstLayer).length > 0) {\n    resultLayers.push(firstLayer);\n  }\n\n  // следующий слой это дети детей currentNode\n  const secondLayer: Record<string, MapNode> = {};\n  //for (const childId in firstLayer) {\n  for (const child of nodeRecord[currentNodeId].node.children) {\n    for (const childOfChild of nodeRecord[child.id].node.children) {\n      const [mapNode, l] = findMapNode(childOfChild.id, [layers[level + 2]]);\n      if (mapNode == null || l === null) {\n        return [\n          [],\n          NewErrorKV(\"filterNodesAndLayers-secondLayer: error in findMapNode\", {\n            \"child.id\": child.id,\n            layers: [layers[level + 2]]\n          })\n        ];\n      }\n      secondLayer[childOfChild.id] = clone(mapNode);\n    }\n  }\n\n  if (Object.keys(secondLayer).length > 0) {\n    resultLayers.push(secondLayer);\n  }\n\n  // следующий это дети узлов из secondLayer и у них нет названий\n  const thirdLayer: Record<string, MapNode> = {};\n  for (const nodeId in secondLayer) {\n    for (const child of nodeRecord[nodeId].node.children) {\n      const [mapNode, l] = findMapNode(child.id, [layers[level + 3]]);\n      if (mapNode == null || l === null) {\n        return [\n          [],\n          NewErrorKV(\"filterNodesAndLayers-thirdLayer:cannot findMapNode\", {\n            \"child.id\": child.id,\n            level: level + 3,\n            layers: [layers[level + 3]]\n          })\n        ];\n      }\n      thirdLayer[child.id] = clone(mapNode);\n      thirdLayer[child.id].title = \"\";\n    }\n  }\n\n  if (Object.keys(thirdLayer).length > 0) {\n    resultLayers.push(thirdLayer);\n  }\n\n  return [resultLayers, null];\n}\n\nexport function zoomAnPanLayers(\n  layers: Array<Record<number, MapNode>>,\n  zoom: number,\n  pan: Point\n): Array<Record<number, MapNode>> {\n  if (!layers || layers.length == 0) {\n    return [];\n  }\n  for (const layer of layers) {\n    for (const id in layer) {\n      const node = layer[id];\n      node.center = zoomAndPanPoint(node.center, zoom, pan);\n      node.border = zoomAndPanPolygon(node.border, zoom, pan);\n    }\n  }\n\n  return layers;\n}\n","\nimport {\n  computed,\n  defineComponent, PropType,\n  ref,\n  watchEffect\n} from \"vue\";\nimport PreconditionArrow from \"@/components/precondition_layer/PreconditionArrow.vue\";\nimport { useStore } from \"@/store\";\nimport { MapNode } from \"@/types/graphics\";\nimport { findMapNode, findMapNodes } from \"@/store/tree/helpers\";\nimport { clone } from \"@/tools/utils\";\nimport { zoomAndPanPoint } from \"@/views/Home\";\nimport SVGTextBox from \"@/components/SVGTextBox.vue\";\nimport { getTitleBoxes } from \"@/components/map_layer/MapLayer\";\n\nconst TITLE_PREFIX = \"precondition_title_\";\n\nexport default defineComponent({\n  name: \"PreconditionLayer\",\n  emits: [\n    \"title-over\",\n    \"title-leave\",\n    \"title-click\",\n  ],\n  components: {SVGTextBox, PreconditionArrow},\n  props: {\n    selectedNodeId: String,\n    visibleTitleIds: Object as PropType<Array<string>> // all visible titles on page\n  },\n  setup(props, ctx) {\n    const store = useStore();\n    const zoomPanState = store.state.zoomPan;\n\n    /**\n     * compute selectedNode\n     */\n    const selectedNode = computed(() => {\n      if (props.selectedNodeId && store.state.tree.mapNodeLayers) {\n        const [mapNode] = findMapNode(\n          props.selectedNodeId,\n          store.state.tree.mapNodeLayers\n        );\n        if (!mapNode) {\n          return null\n        }\n        const zoomedPannedSelectedNode = clone(mapNode);\n        zoomedPannedSelectedNode.center = zoomAndPanPoint(\n          zoomedPannedSelectedNode.center,\n          zoomPanState.zoom,\n          zoomPanState.pan\n        );\n        return zoomedPannedSelectedNode;\n      } else {\n        return null;\n      }\n    });\n\n    /**\n     * compute selectedNodePreconditions\n     */\n    const preconditions = ref<Record<string, MapNode>>({});\n    const visibleTitleNodes = ref<Record<string, MapNode>>({});\n    const visibleTitleNodeBoxes = getTitleBoxes(TITLE_PREFIX, \"left\", visibleTitleNodes);\n    watchEffect(() => {\n      preconditions.value = {};\n      visibleTitleNodes.value = {}\n      if (\n        props.selectedNodeId &&\n        store.state.precondition.preconditions[props.selectedNodeId] &&\n        store.state.tree.mapNodeLayers\n      ) {\n        const nodes = clone(\n          findMapNodes(\n            store.state.precondition.preconditions[props.selectedNodeId],\n            store.state.tree.mapNodeLayers\n          )\n        );\n        for (const node of nodes) {\n          node.center = zoomAndPanPoint(\n            node.center,\n            zoomPanState.zoom,\n            zoomPanState.pan\n          );\n          preconditions.value[node.id] = node;\n        }\n      }\n      for (const id in preconditions.value) {\n        if (props.visibleTitleIds?.indexOf(id) == -1) {\n          visibleTitleNodes.value[id] = preconditions.value[id]\n        }\n      }\n      if (props.selectedNodeId &&\n          selectedNode.value &&\n          store.state.tree.mapNodeLayers &&\n          props.visibleTitleIds?.indexOf(props.selectedNodeId) == -1\n      ) {\n        visibleTitleNodes.value[props.selectedNodeId] = selectedNode.value;\n      }\n    });\n\n    return {\n      TITLE_PREFIX,\n      selectedNode,\n      preconditions,\n      visibleTitleNodes,\n      visibleTitleNodeBoxes,\n      titleBoxClick: (nodeId: string) => {\n        ctx.emit(\"title-click\", { id: nodeId });\n      },\n      titleBoxOver: (nodeId: string) => {\n        ctx.emit(\"title-over\", { id: nodeId });\n      },\n      titleBoxLeave: (nodeId: string) => {\n        ctx.emit(\"title-leave\", { id: nodeId });\n      }\n    };\n  }\n});\n","import { render } from \"./PreconditionLayer.vue?vue&type=template&id=c0a45fa0\"\nimport script from \"./PreconditionLayer.vue?vue&type=script&lang=ts\"\nexport * from \"./PreconditionLayer.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","\nimport {computed, defineComponent, onMounted, PropType } from \"vue\";\nimport { MapNode } from \"@/types/graphics\";\nimport MapLayer from \"@/components/map_layer/MapLayer.vue\";\nimport {\n  EventClickNode,\n  EventDraggingNode\n} from \"@/components/map_layer/MapLayer\";\nimport pan from \"./MapPan\";\nimport PinLayer from \"@/components/pin_layer/PinLayer.vue\";\nimport { printError } from \"@/tools/utils\";\nimport PreconditionLayer from \"@/components/precondition_layer/PreconditionLayer.vue\";\n\nconst mapID = \"mapID\";\n\nexport default defineComponent({\n  name: \"Map\",\n  emits: [\n    \"title-dragging\",\n    \"title-click\",\n    \"title-over\",\n    \"title-leave\",\n    \"dragging-background\",\n    \"wheel\"\n  ],\n  components: {\n    PreconditionLayer,\n    PinLayer,\n    MapLayer\n  },\n  props: {\n    viewBox: {\n      type: String,\n      required: true\n    },\n    layers: Object as PropType<Array<Record<string, MapNode>>>,\n    selectedNodeId: {\n      type: String || null,\n      validator: (prop: string | null) =>\n        typeof prop === \"string\" || prop === null,\n      required: true\n    },\n    selectedNodePreconditionIds: Object as PropType<string[]>,\n    pinNodes: Object as PropType<MapNode[]>\n  },\n  setup(props, ctx) {\n    onMounted(() => {\n      const map = document.getElementById(mapID);\n      if (!map) {\n        printError(\"Map.vue: cannot find map id for event listener\", {});\n        return;\n      }\n\n      map.addEventListener(\"mousedown\", event => {\n        pan.mouseDown();\n      });\n      map.addEventListener(\"mouseup\", event => {\n        pan.mouseUp();\n      });\n      map.addEventListener(\"mousemove\", event => {\n        pan.mouseMove(ctx.emit, {\n          from: {\n            x: event.clientX - event.movementX,\n            y: event.clientY - event.movementY\n          },\n          to: { x: event.clientX, y: event.clientY }\n        });\n      });\n\n      // zoom with mouse wheel\n      map.addEventListener(\"wheel\", event => {\n        ctx.emit(\"wheel\", {\n          delta: event.deltaY,\n          center: { x: event.clientX, y: event.clientY }\n        });\n      }, {passive:true});\n\n      let prevDist = Infinity\n      const prevPoint = {x:Infinity, y:Infinity}\n      map.addEventListener(\"touchstart\", event => {\n          pan.mouseDown();\n      }, {passive:true});\n      map.addEventListener(\"touchend\", event => {\n        prevDist = Infinity\n        prevPoint.x = Infinity\n        prevPoint.y = Infinity\n        pan.mouseUp();\n      });\n\n      // mobile zoom\n      map.addEventListener(\"touchmove\", e => {\n        if (e.touches.length === 1) {\n          if (prevPoint.x != Infinity && prevPoint.y != Infinity) {\n            pan.mouseMove(ctx.emit, {\n              from: prevPoint,\n              to: { x: e.touches[0].clientX, y: e.touches[0].clientY }\n            });\n          }\n          prevPoint.x = e.touches[0].clientX\n          prevPoint.y = e.touches[0].clientY\n        } else if (e.touches.length === 2) {\n          let delta = 0\n          const dist = Math.hypot(\n              e.touches[0].pageX - e.touches[1].pageX,\n              e.touches[0].pageY - e.touches[1].pageY)\n          if (prevDist !== Infinity) {\n            delta = prevDist - dist\n          }\n          prevDist = dist\n\n          ctx.emit(\"wheel\", {\n            delta: delta,\n            center: {\n              x: (e.touches[0].pageX - e.touches[1].pageX) / 2,\n              y: (e.touches[0].pageY - e.touches[1].pageY) / 2,\n            }\n          });\n        }\n      }, {passive:true});\n\n\n    });\n\n    return {\n      visibleTitleIds: computed(() => {\n        if (!props.layers) {\n          return []\n        }\n        const ids = []\n        for (const layer of props.layers) {\n          for (const idx in layer) {\n            if (layer[idx].title != \"\") {\n              ids.push(idx)\n            }\n          }\n        }\n        return ids\n      }),\n      draggingNode: (e: EventDraggingNode) => {\n        ctx.emit(\"title-dragging\", {\n          id: e.nodeId,\n          delta: e.delta\n        });\n      },\n      titleClick: (e: EventClickNode) => {\n        ctx.emit(\"title-click\", { id: e.id });\n      },\n      titleOver: (e: EventClickNode) => {\n        ctx.emit(\"title-over\", { id: e.id });\n      },\n      titleLeave: (e: EventClickNode) => {\n        ctx.emit(\"title-leave\", { id: e.id });\n      },\n      mapID: mapID,\n      fontSize: (index: number): number => {\n        let size = 0\n        const levelSizes: Record<number, number> = {\n          0: 6,\n          1: 11,\n          2: 21,\n          3: 28,\n        }\n        if (props.layers!.length >= 4) {\n          size = levelSizes[index]\n        }\n        if (props.layers!.length == 3) {\n          size = levelSizes[index+1]\n        }\n        return size\n      },\n      fontOpacity: (index: number): number => {\n        let val = 0\n        const levelSizes: Record<number, number> = {\n          0: 1,\n          1: 1,\n          2: 0.2,\n          3: 1,\n        }\n        if (props.layers!.length >= 4) {\n          val = levelSizes[index]\n        }\n        if (props.layers!.length == 3) {\n          val = levelSizes[index+1]\n        }\n        return val\n      },\n      fontColor: (index: number): string => {\n        if (props.layers!.length >= 4) {\n          return `rgb(${200 - 100 * index},${200 - 100 * index},${200 - 100 * index})`\n        }\n        if (props.layers!.length == 3) {\n          return `rgb(${200 - 100 * (index+1)},${200 - 100 * (index+1)},${200 - 100 * (index+1)})`\n        }\n        return ''\n      },\n      borderColor: (index: number): string => {\n        let color = 0\n        const levelColors: Record<number, number> = {\n          0: 240,\n          1: 200,\n          2: 100,\n          3: 90,\n        }\n        if (props.layers!.length >= 4) {\n          color = levelColors[index]\n        }\n        if (props.layers!.length == 3) {\n          color = levelColors[index+1]\n        }\n        return `rgb(${color},${color},${color})`\n      },\n    };\n  }\n});\n","import { render } from \"./Map.vue?vue&type=template&id=9cc0d21c\"\nimport script from \"./Map.vue?vue&type=script&lang=ts\"\nexport * from \"./Map.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\n  <transition name=\"slide\">\n      <div v-if=\"show && selectedNode\" class=\"wrapper\">\n        <div class=\"p-fluid\">\n          <!-- Content   -->\n          <div class=\"p-field p-grid\">\n            <div class=\"p-col-12\">\n              <TextArea\n                rows=\"1\"\n                :autoResize=\"true\"\n                placeholder=\"Node title\"\n                :value=\"selectedNode.title\"\n                @update:modelValue=\"changeNodeTitle($event)\"\n              />\n            </div>\n            <div class=\"p-col-12\">\n              <Markdown\n                :content = \"selectedNodeContent ? selectedNodeContent.content : ''\"\n                :rows=\"20\"\n                @content-changed=\"changeContent($event)\"\n              />\n            </div>\n          </div>\n\n          <!-- Comment -->\n          <div class=\"p-field p-grid\">\n            <div class=\"p-col-12 p-md-12\">\n            <TextArea\n                id=\"comment\"\n                placeholder=\"Your notes (visible only to you)\"\n                :autoResize=\"true\"\n                rows=\"2\"\n                :value=\"comment\"\n                @update:modelValue=\"changeComment($event)\"\n                v-on:keydown=\"checkAuthorized\"\n            />\n            </div>\n          </div>\n\n          <!-- Preconditions section -->\n          <h3><i>based on</i></h3>\n          <SectionPreconditions\n              v-if=\"selectedNodeContent\"\n              :node-id=\"selectedNode.id\"\n          />\n        </div>\n      </div>\n\n  </transition>\n</template>\n\n<script lang=\"ts\">\nimport { actions, useStore } from \"@/store\";\nimport { actions as nodeContentActions } from \"@/store/node_content\";\nimport { computed } from \"vue\";\nimport TextArea from \"primevue/textarea\";\nimport SectionPreconditions from \"./Preconditions.vue\";\nimport { Tree } from \"@/types/graphics\";\nimport {\n  EmptyNodeContent,\n  NodeComment,\n  NodeContent\n} from \"@/store/node_content\";\nimport { clone, printError } from \"@/tools/utils\";\nimport { useConfirm } from \"primevue/useconfirm\";\nimport api from \"@/api/api\";\nimport Markdown from \"./Markdown.vue\";\n\nexport default {\n  name: \"NodeContent\",\n  components: {\n    Markdown,\n    TextArea,\n    SectionPreconditions\n  },\n  props: {\n    show: {\n      type: Boolean,\n      required: true\n    }\n  },\n  setup() {\n    const store = useStore();\n    const confirm = useConfirm();\n    const tree = store.state.tree;\n    const nodeContents = computed<Record<string, NodeContent>>(\n      () => store.state.nodeContent.nodeContents\n    );\n    const userNodeComments = computed<Record<string, NodeComment>>(\n      () => store.state.nodeContent.userNodeComments\n    );\n\n    const selectedNode = computed<Tree | null>(() =>\n      tree.selectedNodeId && tree.nodeRecord[tree.selectedNodeId]\n        ? tree.nodeRecord[tree.selectedNodeId].node\n        : null\n    );\n\n    const selectedNodeContent = computed<NodeContent | null>(() => {\n      if (tree.selectedNodeId && nodeContents.value[tree.selectedNodeId]) {\n        return nodeContents.value[tree.selectedNodeId];\n      }\n      const newContent = clone(EmptyNodeContent);\n      newContent.nodeID = tree.selectedNodeId;\n      return newContent;\n    });\n\n    const comment = computed<string>(() =>\n      tree.selectedNodeId && userNodeComments.value[tree.selectedNodeId]\n        ? userNodeComments.value[tree.selectedNodeId].comment\n        : \"\"\n    );\n\n    return {\n      selectedNode,\n      selectedNodeContent,\n      checkAuthorized: async (e: Event) => {\n        if (!store.state.user.user || store.state.user.user.isAnonymous) {\n          await store.dispatch(`${actions.confirmSignInPopup}`, confirm);\n          e.preventDefault();\n        }\n      },\n      comment,\n      changeNodeTitle: async (value: string) => {\n        if (!selectedNode.value || !selectedNode.value.id) {\n          return;\n        }\n        const err = await api.debouncedUpdate({\n          [`map/${selectedNode.value.id}/name`]: value\n        });\n\n        if (err) {\n          printError(err.error.message, err.kv);\n        }\n      },\n      changeContent: async (value: string) => {\n        const err = await store.dispatch(\n          `nodeContent/${nodeContentActions.setNodeContent}`,\n          {\n            nodeID: selectedNode.value!.id,\n            content: value\n          }\n        );\n\n        if (err) {\n          printError(err, {});\n        }\n      },\n      changeComment: async (value: string) => {\n        const err = await store.dispatch(\n          `nodeContent/${nodeContentActions.setNodeComment}`,\n          {\n            nodeID: selectedNode.value!.id,\n            comment: value\n          }\n        );\n\n        if (err) {\n          printError(err, {});\n        }\n      }\n    };\n  }\n};\n</script>\n\n<style scoped>\n.wrapper {\n  position: absolute;\n  width: 30%;\n  height: 100%;\n  padding: 24px;\n  overflow-y: scroll;\n  background-color: rgba(255, 255, 255, 1);\n  font-family: Roboto, Arial, sans-serif;\n  color: rgb(73, 80, 87);\n}\n\n.slide-enter-active,\n.slide-leave-active {\n  transition: left 0.5s;\n}\n\n.slide-leave-from,\n.slide-enter-to {\n  left: 0;\n}\n\n.slide-enter-from,\n.slide-leave-to {\n  left: -100%;\n}\n</style>\n","<template>\n  <div\n    v-for=\"precondition of preconditions\"\n    class=\"p-grid\"\n    :key=\"precondition.id\"\n  >\n    <div class=\"p-col-12\">\n      <div class=\"p-grid\">\n        <div class=\"p-col-11\">\n          <a :href=precondition.id >{{ precondition.title }}</a>\n        </div>\n        <div class=\"p-col-1\">\n          <Button\n            @click=\"remove(precondition.id)\"\n            icon=\"pi pi-ban\"\n            class=\"p-button-rounded p-button-help p-button-outlined\"\n          />\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport Button from \"primevue/button\";\nimport { ref, watchEffect } from \"vue\";\nimport { useStore } from \"@/store\";\nimport api from \"@/api/api\";\nimport { Tree } from \"@/types/graphics\";\n\nexport default {\n  name: \"Preconditions\",\n  props: {\n    nodeId: String\n  },\n  components: {\n    Button\n  },\n  setup(props: { nodeId: string }) {\n    const store = useStore();\n    const preconditions = ref<Array<Tree>>([]);\n    watchEffect(() => {\n      preconditions.value = [];\n      if (\n        props.nodeId &&\n        store.state.precondition.preconditions[props.nodeId]\n      ) {\n        for (const id of store.state.precondition.preconditions[props.nodeId]) {\n          preconditions.value.push(store.state.tree.nodeRecord[id].node);\n        }\n      }\n    });\n\n    return {\n      preconditions,\n      remove: (id: string) => {\n        const p = store.state.precondition.preconditions[props.nodeId];\n        if (!p) {\n          return;\n        }\n        if (p.indexOf(id) == -1) {\n          return;\n        }\n\n        api.savePreconditions(store.state.user.user, {\n          nodeId: props.nodeId,\n          preconditionIds: p.splice(p.indexOf(id), 1),\n        });\n      }\n    };\n  }\n};\n</script>\n","\nimport Button from \"primevue/button\";\nimport { ref, watchEffect } from \"vue\";\nimport { useStore } from \"@/store\";\nimport api from \"@/api/api\";\nimport { Tree } from \"@/types/graphics\";\n\nexport default {\n  name: \"Preconditions\",\n  props: {\n    nodeId: String\n  },\n  components: {\n    Button\n  },\n  setup(props: { nodeId: string }) {\n    const store = useStore();\n    const preconditions = ref<Array<Tree>>([]);\n    watchEffect(() => {\n      preconditions.value = [];\n      if (\n        props.nodeId &&\n        store.state.precondition.preconditions[props.nodeId]\n      ) {\n        for (const id of store.state.precondition.preconditions[props.nodeId]) {\n          preconditions.value.push(store.state.tree.nodeRecord[id].node);\n        }\n      }\n    });\n\n    return {\n      preconditions,\n      remove: (id: string) => {\n        const p = store.state.precondition.preconditions[props.nodeId];\n        if (!p) {\n          return;\n        }\n        if (p.indexOf(id) == -1) {\n          return;\n        }\n\n        api.savePreconditions(store.state.user.user, {\n          nodeId: props.nodeId,\n          preconditionIds: p.splice(p.indexOf(id), 1),\n        });\n      }\n    };\n  }\n};\n","import { render } from \"./Preconditions.vue?vue&type=template&id=be4f9538\"\nimport script from \"./Preconditions.vue?vue&type=script&lang=ts\"\nexport * from \"./Preconditions.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\n  <p\n    v-show=\"!editOn\"\n    v-html=\"renderedContent\"\n    @click=\"setEditOn(true)\"\n    class=\"renderedContent\"\n  />\n  <textarea\n      class=\"rawContent p-inputtextarea p-inputtext p-component p-inputtextarea-resizable\"\n      style=\"display: none\"\n      ref=\"txtarea\"\n      :rows=\"rows\"\n      :value=\"content\"\n      @input=\"changeContent($event.target.value)\"\n      @focusout=\"setEditOn(false)\"\n  />\n</template>\n\n<script lang=\"ts\">\nimport { computed, ref } from \"vue\";\nimport MarkdownIt from 'markdown-it';\nconst mdKatex = require('markdown-it-katex'); // eslint-disable-line\nconst mdImsize = require('markdown-it-imsize'); // eslint-disable-line\nconst mdContainer = require('markdown-it-container'); // eslint-disable-line\nconst md = new MarkdownIt();\nmd.use(mdKatex, {output: 'html'}).use(mdImsize).use(mdContainer, 'warning', {\n  validate: function(params: any) {\n    console.log(\"validate\", params.trim(), params.trim() == 'warning')\n    return params.trim().match(/^warning$/);\n  },\n  render: function (tokens: any, idx: any) {\n    const m = tokens[idx].info.trim().match(/^warning(.*)$/);\n    if (tokens[idx].nesting === 1) {\n      // opening tag\n      return '<div style=\"background-color: #c6f68d; padding: 8px;\">' + md.utils.escapeHtml(m[1]) + '\\n';\n    } else {\n      // closing tag\n      return '</div>\\n';\n    }\n  }\n});\n\nexport default {\n  name: \"Markdown\",\n  emits: [\n    \"content-changed\",\n  ],\n  props: {\n    content: {\n      type: String,\n      required: true\n    },\n    rows: {\n      type: Number,\n      required: true\n    }\n  },\n  setup(props: any, ctx: any) {\n    const renderedContent = computed(()=>{\n      return md.render(props.content);\n    })\n    const editOn = ref(false)\n\n    const txtarea = ref<HTMLDivElement | null>(null)\n\n    return {\n      editOn,\n      txtarea,\n      setEditOn: (val: boolean) => {\n        editOn.value = val\n        if (val && txtarea.value) {\n          txtarea.value.style.display = 'block'\n          txtarea.value.focus()\n        }\n        if (!val && txtarea.value) {\n          txtarea.value.style.display = 'none'\n        }\n      },\n      renderedContent,\n      changeContent: (value: string) => {\n        ctx.emit(\"content-changed\", value)\n      },\n    };\n  }\n}\n</script>\n\n<style scoped>\n@import \"../../../node_modules/katex/dist/katex.min.css\";\n.renderedContent {\n  color: rgb(32, 33, 36);\n  font-family: Roboto, Arial, sans-serif;\n  font-size: 14px;\n  font-weight: 400;\n  letter-spacing: normal;\n  line-height: 20px;\n  margin-right: 4px;\n  text-align: left;\n  text-wrap: wrap;\n  overflow-y: scroll;\n  height: 400px;\n}\n.rawContent {\n  overflow-y: scroll;\n  height: 100%;\n}\n</style>\n","\nimport { computed, ref } from \"vue\";\nimport MarkdownIt from 'markdown-it';\nconst mdKatex = require('markdown-it-katex'); // eslint-disable-line\nconst mdImsize = require('markdown-it-imsize'); // eslint-disable-line\nconst mdContainer = require('markdown-it-container'); // eslint-disable-line\nconst md = new MarkdownIt();\nmd.use(mdKatex, {output: 'html'}).use(mdImsize).use(mdContainer, 'warning', {\n  validate: function(params: any) {\n    console.log(\"validate\", params.trim(), params.trim() == 'warning')\n    return params.trim().match(/^warning$/);\n  },\n  render: function (tokens: any, idx: any) {\n    const m = tokens[idx].info.trim().match(/^warning(.*)$/);\n    if (tokens[idx].nesting === 1) {\n      // opening tag\n      return '<div style=\"background-color: #c6f68d; padding: 8px;\">' + md.utils.escapeHtml(m[1]) + '\\n';\n    } else {\n      // closing tag\n      return '</div>\\n';\n    }\n  }\n});\n\nexport default {\n  name: \"Markdown\",\n  emits: [\n    \"content-changed\",\n  ],\n  props: {\n    content: {\n      type: String,\n      required: true\n    },\n    rows: {\n      type: Number,\n      required: true\n    }\n  },\n  setup(props: any, ctx: any) {\n    const renderedContent = computed(()=>{\n      return md.render(props.content);\n    })\n    const editOn = ref(false)\n\n    const txtarea = ref<HTMLDivElement | null>(null)\n\n    return {\n      editOn,\n      txtarea,\n      setEditOn: (val: boolean) => {\n        editOn.value = val\n        if (val && txtarea.value) {\n          txtarea.value.style.display = 'block'\n          txtarea.value.focus()\n        }\n        if (!val && txtarea.value) {\n          txtarea.value.style.display = 'none'\n        }\n      },\n      renderedContent,\n      changeContent: (value: string) => {\n        ctx.emit(\"content-changed\", value)\n      },\n    };\n  }\n}\n","import { render } from \"./Markdown.vue?vue&type=template&id=92fe9ff2&scoped=true\"\nimport script from \"./Markdown.vue?vue&type=script&lang=ts\"\nexport * from \"./Markdown.vue?vue&type=script&lang=ts\"\n\nimport \"./Markdown.vue?vue&type=style&index=0&id=92fe9ff2&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-92fe9ff2\"\n\nexport default script","\nimport { actions, useStore } from \"@/store\";\nimport { actions as nodeContentActions } from \"@/store/node_content\";\nimport { computed } from \"vue\";\nimport TextArea from \"primevue/textarea\";\nimport SectionPreconditions from \"./Preconditions.vue\";\nimport { Tree } from \"@/types/graphics\";\nimport {\n  EmptyNodeContent,\n  NodeComment,\n  NodeContent\n} from \"@/store/node_content\";\nimport { clone, printError } from \"@/tools/utils\";\nimport { useConfirm } from \"primevue/useconfirm\";\nimport api from \"@/api/api\";\nimport Markdown from \"./Markdown.vue\";\n\nexport default {\n  name: \"NodeContent\",\n  components: {\n    Markdown,\n    TextArea,\n    SectionPreconditions\n  },\n  props: {\n    show: {\n      type: Boolean,\n      required: true\n    }\n  },\n  setup() {\n    const store = useStore();\n    const confirm = useConfirm();\n    const tree = store.state.tree;\n    const nodeContents = computed<Record<string, NodeContent>>(\n      () => store.state.nodeContent.nodeContents\n    );\n    const userNodeComments = computed<Record<string, NodeComment>>(\n      () => store.state.nodeContent.userNodeComments\n    );\n\n    const selectedNode = computed<Tree | null>(() =>\n      tree.selectedNodeId && tree.nodeRecord[tree.selectedNodeId]\n        ? tree.nodeRecord[tree.selectedNodeId].node\n        : null\n    );\n\n    const selectedNodeContent = computed<NodeContent | null>(() => {\n      if (tree.selectedNodeId && nodeContents.value[tree.selectedNodeId]) {\n        return nodeContents.value[tree.selectedNodeId];\n      }\n      const newContent = clone(EmptyNodeContent);\n      newContent.nodeID = tree.selectedNodeId;\n      return newContent;\n    });\n\n    const comment = computed<string>(() =>\n      tree.selectedNodeId && userNodeComments.value[tree.selectedNodeId]\n        ? userNodeComments.value[tree.selectedNodeId].comment\n        : \"\"\n    );\n\n    return {\n      selectedNode,\n      selectedNodeContent,\n      checkAuthorized: async (e: Event) => {\n        if (!store.state.user.user || store.state.user.user.isAnonymous) {\n          await store.dispatch(`${actions.confirmSignInPopup}`, confirm);\n          e.preventDefault();\n        }\n      },\n      comment,\n      changeNodeTitle: async (value: string) => {\n        if (!selectedNode.value || !selectedNode.value.id) {\n          return;\n        }\n        const err = await api.debouncedUpdate({\n          [`map/${selectedNode.value.id}/name`]: value\n        });\n\n        if (err) {\n          printError(err.error.message, err.kv);\n        }\n      },\n      changeContent: async (value: string) => {\n        const err = await store.dispatch(\n          `nodeContent/${nodeContentActions.setNodeContent}`,\n          {\n            nodeID: selectedNode.value!.id,\n            content: value\n          }\n        );\n\n        if (err) {\n          printError(err, {});\n        }\n      },\n      changeComment: async (value: string) => {\n        const err = await store.dispatch(\n          `nodeContent/${nodeContentActions.setNodeComment}`,\n          {\n            nodeID: selectedNode.value!.id,\n            comment: value\n          }\n        );\n\n        if (err) {\n          printError(err, {});\n        }\n      }\n    };\n  }\n};\n","import { render } from \"./Index.vue?vue&type=template&id=207de61e&scoped=true\"\nimport script from \"./Index.vue?vue&type=script&lang=ts\"\nexport * from \"./Index.vue?vue&type=script&lang=ts\"\n\nimport \"./Index.vue?vue&type=style&index=0&id=207de61e&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-207de61e\"\n\nexport default script","<template>\n  <div :class=\"$style.wrapper\">\n    <div v-if=\"email\">\n      {{ email }}\n      <Feedback />\n      <EditMode />\n      <span v-if=\"editModeOn\">\n        <CutPaste v-if=\"isNodeSelected\" />\n        <AddNode />\n        <RemoveNode v-if=\"isNodeSelected\" />\n      </span>\n      <AddPrecondition\n        v-if=\"isNodeSelected\"\n        :clickedTitleId=\"clickedTitleId\"\n        @select-precondition-is-on=\"$emit('select-precondition-is-on')\"\n        @select-precondition-is-off=\"$emit('select-precondition-is-off')\"\n      />\n      <PinNode v-if=\"isNodeSelected && !isPinned\" />\n      <UnpinNode v-if=\"isNodeSelected && isPinned\" />\n      <button @click=\"signOut\">Sign Out</button>\n    </div>\n    <button v-else @click=\"signIn\">\n      Sign In\n    </button>\n  </div>\n</template>\n\n<script>\nimport { useStore } from \"@/store\";\nimport { computed } from \"vue\";\nimport { actions as userActions } from \"@/store/user\";\nimport PinNode from \"./PinNode\";\nimport AddPrecondition from \"./AddPrecondition\";\nimport AddNode from \"./AddNode\";\nimport RemoveNode from \"./RemoveNode\";\nimport EditMode from \"./EditMode\";\nimport UnpinNode from \"@/components/menu/UnpinNode\";\nimport CutPaste from \"@/components/menu/CutPaste\";\nimport Feedback from \"@/components/menu/Feedback\";\n\nexport default {\n  name: \"Menu\",\n  components: {\n    Feedback,\n    CutPaste,\n    UnpinNode,\n    PinNode,\n    AddNode,\n    AddPrecondition,\n    RemoveNode,\n    EditMode\n  },\n  props: {\n    clickedTitleId: {\n      type: String,\n      required: true\n    }\n  },\n  setup() {\n    const store = useStore();\n    const user = store.state.user;\n\n    // user info\n    const email = computed(() => (user.user ? user.user.email : null));\n\n    return {\n      email,\n      editModeOn: computed(() => store.state.editModeOn),\n      isNodeSelected: computed(() => store.state.tree.selectedNodeId),\n      isPinned: computed(\n        () =>\n          store.state.pin.pins[store.state.tree.selectedNodeId] !== undefined\n      ),\n      // SignIn SignOut\n      signIn: () => store.dispatch(`user/${userActions.signIn}`),\n      signOut: () => store.dispatch(`user/${userActions.signOut}`)\n    };\n  }\n};\n</script>\n\n<style module>\n.wrapper {\n  position: fixed;\n  display: flex;\n  top: 0;\n  right: 0;\n  padding: 8px;\n  background-color: rgba(255, 255, 255, 0.2);\n}\n</style>\n","<template>\n  <button @mousedown.stop=\"toggleAddDialog\">pin</button>\n  <Dialog\n    v-model:visible=\"addDialogVisible\"\n    :dismissableMask=\"true\"\n    :closable=\"true\"\n    :modal=\"true\"\n    :closeOnEscape=\"true\"\n  >\n    <template #header>\n      <h3>\n        {{ `Choose parent from which pin will be visible` }}\n      </h3>\n    </template>\n\n    <Listbox v-model=\"selectedParent\" :options=\"parents\" optionLabel=\"title\" />\n\n    <template #footer>\n      <Button\n        label=\"No\"\n        icon=\"pi pi-times\"\n        class=\"p-button-text\"\n        @click=\"cancelAdd\"\n      />\n      <Button label=\"Yes\" icon=\"pi pi-check\" @click=\"add\" />\n    </template>\n  </Dialog>\n</template>\n\n<script>\nimport Dialog from \"primevue/dialog\";\nimport Button from \"primevue/button\";\nimport Listbox from \"primevue/listbox\";\nimport { useStore } from \"@/store\";\nimport { computed, ref } from \"vue\";\nimport { actions as pinActions } from \"@/store/pin\";\nimport api from \"@/api/api\";\n\nexport default {\n  name: \"PinNode\",\n  components: {\n    Dialog,\n    Button,\n    Listbox\n  },\n  setup() {\n    const store = useStore();\n    const treeState = store.state.tree;\n    const addDialogVisible = ref(false);\n    const selectedParent = ref(false);\n    const selectedNode = computed(() => store.getters[\"tree/selectedNode\"]);\n    const newNodeTitle = ref(\"\");\n    const parents = computed(() => {\n      const selectedNodeParents = [];\n      let currentParent = treeState.nodeRecord[treeState.selectedNodeId].parent;\n      while (treeState.nodeRecord[currentParent.id].parent) {\n        selectedNodeParents.push({\n          title: currentParent.title,\n          id: currentParent.id\n        });\n        currentParent = treeState.nodeRecord[currentParent.id].parent;\n      }\n      selectedNodeParents.push({ title: \"root\", id: 0 });\n      return selectedNodeParents;\n    });\n\n    return {\n      toggleAddDialog: () => {\n        addDialogVisible.value = !addDialogVisible.value;\n      },\n      selectedParent,\n      parents,\n      add: () => {\n        addDialogVisible.value = false;\n        store.dispatch(`pin/${pinActions.AddPin}`, {\n          parentId: selectedParent.value.id,\n          nodeId: selectedNode.value.id\n        });\n        api.savePins(store.state.user.user, store.state.pin.pins);\n        selectedParent.value = null;\n      },\n      cancelAdd: () => {\n        addDialogVisible.value = false;\n      },\n      addDialogVisible,\n      newNodeTitle\n    };\n  }\n};\n</script>\n","import { render } from \"./PinNode.vue?vue&type=template&id=4dea212a\"\nimport script from \"./PinNode.vue?vue&type=script&lang=js\"\nexport * from \"./PinNode.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\n  <button @click=\"showAddBanner\">Add precondition</button>\n  <Dialog\n    v-model:visible=\"addBannerVisible\"\n    :dismissableMask=\"false\"\n    :closable=\"true\"\n    :modal=\"false\"\n    :closeOnEscape=\"true\"\n    @mousedown.stop\n  >\n    <template #header>\n      <h3>\n        Set \"{{\n          preconditionNode.title\n            ? preconditionNode.title\n            : selectedNode\n            ? selectedNode.title\n            : \"\"\n        }}\" as precondition for \"{{ targetNode ? targetNode.title : \"\" }}\"\n      </h3>\n    </template>\n\n    <template #footer>\n      <Button\n        label=\"Cancel\"\n        icon=\"pi pi-times\"\n        class=\"p-button-text\"\n        @click=\"cancelAdd\"\n      />\n      <Button label=\"Done\" icon=\"pi pi-check\" @click=\"add\" />\n    </template>\n  </Dialog>\n</template>\n\n<script>\nimport Dialog from \"primevue/dialog\";\nimport Button from \"primevue/button\";\nimport { useStore } from \"@/store\";\nimport { computed, ref, watch } from \"vue\";\nimport api from \"@/api/api\";\nimport { Tree } from \"@/types/graphics\";\n\nexport default {\n  name: \"AddPrecondition\",\n  components: {\n    Dialog,\n    Button\n  },\n  emits: [\"select-precondition-is-on\", \"select-precondition-is-off\"],\n  props: {\n    clickedTitleId: {\n      type: String,\n      required: true\n    }\n  },\n  setup(props, ctx) {\n    const store = useStore();\n    const addBannerVisible = ref(false);\n    const targetNode = ref({}); // node where precondition must be added\n    const preconditionNode = ref({}); // node where precondition must be added\n    const selectedNode = computed(() => store.getters[\"tree/selectedNode\"]); // current selected node\n\n    watch(\n      () => props.clickedTitleId,\n      () => {\n        if (\n          props.clickedTitleId !== \"-1\" &&\n          store.state.tree.nodeRecord[props.clickedTitleId]\n        ) {\n          preconditionNode.value =\n            store.state.tree.nodeRecord[props.clickedTitleId].node;\n        }\n      },\n      { immediate: true }\n    );\n\n    return {\n      showAddBanner: () => {\n        ctx.emit(\"select-precondition-is-on\");\n        targetNode.value = store.getters[\"tree/selectedNode\"];\n        addBannerVisible.value = !addBannerVisible.value;\n      },\n      add: () => {\n        let preconditionsIDs = []\n        if (store.state.precondition.preconditions[targetNode.value.id]) {\n          preconditionsIDs = store.state.precondition.preconditions[targetNode.value.id];\n        }\n        preconditionsIDs.push(preconditionNode.value.id);\n\n        api.savePreconditions(store.state.user.user, {\n          nodeId: targetNode.value.id,\n          preconditionIds: preconditionsIDs,\n        });\n        ctx.emit(\"select-precondition-is-off\");\n        addBannerVisible.value = false;\n        preconditionNode.value = {};\n      },\n      cancelAdd: () => {\n        addBannerVisible.value = false;\n        preconditionNode.value = {};\n        ctx.emit(\"select-precondition-is-off\");\n      },\n      addBannerVisible,\n      targetNode,\n      preconditionNode,\n      selectedNode\n    };\n  }\n};\n</script>\n","import { render } from \"./AddPrecondition.vue?vue&type=template&id=58e45ffa\"\nimport script from \"./AddPrecondition.vue?vue&type=script&lang=js\"\nexport * from \"./AddPrecondition.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\n  <button @click=\"toggleAddDialog\">+</button>\n  <Dialog\n    v-model:visible=\"addDialogVisible\"\n    :dismissableMask=\"true\"\n    :closable=\"true\"\n    :modal=\"true\"\n    :closeOnEscape=\"true\"\n    @mousedown.stop\n  >\n    <template #header>\n      <h3>\n        {{\n          selectedNodeTitle\n            ? `Add subsection to ${selectedNodeTitle}`\n            : `Add section`\n        }}\n      </h3>\n    </template>\n\n    <Input type=\"text\" v-model=\"newNodeTitle\" />\n\n    <template #footer>\n      <Button\n        label=\"No\"\n        icon=\"pi pi-times\"\n        class=\"p-button-text\"\n        @click=\"cancelAdd\"\n      />\n      <Button label=\"Yes\" icon=\"pi pi-check\" @click=\"add\" />\n    </template>\n  </Dialog>\n</template>\n\n<script>\nimport Dialog from \"primevue/dialog\";\nimport Button from \"primevue/button\";\nimport Input from \"primevue/inputtext\";\nimport { useStore } from \"@/store\";\nimport { computed, ref } from \"vue\";\nimport { actions } from \"@/store\";\n\nexport default {\n  name: \"AddNode\",\n  components: {\n    Dialog,\n    Button,\n    Input\n  },\n  setup() {\n    const store = useStore();\n    const addDialogVisible = ref(false);\n    const selectedNode = computed(() => store.getters[\"tree/selectedNode\"]);\n    const newNodeTitle = ref(\"\");\n\n    return {\n      selectedNodeTitle: computed(() =>\n        selectedNode.value ? selectedNode.value.title : \"\"\n      ),\n      toggleAddDialog: () => (addDialogVisible.value = !addDialogVisible.value),\n      add: () => {\n        store.dispatch(`${actions.createNode}`, {\n          parentID: selectedNode.value ? selectedNode.value.id : 0,\n          title: newNodeTitle.value\n        });\n        newNodeTitle.value = \"\";\n        addDialogVisible.value = false;\n      },\n      cancelAdd: () => {\n        newNodeTitle.value = \"\";\n        addDialogVisible.value = false;\n      },\n      addDialogVisible,\n      newNodeTitle\n    };\n  }\n};\n</script>\n","import { render } from \"./AddNode.vue?vue&type=template&id=0b75ead2\"\nimport script from \"./AddNode.vue?vue&type=script&lang=js\"\nexport * from \"./AddNode.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\n  <button @click=\"toggleDialog\" :disabled=\"!selectedNodeTitle\">-</button>\n  <Dialog\n    v-model:visible=\"addDialogVisible\"\n    :dismissableMask=\"true\"\n    :closable=\"true\"\n    :modal=\"true\"\n    :closeOnEscape=\"true\"\n  >\n    <template #header>\n      <h3>\n        {{ `Remove ${selectedNodeTitle} and all its descendants?` }}\n      </h3>\n    </template>\n\n    <template #footer>\n      <Button\n        label=\"No\"\n        icon=\"pi pi-times\"\n        class=\"p-button-text\"\n        @click=\"cancel\"\n      />\n      <Button label=\"Yes\" icon=\"pi pi-check\" @click=\"remove\" />\n    </template>\n  </Dialog>\n</template>\n\n<script>\nimport Dialog from \"primevue/dialog\";\nimport Button from \"primevue/button\";\nimport { useStore } from \"@/store\";\nimport { computed, ref } from \"vue\";\nimport { actions } from \"@/store\";\n\nexport default {\n  name: \"RemoveNode\",\n  components: {\n    Dialog,\n    Button\n  },\n  setup() {\n    const store = useStore();\n    const addDialogVisible = ref(false);\n    const selectedNode = computed(() => store.getters[\"tree/selectedNode\"]);\n\n    return {\n      selectedNodeTitle: computed(() =>\n        selectedNode.value ? selectedNode.value.title : \"\"\n      ),\n      toggleDialog: () => (addDialogVisible.value = !addDialogVisible.value),\n      remove: () => {\n        addDialogVisible.value = false;\n        store.dispatch(`${actions.removeNode}`, selectedNode.value.id);\n      },\n      cancel: () => {\n        addDialogVisible.value = false;\n      },\n      addDialogVisible\n    };\n  }\n};\n</script>\n","import { render } from \"./RemoveNode.vue?vue&type=template&id=35d0a755\"\nimport script from \"./RemoveNode.vue?vue&type=script&lang=js\"\nexport * from \"./RemoveNode.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\n  <button v-if=\"editModeOn\" @click=\"off\">Back to view mode</button>\n  <button v-if=\"!editModeOn\" @click=\"on\">Edit Map</button>\n</template>\n\n<script>\nimport { actions, useStore } from \"@/store\";\nimport { computed } from \"vue\";\n\nexport default {\n  name: \"EditMode\",\n  setup() {\n    const store = useStore();\n\n    return {\n      editModeOn: computed(() => store.state.editModeOn),\n      on: () => {\n        store.dispatch(`${actions.setEditMode}`, true);\n      },\n      off: () => {\n        store.dispatch(`${actions.setEditMode}`, false);\n      }\n    };\n  }\n};\n</script>\n","import { render } from \"./EditMode.vue?vue&type=template&id=8541d8a2\"\nimport script from \"./EditMode.vue?vue&type=script&lang=js\"\nexport * from \"./EditMode.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\n  <button @click=\"unpin\">unpin</button>\n</template>\n\n<script>\nimport { useStore } from \"@/store\";\nimport { actions as pinActions } from \"@/store/pin\";\nimport api from \"@/api/api\";\n\nexport default {\n  name: \"UnpinNode\",\n  setup() {\n    const store = useStore();\n\n    return {\n      unpin: () => {\n        store.dispatch(\n          `pin/${pinActions.RemovePin}`,\n          store.state.tree.selectedNodeId\n        );\n        api.savePins(store.state.user.user, store.state.pin.pins);\n      }\n    };\n  }\n};\n</script>\n","import { render } from \"./UnpinNode.vue?vue&type=template&id=44539b10\"\nimport script from \"./UnpinNode.vue?vue&type=script&lang=js\"\nexport * from \"./UnpinNode.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\n  <button @click=\"cut\">cut</button>\n  <button v-if=\"cutNodeID != null\" @click=\"paste\">Paste</button>\n</template>\n\n<script>\nimport { useStore } from \"@/store\";\nimport { computed, ref } from \"vue\";\nimport { actions } from \"@/store\";\n\nexport default {\n  name: \"CutPaste\",\n  setup() {\n    const store = useStore();\n    const selectedNode = computed(() => store.getters[\"tree/selectedNode\"]);\n    const cutNodeID = ref(null);\n\n    return {\n      cutNodeID,\n      cut: () => {\n        cutNodeID.value = selectedNode.value.id;\n      },\n      paste: () => {\n        store.dispatch(`${actions.cutPasteNode}`, {\n          nodeID: cutNodeID.value,\n          parentID: selectedNode.value.id\n        });\n        cutNodeID.value = null;\n      }\n    };\n  }\n};\n</script>\n","import { render } from \"./CutPaste.vue?vue&type=template&id=0b1d1725\"\nimport script from \"./CutPaste.vue?vue&type=script&lang=js\"\nexport * from \"./CutPaste.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\n  <Button iconPos=\"right\" @click=\"send\">\n    <img\n      alt=\"logo\"\n      src=\"../../assets/images/telegram.svg\"\n      style=\"width: 20px\"\n    />\n    <span class=\"p-ml-2 p-text-bold\">give us feedback!</span>\n  </Button>\n</template>\n\n<script>\nimport Button from \"primevue/button\";\n\nexport default {\n  name: \"Feedback\",\n  components: {\n    Button\n  },\n  setup() {\n    return {\n      send: () => {\n        window.open(\"https://discord.com/channels/1171118046543347782/1171118047105396749\", \"_blank\");\n      }\n    };\n  }\n};\n</script>\n","import { render } from \"./Feedback.vue?vue&type=template&id=32a3a66e\"\nimport script from \"./Feedback.vue?vue&type=script&lang=js\"\nexport * from \"./Feedback.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","import { render } from \"./Index.vue?vue&type=template&id=fa745190\"\nimport script from \"./Index.vue?vue&type=script&lang=js\"\nexport * from \"./Index.vue?vue&type=script&lang=js\"\n\nconst cssModules = script.__cssModules = {}\nimport style0 from \"./Index.vue?vue&type=style&index=0&id=fa745190&module=true&lang=css\"\ncssModules[\"$style\"] = style0\nscript.render = render\n\nexport default script","\nimport { computed, defineComponent, ref, watch } from \"vue\";\nimport Map from \"@/components/map/Map.vue\";\nimport NodeContent from \"@/components/node_content/Index.vue\";\nimport ConfirmDialog from \"primevue/confirmdialog\";\nimport Toast from \"primevue/toast\";\nimport {\n  EventClickNode,\n  EventDraggingBackground,\n  EventDraggingNode,\n  EventWheel\n} from \"@/components/map/Map.ts\";\nimport Menu from \"@/components/menu/Index.vue\";\nimport { useStore } from \"@/store\";\nimport { useRouter, useRoute, onBeforeRouteUpdate } from \"vue-router\";\nimport { mutations as treeMutations, NodeRecordItem } from \"@/store/tree\";\nimport { mutations as zoomPanMutations } from \"@/store/zoom_pan\";\nimport { actions } from \"@/store/\";\nimport {\n  filterNodesAndLayers,\n  findCentralNode,\n  zoomAndPanPoint,\n  zoomAnPanLayers\n} from \"@/views/Home\";\nimport { clone, printError } from \"@/tools/utils\";\nimport { MapNode } from \"@/types/graphics\";\nimport {findMapNode, findMapNodes} from \"@/store/tree/helpers\";\nimport { DBNode } from \"@/api/types\";\n\nexport default defineComponent({\n  name: \"Home\",\n\n  components: {\n    Map,\n    Menu,\n    NodeContent,\n    ConfirmDialog,\n    Toast\n  },\n\n  setup() {\n    const store = useStore();\n    const router = useRouter();\n    const route = useRoute();\n    const treeState = store.state.tree;\n    const zoomPanState = store.state.zoomPan;\n    const pinState = store.state.pin;\n    const clickedTitleId = ref(\"-1\");\n    let selectPreconditionIsOn = false;\n    let titleOver = false;\n\n    // Set node from URL as selected\n    watch(\n      () => route.params.id,\n      () => {\n        store.commit(\n          `tree/${treeMutations.SET_SELECTED_NODE_ID}`,\n          route.params.id\n        );\n      },\n      { immediate: true }\n    );\n\n    /**\n     * compute svg viewBox\n     */\n    const viewBox = computed(() => {\n      if (treeState.mapNodeLayers && treeState.mapNodeLayers.length) {\n        return `0 0 ${2 * treeState.mapNodeLayers[0][\"0\"].center.x} ${2 *\n          treeState.mapNodeLayers[0][\"0\"].center.y}`;\n      } else {\n        return `0 0 1000 1000`;\n      }\n    });\n\n    /**\n     * From mapNodeLayers method updateLayers determines visibleLayers and nodes\n     * that will be shown to user (which is always just a small part of all nodes and visibleLayers of the map)\n     * @param centralNodeId\n     * @param mapNodeLayers\n     * @param nodeRecord\n     */\n    const updateLayers = (\n      centralNodeId: string,\n      mapNodeLayers: Array<Record<string, MapNode>>,\n      nodeRecord: Record<string, NodeRecordItem>\n    ): Array<Record<number, MapNode>> => {\n      // Вычленяем слои и узлы которые мы хотим показывать учитывая что текущий видимый узел это centralNodeId\n      const [filteredLayers, err] = filterNodesAndLayers(\n        mapNodeLayers,\n        nodeRecord,\n        centralNodeId\n      );\n      if (err) {\n        printError(\"Home.vue: error in filterNodesAndLayers:\", { err });\n        return [];\n      }\n      return filteredLayers.reverse();\n    };\n\n    const centralNodeId = ref<string | null>(null);\n    // visibleLayers consists only from user visible nodes and visibleLayers of all (which is treeState.mapNodeLayers)\n    const visibleLayers = ref<Array<Record<string, MapNode>>>([]);\n\n    // Ugly hack to determine first load of page\n    let isFirstPageLoad = true;\n    onBeforeRouteUpdate(async (to, from) => {\n      isFirstPageLoad = false\n    })\n    // If this is isFirstPageLoad then pan map to node in URL\n    watch(\n    () => [\n          treeState.mapNodeLayers,\n        ],\n    () => {\n      if (isFirstPageLoad && route.params.id.length > 0 && treeState.mapNodeLayers.length>0) {\n        const [firstNode] = findMapNode(route.params.id as string, treeState.mapNodeLayers)\n        if (firstNode != null) {\n          store.commit(\n              `zoomPan/${zoomPanMutations.SET_PAN}`,\n              {x: -firstNode.center.x + treeState.mapNodeLayers[0][\"0\"].center.x, y: -firstNode.center.y + treeState.mapNodeLayers[0][\"0\"].center.y},\n          );\n        }\n      }\n    })\n\n\n    // Determine which nodes to show based on current pan and zoom\n    watch(\n  () => [\n        treeState.mapNodeLayers,\n        zoomPanState.debouncedZoom,\n        zoomPanState.debouncedPan\n      ],\n      () => {\n        const [newCentralNodeId, err] = findCentralNode(\n          treeState.mapNodeLayers,\n          treeState.nodeRecord,\n          { width: window.innerWidth, height: window.innerHeight },\n          zoomPanState.debouncedZoom,\n          zoomPanState.pan,\n          zoomPanState.zoomCenter\n        );\n        if (err != null) {\n          printError(\"filterNodesAndLayers: error in findCurrentNode\", { err });\n        }\n\n        centralNodeId.value = newCentralNodeId;\n        visibleLayers.value = updateLayers(\n          newCentralNodeId,\n          treeState.mapNodeLayers,\n          treeState.nodeRecord\n        );\n      },\n      { immediate: true, deep: true }\n    );\n\n    const visibleZoomedPanedLayers = ref<Array<Record<string, MapNode>>>([]);\n    watch(\n      () => [zoomPanState.pan.x, zoomPanState.pan.y, zoomPanState.zoom, visibleLayers],\n      () => {\n        // visibleLayers это всегда слои с zoom=1 и pan={0, 0} состоящий из только видимых прямо сейчас элементов.\n        // Мы применяем к этому объекту текущий zoomPanState но сам эталон не трогаем, поэтому здесь clone\n        // Это не дорогая операция так как visibleLayers всегда содержит небольшое кол-во элементов\n        // видимых только прямо сейчас\n        const layersToZoomAndPan = clone(visibleLayers.value);\n        visibleZoomedPanedLayers.value = zoomAnPanLayers(\n          layersToZoomAndPan,\n          zoomPanState.zoom,\n          zoomPanState.pan\n        );\n      },\n      { immediate: true, deep: true }\n    );\n\n    return {\n      pinNodes: computed(() => {\n        if (centralNodeId.value == null) {\n          return [];\n        }\n        const pinNodeIDs = pinState.pinsReverse[centralNodeId.value];\n        if (!pinNodeIDs) {\n          return [];\n        }\n\n        // remove pins that already exists on visibleLayers\n        for (const layer of visibleLayers.value) {\n          for (const nodeID in layer) {\n            const node = layer[nodeID];\n            if (node.title != \"\") {\n              const ind = pinNodeIDs.indexOf(node.id);\n              if (ind != -1) {\n                pinNodeIDs.splice(ind, 1);\n              }\n            }\n          }\n        }\n\n        const pinMapNodes = findMapNodes(pinNodeIDs, treeState.mapNodeLayers);\n        const result = [];\n        for (const pinMapNode of pinMapNodes) {\n          const cl = clone(pinMapNode);\n          cl.center = zoomAndPanPoint(\n            pinMapNode.center,\n            zoomPanState.zoom,\n            zoomPanState.pan\n          );\n          result.push(cl);\n        }\n\n        return result;\n      }),\n      viewBox,\n      editModeOn: computed(() => store.state.editModeOn),\n      selectedNodeId: computed(() => treeState.selectedNodeId),\n      selectedNodePreconditionIds: computed(() =>\n        treeState.selectedNodeId\n          ? store.state.precondition.preconditions[treeState.selectedNodeId]\n          : []\n      ),\n      visibleZoomedPanedLayers: visibleZoomedPanedLayers,\n      nodeDragging: (e: EventDraggingNode) => {\n        store.dispatch(`${actions.updateNodePosition}`, {\n          nodeId: e.id,\n          delta: {\n            x: e.delta.x / zoomPanState.zoom,\n            y: e.delta.y / zoomPanState.zoom\n          }\n        });\n      },\n      setSelectPreconditionON: () => {\n        selectPreconditionIsOn = true;\n      },\n      setSelectPreconditionOFF: () => {\n        selectPreconditionIsOn = false;\n      },\n      clickedTitleId,\n      titleClick: (e: EventClickNode) => {\n        if (!selectPreconditionIsOn) {\n          router.push({ name: \"node\", params: { id: e.id } });\n        } else {\n          clickedTitleId.value = e.id;\n        }\n      },\n      titleOver: (e: EventClickNode) => {\n        titleOver = true\n        store.commit(`tree/${treeMutations.SET_SELECTED_NODE_ID}`, e.id);\n      },\n      titleLeave: (e: EventClickNode) => {\n        titleOver = false\n        store.commit(\n          `tree/${treeMutations.SET_SELECTED_NODE_ID}`,\n          route.params.id\n        );\n      },\n      mapDragging: (event: EventDraggingBackground) => {\n        if (store.state.editModeOn && titleOver) {\n          // to prevent pan while node position editing ( = title dragging in edit mode)\n          return\n        }\n        store.commit(`zoomPan/${zoomPanMutations.ADD_PAN}`, event);\n      },\n      zoom: (event: EventWheel) => {\n        // initial value of center (when root.border == viewport)\n        const initial = {\n          x: (event.center.x - zoomPanState.pan.x) / zoomPanState.zoom,\n          y: (event.center.y - zoomPanState.pan.y) / zoomPanState.zoom\n        };\n        store.commit(`zoomPan/${zoomPanMutations.ADD_ZOOM}`, -1 * event.delta);\n        const after = {\n          x: initial.x * zoomPanState.zoom + zoomPanState.pan.x,\n          y: initial.y * zoomPanState.zoom + zoomPanState.pan.y\n        };\n        store.commit(`zoomPan/${zoomPanMutations.ADD_PAN}`, {\n          from: after,\n          to: event.center\n        });\n        store.commit(\n          `zoomPan/${zoomPanMutations.SET_ZOOM_CENTER}`,\n          event.center\n        );\n      }\n    };\n  }\n});\n","import { render } from \"./Home.vue?vue&type=template&id=f19b3b8a\"\nimport script from \"./Home.vue?vue&type=script&lang=ts\"\nexport * from \"./Home.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\n  <h1>Oops, it looks like the page you're looking for doesn't exist.</h1>\n</template>\n","import { render } from \"./NotFound.vue?vue&type=template&id=600d9e34\"\nconst script = {}\nscript.render = render\n\nexport default script","import { createRouter, createWebHistory, RouteRecordRaw } from \"vue-router\";\nimport PasswordLogin from \"../views/PasswordLogin.vue\";\nimport Home from \"../views/Home.vue\";\nimport NotFound from \"../views/NotFound.vue\";\n\nconst routes: Array<RouteRecordRaw> = [\n  {\n    path: \"/passwordLogin\",\n    component: PasswordLogin\n  },\n  {\n    path: \"/:id?\",\n    name: \"node\",\n    component: Home\n  },\n  {\n    path: \"/:catchAll(.*)\",\n    component: NotFound\n  }\n];\n\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n});\n\nexport default router;\n","import { createApp } from \"vue\";\nimport App from \"./App.vue\";\nimport PrimeVue from \"primevue/config\";\nimport ConfirmationService from \"primevue/confirmationservice\";\nimport ToastService from \"primevue/toastservice\";\nimport router from \"./router\";\nimport { store, key } from \"./store\";\n// primevue ui stuff\nimport \"primevue/resources/themes/saga-blue/theme.css\"; //theme\nimport \"primevue/resources/primevue.min.css\"; //core css\nimport \"primeicons/primeicons.css\"; //icons\nimport \"primeflex/primeflex.css\";\n\ncreateApp(App)\n  .use(store, key)\n  .use(router)\n  .use(PrimeVue)\n  .use(ConfirmationService)\n  .use(ToastService)\n  .mount(\"#app\");\n","var map = {\n\t\"./bmp\": \"0dcc\",\n\t\"./bmp.js\": \"0dcc\",\n\t\"./gif\": \"c416\",\n\t\"./gif.js\": \"c416\",\n\t\"./jpg\": \"135b\",\n\t\"./jpg.js\": \"135b\",\n\t\"./png\": \"e9ef\",\n\t\"./png.js\": \"e9ef\",\n\t\"./psd\": \"520c\",\n\t\"./psd.js\": \"520c\",\n\t\"./svg\": \"b0bf\",\n\t\"./svg.js\": \"b0bf\",\n\t\"./tiff\": \"f270\",\n\t\"./tiff.js\": \"f270\",\n\t\"./webp\": \"cf1e\",\n\t\"./webp.js\": \"cf1e\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"cd50\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Index_wrapper_1nXRC\"};"],"sourceRoot":""}