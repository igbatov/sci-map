{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/assets/images/sign-in.svg","webpack:///./src/components/node_content/RemoveIcon.vue?1c8d","webpack:///./src/assets/images/chat.svg","webpack:///./src/assets/images/action.svg","webpack:///./src/components/node_content/Title.vue?5177","webpack:///./src/components/SVGTextBox.vue?6701","webpack:///./src/assets/images/plugin.svg","webpack:///./src/assets/images/add.svg","webpack:///./src/assets/images/talk.svg","webpack:///./src/components/node_content/Index.vue?3ac0","webpack:///./src/components/menu/Index.vue?f601","webpack:///./src/assets/images/switch-off.svg","webpack:///./src/assets/images/remove-off.svg","webpack:///./src/assets/images/remove-on.svg","webpack:///./src/components/menu/Index.vue?d3af","webpack:///./src/assets/images/paste.svg","webpack:///./src/assets/images/add-on.svg","webpack:///./src/components/node_content/AddBasedOnIcon.vue?e31f","webpack:///./src/assets/images/switch-on.svg","webpack:///./src/components/node_content/Markdown.vue?4fc3","webpack:///./src/assets/images/cut.svg","webpack:///./src/assets/images/goal.svg","webpack:///./src/components/menu/Textsearch.vue?5f83","webpack:///./src/components/node_content/PinIcon.vue?95b8","webpack:///./src/assets/images/pin-off.svg","webpack:///./src/assets/images/pin-on.svg","webpack:///./src/components/menu/Textsearch.vue?938e","webpack:///./src/assets/images/user.svg","webpack:///./src/App.vue","webpack:///./src/store/pin/index.ts","webpack:///./src/store/title_box/index.ts","webpack:///./src/store/precondition/index.ts","webpack:///./src/store/position_change_permits/index.ts","webpack:///./src/tools/errorkv.ts","webpack:///./src/tools/utils.ts","webpack:///./src/store/tree/helpers.ts","webpack:///./src/api/helpers.ts","webpack:///./src/api/api.ts","webpack:///./src/tools/graphics.ts","webpack:///./src/store/tree/index.ts","webpack:///./src/store/history/index.ts","webpack:///./src/store/zoom_pan/index.ts","webpack:///./src/store/user/index.ts","webpack:///./src/store/node_content/index.ts","webpack:///./src/store/search_result/index.ts","webpack:///./src/tools/textsearch.ts","webpack:///./src/store/helpers.ts","webpack:///./src/store/index.ts","webpack:///./src/App.vue?3acc","webpack:///./src/App.vue?dfb6","webpack:///./src/views/PasswordLogin.vue","webpack:///./src/views/PasswordLogin.vue?76a3","webpack:///./src/views/PasswordLogin.vue?e3c1","webpack:///./src/views/Home.vue","webpack:///./src/components/map/Map.vue","webpack:///./src/components/map_layer/MapLayer.vue","webpack:///./src/components/map_layer/MapLayer.ts","webpack:///./src/components/SVGTextBox.ts","webpack:///./src/components/map_layer/MapLayer.vue?1431","webpack:///./src/components/map_layer/MapLayer.vue?0796","webpack:///./src/components/map/MapPan.ts","webpack:///./src/components/pin_layer/PinLayer.vue","webpack:///./src/components/pin_layer/PinMarker.vue","webpack:///./src/components/pin_layer/PinMarker.vue?bbb0","webpack:///./src/components/pin_layer/PinMarker.vue?9aa1","webpack:///./src/components/SVGTextBox.vue","webpack:///./src/components/SVGTextBox.vue?ae08","webpack:///./src/components/SVGTextBox.vue?ec46","webpack:///./src/components/pin_layer/PinLayer.vue?738a","webpack:///./src/components/pin_layer/PinLayer.vue?8bd0","webpack:///./src/components/precondition_layer/PreconditionLayer.vue","webpack:///./src/components/precondition_layer/PreconditionArrow.vue","webpack:///./src/components/precondition_layer/PreconditionArrow.vue?e51e","webpack:///./src/components/precondition_layer/PreconditionArrow.vue?74c6","webpack:///./src/views/Home.ts","webpack:///./src/components/precondition_layer/PreconditionLayer.vue?6cdc","webpack:///./src/components/precondition_layer/PreconditionLayer.vue?73c2","webpack:///./src/components/map/Map.vue?b432","webpack:///./src/components/map/Map.vue?8505","webpack:///./src/components/node_content/Index.vue","webpack:///./src/components/node_content/Preconditions.vue","webpack:///./src/components/node_content/RemoveIcon.vue","webpack:///./src/components/node_content/RemoveIcon.vue?f4ef","webpack:///./src/components/node_content/Preconditions.vue?b5b4","webpack:///./src/components/node_content/Preconditions.vue?c4ee","webpack:///./src/components/node_content/UsedBy.vue","webpack:///./src/components/node_content/UsedBy.vue?fc09","webpack:///./src/components/node_content/UsedBy.vue?0024","webpack:///./src/components/node_content/Markdown.vue","webpack:///./src/components/node_content/Markdown.vue?6e5c","webpack:///./src/components/node_content/Markdown.vue?9efd","webpack:///./src/components/node_content/ChangeLog.vue","webpack:///./src/store/change_log/index.ts","webpack:///./src/api/change_log.ts","webpack:///./src/components/node_content/ChangeLogComplain.vue","webpack:///./src/components/node_content/ChangeLogComplain.vue?d4d1","webpack:///./src/components/node_content/ChangeLogComplain.vue?5b6f","webpack:///./src/components/node_content/ChangeLog.vue?ff01","webpack:///./src/components/node_content/ChangeLog.vue?5753","webpack:///./src/components/node_content/PinButton.vue","webpack:///./src/components/node_content/PinIcon.vue","webpack:///./src/components/node_content/PinIcon.vue?7cf5","webpack:///./src/components/node_content/PinButton.vue?f1ab","webpack:///./src/components/node_content/Title.vue","webpack:///./src/components/node_content/Title.vue?1578","webpack:///./src/components/node_content/Title.vue?f8bb","webpack:///./src/components/node_content/AddBasedOnButton.vue","webpack:///./src/components/node_content/AddBasedOnIcon.vue","webpack:///./src/components/node_content/AddBasedOnIcon.vue?6da1","webpack:///./src/components/node_content/AddBasedOnButton.vue?6d44","webpack:///./src/components/node_content/Index.vue?70b7","webpack:///./src/components/node_content/Index.vue?1dc7","webpack:///./src/components/menu/Index.vue","webpack:///./src/components/menu/AddNode.vue","webpack:///./src/components/menu/MenuButton.vue","webpack:///./src/components/menu/MenuButton.vue?30bd","webpack:///./src/components/menu/AddNode.vue?9c98","webpack:///./src/components/menu/RemoveNode.vue","webpack:///./src/components/menu/RemoveNode.vue?2cae","webpack:///./src/components/menu/EditMode.vue","webpack:///./src/components/menu/EditMode.vue?1f8e","webpack:///./src/components/menu/CutPaste.vue","webpack:///./src/components/menu/CutPaste.vue?91c8","webpack:///./src/components/menu/Feedback.vue","webpack:///./src/components/menu/Feedback.vue?098b","webpack:///./src/components/menu/Textsearch.vue","webpack:///./src/components/menu/Textsearch.vue?1edb","webpack:///./src/components/menu/Textsearch.vue?31d6","webpack:///./src/components/menu/MapChangeLog.vue","webpack:///./src/components/menu/MapChangeLog.vue?c7fd","webpack:///./src/components/menu/MapChangeLog.vue?978e","webpack:///./src/components/menu/Index.vue?075d","webpack:///./src/views/Home.vue?d5e7","webpack:///./src/views/Home.vue?ab8c","webpack:///./src/views/Change.vue","webpack:///./src/views/Change.vue?708d","webpack:///./src/views/Change.vue?8302","webpack:///./src/views/NodeDescription.vue","webpack:///./src/views/NodeDescription.vue?fd3e","webpack:///./src/views/NodeDescription.vue?8bca","webpack:///./src/views/NotFound.vue","webpack:///./src/views/NotFound.vue?8fd3","webpack:///./src/router/index.ts","webpack:///./src/main.ts","webpack:///./node_modules/markdown-it-imsize/lib/imsize/types sync ^\\.\\/.*$","webpack:///./src/assets/images/bottles.png","webpack:///./src/components/node_content/Preconditions.vue?3a50","webpack:///./src/assets/images/minus.svg","webpack:///./src/components/map_layer/MapLayer.vue?d9ad","webpack:///./src/assets/images/pin-on-map.svg","webpack:///./src/components/node_content/Preconditions.vue?b920","webpack:///./src/assets/images/add-off.svg"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","mutations","SET_PINS","ADD_TO_PINS","REMOVE_PIN","ADD_TO_PINS_REVERSE","AddPin","RemovePin","namespaced","state","pins","pinsReverse","actions","v","commit","rootState","currentParent","tree","nodeRecord","nodeId","parent","parentIds","id","parentId","pinId","index","indexOf","SET_MAP","layerMap","layerName","titleBoxMap","SET_PRECONDITIONS","UPDATE_PRECONDITIONS","preconditions","reverseIndex","precondID","nodeID","preconditionIDs","PERMISSION_TIMEOUT","ADD_NODES","REMOVE_NODES","CheckNodeID","permittedNodeIDs","nodeIDs","Date","getTime","message","kv","code","err","Error","error","ROUND_EPSILON","mod","round","num","Math","pow","clone","printError","msg","console","kvArr","findMapNode","mapNodeLayers","level","layer","Number","findMapNodes","ids","createNewNode","title","center","position","children","getNewNodeCenter","addRandom","parentMapNode","fromCenterVectors","border","map","from","to","maxFromCenterVector","getVectorLength","coeff","random","x","y","maxDiagChild","maxDiagChildMapNode","maxDiagChildId","child","childMapNode","childId","getMaxDiagonal","childDiag","err1","maxDiag","err2","finalMaxDiag","newNodeCenter","vectorOnNumber","modifiedNode","updatePosition","item","convertPosition","normalizedPosition","node","layerLevel","treeToMapNodeLayers","ls","mergeMapNodeLayers","convertChildren","Array","isArray","filter","childID","sort","forEach","arr","toString","values","convertDBMapToTree","dbNodes","root","stack","pop","parentID","FUNCTION_DOMAIN","database","ref","update","debouncedUpdate","ROOT_WIDTH","innerWidth","ROOT_HEIGHT","innerHeight","ROOT_CENTER_X","ROOT_CENTER_Y","ST_WIDTH","ST_HEIGHT","initFirebase","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","analytics","callFunction","method","params","currentUser","auth","getIdToken","idToken","a","response","e","getMapFromDB","snapshot","exists","val","getMapFromStorage","user","storage","uid","getDownloadURL","url","getMap","getPins","savePins","putString","btoa","unescape","encodeURIComponent","JSON","stringify","getPreconditions","savePreconditions","set","preconditionIds","subscribeMapNodeChange","cb","this","subscribeDBChange","snap","subscribeNodeContentChange","subscribePreconditionNodeChange","unsubscribeMapNodeChange","off","path","on","unsubscribeDBChange","transaction","setNode","setPublicUserData","userID","displayName","discordName","log","getNode","pr","generateKey","findKeyInList","orderByValue","equalTo","limitToFirst","findKeyOfChild","getUserComments","nodeComment","getNodeContent","NORMALIZED_BORDER","api","sqrt","polygonToTurf","pp","point","isInside","polygon","polygonToPCPolygon","abs","intersect","p1","p2","np1","np2","cf","tp1","tp2","polygonIntersect","intersection","resultPolys","poly","resultPoly","getBoundingBorders","minX","reduce","previousValue","currentValue","minY","maxX","maxY","leftBottom","rightTop","getVoronoiCellsInSquare","centers","turfPoints","collection","cells","bbox","cellMap","features","cell","cellBorder","geometry","coordinates","getVoronoiCells","outerBorder","bb","res","BoundingBorders","intersections","polygonFill","selectedNodeId","currentNodeId","selectedNodePreconditionIds","polygonFillOpacity","polygonToPath","join","treeToNodeRecord","transferToPoint","vector","addVector","b","bTransferred","aTr","transferPointOnVector","getVectorIntersection","v1","v2","x1","y1","x2","y2","x3","y3","x4","y4","denom","numeA","numeB","uA","uB","morphChildrenPoints","oldBorder","newBorder","oldPoints","oldCenterTf","newCenterTf","oldCenter","newCenter","maxDiameter","max","newPoints","oldPoint","centerToPoint","oldBorderIntersection","segment","newBorderIntersection","NewEmptyVector","diagonals","middle","maxDiagonal","diag","type","convertedPosition","morphedPositions","normalizedBorder","tmp","rootBorder","rootPosition","keys","treeLayers","lastTreeLayer","lastMapNodeLayer","newTreeLayer","newMapNodeLayer","treeNode","tmpMap","strPos","firstId","secondId","treeNodeChildren","denormalizedPosition","ch","recipientLayers","insertedLayers","startFromLevel","ROOT_BORDER","ROOT_CENTER","userFitCoefficient","min","changeTypeEnum","SET_SELECTED_NODE_ID","SET_TREE","UPDATE_NODE_POSITION","REMOVE_NODE","handleMapNodeUpdate","getters","selectedNode","dbNode","dispatch","dbNodeRecord","oldDBNode","newChildren","includes","removedChildren","returnError","addedDBNode","toProcess","inProcessNode","childNode","ind","findIndex","ADD_ZOOM","ADD_PAN","SET_PAN","SET_ZOOM_CENTER","zoomDebounce","debouncedZoom","panDebounce","debouncedPan","ZOOM_SENSITIVITY","PAN_SENSITIVITY","zoom","pan","zoomCenter","delta","newZoom","SET_USER","signIn","signOut","signInWithPopup","GoogleAuthProvider","ADD_CUT_PASTE","ADD_CREATE","ADD_REMOVE","ADD_POSITION_CHANGE","changeTypes","CUT_PASTE","CREATE","REMOVE","POSITION_CHANGE","stableChangeList","localChangeList","change","newParentID","firstOldPosition","oldPosition","newPosition","SET_CONTENTS","SET_USER_COMMENTS","SET_NODE_CONTENT","SET_NODE_COMMENT","setNodeContent","setNodeComment","EmptyNodeContent","content","createContentIfNotExist","nodeContents","EmptyNodeComment","comment","createCommentIfNotExist","userNodeComments","isAnonymous","SET_NODE_IDS","language","tokenize","text","add","search","initMap","convErr","fetchPins","initPreconditions","initNodeContents","nodeContent","userComments","initData","init","updateNodePosition","createNode","cutPasteNode","removeNode","setEditMode","confirmSignInPopup","SET_EDIT_MODE","SET_SUBSCRIBED_NODE_IDS","debouncedPositionSet","normalizedNewNodeCenter","editModeOn","subscribedNodeIDs","confirm","require","header","acceptLabel","rejectLabel","accept","reject","onAuthStateChanged","changedNode","newDBNode","newKey","updateMap","normalizedChangedCenter","oldParent","newParent","oldKey","allChildrenID","allChildrenIDMap","moveToTrash","precondition","parentNodeID","mapNode","args","pin","titleBox","positionChangePermits","zoomPan","history","searchResult","useStore","setup","store","render","login","emailEl","document","getElementById","passwordEl","signInWithEmailAndPassword","clickedTitleId","setSelectPreconditionON","setSelectPreconditionOFF","show","layers","visibleZoomedPanedLayers","pin-nodes","pinNodes","searchResultPinNodes","searchResultNodeIDs","nodeDragging","titleClick","titleOver","titleLeave","mapDragging","xmlns","width","svgWidth","height","svgHeight","mapID","style","layer-id","map-nodes","border-color","borderColor","font-color","fontColor","font-size","fontSize","font-opacity","fontOpacity","map-id","draggingNode","visibleTitleIds","color","font-weight","text-decoration","mapNodes","stroke","fill","fill-opacity","stroke-width","points","pointer-events","TITLE_PREFIX","font-family","textWeight","textColor","textDecoration","class","splitLines","line","alignment-baseline","titleMouseDown","cursor","mouseMoveListener","emit","event","mouseDownInfo","dragStart","movementX","movementY","mouseUpListener","nodeToTitleBox","nodes","updateTitleBox","titleIdPrefix","dom","getBoundingClientRect","mps","then","immediate","maxCharNum","words","split","lines","currLine","nextLine","emits","props","layerId","mapId","String","required","validator","prop","ctx","layerID","titleMouseDownInfo","mouseMove","mouseUp","addEventListener","removeEventListener","searchResultNodeIDsMap","methods","__scopeId","mouseDownBg","mouseDown","visiblePinNodes","useLineBreak","titleXY","line-height","max-char-per-line","fontWeight","titleBoxClick","transform","WIDTH","HEIGHT","fontFamily","lineHeight","Boolean","maxCharPerLine","components","SVGTextBox","PinMarker","allPinNodes","PIN_MARKER_HEIGHT","PIN_MARKER_WIDTH","alignedXY","markerWidth","markerHeight","refX","refY","orient","markerId","visibleTitleNodes","titleBoxOver","titleBoxLeave","marker-end","MIN_VISIBLE_NUM_IN_LAYER","zoomAndPanPoint","zoomAndPanPolygon","findCentralNode","viewport","zoomFactor","underCursorNodeId","viewportArea","nodesToCheck","borderToCheck","minDist","Infinity","nodeCenter","dist","underCursorNodeArea","floor","maxIntersectNodeId","filterNodesAndLayers","resultLayers","currentNode","upperLayer","firstLayer","secondLayer","childOfChild","thirdLayer","zoomAnPanLayers","PreconditionArrow","zoomPanState","zoomedPannedSelectedNode","visibleTitleNodeBoxes","PreconditionLayer","PinLayer","MapLayer","clientX","clientY","deltaY","passive","prevDist","prevPoint","touches","hypot","pageX","pageY","idx","size","levelSizes","0","1","2","3","levelColors","alt","src","frameborder","allow","allowfullscreen","target","href","selectedNodeContent","changeNodeTitle","$event","rows","changeContent","placeholder","autoResize","selectedNodeComment","changeComment","checkAuthorized","$emit","node-id","$style","remove","mouseOver","RemoveIcon","cssModules","__cssModules","usedBy","usedByNode","renderedContent","setEditOn","editOn","mdKatex","mdImsize","mdContainer","md","use","output","validate","trim","match","tokens","info","nesting","utils","escapeHtml","txtarea","display","focus","complainModalVisible","complainChangeLink","legend","toggleable","collapsed","toggle","pt","isAuthorized","changes","timestamp","toLocaleDateString","toLocaleTimeString","action","subtitle","userDisplayName","showComplain","changeLogID","ActionType","Name","newName","Content","newContent","Precondition","getContent","subscribeChangeLog","andConditions","q","changeLogs","doc","attributes","valueBefore","valueAfter","added","removed","getNodeName","nodeName","prTrash","getUserDisplayName","userName","getUserDisplayNames","userIDs","fetches","Promise","all","responses","getNodeNames","getPathFromNodeName","nodeNames","nodePath","subscribeChangeLogEnriched","userNames","changeLog","ParentID","resp","changeLogsEnriched","idPath","beforePath","afterPath","parentNodeBefore","parentNodeAfter","isRemoved","isAdded","GetNodeUrl","nodeIDPath","substring","visible","dismissableMask","closable","modal","closeOnEscape","footer","Dialog","newArgs","oldArgs","computed","Markdown","ChangeLogComplain","Fieldset","Card","unsubscribe","cd","clickPin","addDialogVisible","label","icon","cancelAdd","selectedParent","options","parents","optionLabel","isPinned","undefined","PinIcon","Button","Listbox","treeState","newNodeTitle","selectedNodeParents","showAddBanner","addBannerVisible","preconditionNode","targetNode","AddBasedOnIcon","preconditionsIDs","AddBasedOnButton","Title","SectionUsedBy","TextArea","SectionPreconditions","ChangeLog","PinButton","preventDefault","textSearch","wrapper","email","toggleUserMenu","model","items","popup","isNodeSelected","rounded","toggleAddDialog","selectedNodeTitle","mouseover","bgColor","MenuButton","Input","newNodeID","toggleDialog","disabled","cancel","cutNodeID","cut","paste","oldParentChildrenID","newParentChildrenID","send","open","clearBox","doSearch","InputText","getActionDescription","PrimeMenu","Feedback","CutPaste","AddNode","RemoveNode","EditMode","TextSearch","MapChangeLog","menu","userPhotoURL","photoURL","command","Map","Menu","NodeContent","ConfirmDialog","Toast","router","route","pinState","searchResultState","selectPreconditionIsOn","updateLayers","centralNodeId","filteredLayers","reverse","visibleLayers","isFirstPageLoad","firstNode","newCentralNodeId","deep","layersToZoomAndPan","pinNodeIDs","pinMapNodes","pinMapNode","cl","searchResultMapNodes","searchResultMapNode","hasDragPermit","initial","after","docRef","docSnap","once","script","routes","component","PasswordLogin","NodeDescription","Change","Home","NotFound","App","mount","webpackContext","req","webpackContextResolve","resolve"],"mappings":"aACE,SAASA,EAAqBC,GAQ7B,IAPA,IAMIC,EAAUC,EANVC,EAAWH,EAAK,GAChBI,EAAcJ,EAAK,GACnBK,EAAiBL,EAAK,GAIHM,EAAI,EAAGC,EAAW,GACpCD,EAAIH,EAASK,OAAQF,IACzBJ,EAAUC,EAASG,GAChBG,OAAOC,UAAUC,eAAeC,KAAKC,EAAiBX,IAAYW,EAAgBX,IACpFK,EAASO,KAAKD,EAAgBX,GAAS,IAExCW,EAAgBX,GAAW,EAE5B,IAAID,KAAYG,EACZK,OAAOC,UAAUC,eAAeC,KAAKR,EAAaH,KACpDc,EAAQd,GAAYG,EAAYH,IAG/Be,GAAqBA,EAAoBhB,GAE5C,MAAMO,EAASC,OACdD,EAASU,OAATV,GAOD,OAHAW,EAAgBJ,KAAKK,MAAMD,EAAiBb,GAAkB,IAGvDe,IAER,SAASA,IAER,IADA,IAAIC,EACIf,EAAI,EAAGA,EAAIY,EAAgBV,OAAQF,IAAK,CAG/C,IAFA,IAAIgB,EAAiBJ,EAAgBZ,GACjCiB,GAAY,EACRC,EAAI,EAAGA,EAAIF,EAAed,OAAQgB,IAAK,CAC9C,IAAIC,EAAQH,EAAeE,GACG,IAA3BX,EAAgBY,KAAcF,GAAY,GAE3CA,IACFL,EAAgBQ,OAAOpB,IAAK,GAC5Be,EAASM,EAAoBA,EAAoBC,EAAIN,EAAe,KAItE,OAAOD,EAIR,IAAIQ,EAAmB,GAKnBhB,EAAkB,CACrB,IAAO,GAGJK,EAAkB,GAGtB,SAASS,EAAoB1B,GAG5B,GAAG4B,EAAiB5B,GACnB,OAAO4B,EAAiB5B,GAAU6B,QAGnC,IAAIC,EAASF,EAAiB5B,GAAY,CACzCK,EAAGL,EACH+B,GAAG,EACHF,QAAS,IAUV,OANAf,EAAQd,GAAUW,KAAKmB,EAAOD,QAASC,EAAQA,EAAOD,QAASH,GAG/DI,EAAOC,GAAI,EAGJD,EAAOD,QAKfH,EAAoBM,EAAIlB,EAGxBY,EAAoBO,EAAIL,EAGxBF,EAAoBQ,EAAI,SAASL,EAASM,EAAMC,GAC3CV,EAAoBW,EAAER,EAASM,IAClC3B,OAAO8B,eAAeT,EAASM,EAAM,CAAEI,YAAY,EAAMC,IAAKJ,KAKhEV,EAAoBe,EAAI,SAASZ,GACX,qBAAXa,QAA0BA,OAAOC,aAC1CnC,OAAO8B,eAAeT,EAASa,OAAOC,YAAa,CAAEC,MAAO,WAE7DpC,OAAO8B,eAAeT,EAAS,aAAc,CAAEe,OAAO,KAQvDlB,EAAoBmB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQlB,EAAoBkB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,kBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKxC,OAAOyC,OAAO,MAGvB,GAFAvB,EAAoBe,EAAEO,GACtBxC,OAAO8B,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOlB,EAAoBQ,EAAEc,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRtB,EAAoB0B,EAAI,SAAStB,GAChC,IAAIM,EAASN,GAAUA,EAAOiB,WAC7B,WAAwB,OAAOjB,EAAO,YACtC,WAA8B,OAAOA,GAEtC,OADAJ,EAAoBQ,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRV,EAAoBW,EAAI,SAASgB,EAAQC,GAAY,OAAO9C,OAAOC,UAAUC,eAAeC,KAAK0C,EAAQC,IAGzG5B,EAAoB6B,EAAI,IAExB,IAAIC,EAAaC,OAAO,gBAAkBA,OAAO,iBAAmB,GAChEC,EAAmBF,EAAW3C,KAAKsC,KAAKK,GAC5CA,EAAW3C,KAAOf,EAClB0D,EAAaA,EAAWG,QACxB,IAAI,IAAItD,EAAI,EAAGA,EAAImD,EAAWjD,OAAQF,IAAKP,EAAqB0D,EAAWnD,IAC3E,IAAIU,EAAsB2C,EAI1BzC,EAAgBJ,KAAK,CAAC,EAAE,kBAEjBM,K,gECvJTW,EAAOD,QAAU,IAA0B,4B,oCCA3C,W,uBCAAC,EAAOD,QAAU,IAA0B,yB,qBCA3CC,EAAOD,QAAU,IAA0B,2B,oCCA3C,W,oCCAA,W,gDCAAC,EAAOD,QAAU,IAA0B,2B,uBCA3CC,EAAOD,QAAU,IAA0B,wB,uBCA3CC,EAAOD,QAAU,IAA0B,yB,6DCA3C,W,uBCCAC,EAAOD,QAAU,CAAC,QAAU,sBAAsB,WAAa,2B,qBCD/DC,EAAOD,QAAU,IAA0B,+B,qBCA3CC,EAAOD,QAAU,IAA0B,+B,yECA3CC,EAAOD,QAAU,IAA0B,8B,oCCA3C,oE,uBCAAC,EAAOD,QAAU,IAA0B,0B,qBCA3CC,EAAOD,QAAU,IAA0B,2B,6DCA3C,W,qBCAAC,EAAOD,QAAU,IAA0B,8B,oCCA3C,W,qBCAAC,EAAOD,QAAU,IAA0B,wB,uECA3CC,EAAOD,QAAU,IAA0B,yB,oCCA3C,oE,kCCAA,W,4CCAAC,EAAOD,QAAU,IAA0B,4B,qBCA3CC,EAAOD,QAAU,IAA0B,2B,qBCC3CC,EAAOD,QAAU,CAAC,UAAY,+B,qBCD9BC,EAAOD,QAAU,IAA0B,yB,qLCCzC,eAAe,G,4LCeJ+B,EAAY,CACvBC,SAAU,WACVC,YAAa,cACbC,WAAY,aACZC,oBAAqB,uBAGV,EAAU,CACrBC,OAAQ,SACRC,UAAW,aAGA,EAAQ,CACnBC,YAAY,EACZC,MAAO,CACLC,KAAM,GACNC,YAAa,IAEfC,SAAO,sBAEJ,EAAQN,QAFJ,WAUHO,GAAuC,IANrCC,EAMqC,EANrCA,OACAC,EAKqC,EALrCA,UAQEC,EAAgBD,EAAUE,KAAKC,WAAWL,EAAEM,QAAQC,OACxD,GAAKJ,EAAL,CAGA,IAAMK,EAAY,GAClB,MAAOL,GAAiBA,EAAcM,IAAMT,EAAEU,SAC5CF,EAAUnE,KAAK8D,EAAcM,IAC7BN,EAAgBD,EAAUE,KAAKC,WAAWF,EAAcM,IAAIF,OAE9DC,EAAUnE,KAAK2D,EAAEU,UAEjBT,EAAOb,EAAUE,YAAa,CAAEgB,OAAQN,EAAEM,OAAQE,cAGlD,cAAuBA,EAAvB,eAAkC,CAA7B,IAAME,EAAQ,KACjBT,EAAOb,EAAUI,oBAAqB,CACpCc,OAAQI,EACRC,MAAOX,EAAEM,cA9BV,iBAkCJ,EAAQZ,WAlCJ,WAkC+CY,GAAc,IAA5CL,EAA4C,EAA5CA,OACpBA,EAAOb,EAAUG,WAAYe,MAnC1B,GAsCPlB,WAAS,sBACNA,EAAUC,UADJ,SACcO,EAAcC,GAGjC,IAAK,IAAMc,KAFXf,EAAMC,KAAOA,EACbD,EAAME,YAAc,GACAD,EAAM,wBACDA,EAAKc,IADJ,IACxB,2BAAoC,KAAzBD,EAAyB,QAC7Bd,EAAME,YAAYY,KACrBd,EAAME,YAAYY,GAAY,IAEhCd,EAAME,YAAYY,GAAUrE,KAAKsE,IALX,mCAJrB,iBAaNvB,EAAUE,aAbJ,SAcLM,EACAI,GAEAJ,EAAMC,KAAKG,EAAEM,QAAUN,EAAEQ,aAjBpB,iBAmBNpB,EAAUI,qBAnBJ,SAoBLI,EACAI,GAEKJ,EAAME,YAAYE,EAAEM,UACvBV,EAAME,YAAYE,EAAEM,QAAU,IAEhCV,EAAME,YAAYE,EAAEM,QAAQjE,KAAK2D,EAAEW,UA1B9B,iBA4BNvB,EAAUG,YA5BJ,SA4BgBK,EAAcU,GAAc,uBAC1BV,EAAMC,KAAKS,IADe,IACjD,2BAA2C,KAAhCI,EAAgC,QACnCE,EAAQhB,EAAME,YAAYY,GAAUG,QAAQP,GAClDV,EAAME,YAAYY,GAAUzD,OAAO2D,EAAO,IAHK,qCAK1ChB,EAAMC,KAAKS,MAjCb,ICpDE,EAAY,CACvBQ,QAAS,WAGE,EAAQ,CACnBnB,YAAY,EACZC,MAAO,CACLmB,SAAU,IAEZ3B,UAAW,kBACR,EAAU0B,SADJ,SAELlB,EACAI,GAEAJ,EAAMmB,SAASf,EAAEgB,WAAahB,EAAEiB,gBCnBzB,EAAY,CACvBC,kBAAmB,oBACnBC,qBAAsB,wBAGX,EAAQ,CACnBxB,YAAY,EACZC,MAAO,CACLwB,cAAe,GACfC,aAAc,IAEhBjC,WAAS,sBACN,EAAU8B,mBADJ,SACuBtB,EAAcwB,GAI1C,IAAK,IAAMX,KAHXb,EAAMwB,cAAgBA,EAGLA,EAAe,wBACNA,EAAcX,IADR,IAC9B,2BAA2C,KAAhCa,EAAgC,QACI,qBAAlC1B,EAAMyB,aAAaC,KAC5B1B,EAAMyB,aAAaC,GAAa,IAElC1B,EAAMyB,aAAaC,GAAWjF,KAAKoE,IALP,mCAL3B,iBAcN,EAAUU,sBAdJ,SAeLvB,EACAI,GAEKJ,EAAMwB,cAAcpB,EAAEuB,UACzB3B,EAAMwB,cAAcpB,EAAEuB,QAAU,IAHmB,uBAMpC3B,EAAMwB,cAAcpB,EAAEuB,SANc,IAMrD,2BAAgD,KAArCd,EAAqC,QAE5Cb,EAAMyB,aAAaZ,KAC0B,GAA7Cb,EAAMyB,aAAaZ,GAAII,QAAQb,EAAEuB,SAEjC3B,EAAMyB,aAAaZ,GAAIxD,OACrB2C,EAAMyB,aAAaZ,GAAII,QAAQb,EAAEuB,QACjC,IAb+C,8BAkBrD3B,EAAMwB,cAAcpB,EAAEuB,QAAUvB,EAAEwB,gBAlBmB,uBAqB7B5B,EAAMwB,cAAcpB,EAAEuB,SArBO,IAqBrD,2BAAuD,KAA5CD,EAA4C,QACR,qBAAlC1B,EAAMyB,aAAaC,KAC5B1B,EAAMyB,aAAaC,GAAa,IAElC1B,EAAMyB,aAAaC,GAAWjF,KAAK2D,EAAEuB,SAzBc,kCAhBhD,ICnBLE,EAAqB,KAEd,EAAY,CACvBC,UAAW,YACXC,aAAc,gBAGH,EAAU,CACrBC,YAAa,eAOF,EAAQ,CACnBjC,YAAY,EACZC,MAAO,CACLiC,iBAAkB,IAEpBzC,WAAS,sBACN,EAAUsC,WADJ,SACe9B,EAAckC,GAAe,uBAC5BA,GAD4B,IACjD,2BAA8B,KAAnBP,EAAmB,QAC5B3B,EAAMiC,iBAAiBN,IAAU,IAAIQ,MAAOC,WAFG,kCAD5C,iBAMN,EAAUL,cANJ,SAMkB/B,EAAckC,GAAe,uBAC/BA,GAD+B,IACpD,2BAA8B,KAAnBP,EAAmB,eACrB3B,EAAMiC,iBAAiBN,IAFoB,kCAN/C,GAYTxB,QAAS,kBACN,EAAQ6B,aADJ,WAGHL,GAAc,IADZtB,EACY,EADZA,OAAQL,EACI,EADJA,MAGV,SACIA,EAAMiC,iBAAiBN,KACzB,IAAIQ,MAAOC,UACTpC,EAAMiC,iBAAiBN,GAAUE,KAIjC7B,EAAMiC,iBAAiBN,IACzBtB,EAAO,EAAU0B,aAAc,CAACJ,KAE3B,O,0ICjDE,WACbU,EACAC,EACAC,GAEA,IAAMC,EAAM,IAAIC,MAAMJ,GAEtB,MAAO,CACLK,MAAOF,EACPF,GAAIA,EACJC,S,6CCTSI,EAAgB,EAOvB,SAAUC,EAAI5D,EAAWpB,GAC7B,OAASoB,EAAIpB,EAAKA,GAAKA,EAGnB,SAAUiF,EAAMC,GACpB,IAAMrE,EAAIsE,KAAKC,IAAI,GAAIL,GACvB,OAAOI,KAAKF,MAAMC,EAAMrE,GAAKA,EAQzB,SAAUwE,EAAM7C,GACpB,OAAO,uBAAUA,GAgIb,SAAU8C,EAAWC,EAAab,GAAO,MACxCA,GACHc,QAAQV,MAAMS,GAYhB,IAAME,EAAQ,GACd,IAAK,IAAMpH,KAAKqG,EACde,EAAM5G,KAAKR,EAAGqG,EAAGrG,KAMnB,EAAAmH,SAAQV,MAAR,SAAcS,GAAd,OAAsBE,I,gBCnKlB,SAAUC,EACdzC,EACA0C,GAEA,IAAK,IAAMC,KAASD,EAAe,CACjC,IAAME,EAAQF,EAAcG,OAAOF,IACnC,GAAIC,GAASA,EAAM5C,GACjB,MAAO,CAAC4C,EAAM5C,GAAK6C,OAAOF,IAI9B,MAAO,CAAC,KAAM,MAGV,SAAUG,EACdC,EACAL,GAEA,IAF6C,EAEvCvG,EAAoB,GAFmB,iBAGzBuG,GAHyB,IAG7C,2BAAmC,KAAxBE,EAAwB,QACjC,GAAKA,EAAL,CADiC,uBAIhBG,GAJgB,IAIjC,2BAAsB,KAAX/C,EAAW,QAChB4C,EAAM5C,IACR7D,EAAOP,KAAKgH,EAAM5C,KANW,iCAHU,8BAc7C,OAAO7D,EAGH,SAAU6G,EAAcC,EAAeC,GAC3C,MAAO,CACLlD,GAAI,iBACJmD,SAAUD,EACVD,MAAOA,EACPG,SAAU,IAsBR,SAAUC,EACdvD,EACA4C,EACAY,GAAkB,MAMMb,EAAY3C,EAAOE,GAAI0C,GAN7B,sBAMXa,EANW,KAOlB,GAAsB,OAAlBA,EACF,MAAO,CACL,KACA,KACA,EAAW,mDAAoD,CAC7DtD,SAAUH,EAAOE,GACjB0C,cAAeA,KAKrB,GAA+B,IAA3B5C,EAAOsD,SAAS9H,OAAc,CAChC,IADgC,EAC1BkI,EAAoBD,EAAcE,OAAOC,KAAI,SAAApF,GAAC,MAAK,CACvDqF,KAAMJ,EAAcL,OACpBU,GAAItF,MAEFuF,EAAsBL,EAAkB,GALZ,iBAMhBA,GANgB,IAMhC,2BAAmC,KAAxBjE,EAAwB,QAC7BuE,GAAgBvE,GAAKuE,GAAgBD,KACvCA,EAAsBtE,IARM,8BAYhC,IAAIwE,EAAQ,GAKZ,OAJIT,IACFS,EAAQ,GAAA7B,KAAK8B,SAAqB,EAAI,GAGjC,CACL,CACEC,EACEJ,EAAoBF,KAAKM,EACzBF,GAASF,EAAoBD,GAAGK,EAAIJ,EAAoBF,KAAKM,GAC/DC,EACEL,EAAoBF,KAAKO,EACzBH,GAASF,EAAoBD,GAAGM,EAAIL,EAAoBF,KAAKO,IAEjE,KACA,MAGF,IAAMC,EAAerE,EAAOsD,SAAS,GADhC,EAEuBX,EAAY0B,EAAanE,GAAI0C,GAFpD,sBAEA0B,EAFA,KAGL,GAA4B,OAAxBA,EACF,MAAO,CACL,KACA,KACA,EAAW,uDAAwD,CACjEC,eAAgBF,EAAanE,GAC7B0C,cAAeA,KAThB,uBAae5C,EAAOsD,UAbtB,IAaL,2BAAqC,KAA1BkB,EAA0B,UACZ7B,EAAY6B,EAAMtE,GAAI0C,GADV,sBAC5B6B,EAD4B,KAEnC,GAAqB,OAAjBA,EACF,MAAO,CACL,KACA,KACA,EAAW,gDAAiD,CAC1DC,QAASF,EAAMtE,GACf0C,cAAeA,KARc,MAaT+B,GAAeF,EAAad,QAbnB,sBAa5BiB,EAb4B,KAajBC,EAbiB,KAcnC,GAAIA,EACF,MAAO,CACL,KACA,KACA,EAAW,yCAA0C,CACnDJ,eACAI,UApB6B,MAwBXF,GAAeL,EAAoBX,QAxBxB,sBAwB5BmB,EAxB4B,KAwBnBC,EAxBmB,KAyBnC,GAAIA,EACF,MAAO,CACL,KACA,KACA,EAAW,yCAA0C,CACnDT,sBACAS,UAIFf,GAAgBY,GAAaZ,GAAgBc,KAC/CR,EAAsBG,IAjDrB,8BAqDL,IAAI,EAAQ,EAAI,EACZjB,IACF,EAAQpB,KAAK8B,UAAY,EAAI,GAAK,MAvD/B,MA0DkBS,GAAeL,EAAoBX,QA1DrD,sBA0DEqB,EA1DF,KA2DCC,EAAgBC,GAAeF,EAAe,GAAOlB,GACrDqB,EAAe7C,EAAM+B,GAE3B,OADAc,EAAa9B,SAAW6B,GAAeF,EAAe,EAAI,GAAGlB,GACtD,CAACmB,EAAeE,EAAc,MAInC,SAAUC,EACd/F,EAKAI,GAEA,GAAkB,MAAdJ,EAAMQ,KACR,OAAO,EAAW,qBAAsB,IAG1C,IAAMwF,EAAOhG,EAAMS,WAAWL,EAAEM,QAChC,IAAKsF,EACH,OAAO,EAAW,qDAAsD,CACtE,WAAY5F,EAAEM,OACd,mBAAoBV,EAAMS,aAI9B,IAAKuF,EAAKrF,OACR,OAAO,EAAW,+CAAgD,CAChE,WAAYP,EAAEM,SAhBoB,MAoBTuF,GAC3B,YACA7F,EAAE4D,SACFgC,EAAKrF,OAAOE,GACZb,EAAMuD,eAxB8B,sBAoB/B2C,EApB+B,KA0BtCF,EAAKG,KAAKnC,SAAWkC,EA1BiB,MA8BF5C,EAClC0C,EAAKrF,OAAOE,GACZb,EAAMuD,eAhC8B,sBA8B/Ba,EA9B+B,KA8BhBgC,EA9BgB,KAkCtC,IAAKhC,GAAgC,OAAfgC,EACpB,OAAO,EAAW,qDAAsD,CACtEvF,GAAImF,EAAKrF,OAAOE,GAChB,sBAAuBb,EAAMuD,gBArCK,MAwCpB8C,GAChBL,EAAKrF,OACLyD,EAAcE,OACdF,EAAcL,QA3CsB,sBAwC/BuC,EAxC+B,KAwC3B9D,EAxC2B,KA6CtC,OAAU,MAAN8D,GAAqB,MAAP9D,EACT,EAAW,+CAAgD,CAChE3B,GAAImF,EAAKrF,OAAOE,GAChBuD,cAAeA,IAGZmC,GAAmBvG,EAAMuD,cAAe+C,EAAIF,G,yDClP/C,SAAUI,EAAgBvC,GAC9B,IAAIjH,EAaJ,OAXKiH,EAEMwC,MAAMC,QAAQzC,IACvBjH,EAASiH,EAAS0C,QAAO,SAAAC,GAAO,QAAMA,KAASC,OAC/C7J,EAAO8J,SAAQ,SAACF,EAAS3K,EAAG8K,GAAb,OAAsBA,EAAI9K,GAAK2K,EAAQI,gBAEtDhK,EAASZ,OAAO6K,OAAOhD,GACpB0C,QAAO,SAAAC,GAAO,QAAMA,KACpBC,OACH7J,EAAO8J,SAAQ,SAACF,EAAS3K,EAAG8K,GAAb,OAAsBA,EAAI9K,GAAK2K,EAAQI,eARtDhK,EAAS,GAUJA,EAGH,SAAUkK,EACdC,GAEA,IAAMC,EAAa,CACjBvG,GAAIsG,EAAQ,KAAKtG,GAAGmG,WACpBlD,MAAOqD,EAAQ,KAAKpJ,KACpBiG,SAAUmD,EAAQ,KAAKnD,SACvBC,SAAU,IAENoD,EAAQ,CAACD,GAEf,MAAOC,EAAMlL,OAAS,EAAG,CACvB,IAAMgK,EAAOkB,EAAMC,MACnB,GAAKnB,EAAL,CAGA,IAAKgB,EAAQhB,EAAKtF,IAChB,MAAO,CACL,KACA,EAAW,4BAA6B,CAAE,UAAWsF,EAAKtF,GAAIsG,aAIlE,GADAA,EAAQhB,EAAKtF,IAAIoD,SAAWuC,EAAgBW,EAAQhB,EAAKtF,IAAIoD,UACxDkD,EAAQhB,EAAKtF,IAAIoD,SAAS9H,OAA/B,CAGA,IAfuB,EAejB8H,EAAmB,GAfF,iBAgBDkD,EAAQhB,EAAKtF,IAAIoD,UAhBhB,IAgBvB,2BAAiD,KAAtC2C,EAAsC,QAC/C,IAAKO,EAAQP,GACX,MAAO,CACL,KACA,EAAW,kCAAmC,CAC5CA,UACAW,SAAUpB,EAAKtF,MAIrBoD,EAASxH,KAAK,CACZoE,GAAI+F,EAAQI,WACZlD,MAAOqD,EAAQP,GAAS7I,KACxBiG,SAAUmD,EAAQP,GAAS5C,SAC3BC,SAAU,MA9BS,8BAkCvBkC,EAAKlC,SAAWA,EAChBoD,EAAM5K,KAAN,MAAA4K,EAAcpD,KAGhB,MAAO,CAACmD,EAAM,M,4BCvDZI,EAAkB,uDAEhB,EAAM,yDAAG,WAAO7L,GAAP,0GAEL,OACH8L,WACAC,MACAC,OAAOhM,GALC,gCAMJ,MANI,4DAQJ,EAAW,uBAAwB,CAAE6G,IAAK,EAAF,MARpC,wDAAH,sDAYNoF,EAAkB,sBAAS,EAAQ,KAE1B,IACbC,WAAa,EAAIxI,OAAOyI,WAAc,EACtCC,YAAa1I,OAAO2I,YACpBC,cAAe,GAAM5I,OAAOyI,WAAc,GAAMzI,OAAOyI,WAAc,EACrEI,cAAe7I,OAAO2I,YAAc,EACpCG,SAAU,IACVC,UAAW,IACXC,aAPa,WAUX,IAAMC,EAAiB,CACrBC,OAAQ,0CACRC,WAAY,+BACZC,YAAa,sCACbC,UAAW,eACXC,cAAe,2BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,gBAIjB,OAASC,cAAcT,GACvB,OAASU,aAsBLC,aA7CO,SA8CXC,EACAC,GAA8B,0JAExBC,EAAc,OAASC,OAAOD,YAC/BA,EAHyB,yCAIrB,CACL,GACA,EAAW,8CAA+C,MANhC,uBASRA,EAAYE,YAAW,GATf,cASxBC,EATwB,OAU9BJ,EAAOI,QAAUA,EAVa,mBAYL,EAAAC,EAAMpL,IAAIoJ,EAAkB0B,EAAQ,CAAEC,WAZjC,eAYtBM,EAZsB,yBAarB,CAACA,EAAS9N,KAAM,OAbK,8DAerB,CAAC,GAAI,EAAW,wBAAyB,CAAEuN,SAAQC,SAAQO,EAAC,SAfvC,6DAmB1BC,aAlEO,WAkEK,qKACO,OACpBlC,WACAC,IAAI,OACJtJ,MAJa,UACVwL,EADU,OAKXA,EAASC,SALE,yCAMP,CAAC,KAAM,EAAW,mBAAoB,MAN/B,cAQVtF,EAAMqF,EAASE,MARL,kBAUT,CAACvF,EAAK,OAVG,8CAiBZwF,kBAnFO,SAoFXC,GAA0B,2KAEpBC,EAAU,OAASA,UAAUvC,MAC/BA,EAAMuC,EAAQ9E,MAAR,aACN6E,IACFtC,EAAMuC,EAAQ9E,MAAR,gBAAuB6E,EAAKE,IAA5B,eALkB,SAORxC,EAAIyC,iBAPI,cAOpBC,EAPoB,gBASH,EAAAZ,EAAMpL,IAAIgM,GATP,cASpBX,EAToB,yBAUnB,CACL,CACE5I,GAAI,IACJiD,MAAO,GACPE,SAAU,CAAEc,EAAG,EAAK+C,WAAa,EAAG9C,EAAG,EAAKgD,YAAc,GAE1D9D,SAAUwF,EAAS9N,MAErB,OAlBwB,+CAsBtB0O,OA1GO,SA2GXL,GAA0B,iLAGX,EAAKL,eAHM,oGAKjB,CAAC,KAAM,EAAW,KAAEtH,QAAS,CAAEqH,EAAG,EAAF,OALf,2DAStBY,QApHO,SAoHCN,GAA0B,yKAE9BC,EAAU,OAASA,UAAUvC,MAC/BA,EAAMuC,EAAQ9E,MAAR,cACN6E,IACFtC,EAAMuC,EAAQ9E,MAAR,gBAAuB6E,EAAKE,IAA5B,gBAL4B,SAOlBxC,EAAIyC,iBAPc,cAO9BC,EAP8B,gBASb,EAAAZ,EAAMpL,IAAIgM,GATG,cAS9BX,EAT8B,yBAU7B,CAACA,EAAS9N,KAAM,OAVa,8DAY7B,CAAC,KAAM,EAAW,KAAE0G,QAAS,CAAEqH,EAAG,EAAF,OAZH,6DAgBlCa,SApIO,SAoIEP,EAAqB/J,GAAU,wJACvC+J,EADyC,CAAF,uDAKtCC,EAAU,OAASA,UAAUvC,MAC7BA,EAAMuC,EAAQ9E,MAAR,gBAAuB6E,EAAKE,IAA5B,eANgC,SAOtCxC,EAAI8C,UACRC,KAAKC,SAASC,mBAAmBC,KAAKC,UAAU5K,MAChD,UAT0C,8CAaxC6K,iBAjJO,SAkJXd,GAA0B,8KAGD,OACpBvC,WACAC,IAAI,gBACJtJ,MANqB,UAGlBwL,EAHkB,OAOnBA,EAASC,SAPU,yCAQf,CAAC,KAAM,EAAW,mBAAoB,MARvB,cAUlBrI,EAAgBoI,EAASE,MAVP,kBAYjB,CAACtI,EAAe,OAZC,8DAcjB,CAAC,KAAM,EAAW,KAAEa,QAAS,CAAEqH,EAAG,EAAF,OAdf,6DAkBtBqB,kBApKO,SAqKXf,EACAxI,GAA4D,gJAEvDwI,EAFuD,iEAKtD,OACHvC,WACAC,IAAI,gBAAkBlG,EAAcd,QACpCsK,IAAIxJ,EAAcyJ,iBARuC,8CAW9DC,uBAjLa,SAiLUvJ,EAAgBwJ,GACrCC,KAAKC,kBAAL,cACS1J,IACP,SAAC2J,GACC,GAAKA,EAAKzB,SAAV,CAGA,IAAM1D,EAAOmF,EAAKxB,MAElB3D,EAAKtF,GAAKsF,EAAKtF,GAAGmG,WAClBb,EAAKlC,SAAWuC,EAAgBL,EAAKlC,UACrCkH,EAAGhF,QAKToF,2BAjMa,SAkMX5J,EACAwJ,GAEAC,KAAKC,kBAAL,uBACkB1J,IAChB,SAAC2J,GACC,GAAKA,EAAKzB,SAAV,CAGA,IAAM1D,EAAOmF,EAAKxB,MAElBqB,EAAGhF,QAKTqF,gCAlNa,SAmNX7J,EACAwJ,GAEAC,KAAKC,kBAAL,uBACkB1J,IAChB,SAAC2J,GACC,GAAKA,EAAKzB,SAAV,CAGA,IAAMjI,EAAkB0J,EAAKxB,MAE7BqB,EAAGxJ,EAAQC,QAKjB6J,yBAnOa,SAmOY9J,GACvB,OACG8F,WACAC,IAFH,cAEc/F,IACX+J,IAAI,UAGTL,kBA1Oa,SA2OXM,EACAR,GAEA,OACG1D,WACAC,IAAIiE,GACJC,GAAG,QAAST,IAGjBU,oBApPa,SAqPXF,EACAR,GAEA,OACG1D,WACAC,IAAIiE,GACJD,IAAI,QAASP,IAGZW,YA9PO,SA8PKnK,EAAgBgG,GAAyB,6JACnD,OACHF,WACAC,IAAI,OAAS/F,GACbmK,YACCnE,GACA,eAGA,GATqD,8CAarDoE,QA3QO,SA2QC5F,GAAY,6JAClB,OACHsB,WACAC,IAAI,OAASvB,EAAKtF,IAClBmK,IAAI7E,GAJiB,8CAOpB6F,kBAlRO,SAmRXC,EACAC,EACAC,GAA0B,sKAGN,OACf1E,WACAC,IAAI,oBAAsBuE,GAC1BjB,IAAI,CACHkB,cACAC,gBARoB,gEAWxB/I,QAAQgJ,IAAR,MAXwB,2DAetBC,QApSO,SAoSC1K,GAAc,qKACT,OACd8F,WACAC,IAAI,OAAS/F,GACbvD,MAJuB,cACpBkO,EADoB,OAKpBnG,EAAOmG,EAAGxC,MAChB3D,EAAKtF,GAAKsF,EAAKtF,GAAGmG,WAClBb,EAAKlC,SAAWuC,EAAgBL,EAAKlC,UAPX,kBAQnBkC,GARmB,8CAW5BoG,YA/Sa,WAgTX,OAAO,OACJ9E,WACAC,MACAjL,OAAOqC,KAGN0N,cAtTO,SAsTOb,EAAcnN,GAAa,mKAC1B,OAChBiJ,WACAC,IAAIiE,GACJc,eACAC,QAAQlO,GACRmO,aAAa,GACbvO,MAP0C,cACvCkN,EADuC,yBAQtCA,EAAKxM,KARiC,8CAWzC8N,eAjUO,SAkUXjL,EACAiF,GAAe,uKAEE,OACda,WACAC,IAAI,OAAS/F,GACbvD,MALY,UAETkO,EAFS,OAMTnG,EAAOmG,EAAGxC,MACX3D,EAAKlC,SAPK,yCAQN,MARM,oCAWGkC,EAAKlC,UAXR,iDAWJnF,EAXI,WAYTqH,EAAKlC,SAASnF,GAAKkI,aAAeJ,EAZzB,0CAaJ9H,GAbI,wDAgBR,MAhBQ,+CAmBjB6I,OAAA,EACAC,kBAEMiF,gBAzVO,SA0VX7C,GAAmB,8JAEbiC,EAASjC,EAAKE,IAFD,SAGI,OACpBzC,WACAC,IAFoB,oBAEHuE,EAFG,aAGpB7N,MANgB,UAGbwL,EAHa,OAOdA,EAASC,SAPK,yCAQV,CAAC,KAAM,EAAW,mBAAoB,MAR5B,cAUbiD,EAAclD,EAASE,MAVV,kBAYZ,CAACgD,EAAa,OAZF,8CAefC,eAzWO,WAyWO,mKAGK,OACpBtF,WACAC,IAFoB,gBAGpBtJ,MANe,UAGZwL,EAHY,OAQbA,EAASC,SARI,yCAST,CAAC,GAAI,OATI,gCAYX,CAACD,EAASE,MAAO,OAZN,+CCvXhBkD,GAAoB,CACxB,CAAElI,EAAG,EAAGC,EAAG,GACX,CAAED,EAAG,EAAGC,EAAGkI,GAAI7E,WACf,CAAEtD,EAAGmI,GAAI9E,SAAUpD,EAAGkI,GAAI7E,WAC1B,CAAEtD,EAAGmI,GAAI9E,SAAUpD,EAAG,IAGlB,SAAUJ,GAAgBvE,GAC9B,OAAO2C,KAAKmK,KACVnK,KAAKC,IAAI5C,EAAEoE,KAAKM,EAAI1E,EAAEqE,GAAGK,EAAG,GAAK/B,KAAKC,IAAI5C,EAAEoE,KAAKO,EAAI3E,EAAEqE,GAAGM,EAAG,IAI3D,SAAUoI,GACdhO,GAEA,IAAKA,EACH,MAAM,IAAIsD,MAAM,6BAElB,IAAM2K,EAAKjO,EAAEoF,KAAI,SAAA8I,GAAK,MAAI,CAACA,EAAMvI,EAAGuI,EAAMtI,MAE1C,OADAqI,EAAG3Q,KAAK,CAAC0C,EAAE,GAAG2F,EAAG3F,EAAE,GAAG4F,IACf,aAAa,CAACqI,IAGjB,SAAUE,GAASD,EAAcE,GACrC,OAAO,2BACL,WAAW,CAACF,EAAMvI,EAAGuI,EAAMtI,IAC3BoI,GAAcI,IAIZ,SAAUC,GAAmBrO,GACjC,IAAMiO,EAAKjO,EAAEoF,KAAI,SAAA8I,GAAK,MAAI,CAACA,EAAMvI,EAAGuI,EAAMtI,MAE1C,OADAqI,EAAG3Q,KAAK,CAAC0C,EAAE,GAAG2F,EAAG3F,EAAE,GAAG4F,IACf,CAACqI,GAGJ,SAAU,GAAKjO,GACnB,OAAO4D,KAAK0K,IAAI,eAAYtO,EAAEoF,KAAI,SAAA8I,GAAK,MAAI,CAACA,EAAMvI,EAAGuI,EAAMtI,QAGvD,SAAU2I,GACdC,EACAC,GAKA,IAAIC,EAAe5K,EAAM0K,GACrBG,EAAe7K,EAAM2K,GACrBG,EAAK,EACT,MAAO,GAAKF,GAAO,KAAQ,GAAKC,GAAO,IACrCC,GAAU,GACVF,EAAMF,EAAGpJ,KAAI,SAAApF,GAAC,MAAK,CAAE2F,EAAG3F,EAAE2F,EAAIiJ,EAAIhJ,EAAG5F,EAAE4F,EAAIgJ,MAC3CD,EAAMF,EAAGrJ,KAAI,SAAApF,GAAC,MAAK,CAAE2F,EAAG3F,EAAE2F,EAAIiJ,EAAIhJ,EAAG5F,EAAE4F,EAAIgJ,MAE7CF,EAAMA,EAAItJ,KAAI,SAAApF,GAAC,MAAK,CAAE2F,EAAGjC,EAAM1D,EAAE2F,GAAIC,EAAGlC,EAAM1D,EAAE4F,OAChD+I,EAAMA,EAAIvJ,KAAI,SAAApF,GAAC,MAAK,CAAE2F,EAAGjC,EAAM1D,EAAE2F,GAAIC,EAAGlC,EAAM1D,EAAE4F,OAEhD,IAAMiJ,EAAMR,GAAmBK,GACzBI,EAAMT,GAAmBM,GAC/B,GAAW,MAAPE,GAAsB,MAAPC,EACjB,MAAO,CACL,KACA,EAAW,yCAA0C,CAAEN,GAAIA,EAAIC,GAAIA,KAKvE,IAAMM,EAAmB,IAAgBC,aAAaH,EAAKC,GAC3D,GAAwB,MAApBC,IAA6BA,EAAiB/R,OAChD,MAAO,CAAC,GAAI,MAGd,IA/BW,EA+BLiS,EAAc,GA/BT,iBAiCQF,EAAiB,IAjCzB,IAiCX,2BAAwC,OAA7BG,EAA6B,QAChCC,EAAa,GADmB,iBAEtBD,GAFsB,IAEtC,2BAAsB,KAAXlP,EAAW,QACpBmP,EAAW7R,KAAK,CAAEqI,EAAG3F,EAAE,GAAK4O,EAAIhJ,EAAG5F,EAAE,GAAK4O,KAHN,8BAMtCO,EAAWhH,MACX8G,EAAY3R,KAAK6R,IAxCR,8BA2CX,MAAO,CAACF,EAAa,MAIjB,SAAUG,GAAmBjK,GAC5BA,GACHlB,QAAQV,MAAM,aAAc4B,GAE9B,IAAMkK,EAAOlK,EAAOmK,QAAO,SAACC,EAAeC,GAAhB,OACzBD,EAAc5J,EAAI6J,EAAa7J,EAAI6J,EAAeD,KAClD5J,EACI8J,EAAOtK,EAAOmK,QAAO,SAACC,EAAeC,GAAhB,OACzBD,EAAc3J,EAAI4J,EAAa5J,EAAI4J,EAAeD,KAClD3J,EACI8J,EAAOvK,EAAOmK,QAAO,SAACC,EAAeC,GAAhB,OACzBD,EAAc5J,EAAI6J,EAAa7J,EAAI6J,EAAeD,KAClD5J,EACIgK,EAAOxK,EAAOmK,QAAO,SAACC,EAAeC,GAAhB,OACzBD,EAAc3J,EAAI4J,EAAa5J,EAAI4J,EAAeD,KAClD3J,EACF,MAAO,CACLgK,WAAY,CAAEjK,EAAG0J,EAAMzJ,EAAG6J,GAC1BI,SAAU,CAAElK,EAAG+J,EAAM9J,EAAG+J,IAItB,SAAUG,GACdC,EACAH,EACAC,GAEA,IAFe,EAETG,EAAaD,EAAQ3K,KAAI,SAAApF,GAAC,OAAI,WAAW,CAACA,EAAE2F,EAAG3F,EAAE4F,OACjDqK,EAAa,uBAAuBD,GACpCE,EAAQ,aAAaD,EAAY,CACrCE,KAAM,CAACP,EAAWjK,EAAGiK,EAAWhK,EAAGiK,EAASlK,EAAGkK,EAASjK,KAEpDwK,EAAmC,GACrCvO,EAAQ,EARG,iBASIqO,EAAMG,UATV,IASf,2BAAmC,KAAxBC,EAAwB,QACjC,IAAKA,EACH,MAAO,CACL,GACA,EAAW,0CAA2C,CACpDP,UACAH,aACAC,WACAK,WAIN,IAAMK,EAAaD,EAAKE,SAAUC,YAAY,GAAGrL,KAAI,SAAApF,GAAC,MAAK,CACzD2F,EAAG3F,EAAE,GACL4F,EAAG5F,EAAE,OAEPuQ,EAAWpI,MACXiI,EAAQvO,GAAS0O,EACjB1O,KA3Ba,8BA8Bf,MAAO,CAACuO,EAAS,MAGb,SAAUM,GACdC,EACAZ,GAEA,IAAKY,EACH,MAAO,CACL,GACA,EAAW,mCAAoC,CAAEA,cAAaZ,aAGlE,IAAMa,EAAKxB,GAAmBuB,G,EACPb,GACrBC,EACAa,EAAGhB,WACHgB,EAAGf,U,sBAHEO,E,KAAS/M,E,KAKhB,GAAIA,EACF,MAAO,CACL,GACA,EAAW,oDAAqD,CAC9DA,MACAuN,KACAb,aAKN,IAAMc,EAAM,GACZ,IAAK,IAAMhP,KAASkO,EAAS,CAC3B,IAAKK,EAAQvO,GACX,MAAO,CACL,GACA,EAAW,+BAAgC,CACzCA,MAAOA,EACPkO,QAASA,EACTK,QAASA,EACTU,gBAAiBF,EACjBD,iBATqB,MAcEpC,GAAU6B,EAAQvO,GAAQ8O,GAd5B,sBAcpBI,EAdoB,KAcL,EAdK,KAe3B,GAAqB,MAAjBA,GAAgC,MAAP,EAC3B,MAAO,CACL,GACA,EAAW,wBAAyB,CAClC1N,IAAA,EACAkN,WAAYH,EAAQvO,GACpB8O,iBAKN,GAAII,GAAiB,GACnB,MAAO,CACL,GACA,EAAW,oDAAqD,CAC9D7C,MAAO6B,EAAQlO,MAIrB,GAAIkP,EAAc/T,OAAS,EACzB,MAAO,CACL,GACA,EACE,+DACA,CAAEkR,MAAO6B,EAAQlO,MAIvBgP,EAAIvT,KAAK,CACP6H,OAAQ4L,EAAc,GACtBnM,OAAQmL,EAAQlO,KAIpB,MAAO,CAACgP,EAAK,MA0BT,SAAUG,GACdC,EACAC,EACAC,GAEA,OAAIF,GAAkBA,GAAkBC,EAC/B,UAGPC,IACuD,GAAvDA,EAA4BrP,QAAQoP,GAE7B,UAEF,cAGH,SAAUE,GACdH,EACAC,EACAC,GAEA,OAAIF,GAAkBA,GAAkBC,GAItCC,IACuD,GAAvDA,EAA4BrP,QAAQoP,GAJ7B,MAQF,IAGH,SAAUG,GAAcjD,GAC5B,OAAOA,EAAQhJ,KAAI,SAAC8I,GAAD,gBAAqBA,EAAMvI,EAA3B,YAAgCuI,EAAMtI,MAAK0L,KAAK,KAG/D,SAAUC,GAAiBlQ,GAC/B,IAAMC,EAA6C,GAC7C4G,EAA0B,CAAC,CAAElB,KAAM3F,EAAMG,OAAQ,OAFd,aAIvC,IAAMqF,EAAOqB,EAAMC,MACnB,IAAKtB,EACH,cAEFvF,EAAWuF,EAAKG,KAAKtF,IAAMmF,EAC3BqB,EAAM5K,KAAN,MAAA4K,EAAK,eACArB,EAAKG,KAAKlC,SAASM,KAAI,SAAAY,GAAK,MAAK,CAClCgB,KAAMhB,EACNxE,OAAQqF,EAAKG,YATnB,MAAOkB,EAAMlL,OAAQ,0BAGjB,MAWJ,OAAOsE,EAGH,SAAUkQ,GAAgBC,EAAgBvD,GAC9C,MAAO,CACL7I,KAAM,CACJM,EAAGuI,EAAMvI,EACTC,EAAGsI,EAAMtI,GAEXN,GAAI,CACFK,EAAGuI,EAAMvI,GAAK8L,EAAOnM,GAAGK,EAAI8L,EAAOpM,KAAKM,GACxCC,EAAGsI,EAAMtI,GAAK6L,EAAOnM,GAAGM,EAAI6L,EAAOpM,KAAKO,KASxC,SAAU8L,GAAUrH,EAAWsH,GACnC,IAAMC,EAAeJ,GAAgBG,EAAGtH,EAAE/E,IAC1C,MAAO,CACLD,KAAM,CAAEM,EAAG0E,EAAEhF,KAAKM,EAAGC,EAAGyE,EAAEhF,KAAKO,GAC/BN,GAAI,CAAEK,EAAGiM,EAAatM,GAAGK,EAAGC,EAAGgM,EAAatM,GAAGM,IAc7C,SAAUc,GAAe2D,EAAW3L,GACxC,IAAMmT,EAAML,GAAgBnH,EAAG,CAAE1E,EAAG,EAAGC,EAAG,IAC1C,OAAO4L,GACL,CAAEnM,KAAM,CAAEM,EAAG,EAAGC,EAAG,GAAKN,GAAI,CAAEK,EAAGkM,EAAIvM,GAAGK,EAAIjH,EAAGkH,EAAGiM,EAAIvM,GAAGM,EAAIlH,IAC7D2L,EAAEhF,MAYA,SAAUyM,GAAsB9R,EAAUiB,GAC9C,OAAOuQ,GAAgBvQ,EAAGjB,GAAGsF,GAIzB,SAAUyM,GAAsBC,EAAYC,GAChD,IAAMC,EAAKF,EAAG3M,KAAKM,EACbwM,EAAKH,EAAG3M,KAAKO,EACbwM,EAAKJ,EAAG1M,GAAGK,EACX0M,EAAKL,EAAG1M,GAAGM,EACX0M,EAAKL,EAAG5M,KAAKM,EACb4M,EAAKN,EAAG5M,KAAKO,EACb4M,EAAKP,EAAG3M,GAAGK,EACX8M,EAAKR,EAAG3M,GAAGM,EACX8M,GAASD,EAAKF,IAAOH,EAAKF,IAAOM,EAAKF,IAAOD,EAAKF,GAClDQ,GAASH,EAAKF,IAAOH,EAAKI,IAAOE,EAAKF,IAAOL,EAAKI,GAClDM,GAASR,EAAKF,IAAOC,EAAKI,IAAOF,EAAKF,IAAOD,EAAKI,GAExD,GAAa,GAATI,EACF,OAAO,KAGT,IAAMG,EAAKF,EAAQD,EACbI,EAAKF,EAAQF,EAEnB,OAAIG,GAAM,GAAKA,GAAM,GAAKC,GAAM,GAAKA,GAAM,EAClC,CACLnN,EAAGuM,EAAKW,GAAMT,EAAKF,GACnBtM,EAAGuM,EAAKU,GAAMR,EAAKF,IAIhB,KAGH,SAAUY,GACdC,EACAC,EACAC,GAEA,IAAMC,EAAc,kBAAkBnF,GAAcgF,IAAYxC,SAChE,GAAmB,MAAf2C,EACF,MAAO,CACL,KACA,EAAW,mDAAoD,CAC7DH,UAAWA,EACXE,UAAWA,KAIjB,IAAME,EAAc,kBAAkBpF,GAAciF,IAAYzC,SAChE,GAAmB,MAAf4C,EACF,MAAO,CACL,KACA,EAAW,mDAAoD,CAC7DH,UAAWA,EACXC,UAAWA,KAIjB,IAAMG,EAAY,CAChB1N,EAAGwN,EAAY1C,YAAY,GAC3B7K,EAAGuN,EAAY1C,YAAY,IAEvB6C,EAAY,CAChB3N,EAAGyN,EAAY3C,YAAY,GAC3B7K,EAAGwN,EAAY3C,YAAY,IAS7B,IAAK,IAAM/O,KALXsR,EAAYA,EAAU5N,KACpB,SAACpF,GACC,OAAO8R,GAAsB9R,EAAG,CAAEqF,KAAMgO,EAAW/N,GAAIgO,OAG1CJ,EACfA,EAAUxR,GAAMoQ,GAAsBoB,EAAUxR,GAAK,CACnD2D,KAAMgO,EACN/N,GAAIgO,IAKR,IAAMC,EAAc3P,KAAK4P,IACvBhO,GAAgB,CACdH,KAAM+J,GAAmB4D,GAAWpD,WACpCtK,GAAI8J,GAAmB4D,GAAWnD,WAEpCrK,GAAgB,CACdH,KAAM+J,GAAmB6D,GAAWrD,WACpCtK,GAAI8J,GAAmB6D,GAAWpD,YAIhC4D,EAAmC,GACzC,IAAK,IAAM,KAAMP,EAAW,CAC1B,IAAMQ,EAAWR,EAAU,GAC3B,GAAII,EAAU3N,GAAK+N,EAAS/N,GAAK2N,EAAU1N,GAAK8N,EAAS9N,EAAzD,CAIA,IAAI+N,EAAgB,CAAEtO,KAAMiO,EAAWhO,GAAI4N,EAAU,IAErDS,EAAgBjN,GACdiN,EACAJ,EAAc/N,GAAgBmO,IAEhC,IAAIC,EAAwB,KAC5B,IAAK,IAAM9W,KAAKkW,EAAW,CACzB,IAAMa,EAAU,CACdxO,KAAM2N,EAAUlW,GAChBwI,GAAI0N,GAAWzO,OAAOzH,GAAK,GAAKkW,EAAUhW,SAEtCgD,EAAI+R,GAAsB4B,EAAeE,GAC/C,GAAS,MAAL7T,EAAW,CACb4T,EAAwB5T,EACxB,OAGJ,GAA6B,MAAzB4T,EACF,MAAO,CACL,KACA,EACE,8DACA,CACED,cAAeA,EACfX,UAAWA,KAMnB,IAAIc,EAAwB,KAC5B,IAAK,IAAM,KAAKb,EAAW,CACzB,IAAM,EAAU,CACd5N,KAAM4N,EAAU,GAChB3N,GAAI2N,GAAW1O,OAAO,GAAK,GAAK0O,EAAUjW,SAEtC,EAAI+U,GAAsB4B,EAAe,GAC/C,GAAS,MAAL,EAAW,CACbG,EAAwB,EACxB,OAGJ,GAA6B,MAAzBA,EACF,MAAO,CACL,KACA,EACE,8DACA,CACEH,cAAeA,EACfV,UAAWA,KAMnB,GACEW,EAAsBjO,GAAKmO,EAAsBnO,GACjDiO,EAAsBhO,GAAKkO,EAAsBlO,EAFnD,CAQA,IAAMH,EACJD,GAAgB,CAAEH,KAAMiO,EAAWhO,GAAIwO,IACvCtO,GAAgB,CAAEH,KAAMiO,EAAWhO,GAAIsO,IACzCH,EAAU,GAAM/M,GAAe,CAAErB,KAAMiO,EAAWhO,GAAIoO,GAAYjO,GAAOH,QAPvEmO,EAAU,GAAMC,OA/DhBD,EAAU,GAAMC,EAyEpB,MAAO,CAACD,EAAW,MAGf,SAAUM,KACd,MAAO,CAAE1O,KAAM,CAAEM,EAAG,EAAGC,EAAG,GAAKN,GAAI,CAAEK,EAAG,EAAGC,EAAG,IAG1C,SAAUO,GAAeiI,GAC7B,IAAKA,GAAWA,EAAQpR,OAAS,EAC/B,MAAO,CACL+W,KACA,EAAW,8BAA+B,CAAE3F,aAIhD,IAAM4F,EAAsB,GAC5B,GAAsB,GAAlB5F,EAAQpR,OAEV,IAAK,IAAMF,KAAKsR,EAAS,CACvB,IAAM6F,EAASvN,GACb,CACErB,KAAM+I,EAAQ3K,EAAIc,OAAOzH,GAAK,EAAGsR,EAAQpR,SACzCsI,GAAI8I,EAAQ3K,EAAIc,OAAOzH,GAAK,EAAGsR,EAAQpR,UAEzC,IAEFgX,EAAU1W,KAAK,CAAE+H,KAAM+I,EAAQtR,GAAIwI,GAAI2O,EAAO3O,UAGhD,IAAK,IAAM,KAAK8I,EACd,IAAK,IAAMpQ,KAAKoQ,EAEZ7J,OAAOvG,IAAMyF,EAAIc,OAAO,GAAK,EAAG6J,EAAQpR,SACxCuH,OAAOvG,IAAMuG,OAAO,IACpBA,OAAOvG,IAAMyF,EAAIc,OAAO,GAAK,EAAG6J,EAAQpR,SAExCgX,EAAU1W,KAAK,CAAE+H,KAAM+I,EAAQ,GAAI9I,GAAI8I,EAAQpQ,KAOvD,IADA,IAAIkW,EAAcF,EAAU,GAC5B,MAAmBA,EAAnB,eAA8B,CAAzB,IAAMG,EAAI,KACT3O,GAAgB2O,GAAQ3O,GAAgB0O,KAC1CA,EAAcC,GAIlB,MAAO,CAACD,EAAa,MAGjB,SAAUpN,GACdsN,EACAvP,EACAuD,EACAhE,GAEA,IAAIiQ,EACJ,GAAIjM,EAAU,KASRkM,EAAgD,EATxC,EACYnQ,EAAYiE,EAAUhE,GADlC,sBACLa,EADK,KAEZ,IAAKA,EACH,MAAO,CACL,KACA,EAAW,kCAAmC,CAAEvD,GAAI0G,KAKxD,GAAa,gBAATgM,EAAwB,CAC1B,IAAKjG,GAAStJ,EAAUgJ,IACtB,MAAO,CACL,KACA,EAAW,sDAAuD,CAChE0G,iBAAkB1G,GAClBhJ,WACAuD,cAPoB,MAWA2K,GACxBlF,GACA5I,EAAcE,OACd,CAAEqP,IAAK3P,IAdiB,sBAWzByP,EAXyB,KAWP,EAXO,SAgBrB,CACL,IAAKnG,GAAStJ,EAAUI,EAAcE,QACpC,MAAO,CACL,KACA,EAAW,yDAA0D,CACnE,uBAAwBF,EAAcE,OACtC,uBAAwBF,EAAcL,OACtCC,WACAuD,cARD,MAYqB2K,GACxB9N,EAAcE,OACd0I,GACA,CAAE2G,IAAK3P,IAfJ,sBAiBL,GALCyP,EAZI,KAYc,EAZd,KAiBO,OAAR,EACF,MAAO,CACL,KACA,EAAW,0CAA2C,CACpDF,KAAMA,EACNG,iBAAkB1G,GAClB,uBAAwB5I,EAAcE,OACtC,kBAAmBN,KAKrByP,EAAkB,OAAO3O,EAAI,IAC/B2O,EAAkB,OAAO3O,EAAI,GAE3B2O,EAAkB,OAAO3O,EAAImI,GAAI9E,WACnCsL,EAAkB,OAAO3O,EAAImI,GAAI9E,SAAW,GAE1CsL,EAAkB,OAAO1O,EAAI,IAC/B0O,EAAkB,OAAO1O,EAAI,GAE3B0O,EAAkB,OAAO1O,EAAIkI,GAAI7E,YACnCqL,EAAkB,OAAO1O,EAAIkI,GAAI7E,UAAY,GAGjD,GAAY,OAAR,EACF,MAAO,CACL,KACA,EAAW,0CAA2C,CACpDmL,KAAMA,EACNG,iBAAkB1G,GAClB,uBAAwB5I,EAAcE,OACtC,kBAAmBN,KAIzBwP,EAAoBC,EAAkB,YAGpCD,EADW,gBAATD,EACkB,CAAEzO,EAAGmI,GAAIhF,cAAelD,EAAGkI,GAAI/E,eAE/B,CAAEpD,EAAGmI,GAAI9E,SAAW,EAAGpD,EAAGkI,GAAI7E,UAAY,GAIlE,MAAO,CAACoL,EAAmB,MASvB,SAAUnN,GACd7F,EACAoT,EACAC,GAEA,GAAgC,GAA5BzX,OAAO0X,KAAKtT,GAAMrE,OACpB,MAAO,CAAC,GAAI,MAEd,IAAM4X,EAAiC,CAAC,CAACvT,IACnC+C,EAAgD,CAAC,kBAElD/C,EAAKK,GAAK,CACTA,GAAIL,EAAKK,GACTyD,OAAQsP,EACR9P,MAAOtD,EAAKsD,MACZC,OAAQ8P,KAKd,MAAO,EAAM,CACX,IADW,EACLG,EAAgBD,EAAWA,EAAW5X,OAAS,GAC/C8X,EAAmB1Q,EAAcwQ,EAAW5X,OAAS,GACrD+X,EAAe,GACfC,EAA2C,GAJtC,iBAKYH,GALZ,IAKX,2BAAsC,KAA3BI,EAA2B,QACpC,IAAKA,EAASnQ,SACZ,MAAO,CACL,KACA,EAAW,wDAAyD,CAClEmQ,cAIN,GAAKA,EAASnQ,SAAS9H,OAAvB,CAKA,IAAMkY,EAAS,GACXC,EAAS,GACb,IAAK,IAAMrY,KAAKmY,EAASnQ,SAAU,CAEjC,GADAqQ,EAAS1J,KAAKC,UAAUuJ,EAASnQ,SAAShI,GAAG+H,UACzCqQ,EAAOC,IAAWD,EAAOC,GAAQnY,OAAS,EAC5C,MAAO,CACL,KACA,EAAW,mCAAoC,CAC7CoY,QAASF,EAAOC,GAChBE,SAAUJ,EAASnQ,SAAShI,GAAG4E,MAInCwT,EAAOC,GAAUF,EAASnQ,SAAShI,GAAG4E,GAK1C,GADAqT,EAAazX,KAAb,MAAAyX,EAAY,eAASE,EAASnQ,YACzBgQ,EAAiBG,EAASvT,IAC7B,MAAO,CACL,KACA,EAAW,oCAAqC,CAC9C4C,MAAOF,EAAcA,EAAcpH,OAAS,GAC5CiY,SAAUA,KAMhB,IA3CoC,EA2C9BK,EAAmBxR,EAAMmR,EAASnQ,UA3CJ,iBA4ChBwQ,GA5CgB,IA4CpC,2BAAsC,KAA3BtP,EAA2B,UACAc,GAClC,cACAd,EAAMnB,SACNoQ,EAASvT,GACT,CAACoT,IALiC,sBAC7BS,EAD6B,KACP,EADO,KAOpC,GAAI,EACF,MAAO,CAAC,KAAM,GAEhBvP,EAAMnB,SAAW0Q,GAtDiB,oCAwDb7E,GACrBoE,EAAiBG,EAASvT,IAAIyD,OAC9BmQ,EAAiBlQ,KAAI,SAAAoQ,GAAE,MAAK,CAAE7P,EAAG6P,EAAG3Q,SAASc,EAAGC,EAAG4P,EAAG3Q,SAASe,OA1D7B,sBAwD7BsK,EAxD6B,KAwDtB3M,EAxDsB,KA4DpC,GAAa,MAATA,EACF,MAAO,CAAC,KAAMA,GA7DoB,uBAgEjB2M,GAhEiB,IAgEpC,2BAA0B,OAAfI,EAAe,yBACJgF,GADI,IACxB,2BAAsC,KAA3B,EAA2B,QAElC,EAAMzQ,SAASc,GAAK2K,EAAK1L,OAAOe,GAChC,EAAMd,SAASe,GAAK0K,EAAK1L,OAAOgB,IAEhCoP,EAAgB,EAAMtT,IAAM,CAC1BA,GAAI,EAAMA,GACViD,MAAO,EAAMA,MACbC,OAAQ,EAAMC,SACdM,OAAQmL,EAAKnL,UAVK,gCAhEU,iCAL3B,8BAsFX,IAAI4P,EAAa/X,OAIf,MAAO,CAACoH,EAAe,MAHvBwQ,EAAWtX,KAAKyX,GAChB3Q,EAAc9G,KAAK0X,IAOnB,SAAU5N,GACdqO,EACAC,EACAC,GAEA,GAAIA,GAAkBF,EAAgBzY,QAAU2Y,EAAiB,EAC/D,OAAO,EACL,iEACA,CACEA,iBACA,yBAA0BF,EAAgBzY,SAIhD,IAAIF,EAAI6Y,EACR,MAAO7Y,EAAI6Y,EAAiBD,EAAe1Y,OAAQ,CACjD,IAAK,IAAM0E,KAAMgU,EAAe5Y,EAAI6Y,GAClCF,EAAgB3Y,GAAG4E,GAAMgU,EAAe5Y,EAAI6Y,GAAgBjU,GAE9D5E,IAGF,OAAO,KC3zBT,IAAM4L,GAAa,KACbE,GAAc,KACd,GAAK,EAAI,EACTgN,GAAc,CAClB,CAAEjQ,EAAG,EAAGC,EAAG,GAAKgD,IAChB,CAAEjD,EAAG,EAAGC,EAAG,EAAI,GAAKgD,IACpB,CAAEjD,EAAI,GAAK,IAAO+C,GAAY9C,GAAI,EAAI,GAAK,GAAKgD,IAChD,CAAEjD,EAAG,GAAK+C,GAAY9C,EAAGgD,IACzB,CAAEjD,EAAG,EAAI,GAAK+C,GAAY9C,EAAGgD,IAC7B,CAAEjD,GAAI,EAAI,GAAK,KAAO+C,GAAY9C,GAAI,EAAI,GAAK,GAAKgD,IACpD,CAAEjD,EAAG+C,GAAY9C,EAAG,EAAI,GAAKgD,IAC7B,CAAEjD,EAAG+C,GAAY9C,EAAG,GAAKgD,IACzB,CAAEjD,GAAI,EAAI,GAAK,KAAO+C,GAAY9C,EAAI,GAAK,EAAKgD,IAChD,CAAEjD,EAAG,EAAI,GAAK+C,GAAY9C,EAAG,GAC7B,CAAED,EAAG,GAAK+C,GAAY9C,EAAG,GACzB,CAAED,EAAI,GAAK,IAAO+C,GAAY9C,EAAI,GAAK,EAAKgD,KAExCiN,GAAc,CAAElQ,EAAGmI,GAAIhF,cAAelD,EAAGkI,GAAI/E,eAG7C+M,GAAqBlS,KAAKmS,IAC9BjI,GAAIpF,WAAaA,GACjBoF,GAAIlF,YAAcA,IAEpB,IAAK,IAAM,MAAOgN,GAChBA,GAAY,IAAKjQ,EACfmQ,GAAqBF,GAAY,IAAKjQ,EACtCmI,GAAIhF,cACHgN,GAAqBpN,GAAc,EACtCkN,GAAY,IAAKhQ,EACfkQ,GAAqBF,GAAY,IAAKhQ,EACtCkI,GAAI/E,cACH+M,GAAqBlN,GAAe,EAelC,I,SCtDFoN,GDsDQ,GAAY,CACvBC,qBAAsB,uBACtBC,SAAU,WACVC,qBAAsB,uBACtBC,YAAa,eAGF,GAAU,CACrBC,oBAAqB,uBAGV,GAAQ,CACnBzV,YAAY,EACZC,MAFmB,WAGjB,MAAO,CACLQ,KAAM,KACNC,WAAY,GACZ8C,cAAe,GACf6M,eAAgB,OAIpBqF,QAAS,CACPC,aAAc,SAAC1V,GACb,OAAKA,EAAMoQ,gBAGNpQ,EAAMS,WAAWT,EAAMoQ,gBAGrBpQ,EAAMS,WAAWT,EAAMoQ,gBAAgBjK,KALrC,OASbhG,QAAS,kBA4BA,GAAQqV,qBA5BV,WAkCHG,GAAc,wMAJZtV,EAIY,EAJZA,OACAL,EAGY,EAHZA,MACA4V,EAEY,EAFZA,SAIIC,EAAe7V,EAAMS,WAAWkV,EAAO9U,IACxCgV,EAHS,uBAIZ3S,EAAW,kDAAmD,CAC5D,YAAayS,EAAO9U,KALV,6BAURiV,EAAY,CAChBjV,GAAIgV,EAAa1P,KAAKtF,GACtB0G,SAAUsO,EAAalV,OAASkV,EAAalV,OAAOE,GAAK,KACzD9C,KAAM8X,EAAa1P,KAAKrC,MACxBG,SAAU4R,EAAa1P,KAAKlC,SAASM,KAAI,SAAAvF,GAAC,OAAIA,EAAE6B,MAAIgG,OACpD7C,SAAU6R,EAAa1P,KAAKnC,UAGxB+R,EAAcJ,EAAO1R,SAAS0C,QAClC,SAAA7B,GAAC,OAAKgR,EAAU7R,SAAS+R,SAASlR,MAE9BmR,EAAkBH,EAAU7R,SAAS0C,QACzC,SAAA7B,GAAC,OAAK6Q,EAAO1R,SAAS+R,SAASlR,OAI7BiR,EAAY5Z,OA1BF,kCA2BU4Z,GA3BV,0JA2BDnP,EA3BC,QA4BN5G,EAAMS,WAAWmG,KACnBxD,QAAQgJ,IACN,wDACApM,EAAMS,WAAWmG,IAIbxG,EAAI,CACRuB,OAAQiF,EACRsP,YAAa,MAEf7V,EAAO,GAAUkV,YAAa,CAC5B5T,OAAQiF,EACRsP,YAAa,OAEX9V,EAAE8V,aACJhT,EAAW,kCAAmC,CAC5CV,IAAKpC,EAAE8V,eA7CH,SAmDgBjJ,GAAIZ,QAAQzF,GAnD5B,UAmDJuP,EAnDI,OAoDV/S,QAAQgJ,IACN,qDACA+J,GAGIC,EAAY,CAACD,GACdA,EA1DK,wBA4DRR,EAAO1R,SAAW0R,EAAO1R,SAAS0C,QAAO,SAAA9F,GAAE,OAAIA,GAAM+F,KACrD1D,EAAW,gCAAiC,CAAEvB,OAAQiF,IA7D9C,kLAiEFyP,EAAgBD,EAAU9O,MAC3B+O,EAlEG,+DAsEFjC,EAAW,CACfvT,GAAIwV,EAAcxV,GAClBiD,MAAOuS,EAActY,KACrBiG,SAAUqS,EAAcrS,SACxBC,SAAU,IAEPjE,EAAMS,WAAW4V,EAAc9O,UA5E5B,uBA6ENrE,EAAW,mCAAoC,CAC7CvB,OAAQ0U,EAAc9O,WA9ElB,yCAmFRvH,EAAMS,WACJ4V,EAAc9O,UACdpB,KAAKlC,SAAWjE,EAAMS,WACtB4V,EAAc9O,UACdpB,KAAKlC,SAAS0C,QAAO,SAAA3H,GAAC,OAAIA,EAAE6B,IAAMuT,EAASvT,MAE7Cb,EAAMS,WAAW4V,EAAc9O,UAAUpB,KAAKlC,SAASxH,KACrD2X,GAGFpU,EAAMS,WAAW2T,EAASvT,IAAM,CAC9BF,OAAQX,EAAMS,WAAW4V,EAAc9O,UAAUpB,KACjDA,KAAMiO,GAGRnH,GAAI/B,uBAAuBkJ,EAASvT,IAAI,SAAC8U,GAAD,OACtCC,EAAS,GAAQJ,oBAAqBG,MAnGhC,iBAqGcU,EAAcpS,UArG5B,kJAqGG2C,EArGH,iBAsGkBqG,GAAIZ,QAAQzF,GAtG9B,UAsGA0P,EAtGA,OAuGDA,EAvGC,uBAyGJD,EAAcpS,SAAWoS,EAAcpS,SAAS0C,QAC9C,SAAA9F,GAAE,OAAIA,GAAM+F,KAEd1D,EAAW,gCAAiC,CAC1CvB,OAAQiF,IA7GN,qCAiHNwP,EAAU3Z,KAAK6Z,GAjHT,waAgEHF,EAAUja,OAhEP,qrBAwHV8Z,EAAgB9Z,OAxHN,kCAyHU8Z,GAzHV,8DAyHDrP,EAzHC,QA0HL5G,EAAMS,WAAWmG,IAAa5G,EAAMS,WAAWmG,GAASjG,OA1HnD,4DA+HRX,EAAMS,WAAWmG,IACjB5G,EAAMS,WAAWmG,GAASjG,OAAQE,KAAO8U,EAAO9U,GAhIxC,wDAqIVuC,QAAQgJ,IACN,4CACApM,EAAMS,WAAWmG,IAEbxG,EAAI,CAAEuB,OAAQiF,EAASsP,YAAa,MAC1C7V,EAAO,GAAUkV,YAAanV,GAC1BA,EAAE8V,aACJhT,EAAW,6CAA8C,CACvDV,IAAKpC,EAAE8V,YACPrV,GAAI+F,IAIRqG,GAAIxB,yBAAyB7E,GAlJnB,wJAsJVqP,EAAgB9Z,SAAU4Z,EAAY5Z,OAtJ5B,sBAuJOkK,GACjBrG,EAAMQ,KACNuU,GACAC,IA1JU,sBAuJL1O,EAvJK,KAuJDZ,EAvJC,MA4JRA,EA5JQ,wBA6JVxC,EAAW,6BAA8B,CAAEV,IAAKkD,IA7JtC,2BAgKZ1F,EAAMuD,cAAgB+C,EAhKV,WAqKZzD,EAAM8S,EAAO3R,SAASc,KAAOjC,EAAMiT,EAAU9R,SAASc,IACtDjC,EAAM8S,EAAO3R,SAASe,KAAOlC,EAAMiT,EAAU9R,SAASe,GAtK1C,sBAyKmBkB,GAC7B,cACA0P,EAAO3R,SACP6R,EAAalV,OAASkV,EAAalV,OAAOE,GAAK,KAC/Cb,EAAMuD,eA7KI,sBAyKLmR,EAzKK,KA+KRoB,EAAUvO,UAAYoO,EAAOpO,SA/KrB,oBAiLJ,EAAI,CACR7G,OAAQiV,EAAO9U,GACf4R,UAAWiC,EACXwB,YAAa,MAEf7V,EAAO,GAAUiV,qBAAsB,GACjB,OAAlB,EAAEY,YAvLI,wBAwLRhT,EACE,wDACA,CAAEyS,OAAQA,EAAQnT,IAAK,EAAE0T,cA1LnB,8BAkMVJ,EAAU/X,OAAS4X,EAAO5X,KAlMhB,oBAmMZ8X,EAAa1P,KAAKrC,MAAQ6R,EAAO5X,KAnMrB,EAoMGuF,EAAYwS,EAAUjV,GAAIb,EAAMuD,eApMnC,sBAoML4C,EApMK,KAqMPA,EArMO,mDAwMZA,EAAKrC,MAAQ6R,EAAO5X,KAxMR,oFA4MlByB,WAAS,sBAMN,GAAU+V,aANJ,SAOLvV,EACAI,GAEA,GAAmB,OAAfJ,EAAMQ,KAKV,GAAKR,EAAMS,WAAWL,EAAEuB,QAAxB,CAOA,IAAMhB,EAASX,EAAMS,WAAWL,EAAEuB,QAAQhB,OAC1C,GAAKA,EAAL,CAQA,IAAM0G,EAAQ,CAACjH,EAAEuB,QACjB,MAAO0F,EAAMlL,OAAQ,CACnB,IAAM0E,EAAKwG,EAAMC,MACZzG,IAGLwG,EAAM5K,KAAN,MAAA4K,EAAK,eAASrH,EAAMS,WAAWI,GAAIsF,KAAKlC,SAASM,KAAI,SAAA4B,GAAI,OAAIA,EAAKtF,eAC3Db,EAAMS,WAAWI,IAI1B,IAAM0V,EAAM5V,EAAOsD,SAASuS,WAAU,SAAArQ,GAAI,OAAIA,EAAKtF,KAAOT,EAAEuB,UAC5DhB,EAAOsD,SAAS5G,OAAOkZ,EAAK,QAnB1BnW,EAAE8V,YAAc,EAAW,uCAAwC,CACjExV,OAAQN,EAAEuB,cATZvB,EAAE8V,YAAc,EACd,gDACA,CAAEvU,OAAQvB,EAAEuB,OAAQlB,WAAYT,EAAMS,kBAPxCL,EAAE8V,YAAc,EAAW,sBAAuB,OAX/C,iBAmDN,GAAUd,sBAnDJ,SAmD0BpV,EAAca,GAC7Cb,EAAMoQ,eAAiBvP,KApDlB,iBA4DN,GAAUwU,UA5DJ,SA4DcrV,EAAcQ,GACjC,GAAY,MAARA,EAIF,OAHAR,EAAMQ,KAAO,KACbR,EAAMS,WAAa,QACnBT,EAAMuD,cAAgB,IAGxBvD,EAAMQ,KAAOA,EAGbR,EAAMS,WAAaiQ,GAAiBlQ,GAVc,MAahC6F,GAAoB7F,EAAMuU,GAAaC,IAbP,sBAa3C1O,EAb2C,KAavC9D,EAbuC,KAcxC,MAAN8D,GAAqB,MAAP9D,EAIlBxC,EAAMuD,cAAgB+C,EAHpBlD,QAAQV,MAAMF,MA3EX,iBAsFN,GAAU8S,sBAtFJ,SAuFLtV,EACAI,GAOA,IAAMO,EAASX,EAAMS,WAAWL,EAAEM,QAAQC,OAC1C,GAAe,OAAXA,EAAiB,OACK2C,EAAY3C,EAAOE,GAAIb,EAAMuD,eADlC,sBACZa,EADY,KAEnB,IAAKA,EAQH,YAPAhE,EAAE8V,YAAc,EACd,mDACA,CACE,YAAavV,EAAOE,GACpB,sBAAuBb,EAAMuD,iBAMnC,IAAK+J,GAASlN,EAAEqS,UAAWrO,EAAcE,QAKvC,YAJAlE,EAAE8V,YAAc,EAAW,YAAa,CACtCzD,UAAWrS,EAAEqS,UACb,uBAAwBrO,EAAcE,UAM5ClE,EAAE8V,YAAcnQ,EAAe/F,EAAO,CACpCU,OAAQN,EAAEM,OACVsD,SAAU5D,EAAEqS,eAxHT,IEnUE,GAAY,CACvBgE,SAAU,WACVC,QAAS,UACTC,QAAS,UACTC,gBAAiB,mBAGbC,GAAe,uBAAS,SAAC7W,EAAOxB,GACpCwB,EAAM8W,cAAgBtY,IACrB,KAEGuY,GAAc,uBAAS,SAAC/W,EAAOxB,GACnCwB,EAAMgX,aAAexY,IACpB,KAEGyY,GAAmB,KACnBC,GAAkB,EAEX,GAAQ,CACnBnX,YAAY,EACZC,MAAO,CACLmX,KAAM,EACNC,IAAK,CAAEtS,EAAG,EAAGC,EAAG,GAChB+R,cAAe,EACfE,aAAc,CAAElS,EAAG,EAAGC,EAAG,GACzBsS,WAAY,CAAEvS,EAAG,EAAGC,EAAG,IAEzBvF,WAAS,wBACN,GAAUoX,iBADJ,SACqB5W,EAAc+D,GACxC/D,EAAMqX,WAAatT,KAFd,kBAIN,GAAU0S,UAJJ,SAIczW,EAAcsX,GACjC,IAAMC,EAAUvX,EAAMmX,KAAOpU,KAAKC,IAAI,EAAGsU,EAAQL,IAC7CM,EAAU,KAIdvX,EAAMmX,KAAOI,EACbV,GAAa7W,EAAOA,EAAMmX,UAXrB,kBAaN,GAAUT,SAbJ,SAaa1W,EAAcsX,GAChCtX,EAAMoX,IAAMvG,GACV,CAAErM,KAAM,CAAEM,EAAG,EAAGC,EAAG,GAAKN,GAAIzE,EAAMoX,KAClCvR,GAAeyR,EAAOJ,KACtBzS,GACFsS,GAAY/W,EAAOA,EAAMoX,QAlBpB,kBAoBN,GAAUT,SApBJ,SAoBa3W,EAAcqN,GAChCrN,EAAMoX,IAAM/J,EACZ0J,GAAY/W,EAAOA,EAAMoX,QAtBpB,KC/BE,GAAY,CACvBI,SAAU,YAEC,GAAU,CACrBC,OAAQ,SACRC,QAAS,WAGE,GAAQ,CACnB3X,YAAY,EACZC,MAAO,CACLgK,KAAM,MAERxK,UAAW,kBACR,GAAUgY,UADJ,SACcxX,EAAcgK,GACjChK,EAAMgK,KAAOA,KAGjB7J,SAAO,wBACE,GAAQsX,QADV,YACgD,sJAA5BpX,OAA4B,SAC7C,OACHgJ,OACAsO,gBAAgB,IAAI,OAAStO,KAAKuO,oBAHc,gDADhD,kBAOE,GAAQF,SAPV,YAOiD,0JAA5BrX,EAA4B,EAA5BA,OAA4B,SAC9C,OAASgJ,OAAOqO,UAD8B,OAEpDrX,EAAO,GAAUmX,SAAU,MAFyB,gDAPjD,KFxBI,GAAY,CACvBK,cAAe,gBACfC,WAAY,aACZC,WAAY,aACZC,oBAAqB,wBAGvB,SAAK7C,GACH,2BACA,qBACA,qBACA,wCAJF,CAAKA,QAAc,KAOnB,I,MAAM8C,GAAc,CAClBC,UAAW,YACXC,OAAQ,SACRC,OAAQ,SACRC,gBAAiB,mBA2CN,GAAQ,CACnBtY,YAAY,EACZC,MAAO,CACLsY,iBAAkB,GAClBC,gBAAiB,IAEnB/Y,WAAS,wBACN,GAAUqY,eADJ,SACmB7X,EAAcwY,GACjCxY,EAAMuY,gBAAgBC,EAAO7W,UAChC3B,EAAMuY,gBAAgBC,EAAO7W,QAAU,IAErC3B,EAAMuY,gBAAgBC,EAAO7W,QAAQsW,GAAYE,QAEnDnY,EAAMuY,gBAAgBC,EAAO7W,QAAQsW,GAAYE,QAAS5Q,SACxDiR,EAAOC,YAETzY,EAAMuY,gBAAgBC,EAAO7W,QAAQsW,GAAYC,WAAaM,KAV3D,kBAaN,GAAUV,YAbJ,SAagB9X,EAAcwY,GAC9BxY,EAAMuY,gBAAgBC,EAAO7W,UAChC3B,EAAMuY,gBAAgBC,EAAO7W,QAAU,IAEzC3B,EAAMuY,gBAAgBC,EAAO7W,QAAQsW,GAAYE,QAAUK,KAjBtD,kBAmBN,GAAUT,YAnBJ,SAmBgB/X,EAAcwY,GAEnCxY,EAAMuY,gBAAgBC,EAAO7W,QAAU,GACvC3B,EAAMuY,gBAAgBC,EAAO7W,QAAQsW,GAAYG,QAAUI,KAtBtD,kBAwBN,GAAUR,qBAxBJ,SAwByBhY,EAAcwY,GACvCxY,EAAMuY,gBAAgBC,EAAO7W,UAChC3B,EAAMuY,gBAAgBC,EAAO7W,QAAU,IAEzC,IAAI+W,EAAmBF,EAAOG,YAC1B3Y,EAAMuY,gBAAgBC,EAAO7W,QAAQsW,GAAYI,mBACnDK,EAAmB1Y,EAAMuY,gBAAgBC,EAAO7W,QAC9CsW,GAAYI,iBACXM,aAEL3Y,EAAMuY,gBAAgBC,EAAO7W,QAAQsW,GAAYI,iBAAmB,CAClE1W,OAAQ6W,EAAO7W,OACfgX,YAAaD,EACbE,YAAaJ,EAAOI,gBArCjB,IAyCTzY,QAAS,IGxFE,GAAY,CACvB0Y,aAAc,eACdC,kBAAmB,oBACnBC,iBAAkB,mBAClBC,iBAAkB,oBAGP,GAAU,CACrBjM,eAAgB,iBAChBkM,eAAgB,iBAChBC,eAAgB,kBAGLC,GAAmB,CAC9BxX,OAAQ,GACRyX,QAAS,IAGX,SAASC,GACPC,EACA3X,GAEK2X,EAAa3X,KAChB2X,EAAa3X,GAAUsB,EAAMkW,IAC7BG,EAAa3X,GAAQA,OAASA,GAI3B,IAAM4X,GAAmB,CAC9B5X,OAAQ,GACR6X,QAAS,IAGX,SAASC,GACPC,EACA/X,GAEK+X,EAAiB/X,KACpB+X,EAAiB/X,GAAUsB,EAAMsW,IACjCG,EAAiB/X,GAAQA,OAASA,GAI/B,I,MAAM,GAAQ,CACnB5B,YAAY,EACZC,MAAO,CACLsZ,aAAc,GACdI,iBAAkB,IAEpBvZ,SAAO,wBACJ,GAAQ4M,gBADJ,WAGHpL,GAAc,IADZ3B,EACY,EADZA,MAGF,OAAOA,EAAMsZ,aAAa3X,MALvB,kBAcE,GAAQuX,gBAdV,WAgBH9Y,GAAsC,4JADpCC,EACoC,EADpCA,OAAQC,EAC4B,EAD5BA,UAILA,EAAU0J,KAAKA,OAAQ1J,EAAU0J,KAAKA,KAAK2P,YAHV,yCAI7B,MAJ6B,uBAQpB1M,GAAIrF,iBAAJ,0CACFtH,EAAU0J,KAAKA,KAAKE,IADlB,oBACiC9J,EAAEuB,OADnC,WACqDvB,EAAEuB,QADvD,qCAEFrB,EAAU0J,KAAKA,KAAKE,IAFlB,oBAEiC9J,EAAEuB,OAFnC,YAEsDvB,EAAEoZ,SAFxD,IARoB,UAQhChX,EARgC,QAYlCA,EAZkC,yCAa7BA,GAb6B,cAiBtCnC,EAAO,GAAD,OAAI,GAAU2Y,kBAAoB5Y,GAjBF,kBAmB/B,MAnB+B,iDAhBnC,kBA4CE,GAAQ6Y,gBA5CV,WA8CH7Y,GAAsC,8JADpCC,EACoC,EADpCA,OACoC,EAD5BL,MAIVK,EAAO,GAAD,OAAI,GAAU0Y,kBAAoB3Y,GAHF,SAMpB6M,GAAIrF,iBAAJ,6CACCxH,EAAEuB,OADH,WACqBvB,EAAEuB,QADvB,wCAECvB,EAAEuB,OAFH,YAEsBvB,EAAEgZ,SAFxB,IANoB,UAMhC5W,EANgC,QAUlCA,EAVkC,yCAW7BA,GAX6B,gCAc/B,MAd+B,gDA9CnC,IA+DPhD,WAAS,wBAMN,GAAUqZ,cANJ,SAOL7Y,EACAsZ,GAEAtZ,EAAMsZ,aAAeA,KAVhB,kBAkBN,GAAUR,mBAlBJ,SAmBL9Y,EACA0Z,GAEA1Z,EAAM0Z,iBAAmBA,KAtBpB,kBA8BN,GAAUX,kBA9BJ,SA+BL/Y,EACAI,GAEAiZ,GAAwBrZ,EAAMsZ,aAAclZ,EAAEuB,QAC9C3B,EAAMsZ,aAAalZ,EAAEuB,QAAQyX,QAAUhZ,EAAEgZ,WAnCpC,kBA2CN,GAAUJ,kBA3CJ,SA4CLhZ,EACAI,GAEAqZ,GAAwBzZ,EAAM0Z,iBAAkBtZ,EAAEuB,QAClD3B,EAAM0Z,iBAAiBtZ,EAAEuB,QAAQ6X,QAAUpZ,EAAEoZ,WAhDxC,KClIE,I,UAAY,CACvBI,aAAc,iBAGH,GAAQ,CACnB7Z,YAAY,EACZC,MAAO,CACLkC,QAAS,IAEX1C,UAAW,kBACR,GAAUoa,cADJ,SACkB5Z,EAAckC,GAEjCA,EAAQ/F,OAAS,GAEnB6D,EAAMkC,QAAUA,EAAQ3C,MAAM,EAAG,IAEjCS,EAAMkC,QAAUA,M,mCCjBlB,GAAQ,IAAI,aAAO,CACvB2X,SAAU,KACVC,SAAU,YAGN,SAAU,GAAIjZ,EAAYkZ,GAC9B,GAAMC,IAAInZ,EAAIkZ,GAEV,SAAUE,GAAOF,GACrB,OAAO,GAAME,OAAOF,GCYf,SAAeG,GAAtB,mC,gEAAO,WAAuBlQ,GAAvB,uHACoBiD,GAAI5C,OAAOL,GAD/B,yCACEzF,EADF,KACO/B,EADP,MAEO,OAAR+B,GAAgB/B,IAClBU,EAAW,oCAAqC,CAAEV,QAH/C,EAMmB0E,EAAmB3C,GANtC,sBAME/D,EANF,KAMQ2Z,EANR,KAOW,OAAZA,EAPC,0CAQI,CAAC,KAAMA,IARX,QAaL,IAAWtZ,KAHX,GAAMR,OAAN,eAAqB,GAAcgV,UAAY7U,GAG9B+D,EACf0I,GAAI/B,uBAAuBrK,GAAI,SAAC8U,GAAD,OAC7B,GAAMC,SAAN,eAAuB,GAAYJ,qBAAuBG,MAfzD,4C,yBAoBA,SAAeyE,GAAtB,mC,gEAAO,WAAyBpQ,GAAzB,iHACmBiD,GAAI3C,QAAQN,GAD/B,yCACA/J,EADA,KACMuC,EADN,MAEO,MAARvC,GAAgBuC,IAClBY,QAAQV,MAAMF,IAGZwH,GAAS/J,EANR,kCAOiBgN,GAAI3C,QAAQ,MAP7B,uCAOFrK,EAPE,KAOIuC,EAPJ,MAQS,MAARvC,GAAgBuC,KAClBY,QAAQV,MAAMF,GACdvC,EAAO,IAVN,QAcL,GAAMI,OAAN,cAAoB,EAAaZ,UAAYQ,GAdxC,4C,yBAiBA,SAAeoa,GAAtB,mC,gEAAO,WAAiCrQ,GAAjC,mHAC4BiD,GAAInC,iBAAiBd,GADjD,yCACAxI,EADA,KACegB,EADf,MAEgB,MAAjBhB,GAAyBgB,KAC3BY,QAAQV,MAAMF,GACdhB,EAAgB,KAGdwI,GAASxI,EAPR,kCAQ0ByL,GAAInC,iBAAiB,MAR/C,uCAQFtJ,EARE,KAQagB,EARb,MASkB,MAAjBhB,GAAyBgB,KAC3BY,QAAQV,MAAMF,GACdhB,EAAgB,IAXf,QAgBL,IAAWX,KAAMW,EACfyL,GAAIzB,gCAAgC3K,GAAI,SAACc,EAAQC,GAC/C,OAAO,GAAMvB,OAAN,uBACW,EAAsBkB,sBACtC,CAAEI,OAAQA,EAAQC,gBAAiBA,OAKzC,GAAMvB,OAAN,uBACkB,EAAsBiB,mBACtCE,GA3BG,4C,yBAmCA,SAAe8Y,GAAtB,mC,gEAAO,WAAgCtQ,GAAhC,yHAE4BiD,GAAIF,iBAFhC,yCAEEwN,EAFF,KAEe/X,EAFf,KAGc,MAAf+X,IAAuB/X,EAHtB,uBAIHU,EAAW,0BAA2B,CAAEV,QAJrC,0BASL,IAAWvG,KADLqd,EAA4C,GAClCiB,EACdjB,EAAard,GAAK,CAChB0F,OAAQ4Y,EAAYte,GAAG0F,OACvByX,QAASmB,EAAYte,GAAGmd,SAG1BnM,GAAI1B,2BACF+N,EAAard,GAAG0F,QAChB,SAACvB,GACC,GAAcA,EAAEuB,OAAQvB,EAAEgZ,SAC1B,GAAM/Y,OAAN,sBAA4B,GAAqB0Y,kBAAoB3Y,MAnBtE,GAwBL,GAAMC,OAAN,sBACiB,GAAqBwY,cACpCS,IAGEtP,EA7BC,kCA8B+BiD,GAAIJ,gBAAgB7C,GA9BnD,0CA8BIwQ,EA9BJ,KA8BkB,EA9BlB,MA+BC,EA/BD,wBAgCDtX,EAAW,2BAA4B,CAAEV,IAAA,EAAKwH,SAhC7C,8BAmCkB,OAAjBwQ,EAnCD,mDAwCH,GAAMna,OAAN,sBACiB,GAAqByY,mBACpC0B,GA1CC,4C,yBA+CA,SAAeC,GAAtB,mC,gEAAO,WAAwBzQ,GAAxB,iGACCkQ,GAAQlQ,GADT,uBAECoQ,GAAUpQ,GAFX,uBAGCqQ,GAAkBrQ,GAHnB,uBAICsQ,GAAiBtQ,GAJlB,2C,yBCxDA,IAAM,GAAU,CACrB0Q,KAAM,OACNC,mBAAoB,qBACpBC,WAAY,aACZC,aAAc,eACdC,WAAY,aACZC,YAAa,cACb1P,kBAAmB,oBAGnB2P,mBAAoB,sBAGT,GAAY,CACvBC,cAAe,gBACfC,wBAAyB,2BAGrBC,GAAuB,uBAC3B,SACExZ,EACA8Q,EACAlL,EACAhE,GACE,MACgC0C,GAChC,YACAwM,EACAlL,EACAhE,GALA,sBACK6X,EADL,KAQFnO,GAAItF,OAAJ,gCAAqBhG,EAArB,aAAyCyZ,MAE3C,KAGW,GAAkC9c,SAElC,GAAQ,eAAmB,CACtC0B,MAAO,CACLqb,YAAY,EACZC,kBAAmB,IAErB9b,WAAS,wBACN,GAAUyb,eADJ,SACmBjb,EAAc8J,GACtC9J,EAAMqb,WAAavR,KAFd,kBAIN,GAAUoR,yBAJJ,SAI6Blb,EAAc8J,GAChD9J,EAAMsb,kBAAoBxR,KALrB,IAQT3J,SAAO,wBAOE,GAAQ6a,oBAPV,WASHO,GAmBC,mJApBC3F,EAoBD,EApBCA,SAoBD,EApBW5V,MAsBZub,EAAQC,QAAQ,CACdnZ,QAAS,2CACToZ,OAAQ,SACRC,YAAa,cACbC,YAAa,4BACbC,OAAQ,WAAF,8CAAE,8GACAhG,EAAS,QAAD,OAAS,GAAY6B,SAD7B,2CAAF,qDAAE,GAGRoE,OAAQ,eAVT,gDA5BE,kBAkDJ,GAAQd,aAlDJ,WAoDHjR,GAAY,IADVzJ,EACU,EADVA,OAAQL,EACE,EADFA,MAGVK,EAAO,GAAU4a,cAAenR,GAC3BA,IACH9J,EAAMsb,kBAAkBxU,SAAQ,SAAAjG,GAAE,OAChCoM,GAAIpB,oBAAoB,OAAShL,MAEnCR,EAAO,GAAU6a,wBAAyB,QA3DzC,kBAmEE,GAAQR,MAnEV,YAmE8C,mJAA5Bra,EAA4B,EAA5BA,OACrB4M,GAAI5E,eACJ,OAASgB,OAAOyS,oBAAmB,SAAA9R,GAC7BA,IAASA,EAAK2P,aAChB1M,GAAIjB,kBAAkBhC,EAAKE,IAAKF,EAAKkC,YAAa,MAClD7L,EAAO,QAAD,OAAS,GAAcmX,UAAYxN,GACzCyQ,GAASzQ,KAET3J,EAAO,QAAD,OAAS,GAAcmX,UAAY,MACzCiD,GAAS,UAToC,gDAnE9C,kBAuFE,GAAQG,YAvFV,WAyFHxa,GAGC,4LAJCC,EAID,EAJCA,OAAQL,EAIT,EAJSA,MAMJW,EAASX,EAAMQ,KAAKC,WAAWL,EAAEmH,UAAUpB,KAFhD,EAGsCjC,EACrCvD,EACAX,EAAMQ,KAAK+C,eACX,GAND,sBAGMkP,EAHN,KAGiBsJ,EAHjB,KAG8BvW,EAH9B,KAQY,OAATA,EARH,uBASCtC,EAAW,2BAA4B,CACrCV,IAAKgD,EACL7E,SACA,2BAA4BX,EAAMQ,KAAK+C,gBAZ1C,+BAiBkC0C,GACjC,YACAwM,EACArS,EAAEmH,SACFvH,EAAMQ,KAAK+C,eArBZ,sBAiBM2C,EAjBN,KAiB0BR,EAjB1B,MAuBGA,EAvBH,wBAwBCxC,EAAW,uCAAwC,CACjDV,IAAKkD,EACL/E,SACA,2BAA4BX,EAAMQ,KAAK+C,gBA3B1C,kCA+BK4C,EAAOtC,EAAczD,EAAE0D,MAAOoC,GAC9B8V,EAAY,CAChBnb,GAAIsF,EAAKtF,GACT0G,SAAUnH,EAAEmH,SACZxJ,KAAMqC,EAAE0D,MACRG,SAAU,GACVD,SAAUkC,GAEN+V,EAAShP,GAAIV,cAvClB,oCAyCSyP,EAAUnb,IAAOmb,GAzC1B,+BA0CSA,EAAUzU,SA1CnB,qBA0CwC0U,GAAWD,EAAUnb,IAFxDqb,EAxCL,EA6CGH,IAAa,EACmB9V,GAChC,YACA8V,EAAY/X,SACZ5D,EAAEmH,SACFvH,EAAMQ,KAAK+C,eALE,sBACR4Y,EADQ,KAOfD,EAAU,OAAD,OAAQH,EAAYlb,GAApB,cAAqCsb,GApD/C,UAuDKlP,GAAItF,OAAOuU,GAvDhB,eAyDD7b,EAAO,WAAD,OAAY,GAAiByX,YAAc,CAC/CnW,OAAQwE,EAAKtF,GACb0G,SAAUnH,EAAEmH,WA3Db,kBA8DMpB,EAAKtF,IA9DX,iDA5FE,kBAmKE,GAAQga,cAnKV,WAqKHza,GAGC,4LAJCC,EAID,EAJCA,OAAQL,EAIT,EAJSA,MAUJoc,EAAYpc,EAAMQ,KAAKC,WAAWL,EAAEuB,QAAQhB,OAC5C0b,EAAYrc,EAAMQ,KAAKC,WAAWL,EAAEmH,UAAUpB,KAPnD,EAQsCjC,EACrCmY,EACArc,EAAMQ,KAAK+C,eACX,GAXD,sBAQMkP,EARN,KAQiBsJ,EARjB,KAQ8BvW,EAR9B,MAaGA,EAbH,uBAcCtC,EAAW,wCAAyC,CAAEV,IAAKgD,IAd5D,+BAiBuCS,GACtC,YACAwM,EACArS,EAAEmH,SACFvH,EAAMQ,KAAK+C,eArBZ,sBAiBM6X,EAjBN,KAiB+B1V,EAjB/B,MAuBGA,EAvBH,wBAwBCxC,EAAW,yCAA0C,CACnDV,IAAKkD,EACL/E,cACA,2BAA4BX,EAAMQ,KAAK+C,gBA3B1C,kCAgCK0Y,EAAShP,GAAIV,cAhClB,UAkCoBU,GAAIL,eAAewP,EAAWvb,GAAIT,EAAEuB,QAlCxD,eAkCK2a,EAlCL,2CAoCSlc,EAAEuB,OApCX,aAoC+B0a,EAAWxb,IApC1C,+BAqCSub,EAAWvb,GArCpB,qBAqCmCyb,GAAW,MArC9C,+BAsCSD,EAAWxb,GAtCpB,qBAsCmCob,GAAW7b,EAAEuB,QAtChD,+BAuCSvB,EAAEuB,OAvCX,aAuC+ByZ,GAJ1Bc,EAnCL,EAyCGH,IAAa,EACmB9V,GAChC,YACA8V,EAAY/X,SACZ5D,EAAEmH,SACFvH,EAAMQ,KAAK+C,eALE,sBACR4Y,EADQ,KAOfD,EAAU,OAAD,OAAQH,EAAYlb,GAApB,cAAqCsb,GAhD/C,UAkDKlP,GAAItF,OAAOuU,GAlDhB,QAoDD7b,EAAO,WAAD,OAAY,GAAiBwX,eAAiB,CAClDlW,OAAQvB,EAAEuB,OACV4F,SAAUnH,EAAEmH,WAtDb,iDAxKE,kBAwOE,GAAQuT,YAxOV,WA0OHnZ,GAAc,0KADZtB,EACY,EADZA,OAAQL,EACI,EADJA,MAGJW,EAASX,EAAMQ,KAAKC,WAAWkB,GAAQhB,OACxCA,EAHS,wDAMR4G,EAAW5G,EAAOE,GANV,SAOMoM,GAAIZ,QAAQ1K,GAPlB,OAORwE,EAPQ,OASRoW,EAAgB,mBAAMpW,EAAKlC,UAC3BuY,EAAmB,GAVX,aAWPD,EAAcpgB,OAAS,GAXhB,oBAYN0E,EAAK0b,EAAcjV,MAEtBzG,GACAb,EAAMQ,KAAKC,WAAWI,IACtBb,EAAMQ,KAAKC,WAAWI,GAAKsF,MAC3BnG,EAAMQ,KAAKC,WAAWI,GAAKF,OAjBlB,wDAqBZ6b,EAAiB3b,GAAM,CACrBA,GAAIA,EACJ0G,SAAUvH,EAAMQ,KAAKC,WAAWI,GAAIF,OAAQE,GAC5C9C,KAAMiC,EAAMQ,KAAKC,WAAWI,GAAIsF,KAAKrC,MACrCG,SAAUjE,EAAMQ,KAAKC,WAAWI,GAAIsF,KAAKlC,SAASM,KAChD,SAAA4B,GAAI,OAAIA,EAAKtF,MAEfmD,SAAUhE,EAAMQ,KAAKC,WAAWI,GAAIsF,KAAKnC,UAE3CuY,EAAc9f,KAAd,MAAA8f,EAAa,eACRvc,EAAMQ,KAAKC,WAAWI,GAAIsF,KAAKlC,SAASM,KAAI,SAAA4B,GAAI,OAAIA,EAAKtF,QA/BlD,+BAmCR4b,EAAc,GAnCN,UAoCOxP,GAAIL,eAAejM,EAAOE,GAAIc,GApCrC,QAoDd,IAAW,KAhBL2a,EApCQ,OAqCdG,EAAY,SAAD,OAAU9a,EAAV,SAA0BwE,EACrCsW,EAAY,OAAD,OAAQ9a,IAAY,KAC/B8a,EAAY,OAAD,OAAQ9b,EAAOE,GAAf,qBAA8Byb,IAAY,KACjDtc,EAAMua,YAAYjB,aAAa3X,KACjC8a,EAAY,SAAD,OAAU9a,EAAV,kBACT3B,EAAMua,YAAYjB,aAAa3X,GACjC8a,EAAY,gBAAD,OAAiB9a,IAAY,MAEtC3B,EAAM0c,aAAalb,cAAcG,KACnC8a,EAAY,SAAD,OAAU9a,EAAV,kBACT3B,EAAM0c,aAAalb,cAAcG,GACnC8a,EAAY,gBAAD,OAAiB9a,IAAY,MAIzB6a,EACfC,EAAY,SAAD,OAAU,EAAV,SAAsBD,EAAiB,GAClDC,EAAY,OAAD,OAAQ,IAAQ,KACvBzc,EAAMua,YAAYjB,aAAa,KACjCmD,EAAY,SAAD,OAAU,EAAV,kBACTzc,EAAMua,YAAYjB,aAAa,GACjCmD,EAAY,gBAAD,OAAiB,IAAQ,MAElCzc,EAAM0c,aAAalb,cAAc,KACnCib,EAAY,SAAD,OAAU,EAAV,kBACTzc,EAAM0c,aAAalb,cAAc,GACnCib,EAAY,gBAAD,OAAiB,IAAQ,MA/D1B,iBAmERxP,GAAItF,OAAO8U,GAnEH,QAqEdpc,EAAO,WAAD,OAAY,GAAiB0X,YAAc,CAC/C4E,aAAcpV,EACd5F,OAAQA,IAvEI,iDA1OX,kBA2TJ,GAAQgZ,oBA3TJ,WA6THva,GAAmC,IADjCC,EACiC,EADjCA,OAAQL,EACyB,EADzBA,MAGV,GAAKA,EAAMqb,WAAX,CAFmC,MAKjB/X,EAAYlD,EAAEM,OAAQV,EAAMQ,KAAK+C,eALhB,sBAK5BqZ,EAL4B,KAMnC,IAAKA,EACH,OAAO,EAAW,4CAA6C,CAC7D,WAAYxc,EAAEM,OACd,sBAAuBV,EAAMQ,KAAK+C,gBAGtC,IAAMkP,EAAY5B,GAChB,CAAErM,KAAM,CAAEM,EAAG,EAAGC,EAAG,GAAKN,GAAImY,EAAQ7Y,QACpC,CAAES,KAAM,CAAEM,EAAG,EAAGC,EAAG,GAAKN,GAAIrE,EAAEkX,QAC9B7S,GAEIoY,EAAO,CAAEnc,OAAQN,EAAEM,OAAQ+R,YAAWyD,YAAa,MACzD7V,EAAO,QAAD,OAAS,GAAciV,sBAAwBuH,GAC5B,OAArBA,EAAK3G,cACP7V,EAAO,WAAD,OAAY,GAAiB2X,qBAAuB,CACxDrW,OAAQvB,EAAEM,OACViY,YAAaiE,EAAQ7Y,OACrB6U,YAAanG,IAIf0I,GACE/a,EAAEM,OACF+R,EACAzS,EAAMQ,KAAKC,WAAWL,EAAEM,QAAQC,OAAQE,GACxCb,EAAMQ,KAAK+C,oBA5VZ,IAiWP7G,QAAS,CACPogB,IAAK,EACLC,SAAU,EACVL,aAAc,EACdM,sBAAuB,EACvBxc,KAAM,GACNwJ,KAAM,GACNiT,QAAS,GACTC,QAAS,GACT3C,YAAa,GACb4C,aAAc,MAKZ,SAAUC,KACd,OAAO,eAAa,ICzfP,sBAAgB,CAC7BC,MAD6B,WAE3B,IAAMC,EAAQF,KACdE,EAAM1H,SAAS,GAAQ8E,SCH3B,GAAO6C,OAASA,EAED,U,sECHb,0D,GAAA,eAAoB,SAAb1c,GAAG,SAAO,S,GACjB,eAAuB,SAAhBA,GAAG,YAAU,S,gFADpB,GACA,GACA,eAAqC,UAA5B,QAAK,8BAAE,EAAA2c,OAAA,EAAAA,MAAA,sBAAO,U,ICGV,sBAAgB,CAC7Bzf,KAAM,gBAENsf,MAH6B,WAIbD,KAEd,MAAO,CACLI,MAAO,WAAF,8CAAE,6GACCC,EAAUC,SAASC,eAAe,SAClCC,EAAaF,SAASC,eAC1B,YAHG,SAKC,OACHtU,OACAwU,2BAA2BJ,EAAQjf,MAAOof,EAAWpf,OAPnD,2CAAF,qDAAE,OCXb,GAAO+e,OAAS,GAED,U,8NCJb,eAA+B,GAC/B,eAAgC,GAAzBvZ,SAAS,gBAChB,eAME,GALC8Z,eAAgB,EAAAA,eAChB,yBAA2B,EAAAC,wBAC3B,0BAA4B,EAAAC,yBAC5BC,MAAO,EAAA5C,WACPjL,eAAgB,EAAAA,gB,0GAEnB,eAAQ,GACR,eAaE,GAZC8N,OAAQ,EAAAC,yBACR/N,eAAgB,EAAAA,eAChBE,4BAA6B,EAAAA,4BAC7B8N,YAAW,EAAAC,SACXC,qBAAsB,EAAAA,qBACtBC,oBAAqB,EAAAA,oBACrB,gBAAgB,EAAAC,aAChB,aAAa,EAAAC,WACb,YAAY,EAAAC,UACZ,aAAa,EAAAC,WACb,qBAAqB,EAAAC,YACrB,QAAO,EAAAzH,M,oXCtBV,eAyDM,OAxDJ0H,MAAM,6BACLC,MAAO,EAAAC,SACPC,OAAQ,EAAAC,UACRpe,GAAI,EAAAqe,MACLC,MAAA,yB,qBAEA,eAiBE,2BAhByB,EAAAjB,QAAM,SAAvBza,EAAOzC,G,wBADjB,eAiBE,GAfClC,IAAKkC,EACLoe,WAAUpe,EACVqe,YAAW5b,EACX6b,eAAc,EAAAC,YAAYve,GAC1Bwe,aAAY,EAAAC,UAAUze,GACtB0e,YAAW,EAAAC,SAAS3e,GACpB4e,eAAc,EAAAC,YAAY7e,GAC1BoP,eAAgB,EAAAA,eAChBE,4BAA6B,EAAAA,4BAC7BiO,oBAAqB,EAAAA,oBACrBuB,SAAQ,EAAAZ,MACR,gBAAgB,EAAAa,aAChB,aAAa,EAAAtB,WACb,YAAY,EAAAC,UACZ,aAAa,EAAAC,Y,6OAEhB,eAOE,GANCvO,eAAgB,EAAAA,eAChB4P,gBAAiB,EAAAA,gBACjBZ,WAAA,eACA,aAAa,EAAAX,WACb,YAAY,EAAAC,UACZ,aAAa,EAAAC,Y,yFAEhB,eAWE,GAVCN,SAAU,EAAAA,SACVe,WAAA,WACDa,MAAM,OACLP,YAAW,EACZQ,cAAY,SACZC,kBAAgB,OACf/P,eAAgB,EAAAA,eAChB,aAAa,EAAAqO,WACb,YAAY,EAAAC,UACZ,aAAa,EAAAC,Y,kFAEhB,eAWE,GAVCN,SAAU,EAAAC,qBACVc,WAAA,uBACDa,MAAM,MACLP,YAAW,GACZQ,cAAY,OACZC,kBAAgB,YACf/P,eAAgB,EAAAA,eAChB,aAAa,EAAAqO,WACb,YAAY,EAAAC,UACZ,aAAa,EAAAC,Y,sQCvDlB,eAeE,2BAduB,EAAAyB,UAAQ,SAAvBxD,EAAS3gB,G,wBADnB,eAeE,WAbC6C,IAAK7C,EACLokB,OAAQ,EAAAd,YACRe,KAAM,EAAAnQ,YAAY,EAAAC,eAAgBwM,EAAQ/b,GAAI,EAAAyP,6BAC9CiQ,eAAqB,qBAA4B,iBAAwB,EAAQ,GAAY,+BAO9FC,eAAa,IACZC,OAAQ,EAAAjQ,cAAcoM,EAAQtY,QAC/Boc,iBAAe,Q,+EAajB,eAyBO,2BAxBa,EAAAN,UAAQ,SAAnBxD,G,wBADT,eAyBO,QAvBJ/b,GAAE,UAAK,EAAA8f,cAAL,OAAoB/D,EAAQ/b,IAC9B/B,IAAK8d,EAAQ/b,GACd+f,cAAY,SACXlB,YAAW,EAAAC,SACXO,cAAa,EAAAW,WAAWjE,EAAQ/b,GAAI,EAAAuP,gBACpCkQ,KAAM,EAAAQ,UAAUlE,EAAQ/b,GAAI,EAAAuP,gBAC5BmQ,eAAc,EAAAV,YACdM,kBAAiB,EAAAY,eAAenE,EAAQ/b,IACzCmgB,MAAM,Q,qBAEN,eAYQ,2BAXc,EAAAC,WAAWrE,EAAQ9Y,MAAK,cAApCod,EAAMjlB,G,wBADhB,eAYQ,SAVL6C,IAAK7C,EACL6I,EAAG,EAAAiY,SAASH,EAAQ/b,IAAM,EAAAkc,SAASH,EAAQ/b,IAAImD,SAASc,EAAC,EACzDC,EAAY,WAAS,EAAQ,IAAgB,WAAS,EAAQ,IAAI,SAAS,EAAI,EAAI,W,EAKpFoc,qBAAmB,W,eAEhBD,GAAI,gB,gHAIX,eAgBE,2BAfkB,EAAAd,UAAQ,SAAnBxD,G,wBADT,eAgBE,QAdC9d,IAAK8d,EAAQ/b,GACbiE,EAAG,EAAAiY,SAASH,EAAQ/b,IAAM,EAAAkc,SAASH,EAAQ/b,IAAImD,SAASc,EAAC,EACzDC,EAAG,EAAAgY,SAASH,EAAQ/b,IAAM,EAAAkc,SAASH,EAAQ/b,IAAImD,SAASe,EAAC,EACzD+Z,MAAO,EAAA/B,SAASH,EAAQ/b,IAAM,EAAAkc,SAASH,EAAQ/b,IAAIyO,KAAKwP,MAAK,EAC7DE,OAAQ,EAAAjC,SAASH,EAAQ/b,IAAM,EAAAkc,SAASH,EAAQ/b,IAAIyO,KAAK0P,OAAM,EAChEsB,KAAK,cACLE,eAAa,IACZ,YAAS,mBAAE,EAAA9B,UAAU9B,EAAQ/b,KAC7B,aAAU,mBAAE,EAAA8d,WAAW/B,EAAQ/b,KAC/B,QAAK,mBAAE,EAAA4d,WAAW7B,EAAQ/b,KAC1B,YAAS,mBAAE,EAAAugB,eAAexE,EAAQ/b,KACnCwf,OAAO,OACPgB,OAAO,UACPX,iBAAe,Q,0GCvCNY,GAAoB,SAC/BC,EACAC,EACAC,GAEIA,EAAc/gB,SAChB+gB,EAAcC,WAAY,EAC1BH,EAAK,iBAAkB,CACrB7gB,OAAQ+gB,EAAc/gB,OACtB4W,MAAO,CACLxS,EAAG0c,EAAMG,UACT5c,EAAGyc,EAAMI,eAMJC,GAAkB,SAC7BN,EACAE,GAEIA,EAAc/gB,SACZ+gB,EAAcC,WAChBH,EAAK,aAAc,CAAE1gB,GAAI4gB,EAAc/gB,SAEzC+gB,EAAcC,WAAY,EAC1BD,EAAc/gB,OAAS,OAIdohB,GAAiB,SAC5BC,GAEA,IAAMhF,EAAqC,GAC3C,IAAK,IAAM9gB,KAAK8lB,EAAO,CACrB,IAAM5b,EAAO4b,EAAM9lB,GACnB8gB,EAAS5W,EAAKtF,IAAM,CAClBmD,SAAUmC,EAAKpC,OACfuL,KAAM,CACJwP,MAAO,EACPE,OAAQ,IAKd,OAAOjC,GAGHiF,GAAc,yDAAG,WACrBC,EACAje,EACAoc,GAHqB,8FAKfrD,EAAW,GALI,SAQf,gBAAS,WAEb,IAAK,IAAM9gB,KAAKmkB,EAAU,CACxB,IAAMja,EAAOia,EAASnkB,GAChBimB,EAAMxE,SAASC,eAAT,UAA2BsE,GAA3B,OAA2C9b,EAAKtF,KACjD,MAAPqhB,IAGY,UAAZle,EACF+Y,EAAS5W,EAAKtF,IAAM,CAClBmD,SAAU,CACRc,EAAGqB,EAAKpC,OAAOe,EAAIod,EAAIC,wBAAwBrD,MAAQ,EACvD/Z,EAAGoB,EAAKpC,OAAOgB,EAAImd,EAAIC,wBAAwBnD,OAAS,GAE1D1P,KAAM,CACJwP,MAAOoD,EAAIC,wBAAwBrD,MACnCE,OAAQkD,EAAIC,wBAAwBnD,SAGnB,QAAZhb,IACT+Y,EAAS5W,EAAKtF,IAAM,CAClBmD,SAAU,CACRc,EAAGqB,EAAKpC,OAAOe,EAAIod,EAAIC,wBAAwBrD,MAC/C/Z,EAAGoB,EAAKpC,OAAOgB,EAAImd,EAAIC,wBAAwBnD,OAAS,GAE1D1P,KAAM,CACJwP,MAAOoD,EAAIC,wBAAwBrD,MACnCE,OAAQkD,EAAIC,wBAAwBnD,eAnCzB,gCA0CdjC,GA1Cc,2CAAH,0DA6CP,GAAgB,SAC3BkF,EACAje,EACAoc,EACAjV,GAEAA,EAAG2W,GAAe1B,EAAS5hB,QAI3B,eACE4hB,EADG,yDAEH,WAAMgC,GAAN,0GACSJ,GAAeC,EAAeje,EAAUoe,GAAKC,MAAK,SAAAhhB,GAAW,OAClE8J,EAAG9J,OAFP,2CAFG,sDAOH,CACEihB,WAAW,K,UC9IX,SAAUrB,GAAWlH,EAAcwI,GACvC,GAAIA,GAAc,EAChB,MAAO,GAET,GAAY,IAARxI,EACF,MAAO,GAET,IAAMyI,EAAQzI,EAAK0I,MAAM,KACnBC,EAAkB,GACpBC,EAAqB,GACzB,MAAOH,EAAMrmB,OACX,GAAIwmB,EAASlS,KAAK,KAAKtU,OAASomB,EAAY,CAC1C,IAAMK,EAAqB,GACvBD,EAASxmB,OAAS,GACpBymB,EAASnmB,KAAKkmB,EAASrb,OAEzBob,EAAMjmB,KAAKkmB,EAASlS,KAAK,MACzBkS,EAAWC,OAEXD,EAASlmB,KAAK+lB,EAAM5lB,SAIxB,GAAI+lB,EAASlS,KAAK,KAAKtU,OAASomB,EAAY,CAC1C,IAAM,EAAqB,GACvBI,EAASxmB,OAAS,GACpB,EAASM,KAAKkmB,EAASrb,OAEzBob,EAAMjmB,KAAKkmB,EAASlS,KAAK,MACzBkS,EAAW,EAKb,OAHIA,EAASxmB,QACXumB,EAAMjmB,KAAKkmB,EAASlS,KAAK,MAEpBiS,ECRT,IAAM/B,GAAe,SAEN,kBAAgB,CAC7B5iB,KAAM,WACN8kB,MAAO,CACL,aACA,cACA,cACA,aACA,kBAEFC,MAAO,CACLC,QAAS,CACPxP,KAAM7P,QAERsf,MAAO,CACLzP,KAAM0P,OACNC,UAAU,GAEZ9C,SAAU,CACR7M,KAAMnX,OACN8mB,UAAU,GAEZ3D,YAAa,CACXhM,KAAM0P,OACNC,UAAU,GAEZvD,SAAU,CACRpM,KAAM7P,OACNwf,UAAU,GAEZzD,UAAW,CACTlM,KAAM0P,OACNC,UAAU,GAEZrD,YAAa,CACXtM,KAAM7P,OACNwf,UAAU,GAEZ9S,eAAgB,CACdmD,KAAM0P,OACNE,UAAW,SAACC,GAAD,MACO,kBAATA,GAA8B,OAATA,GAC9BF,UAAU,GAEZ5S,4BAA6BlU,OAC7BmiB,oBAAqBniB,QAGvBihB,MA/C6B,SA+CvByF,EAAOO,GACX,IAAMjD,EAAW,eAAM0C,EAAO,YAExBxF,EAAQF,KACRkG,EAAU,OAASR,EAAMC,QACzBhG,EAAW,gBAAS,WACxB,OAAOO,EAAMtd,MAAM+c,SAAS5b,SAASmiB,MAEvC,GACE3C,GACA,SACAP,GACA,SAAC/e,GACCic,EAAMjd,OAAN,mBAAyB,EAAkBa,SAAW,CACpDE,UAAWkiB,EACXjiB,mBAQN,IAAMkiB,EAAoC,CACxC7iB,OAAQ,KACRghB,WAAW,GAEP8B,EAAY,SAAChC,GAAD,OAChBF,GAAkB+B,EAAI9B,KAAMC,EAAO+B,IAC/BE,EAAU,kBAAM5B,GAAgBwB,EAAI9B,KAAMgC,IAChD,gBAAU,WACR,IAAMhf,EAAMmZ,SAASC,eAAemF,EAAME,OACrCze,GAILA,EAAImf,iBAAiB,YAAaF,GAClCjf,EAAImf,iBAAiB,UAAWD,IAJ9BvgB,EAAW,sDAAuD,OAMtE,gBAAY,WACV,IAAMqB,EAAMmZ,SAASC,eAAemF,EAAME,OACrCze,GAILA,EAAIof,oBAAoB,YAAaH,GACrCjf,EAAIof,oBAAoB,UAAWF,IAJjCvgB,EAAW,sDAAuD,OAOtE,IAAM0gB,EAAyB,gBAAS,WACtC,IAAMrf,EAAM,GACZ,IAAKue,EAAMvE,oBACT,OAAOha,EAHkC,uBAK1Bue,EAAMvE,qBALoB,IAK3C,2BAA4C,KAAjC1d,EAAiC,QAC1C0D,EAAI1D,IAAM,GAN+B,8BAQ3C,OAAO0D,KAGT,MAAO,CACLoc,gBACA5D,WACA+D,UAAW,SAACnf,EAAgByO,GAA0B,MACpD,OAAIA,GAAkBA,GAAkBzO,GAItCmhB,EAAMxS,8BACiD,IAAvD,UAAAwS,EAAMxS,mCAAN,eAAmCrP,QAAQU,IAJpC,UAQLiiB,EAAuBplB,MAAMmD,GACxB,MAGFmhB,EAAMrD,WAEfoB,WAAY,SAAClf,EAAgByO,GAC3B,OAAIA,GAAkBA,GAAkBzO,GAGpCiiB,EAAuBplB,MAAMmD,GAFxB,OAMF,UAETof,eAAgB,SAACpf,GACf,OAAIiiB,EAAuBplB,MAAMmD,GACxB,YAGF,QAET8c,WAAY,SAAC9c,GACX0hB,EAAI9B,KAAK,cAAe,CACtB1gB,GAAIc,KAGR+c,UAAW,SAAC/c,GACV0hB,EAAI9B,KAAK,aAAc,CACrB1gB,GAAIc,KAGRgd,WAAY,SAAChd,GACX0hB,EAAI9B,KAAK,cAAe,CACtB1gB,GAAIc,KAGRyf,eAAgB,SAACvgB,GACf0iB,EAAmB7iB,OAASG,EAC5B0iB,EAAmB7B,WAAY,KAKrCmC,QAAS,CACP5C,cACAzQ,iBACAL,eACAI,yB,UChMJ,GAAOgN,OAAS,GAChB,GAAOuG,UAAY,kBAEJ,UCNTC,GAAc,CAClBnY,IAAI,GAGAoY,GAAY,WAChBD,GAAYnY,IAAK,GAEb,GAAU,WACdmY,GAAYnY,IAAK,GAGb,GAAY,SAChB2V,EACA3Q,GAEKmT,GAAYnY,IAGjB2V,EAAK,sBAAuB3Q,IAGf,IACboT,aACAP,QAAA,GACAD,UAAA,I,kKCfA,eAME,2BALe,EAAAS,iBAAe,SAAvB9d,G,wBADT,eAME,GAJCrH,IAAKqH,EAAKtF,GACViE,EAAGqB,EAAKpC,OAAOe,EACfC,EAAGoB,EAAKpC,OAAOgB,EACfkb,MAAO,EAAAA,O,uDAEV,eAeE,2BAde,EAAAgE,iBAAe,SAAvB9d,G,wBADT,eAeE,GAbC4T,KAAM5T,EAAKrC,MACXjD,GAAE,UAAK,EAAA8f,cAAL,OAAoBxa,EAAKtF,IAC3B/B,IAAKqH,EAAKtF,GACVqjB,cAAc,EACdpf,EAAG,EAAAqf,QAAQhe,EAAKtF,IAAIiE,EACpBC,EAAG,EAAAof,QAAQhe,EAAKtF,IAAIkE,EACpBqf,cAAa,EACbC,oBAAmB,GACpBzD,cAAY,SACXlB,YAAW,EAAAC,SACXO,cAAa,EAAAoE,WACbrE,MAAO,EAAAA,MACPE,kBAAiB,EAAAY,gB,+GAEpB,eAcE,2BAbe,EAAA1C,UAAQ,SAAhBlY,G,wBADT,eAcE,QAZCrH,IAAKqH,EAAKtF,GACViE,EAAG,EAAAqf,QAAQhe,EAAKtF,IAAIiE,EACpBC,EAAG,EAAAof,QAAQhe,EAAKtF,IAAIkE,EACpB+Z,MAAO,EAAA/B,SAAS5W,EAAKtF,IAAM,EAAAkc,SAAS5W,EAAKtF,IAAIyO,KAAKwP,MAAK,EACvDE,OAAQ,EAAAjC,SAAS5W,EAAKtF,IAAM,EAAAkc,SAAS5W,EAAKtF,IAAIyO,KAAK0P,OAAM,EAC1DqC,OAAO,UACPf,KAAK,cACJ,QAAK,mBAAE,EAAAiE,cAAcpe,EAAKtF,KAC1B,YAAS,mBAAE,EAAA6d,UAAUvY,EAAKtF,KAC1B,aAAU,mBAAE,EAAA8d,WAAWxY,EAAKtF,KAC7B2f,eAAa,IACbH,OAAO,Q,0IC9CT,eAOI,KAPAmE,UAAS,oBAAe,EAAA1f,EAAI,EAAA2f,MAAK,EAAxB,YAAgC,EAAA1f,EAAI,EAAA2f,OAApC,uB,CACX,eAKE,QAJCpE,KAAI,UAAK,EAAAL,OACVniB,EAAE,6T,mCCDD,IAAM2mB,GAAQ,GACRC,GAAS,GAEP,kBAAgB,CAC7B3mB,KAAM,YACN+kB,MAAO,CACLhe,EAAG,CACDyO,KAAM7P,OACNwf,UAAU,GAEZne,EAAG,CACDwO,KAAM7P,OACNwf,UAAU,GAEZjD,MAAO,CACL1M,KAAM0P,OACNC,UAAU,IAGd7F,MAhB6B,WAiB3B,MAAO,CACLoH,SACAC,cCtBN,GAAOnH,OAAS,GAED,U,0FCJb,eAiBO,QAhBJ1c,GAAI,EAAAA,GACJ+f,cAAa,EAAA+D,WACbjF,YAAW,EAAAC,SACXO,cAAa,EAAAoE,WACbhE,KAAM,EAAAL,MACPe,MAAM,Q,qBAEN,eAQQ,2BAPc,EAAA0B,OAAK,SAAjBxB,EAAMjlB,G,wBADhB,eAQQ,SANL6C,IAAK7C,EACL6I,EAAG,EAAAA,EACHC,EAAG,EAAAA,EAAC,EAAO,EAAAA,EAAI9I,EAAI,EAAA2oB,WAAU,EAC9BzD,qBAAmB,W,eAEhBD,GAAI,gB,mECZE,kBAAgB,CAC7BnjB,KAAM,aACN+kB,MAAO,CACLjiB,GAAI,CACF0S,KAAM0P,OACNC,UAAU,GAEZgB,aAAc,CACZ3Q,KAAMsR,QACN3B,UAAU,GAEZnJ,KAAM,CACJxG,KAAM0P,OACNC,UAAU,GAEZpe,EAAG,CACDyO,KAAM7P,OACNwf,UAAU,GAEZne,EAAG,CACDwO,KAAM7P,OACNwf,UAAU,GAEZ0B,WAAY,CACVrR,KAAM7P,OACNwf,UAAU,GAEZ4B,eAAgB,CACdvR,KAAM7P,OACNwf,UAAU,GAEZyB,WAAY,CACVpR,KAAM0P,OACNC,UAAU,GAEZvD,SAAU,CACRpM,KAAM7P,OACNwf,UAAU,GAEZoB,WAAY,CACV/Q,KAAM0P,OACNC,UAAU,GAEZjD,MAAO,CACL1M,KAAM0P,OACNC,UAAU,IAGd7F,MAhD6B,SAgDvByF,GACJ,IAAIJ,EAAQ,GAMZ,OAJEA,EADEI,EAAMoB,aACAjD,GAAW6B,EAAM/I,KAAM+I,EAAMgC,gBAE7B,CAAChC,EAAM/I,MAEV,CACL2I,Y,UCvDN,GAAOnF,OAAS,GAChB,GAAOuG,UAAY,kBAEJ,UCKT,GAAe,aAEN,kBAAgB,CAC7B/lB,KAAM,WACNgnB,WAAY,CAAEC,cAAYC,cAC1BpC,MAAO,CAAC,cAAe,aAAc,eACrCC,MAAO,CACLC,QAASE,OACT5E,SAAU,CACR9K,KAAMnX,OACN8mB,UAAU,GAEZ9S,eAAgB,CACdmD,KAAM0P,OACNE,UAAW,SAACC,GAAD,MACO,kBAATA,GAA8B,OAATA,GAC9BF,UAAU,GAEZjD,MAAO,CACL1M,KAAM0P,QAERqB,WAAY,CACV/Q,KAAM0P,QAERtD,SAAU,CACRpM,KAAM7P,QAERqd,eAAgB,CACdxN,KAAM0P,SAGV5F,MA7B6B,SA6BvByF,EAAOO,GACX,IAAM6B,EAAc,gBAAS,WAC3B,IADgC,EAC1BloB,EAAkC,GADR,iBAEb8lB,EAAMzE,UAFO,IAEhC,2BAAmC,KAAxBlY,EAAwB,QACjCnJ,EAAOmJ,EAAKtF,IAAMsF,GAHY,8BAKhC,OAAOnJ,KAEHinB,EAAkB,gBAAS,WAC/B,IADoC,EAC9BjnB,EAAkC,GADJ,iBAEjB8lB,EAAMzE,UAFW,IAEpC,2BAAmC,KAAxBlY,EAAwB,QAC7BA,EAAKtF,IAAMiiB,EAAM1S,iBACnBpT,EAAOmJ,EAAKtF,IAAMsF,IAJc,8BAOpC,OAAOnJ,KAGHsgB,EAAQF,KACRkG,EAAU,OAASR,EAAMC,QACzBhG,EAAW,gBAAS,kBAAMO,EAAMtd,MAAM+c,SAAS5b,SAASmiB,MAc9D,OAZA,GACE,GACA,OACA4B,GACA,SAAC7jB,GACCic,EAAMjd,OAAN,mBAAyB,EAAkBa,SAAW,CACpDE,UAAWkiB,EACXjiB,mBAKC,CACLsf,aAAA,GACAwE,kBAAA,GACAC,iBAAA,GACAnB,kBACAlH,WACAoH,QAAS,gBAAS,WAChB,IAAMkB,EAAmC,GACzC,IAAK,IAAMppB,KAAKipB,EAAY1mB,MAAO,CACjC,IAAM2H,EAAO+e,EAAY1mB,MAAMvC,GAC/BopB,EAAUlf,EAAKtF,IAAM,CACnBiE,EAAGiY,EAASve,MAAM2H,EAAKtF,IAAMkc,EAASve,MAAM2H,EAAKtF,IAAImD,SAASc,EAAI,EAClEC,EAAGgY,EAASve,MAAM2H,EAAKtF,IAAMkc,EAASve,MAAM2H,EAAKtF,IAAImD,SAASe,EAAI,GAGtE,OAAOsgB,KAETd,cAAe,SAAC7jB,GACd2iB,EAAI9B,KAAK,cAAe,CAAE1gB,GAAIH,KAEhCge,UAAW,SAAChe,GACV2iB,EAAI9B,KAAK,aAAc,CAAE1gB,GAAIH,KAE/Bie,WAAY,SAACje,GACX2iB,EAAI9B,KAAK,cAAe,CAAE1gB,GAAIH,SCnGtC,GAAO6c,OAAS,GAED,U,GCJb,eAWO,aAVL,eASS,UARP1c,GAAG,wBACHykB,YAAY,IACZC,aAAa,IACbC,KAAK,IACLC,KAAK,MACLC,OAAO,Q,CAEP,eAAoE,WAA3DpF,KAAK,UAAUD,OAAO,UAAUI,OAAO,wB,yJATpD,I,mBAYA,eAOE,2BANuB,EAAAjf,eAAa,SAA7Bkb,G,wBADT,eAOE,GALC5d,IAAK4d,EAAa7b,GACnB8kB,SAAS,oBACRnhB,KAAMkY,EAAa3Y,OACnBU,GAAI,EAAAiR,aAAa3R,OAClBkc,MAAM,W,mDAER,eAsBE,2BArBe,EAAA2F,mBAAiB,SAAzBzf,G,wBADT,eAsBE,GApBC4T,KAAM5T,EAAKrC,MACXjD,GAAE,UAAK,EAAA8f,cAAL,OAAoBxa,EAAKtF,IAC3B/B,IAAKqH,EAAKtF,GACVqjB,cAAc,EACdpf,EAAU,wBAAsB,EAAK,IAAc,wBAAsB,EAAK,IAAI,SAAS,E,EAK3FC,EAAU,wBAAsB,EAAK,IAAc,wBAAsB,EAAK,IAAI,SAAS,E,EAK3Fqf,cAAa,EACbC,oBAAmB,GACpBzD,cAAY,SACXlB,YAAW,EACZQ,cAAY,SACZD,MAAM,W,2DAER,eA8BE,2BA7Be,EAAA2F,mBAAiB,SAAzBzf,G,wBADT,eA8BE,QA5BCrH,IAAKqH,EAAKtF,GACViE,EAAU,wBAAsB,EAAK,IAAc,wBAAsB,EAAK,IAAI,SAAS,E,EAK3FC,EAAU,wBAAsB,EAAK,IAAc,wBAAsB,EAAK,IAAI,SAAS,E,EAK3F+Z,MAAc,wBAAsB,EAAK,IAAc,wBAAsB,EAAK,IAAI,KAAK,M,EAK3FE,OAAe,wBAAsB,EAAK,IAAc,wBAAsB,EAAK,IAAI,KAAK,O,EAK7FqC,OAAO,UACPf,KAAK,cACJ,QAAK,mBAAE,EAAAiE,cAAcpe,EAAKtF,KAC1B,YAAS,mBAAE,EAAAglB,aAAa1f,EAAKtF,KAC7B,aAAU,mBAAE,EAAAilB,cAAc3f,EAAKtF,KAChC2f,eAAa,IACbH,OAAO,Q,0ICxET,eAQE,QAPChP,GAAI,EAAA7M,KAAKM,EACTwM,GAAI,EAAA9M,KAAKO,EACTwM,GAAI,EAAA9M,GAAGK,EACP0M,GAAI,EAAA/M,GAAGM,EACPsb,OAAQ,EAAAJ,MACTO,eAAa,IACbuF,aAAW,+B,uCCJA,sBAAgB,CAC7BhoB,KAAM,oBACN+kB,MAAO,CACL6C,SAAU1C,OACVhD,MAAOgD,OACPze,KAAMpI,OACNqI,GAAIrI,UCPR,GAAOmhB,OAAS,GAED,UCGTyI,GAA2B,EAE3B,SAAUC,GAAgB9mB,EAAUgY,EAAcC,GACtD,MAAO,CAAEtS,EAAG3F,EAAE2F,EAAIqS,EAAOC,EAAItS,EAAGC,EAAG5F,EAAE4F,EAAIoS,EAAOC,EAAIrS,GAGhD,SAAUmhB,GACd/mB,EACAgY,EACAC,GAEA,OAAOjY,EAAEoF,KAAI,SAAA8I,GAAK,OAAI4Y,GAAgB5Y,EAAO8J,EAAMC,MAkB/C,SAAU+O,GACdjI,EACAzd,EACA2lB,EACAC,EACAjP,EACAC,GAEA,IAAK6G,GAA2B,GAAjBA,EAAO/hB,OACpB,MAAO,CAAC,GAAI,MAGd,IAAImqB,EAAoB,KAClBC,EAAeH,EAAStH,MAAQsH,EAASpH,OAC3CwH,EAAetI,EAAO,GAC1B,MAAO9hB,OAAO0X,KAAK0S,GAAcrqB,OAAQ,CAGvC,IAAK,IAAMuE,KAFX4lB,EAAoB,GAECE,EAAc,CACjC,IAAMC,EAAgBP,GACpBM,EAAa9lB,GAAQ4D,OACrB+hB,EACAjP,GAEF,GAAI9J,GAAS+J,EAAYoP,GAAgB,CACvCH,EAAoB5lB,EACpB,OAIJ,GAA0B,KAAtB4lB,EAA0B,CAE5B,IAAII,EAAUC,IACd,IAAK,IAAM,KAAUH,EAAc,CACjC,IAAMI,EAAaX,GACjBO,EAAa,GAAQziB,OACrBsiB,EACAjP,GAEIyP,EAAOliB,GAAgB,CAAEH,KAAMoiB,EAAYniB,GAAI4S,IACjDwP,EAAOH,IACTA,EAAUG,EACVP,EAAoB,IAK1B,IAAMQ,EAAsB,GAC1BZ,GAAkBM,EAAaF,GAAmBhiB,OAAQ+hB,EAAYjP,IAExE,GACErU,KAAKgkB,MAAMD,IACX/jB,KAAKgkB,MAAMR,EAAeP,IAE1B,OAA4C,MAAxCvlB,EAAW6lB,GAAmB3lB,OACzB,CAAC2lB,EAAmB,MAEtB,CAAC7lB,EAAW6lB,GAAmB3lB,OAAQE,GAAI,MAGlD,GADA2lB,EAAe,IACV/lB,EAAW6lB,GACd,MAAO,CACL,GACA,EACE,+DACA,CAAEU,mBAAoBV,EAAmB7lB,gBAP1C,uBAWeA,EAAW6lB,GAAmBngB,KAAKlC,UAXlD,IAWL,2BAAiE,KAAtDkB,EAAsD,UAC7C7B,EAAY6B,EAAMtE,GAAIqd,GADuB,sBACxDtB,EADwD,KAE/D,GAAe,MAAXA,EACF,MAAO,CACL,GACA,EAAW,mDAAoD,CAC7D,WAAYzX,EAAMtE,GAClBqd,OAAQA,KAIdsI,EAAarhB,EAAMtE,IAAM+b,GAtBtB,8BAyBL,GAAyC,IAArCxgB,OAAO0X,KAAK0S,GAAcrqB,OAC5B,MAAO,CAACmqB,EAAmB,MAKjC,MAAO,CAAC,GAAI,EAAW,sCAAuC,KAY1D,SAAUW,GACd/I,EACAzd,EACA4P,GAEA,IAAK6N,IAAWA,EAAO/hB,OACrB,MAAO,CAAC,GAAI,MAEd,IAAM+qB,EAAe,GALA,EAQQ5jB,EAAY+M,EAAe6N,GARnC,sBAQdiJ,EARc,KAQD3jB,EARC,KASrB,GAAmB,MAAf2jB,GAAgC,MAAT3jB,EACzB,MAAO,CACL,GACA,EAAW,yDAA0D,CACnE6M,gBACA6N,YAMN,IAAMkJ,EAAsC,GAC5C,GAAyC,MAArC3mB,EAAW0mB,EAAYtmB,IAAIF,OAC7BymB,EAAWD,EAAYtmB,IAAMoC,EAAMkkB,OAC9B,wBACe1mB,EAAW0mB,EAAYtmB,IAAIF,OAAQsD,UADlD,IACL,2BAAiE,KAAtDkB,EAAsD,UAC1C7B,EAAY6B,EAAMtE,GAAI,CAACqd,EAAO1a,KADY,sBACxDoZ,EADwD,KAC/Cjf,EAD+C,KAE/D,GAAe,MAAXif,GAAyB,OAANjf,EACrB,MAAO,CACL,GACA,EAAW,wDAAyD,CAClE,WAAYwH,EAAMtE,GAClB2C,QACA0a,OAAQ,CAACA,EAAO1a,OAItB4jB,EAAWjiB,EAAMtE,IAAMoC,EAAM2Z,GAC7BwK,EAAWjiB,EAAMtE,IAAIiD,MAAQ,IAd1B,+BAiBPojB,EAAazqB,KAAK2qB,GAGlB,IAAMC,EAAsC,GAC5C,IAAK,IAAM3mB,KAAU0mB,EAAY,wBACX3mB,EAAWC,GAAQyF,KAAKlC,UADb,IAC/B,2BAAsD,KAA3C,EAA2C,UAC/BX,EAAY,EAAMzC,GAAI,CAACqd,EAAO1a,EAAQ,KADP,sBAC7C,EAD6C,KACpC,EADoC,KAEpD,GAAe,MAAX,GAAyB,OAAN,EACrB,MAAO,CACL,GACA,EAAW,wDAAyD,CAClE,WAAY,EAAM3C,GAClBqd,OAAQ,CAACA,EAAO1a,EAAQ,OAI1B9C,GAAU2P,GACZgX,EAAW,EAAMxmB,IAAMoC,EAAM,GAC7BokB,EAAW,EAAMxmB,IAAIiD,MAAQ,IAE7BujB,EAAW,EAAMxmB,IAAMoC,EAAM,IAhBF,+BAqB7B7G,OAAO0X,KAAKuT,GAAYlrB,OAAS,GACnC+qB,EAAazqB,KAAK4qB,GAIpB,IAtEqB,EAsEfC,EAAuC,GAtExB,iBAwED7mB,EAAW4P,GAAelK,KAAKlC,UAxE9B,IAwErB,2BAA6D,OAAlD,EAAkD,yBAChCxD,EAAW,EAAMI,IAAIsF,KAAKlC,UADM,IAC3D,2BAA+D,KAApDsjB,EAAoD,UACxCjkB,EAAYikB,EAAa1mB,GAAI,CAACqd,EAAO1a,EAAQ,KADL,sBACtD,EADsD,KAC7C,EAD6C,KAE7D,GAAe,MAAX,GAAyB,OAAN,EACrB,MAAO,CACL,GACA,EAAW,yDAA0D,CACnE,WAAY,EAAM3C,GAClBqd,OAAQ,CAACA,EAAO1a,EAAQ,OAI9B8jB,EAAYC,EAAa1mB,IAAMoC,EAAM,IAZoB,gCAxExC,8BAwFjB7G,OAAO0X,KAAKwT,GAAanrB,OAAS,GACpC+qB,EAAazqB,KAAK6qB,GAIpB,IAAME,EAAsC,GAC5C,IAAK,IAAM,KAAUF,EAAa,wBACZ7mB,EAAW,GAAQ0F,KAAKlC,UADZ,IAChC,2BAAsD,KAA3C,EAA2C,UAC/BX,EAAY,EAAMzC,GAAI,CAACqd,EAAO1a,EAAQ,KADP,sBAC7C,EAD6C,KACpC,EADoC,KAEpD,GAAe,MAAX,GAAyB,OAAN,EACrB,MAAO,CACL,GACA,EAAW,qDAAsD,CAC/D,WAAY,EAAM3C,GAClB2C,MAAOA,EAAQ,EACf0a,OAAQ,CAACA,EAAO1a,EAAQ,OAI9BgkB,EAAW,EAAM3mB,IAAMoC,EAAM,GAC7BukB,EAAW,EAAM3mB,IAAIiD,MAAQ,IAdC,+BAsBlC,OAJI1H,OAAO0X,KAAK0T,GAAYrrB,OAAS,GACnC+qB,EAAazqB,KAAK+qB,GAGb,CAACN,EAAc,MAGlB,SAAUO,GACdvJ,EACA/G,EACAC,GAEA,IAAK8G,GAA2B,GAAjBA,EAAO/hB,OACpB,MAAO,GAHC,uBAKU+hB,GALV,IAKV,2BAA4B,KAAjBza,EAAiB,QAC1B,IAAK,IAAM5C,KAAM4C,EAAO,CACtB,IAAM0C,EAAO1C,EAAM5C,GACnBsF,EAAKpC,OAASkiB,GAAgB9f,EAAKpC,OAAQoT,EAAMC,GACjDjR,EAAK7B,OAAS4hB,GAAkB/f,EAAK7B,OAAQ6S,EAAMC,KAT7C,8BAaV,OAAO8G,ECxQT,IAAM,GAAe,sBAEN,kBAAgB,CAC7BngB,KAAM,oBACN8kB,MAAO,CAAC,aAAc,cAAe,eACrCkC,WAAY,CAAEC,cAAY0C,sBAC1B5E,MAAO,CACLC,QAASE,OACT7S,eAAgB6S,OAChBjD,gBAAiB5jB,QAEnBihB,MAT6B,SASvByF,EAAOO,GACX,IAAM/F,EAAQF,KACRuK,EAAerK,EAAMtd,MAAMid,QAK3BvH,EAAe,gBAAS,WAC5B,GAAIoN,EAAM1S,gBAAkBkN,EAAMtd,MAAMQ,KAAK+C,cAAe,OACxCD,EAChBwf,EAAM1S,eACNkN,EAAMtd,MAAMQ,KAAK+C,eAHuC,sBACnDqZ,EADmD,KAK1D,IAAKA,EACH,OAAO,KAET,IAAMgL,EAA2B3kB,EAAM2Z,GAMvC,OALAgL,EAAyB7jB,OAASkiB,GAChC2B,EAAyB7jB,OACzB4jB,EAAaxQ,KACbwQ,EAAavQ,KAERwQ,EAEP,OAAO,QAOLpmB,EAAgB,eAA6B,IAC7CokB,EAAoB,eAA6B,IAEjDtC,EAAU,eACVuE,EAAwB,gBAC5B,kBAAMvK,EAAMtd,MAAM+c,SAAS5b,SAASmiB,MAoDtC,OAlDA,GACE,GACA,OACAsC,GACA,SAACvkB,GACCic,EAAMjd,OAAN,mBAAyB,EAAkBa,SAAW,CACpDE,UAAWkiB,EACXjiB,mBAKN,gBAAY,WAAK,MAGf,GAFAG,EAAchD,MAAQ,GACtBonB,EAAkBpnB,MAAQ,GAExBskB,EAAM1S,gBACNkN,EAAMtd,MAAM0c,aAAalb,cAAcshB,EAAM1S,iBAC7CkN,EAAMtd,MAAMQ,KAAK+C,cACjB,CACA,IADA,EACMwe,EAAQ9e,EACZU,EACE2Z,EAAMtd,MAAM0c,aAAalb,cAAcshB,EAAM1S,gBAC7CkN,EAAMtd,MAAMQ,KAAK+C,gBAJrB,iBAOmBwe,GAPnB,IAOA,2BAA0B,KAAf5b,EAAe,QACxBA,EAAKpC,OAASkiB,GACZ9f,EAAKpC,OACL4jB,EAAaxQ,KACbwQ,EAAavQ,KAEf5V,EAAchD,MAAM2H,EAAKtF,IAAMsF,GAbjC,+BAgBF,IAAK,IAAMtF,KAAMW,EAAchD,MAAO,QACO,IAAvC,UAAAskB,EAAM9C,uBAAN,eAAuB/e,QAAQJ,MACjC+kB,EAAkBpnB,MAAMqC,GAAMW,EAAchD,MAAMqC,IAIpDiiB,EAAM1S,gBACNsF,EAAalX,OACb8e,EAAMtd,MAAMQ,KAAK+C,gBACwC,IAAzD,UAAAuf,EAAM9C,uBAAN,eAAuB/e,QAAQ6hB,EAAM1S,mBAErCwV,EAAkBpnB,MAAMskB,EAAM1S,gBAAkBsF,EAAalX,UAI1D,CACLmiB,aAAA,GACAjL,eACAlU,gBACAokB,oBACAiC,wBACAtD,cAAe,SAAC7jB,GACd2iB,EAAI9B,KAAK,cAAe,CAAE1gB,GAAIH,KAEhCmlB,aAAc,SAACnlB,GACb2iB,EAAI9B,KAAK,aAAc,CAAE1gB,GAAIH,KAE/BolB,cAAe,SAACplB,GACd2iB,EAAI9B,KAAK,cAAe,CAAE1gB,GAAIH,SCzHtC,GAAO6c,OAAS,GAED,UCQT2B,GAAQ,QAEC,kBAAgB,CAC7BnhB,KAAM,MACN8kB,MAAO,CACL,iBACA,cACA,aACA,cACA,sBACA,SAEFkC,WAAY,CACV+C,qBACAC,YACAC,aAEFlF,MAAO,CACL5E,OAAQ9hB,OACRgU,eAAgB,CACdmD,KAAM0P,QAAU,KAChBE,UAAW,SAACC,GAAD,MACO,kBAATA,GAA8B,OAATA,GAC9BF,UAAU,GAEZ5S,4BAA6BlU,OAC7BiiB,SAAUjiB,OACVkiB,qBAAsBliB,OACtBmiB,oBAAqBniB,QAEvBihB,MA5B6B,SA4BvByF,EAAOO,GAyFX,OAxFA,gBAAU,WACR,IAAM9e,EAAMmZ,SAASC,eAAeuB,IACpC,GAAK3a,EAAL,CAKAA,EAAImf,iBAAiB,aAAa,SAAAlC,GAChC,GAAIwC,eAENzf,EAAImf,iBAAiB,WAAW,SAAAlC,GAC9B,GAAIiC,aAENlf,EAAImf,iBAAiB,aAAa,SAAAlC,GAChC,GAAIgC,UAAUH,EAAI9B,KAAM,CACtB/c,KAAM,CACJM,EAAG0c,EAAMyG,QAAUzG,EAAMG,UACzB5c,EAAGyc,EAAM0G,QAAU1G,EAAMI,WAE3Bnd,GAAI,CAAEK,EAAG0c,EAAMyG,QAASljB,EAAGyc,EAAM0G,cAKrC3jB,EAAImf,iBACF,SACA,SAAAlC,GACE6B,EAAI9B,KAAK,QAAS,CAChBjK,MAAOkK,EAAM2G,OACbpkB,OAAQ,CAAEe,EAAG0c,EAAMyG,QAASljB,EAAGyc,EAAM0G,aAGzC,CAAEE,SAAS,IAGb,IAAIC,EAAW1B,IACT2B,EAAY,CAAExjB,EAAG6hB,IAAU5hB,EAAG4hB,KACpCpiB,EAAImf,iBACF,cACA,SAAAlC,GACE,GAAIwC,cAEN,CAAEoE,SAAS,IAEb7jB,EAAImf,iBAAiB,YAAY,SAAAlC,GAC/B6G,EAAW1B,IACX2B,EAAUxjB,EAAI6hB,IACd2B,EAAUvjB,EAAI4hB,IACd,GAAIlD,aAINlf,EAAImf,iBACF,aACA,SAAAha,GACE,GAAyB,IAArBA,EAAE6e,QAAQpsB,OACRmsB,EAAUxjB,GAAK6hB,KAAY2B,EAAUvjB,GAAK4hB,KAC5C,GAAInD,UAAUH,EAAI9B,KAAM,CACtB/c,KAAM8jB,EACN7jB,GAAI,CAAEK,EAAG4E,EAAE6e,QAAQ,GAAGN,QAASljB,EAAG2E,EAAE6e,QAAQ,GAAGL,WAGnDI,EAAUxjB,EAAI4E,EAAE6e,QAAQ,GAAGN,QAC3BK,EAAUvjB,EAAI2E,EAAE6e,QAAQ,GAAGL,aACtB,GAAyB,IAArBxe,EAAE6e,QAAQpsB,OAAc,CACjC,IAAImb,EAAQ,EACNuP,EAAO9jB,KAAKylB,MAChB9e,EAAE6e,QAAQ,GAAGE,MAAQ/e,EAAE6e,QAAQ,GAAGE,MAClC/e,EAAE6e,QAAQ,GAAGG,MAAQhf,EAAE6e,QAAQ,GAAGG,OAEhCL,IAAa1B,MACfrP,EAAQ+Q,EAAWxB,GAErBwB,EAAWxB,EAEXxD,EAAI9B,KAAK,QAAS,CAChBjK,MAAOA,EACPvT,OAAQ,CACNe,GAAI4E,EAAE6e,QAAQ,GAAGE,MAAQ/e,EAAE6e,QAAQ,GAAGE,OAAS,EAC/C1jB,GAAI2E,EAAE6e,QAAQ,GAAGG,MAAQhf,EAAE6e,QAAQ,GAAGG,OAAS,QAKvD,CAAEN,SAAS,SAjFXllB,EAAW,iDAAkD,OAqF1D,CACL6b,SAAU1f,OAAOyI,WAEjBmX,UAAW,IAAO5f,OAAO2I,YACzBgY,gBAAiB,gBAAS,WACxB,IAAK8C,EAAM5E,OACT,MAAO,GAET,IAJ6B,EAIvBta,EAAM,GAJiB,iBAKTkf,EAAM5E,QALG,IAK7B,2BAAkC,KAAvBza,EAAuB,QAChC,IAAK,IAAMklB,KAAOllB,EACQ,IAApBA,EAAMklB,GAAK7kB,OACbF,EAAInH,KAAKksB,IARc,8BAY7B,OAAO/kB,KAETmc,aAAc,SAACrW,GACb2Z,EAAI9B,KAAK,iBAAkB,CACzB1gB,GAAI6I,EAAEhJ,OACN4W,MAAO5N,EAAE4N,SAGbmH,WAAY,SAAC/U,GACX2Z,EAAI9B,KAAK,cAAe,CAAE1gB,GAAI6I,EAAE7I,MAElC6d,UAAW,SAAChV,GACV2Z,EAAI9B,KAAK,aAAc,CAAE1gB,GAAI6I,EAAE7I,MAEjC8d,WAAY,SAACjV,GACX2Z,EAAI9B,KAAK,cAAe,CAAE1gB,GAAI6I,EAAE7I,MAElCqe,MAAOA,GACPS,SAAU,SAAC3e,GACT,IAAI4nB,EAAO,EACLC,EAAqC,CACzCC,EAAG,EACHC,EAAG,GACHC,EAAG,GACHC,EAAG,IAQL,OANInG,EAAM5E,OAAQ/hB,QAAU,IAC1BysB,EAAOC,EAAW7nB,IAEQ,GAAxB8hB,EAAM5E,OAAQ/hB,SAChBysB,EAAOC,EAAW7nB,EAAQ,IAErB4nB,GAET/I,YAAa,SAAC7e,GACZ,IAAI8I,EAAM,EACJ+e,EAAqC,CACzCC,EAAG,EACHC,EAAG,EACHC,EAAG,GACHC,EAAG,GAQL,OANInG,EAAM5E,OAAQ/hB,QAAU,IAC1B2N,EAAM+e,EAAW7nB,IAES,GAAxB8hB,EAAM5E,OAAQ/hB,SAChB2N,EAAM+e,EAAW7nB,EAAQ,IAEpB8I,GAET2V,UAAW,SAACze,GACV,OAAI8hB,EAAM5E,OAAQ/hB,QAAU,EAC1B,cAAc,IAAM,IAAM6E,EAA1B,YAAmC,IAAM,IAAMA,EAA/C,YAAwD,IACtD,IAAMA,EADR,KAG0B,GAAxB8hB,EAAM5E,OAAQ/hB,OAChB,cAAc,IAAM,KAAO6E,EAAQ,GAAnC,YAAyC,IACvC,KAAOA,EAAQ,GADjB,YACuB,IAAM,KAAOA,EAAQ,GAD5C,KAGK,IAETue,YAAa,SAACve,GACZ,IAAIif,EAAQ,EACNiJ,EAAsC,CAC1CJ,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IAQL,OANInG,EAAM5E,OAAQ/hB,QAAU,IAC1B8jB,EAAQiJ,EAAYloB,IAEM,GAAxB8hB,EAAM5E,OAAQ/hB,SAChB8jB,EAAQiJ,EAAYloB,EAAQ,IAE9B,cAAcif,EAAd,YAAuBA,EAAvB,YAAgCA,EAAhC,UC5NR,GAAO1C,OAAS,GAED,U,6PCJoByD,MAAM,W,IAChCA,MAAM,W,GACT,eAIE,OAHA7B,MAAA,mEACAgK,IAAI,UACJC,IAAA,M,aAIGpI,MAAM,kB,GACT,eAEM,OAFDA,MAAM,YAAU,CACnB,eAAiC,OAA5B7B,MAAA,qB,OAEF6B,MAAM,Y,IAMNA,MAAM,W,IAGNA,MAAM,Y,IAURA,MAAM,kB,IACJA,MAAM,oB,IAcRA,MAAM,kB,GACT,eAEM,OAFDA,MAAM,oBAAmB,cAE9B,G,IACKA,MAAM,W,GAcb,eAIM,OAJDA,MAAM,kBAAgB,CACzB,eAEM,OAFDA,MAAM,oBAAmB,e,aAUxBA,MAAM,W,GAChB,eAgGM,OAhGDA,MAAM,WAAS,CAClB,eA8FM,OA9FDA,MAAM,kBAAgB,CACzB,eAEM,OAFDA,MAAM,YAAU,CACnB,eAAiC,OAA5B7B,MAAA,oBAEP,eAIM,OAJD6B,MAAM,YAAU,CACnB,eAEM,OAFDA,MAAM,SAAQ,sDAIrB,eAUM,OAVDA,MAAM,YAAU,CACnB,eAQU,UAPRlC,MAAM,OACNE,OAAO,QACPoK,IAAI,gEACJtlB,MAAM,uBACNulB,YAAY,IACZC,MAAM,sGACNC,gBAAA,OAGJ,eAMM,OANDvI,MAAM,gBAAc,CACvB,eAIE,OAHAmI,IAAI,OACJC,IAAA,KACAjK,MAAA,mBAGJ,eAEM,OAFD6B,MAAM,iBAAgB,yBAG3B,eAMM,OANDA,MAAM,gBAAc,CACvB,eAIE,OAHAmI,IAAI,OACJC,IAAA,KACAjK,MAAA,mBAGJ,eAGM,OAHD6B,MAAM,iBAAgB,+GAI3B,eAMM,OANDA,MAAM,gBAAc,CACvB,eAIE,OAHAmI,IAAI,OACJC,IAAA,KACAjK,MAAA,mBAGJ,eAGM,OAHD6B,MAAM,iBAAe,C,eAAC,SACrB,eAAiB,SAAd,c,eAAc,oFAGvB,eAMM,OANDA,MAAM,gBAAc,CACvB,eAIE,OAHAmI,IAAI,OACJC,IAAA,KACAjK,MAAA,mBAGJ,eAEM,OAFD6B,MAAM,iBAAgB,uCAG3B,eAMM,OANDA,MAAM,gBAAc,CACvB,eAIE,OAHAmI,IAAI,OACJC,IAAA,KACAjK,MAAA,mBAGJ,eAGM,OAHD6B,MAAM,iBAAgB,+HAI3B,eAMM,OANDA,MAAM,gBAAc,CACvB,eAIE,OAHAmI,IAAI,OACJC,IAAA,KACAjK,MAAA,mBAGJ,eAOM,OAPD6B,MAAM,iBAAe,C,eAAC,0DAEzB,eAIC,KAHCwI,OAAO,SACPC,KAAK,wEACJ,UAGL,eAKM,OALDzI,MAAM,iBAAe,CACxB,eAGC,SAFE,2G,gUAxKA,EAAA/C,MAAQ,EAAAvI,c,iBAAnB,eA2EM,MA3EN,GA2EM,CA1EJ,eAyEM,MAzEN,GAyEM,CAxEJ,GAOA,eAoBM,MApBN,GAoBM,CAnBJ,GAGA,eAKM,MALN,GAKM,CAJJ,eAGE,GAFC0D,QAAS,EAAAsQ,oBAAsB,EAAAhU,aAAa5R,MAAK,GACjD,iBAAe,+BAAE,EAAA6lB,gBAAgBC,M,sBAGtC,eAEM,MAFN,GAEM,CADJ,eAAa,KAEf,eAMM,MANN,GAMM,CALJ,eAIE,GAHCxQ,QAAS,EAAAsQ,oBAAsB,EAAAA,oBAAoBtQ,QAAO,GAC1DyQ,KAAM,GACN,iBAAe,+BAAE,EAAAC,cAAcF,M,wBAMtC,eAYM,MAZN,GAYM,CAXJ,eAUM,MAVN,GAUM,CATJ,eAQE,GAPA/oB,GAAG,UACHkpB,YAAY,mCACXC,YAAY,EACbH,KAAK,IACJrrB,MAAO,EAAAyrB,oBACP,sBAAiB,+BAAE,EAAAC,cAAcN,KAC7B,UAAS,EAAAO,iB,kCAMpB,eAWM,MAXN,GAWM,CAVJ,GAGA,eAMM,MANN,GAMM,CALJ,eAIE,GAHCrM,eAAgB,EAAAA,eAChB,yBAAyB,+BAAE,EAAAsM,MAAK,+BAChC,0BAA0B,+BAAE,EAAAA,MAAK,iC,+BAKhC,EAAAV,qB,iBADR,eAGE,G,MADCW,UAAS,EAAA3U,aAAa7U,I,2CAIzB,GAKqB,EAAA6oB,qB,iBAArB,eAAuE,G,MAA5BW,UAAS,EAAA3U,aAAa7U,I,2CAGjE,eAAwC,GAA5BwpB,UAAS,EAAA3U,aAAa7U,I,2CAGtC,eAkGM,MAlGN,GAkGM,CAjGJ,S,iBCxEKmgB,MAAM,Y,IACJA,MAAM,U,IAIJA,MAAM,W,sFAVjB,eAeM,2BAdmB,EAAAxf,eAAa,SAA7Bkb,G,wBADT,eAeM,OAbJsE,MAAM,SACLliB,IAAK4d,EAAa7b,I,CAEnB,eASM,MATN,GASM,CARJ,eAOM,MAPN,GAOM,CANJ,eAEM,OAFAmgB,MAAK,mBAAc,EAAAsJ,OAAOxmB,Q,CAC9B,eAAuD,KAAnD2lB,KAAM/M,EAAa7b,I,eAAO6b,EAAa5Y,OAAK,a,GAElD,eAEM,MAFN,GAEM,CADJ,eAA+C,GAAlC,QAAK,mBAAE,EAAAymB,OAAO7N,EAAa7b,M,6KCNxBmgB,MAAM,U,GAC1B,eAIE,OAHA7B,MAAA,gBACAgK,IAAI,UACJC,IAAA,M,mBAGQpI,MAAM,U,GAChB,eAIE,OAHA7B,MAAA,gBACAgK,IAAI,SACJC,IAAA,M,mFAhBN,eAmBM,OAlBJjK,MAAA,mBACC,aAAU,+BAAE,EAAAqL,WAAS,IACrB,aAAU,+BAAE,EAAAA,WAAS,K,CAEX,EAAAA,W,iBAAX,eAMM,MANN,GAMM,CALJ,O,iBAMF,eAMM,MANN,GAMM,CALJ,O,OAYS,IACbzsB,KAAM,aACNsf,MAFa,WAGX,IAAMmN,EAAY,gBAAI,GACtB,MAAO,CACLA,e,UC1BN,GAAOjN,OAAS,GAChB,GAAOuG,UAAY,kBAEJ,UCDA,kBAAgB,CAC7B/lB,KAAM,gBACN+kB,MAAO,CACLpiB,OAAQ,CACN6S,KAAM0P,OACNC,UAAU,IAGd6B,WAAY,CACV0F,eAEFpN,MAX6B,SAWvByF,GACJ,IAAMxF,EAAQF,KACR5b,EAAgB,eAAiB,IAavC,OAZA,gBAAY,WAEV,GADAA,EAAchD,MAAQ,GAEpBskB,EAAMpiB,QACN4c,EAAMtd,MAAM0c,aAAalb,cAAcshB,EAAMpiB,QAC7C,wBACiB4c,EAAMtd,MAAM0c,aAAalb,cAAcshB,EAAMpiB,SAD9D,IACA,2BAAuE,KAA5DG,EAA4D,QACrEW,EAAchD,MAAM/B,KAAK6gB,EAAMtd,MAAMQ,KAAKC,WAAWI,GAAIsF,OAF3D,mCAOG,CACL3E,gBACA+oB,OAAQ,SAAC1pB,GACP,IAAM1B,EAAIme,EAAMtd,MAAM0c,aAAalb,cAAcshB,EAAMpiB,QAClDvB,IAGiB,GAAlBA,EAAE8B,QAAQJ,KAGd1B,EAAE9B,OAAO8B,EAAE8B,QAAQJ,GAAK,GACxBoM,GAAIlC,kBAAkBuS,EAAMtd,MAAMgK,KAAKA,KAAM,CAC3CtJ,OAAQoiB,EAAMpiB,OACduK,gBAAiB9L,U,aC1C3B,MAAMurB,GAAa,GAAOC,aAAe,GAEzCD,GAAW,UAAY,cACvB,GAAOnN,OAAS,GAED,U,ICPNyD,MAAM,Y,IACJA,MAAM,U,IACJA,MAAM,Y,mDAHjB,eAQM,2BARoB,EAAA4J,QAAM,SAApBC,G,wBAAZ,eAQM,OAR4B7J,MAAM,SAAUliB,IAAK+rB,EAAWhqB,I,CAChE,eAMM,MANN,GAMM,CALJ,eAIM,MAJN,GAIM,CAHJ,eAEM,MAFN,GAEM,CADJ,eAAmD,KAA/C4oB,KAAMoB,EAAWhqB,I,eAAOgqB,EAAW/mB,OAAK,uB,KCAvC,sBAAgB,CAC7B/F,KAAM,SACN+kB,MAAO,CACLpiB,OAAQuiB,QAEV5F,MAL6B,SAKvByF,GACJ,IAAMxF,EAAQF,KACRwN,EAAS,eAAiB,IAchC,OAbA,gBAAY,WAEV,GADAA,EAAOpsB,MAAQ,GACXskB,EAAMpiB,QAAU4c,EAAMtd,MAAM0c,aAAajb,aAAaqhB,EAAMpiB,QAAS,wBACtD4c,EAAMtd,MAAM0c,aAAajb,aAAaqhB,EAAMpiB,SADU,IACvE,2BAAsE,KAA3DG,EAA2D,QAC/Dyc,EAAMtd,MAAMQ,KAAKC,WAAWI,GAG/B+pB,EAAOpsB,MAAM/B,KAAK6gB,EAAMtd,MAAMQ,KAAKC,WAAWI,GAAIsF,MAFlD/C,QAAQgJ,IAAI,uCAAwCvL,IAHe,mCAWpE,CACL+pB,aCxBN,GAAOrN,OAAS,GAED,U,kJCJb,eAKE,KAHA,UAAQ,EAAAuN,gBACP,QAAK,+BAAE,EAAAC,WAAS,KACjB/J,MAAM,mB,gCAHG,EAAAgK,UAKX,eAQE,YAPAhK,MAAM,+EACN7B,MAAA,iBACAzX,IAAI,UACHmiB,KAAM,EAAAA,KACNrrB,MAAO,EAAA4a,QACP,QAAK,+BAAE,EAAA0Q,cAAcF,EAAOJ,OAAOhrB,SACnC,WAAQ,+BAAE,EAAAusB,WAAS,M,gFCXlBE,GAAU,EAAQ,QAClBC,GAAW,EAAQ,QACnBC,GAAc,EAAQ,QACtBC,GAAK,IAAI,KACfA,GAAGC,IAAIJ,GAAS,CAAEK,OAAQ,SACvBD,IAAIH,IACJG,IAAIF,GAAa,UAAW,CAC3BI,SAAU,SAASpiB,GAEjB,OADA/F,QAAQgJ,IAAI,WAAYjD,EAAOqiB,OAAyB,WAAjBriB,EAAOqiB,QACvCriB,EAAOqiB,OAAOC,MAAM,cAE7BlO,OAAQ,SAASmO,EAAa/C,GAC5B,IAAM/qB,EAAI8tB,EAAO/C,GAAKgD,KAAKH,OAAOC,MAAM,iBACxC,OAA4B,IAAxBC,EAAO/C,GAAKiD,QAGZ,yDACAR,GAAGS,MAAMC,WAAWluB,EAAE,IACtB,KAIK,cAKA,QACbG,KAAM,WACN8kB,MAAO,CAAC,mBACRC,MAAO,CACL1J,QAAS,CACP7F,KAAM0P,OACNC,UAAU,GAEZ2G,KAAM,CACJtW,KAAM7P,OACNwf,UAAU,IAGd7F,MAba,SAaPyF,EAAYO,GAChB,IAAMyH,EAAkB,gBAAS,WAC/B,OAAOM,GAAG7N,OAAOuF,EAAM1J,YAEnB4R,EAAS,gBAAI,GAEbe,EAAU,eAA2B,MAE3C,MAAO,CACLf,SACAe,UACAhB,UAAW,SAACjhB,GACVkhB,EAAOxsB,MAAQsL,EACXA,GAAOiiB,EAAQvtB,QACjButB,EAAQvtB,MAAM2gB,MAAM6M,QAAU,QAC9BD,EAAQvtB,MAAMytB,UAEXniB,GAAOiiB,EAAQvtB,QAClButB,EAAQvtB,MAAM2gB,MAAM6M,QAAU,SAGlClB,kBACAhB,cAAe,SAACtrB,GACd6kB,EAAI9B,KAAK,kBAAmB/iB,O,UC7DpC,GAAO+e,OAAS,GAChB,GAAOuG,UAAY,kBAEJ,U,qBCUC9C,MAAM,O,0MAjBpB,eAIE,GAHC/C,KAAM,EAAAiO,qBACNC,mBAAoB,EAAAA,mBACpB,OAAI,+BAAE,EAAAD,sBAAoB,K,sCAE7B,eAsCW,GArCTE,OAAO,aACNC,YAAY,EACZC,UAAW,EAAAA,UACX,qBAAgB,+BAAE,EAAAC,OAAO3C,KACzB4C,GAAI,C,uDAIL,iBAEM,CAFM,EAAAC,c,iBAGZ,eAyBM,MAzBN,GAyBM,E,mBAxBJ,eAuBO,2BAvBoB,EAAAC,SAAO,SAApBlL,EAAOvlB,G,wBAArB,eAuBO,GAvB8B6C,IAAK7C,EAAG+kB,MAAM,Q,gBACtCld,MAAK,gBACd,iBAAoD,C,kCAA7C3B,KAAKqf,EAAMmL,WAAWC,sBAAuB,IACpD,mBAAOzqB,KAAKqf,EAAMmL,WAAWE,sBAAuB,MACpD,eAAGrL,EAAMsL,QAAS,WACpB,OACWC,SAAQ,gBACjB,iBAIE,C,8BAHEvL,EAAMwL,gBAAgC,EAAM,gB,kBAA2C,EAAM,SAG/F,MACA,kBAAiE,KAA9DvD,KAAK,IAAK,QAAK,mBAAE,EAAAwD,aAAazL,EAAM0L,eAAc,WAAQ,mB,MAExC1L,EAAMsL,QAAU,EAAAK,WAAWC,K,MAAzC,U,mBACT,iBAAmB,C,8BAAhB5L,EAAM6L,SAAO,QAEY7L,EAAMsL,QAAU,EAAAK,WAAWG,Q,MAA9C,U,mBACT,iBAAmD,CAAnD,eAAmD,GAAxClU,QAASoI,EAAM+L,WAAa1D,KAAM,I,yBAEjBrI,EAAMsL,QAAU,EAAAK,WAAWK,a,MAA9C,U,mBACT,iBAAkC,CAAlC,eAAkC,OAA7B,UAAQ,EAAAC,WAAWjM,I,wEAzB9B,eAEM,SAFoB,yC,+BCflB,G,0BCmBL,SAAekM,GAAtB,uC,gEAAO,WACLvtB,EACA+B,EACAiJ,GAHK,gGAKCwiB,EAAgB,GAClBzrB,EAAQ/F,QACVwxB,EAAclxB,KAAK,eAAM,UAAW,KAAMyF,IAExC/B,EAAQhE,QACVwxB,EAAclxB,KAAK,eAAM,SAAU,KAAM0D,IAErCytB,EAAI,eACR,eAAW,iBAAgB,WAC3B,OAAG,WAAH,EAAOD,GACP,eAAQ,YAAa,SAflB,kBAkBE,eAAWC,GAAG,SAAAhkB,GACnB,IAAMikB,EAAa,GACnBjkB,EAAS9C,SAAQ,SAAAgnB,GACfD,EAAWpxB,KAAK,CACdywB,YAAaY,EAAIjtB,GACjBc,OAAQmsB,EAAI1vB,IAAI,WAChB6N,OAAQ6hB,EAAI1vB,IAAI,WAChBuuB,UAAWmB,EAAI1vB,IAAI,aACnB0uB,OAAQgB,EAAI1vB,IAAI,UAChB2vB,WAAY,CACVvvB,MAAOsvB,EAAI1vB,IAAI,oBACf4vB,YAAaF,EAAI1vB,IAAI,0BACrB6vB,WAAYH,EAAI1vB,IAAI,yBACpB8vB,MAAOJ,EAAI1vB,IAAI,oBACf+vB,QAASL,EAAI1vB,IAAI,4BAIvB+M,EAAG0iB,OApCA,2C,yBA2CA,SAAeO,GAAtB,mC,gEAAO,WACLzsB,GADK,kGAGC0sB,EAAW,GAHZ,SAIY,OACd5mB,WACAC,IAFc,cAEH/F,EAFG,UAGdvD,MAPE,UAICkO,EAJD,QAQDA,EAAGzC,SARF,gBASHwkB,EAAS,OAAD,OAAQ1sB,IAAY2K,EAAGxC,MAT5B,wCAWmB,OACnBrC,WACAC,IAFmB,gBAEN/F,EAFM,cAGnBvD,MAdA,QAWGkwB,EAXH,OAeCA,EAAQzkB,WACVwkB,EAAS,SAAD,OAAU1sB,IAAY2sB,EAAQxkB,OAhBrC,iCAoBEukB,GApBF,4C,yBA0BA,SAAeE,GAAtB,mC,gEAAO,WACLtiB,GADK,gGAGCuiB,EAAW,GAHZ,SAIY,OACd/mB,WACAC,IAFc,2BAEUuE,EAFV,iBAGd7N,MAPE,cAICkO,EAJD,OAQDA,EAAGzC,WACL2kB,EAAS,GAAD,OAAIviB,IAAYK,EAAGxC,OATxB,kBAWE0kB,GAXF,2C,yBAcA,SAAeC,GAAtB,mC,gEAAO,WACLC,GADK,uGAGCC,EAAU,GAHX,iBAIgBD,GAJhB,IAIL,2BAAWziB,EAAmB,QAC5B0iB,EAAQlyB,KAAK8xB,GAAmBtiB,IAL7B,8CAOmB2iB,QAAQC,IAAIF,GAP/B,OAOCG,EAPD,OAQC9xB,EAAS,GARV,iBASkB8xB,GATlB,IASL,2BAAWrlB,EAAuB,QAChCzM,EAAOZ,OAAO0X,KAAKrK,GAAU,IAAMrN,OAAO6K,OAAOwC,GAAU,GAVxD,uDAYEzM,GAZF,4C,yBAiBA,SAAe+xB,GAAtB,mC,gEAAO,WACL7sB,GADK,uGAGCysB,EAAU,GAHX,iBAIgBzsB,GAJhB,IAIL,2BAAWP,EAAmB,QAC5BgtB,EAAQlyB,KAAK2xB,GAAYzsB,IALtB,8CAOmBitB,QAAQC,IAAIF,GAP/B,OAOCG,EAPD,OAQC9xB,EAAS,GARV,iBASkB8xB,GATlB,IASL,2BAAWrlB,EAAuB,QAChCzM,EAAOZ,OAAO0X,KAAKrK,GAAU,IAAMrN,OAAO6K,OAAOwC,GAAU,GAVxD,uDAYEzM,GAZF,4C,yBAeP,SAASgyB,GACPrtB,EACAstB,GAEA,GAAc,MAAVttB,EACF,MAAO,GAET,IAAIutB,EAAW,GAMf,OALkC,MAA9BD,EAAU,OAAD,OAAQttB,IACnButB,EAAW,OAAH,OAAUvtB,GACuB,MAAhCstB,EAAU,SAAD,OAAUttB,MAC5ButB,EAAW,SAAH,OAAYvtB,IAEfutB,EASF,SAAeC,GAAtB,uC,gEAAO,WACLhvB,EACA+B,EACAiJ,GAHK,0GAKEuiB,GACLvtB,EACA+B,GACA,SAAC2rB,GAGC,IAH+B,EAGzBuB,EAAY,GACZH,EAAY,GAJa,iBAKPpB,GALO,IAK/B,2BAAoC,KAAzBwB,EAAyB,QAWlC,GAVAD,EAAUC,EAAUpjB,QAAU,GAC9BgjB,EAAUI,EAAU1tB,QAAU,GAC1B0tB,EAAUvC,QAAU,GAAWwC,WACO,MAApCD,EAAUtB,WAAWC,cACvBiB,EAAUI,EAAUtB,WAAWC,aAAe,IAET,MAAnCqB,EAAUtB,WAAWE,aACvBgB,EAAUI,EAAUtB,WAAWE,YAAc,KAG7CoB,EAAUvC,QAAU,GAAWU,aAAc,CAC/C,GAAoC,MAAhC6B,EAAUtB,WAAWI,QAAiB,wBACvBkB,EAAUtB,WAAWI,SADE,IACxC,2BAA+C,KAApCttB,EAAoC,QAC7CouB,EAAUpuB,GAAM,IAFsB,+BAK1C,GAAkC,MAA9BwuB,EAAUtB,WAAWG,MAAe,wBACrBmB,EAAUtB,WAAWG,OADA,IACtC,2BAA6C,KAAlC,EAAkC,QAC3Ce,EAAU,GAAM,IAFoB,kCAtBb,8BA8B/B,IAAM/sB,EAAU,GAChB,IAAK,IAAMP,KAAUstB,EACnB/sB,EAAQzF,KAAKkF,GAEf,IAAM+sB,EAAU,GAChB,IAAK,IAAMziB,KAAUmjB,EACnBV,EAAQjyB,KAAKwP,GAEf2iB,QAAQC,IAAI,CAACE,GAAa7sB,GAAUusB,GAAoBC,KAAWrM,MACjE,SAAAkN,GACE,IAAMN,EAAYM,EAAK,GACjBH,EAAYG,EAAK,GACjBC,EAAqB,GAC3B3B,EAAW/mB,SAAQ,SAAAsF,GACjB,IAAM8iB,EAAWF,GAAoB5iB,EAAIzK,OAAQstB,GACjD,GAAI7iB,EAAI0gB,QAAU,GAAWM,KAC3BoC,EAAmB/yB,KAAK,CACtBywB,YAAa9gB,EAAI8gB,YAEjBP,UAAWvgB,EAAIugB,UACfG,OAAQ1gB,EAAI0gB,OAEZ7gB,OAAQG,EAAIH,OACZ+gB,gBAAiBoC,EAAUhjB,EAAIH,QAE/B9F,KAAM,CACJtF,GAAIuL,EAAIzK,OACR8tB,OAAQP,EACRnxB,KAAMkxB,EAAUC,IAGlB7B,QAASjhB,EAAI2hB,WAAWvvB,aAErB,GAAI4N,EAAI0gB,QAAU,GAAWQ,QAClCkC,EAAmB/yB,KAAK,CACtBywB,YAAa9gB,EAAI8gB,YAEjBP,UAAWvgB,EAAIugB,UACfG,OAAQ1gB,EAAI0gB,OAEZ7gB,OAAQG,EAAIH,OACZ+gB,gBAAiBoC,EAAUhjB,EAAIH,QAE/B9F,KAAM,CACJtF,GAAIuL,EAAIzK,OACR8tB,OAAQP,EACRnxB,KAAMkxB,EAAUC,IAGlB3B,WAAYnhB,EAAI2hB,WAAWvvB,aAExB,GAAI4N,EAAI0gB,QAAU,GAAWU,aAAc,CAChD,IAAMW,EAAU,GAChB,GAAI/hB,EAAI2hB,WAAWI,QAAS,wBACT/hB,EAAI2hB,WAAWI,SADN,IAC1B,2BAAyC,KAA9BttB,EAA8B,QACvCstB,EAAQ1xB,KAAK,CACXoE,GAAIA,EACJ4uB,OAAQT,GAAoBnuB,EAAIouB,GAChClxB,KAAMkxB,EAAUD,GAAoBnuB,EAAIouB,OALlB,+BAS5B,IAAMf,EAAQ,GACd,GAAI9hB,EAAI2hB,WAAWG,MAAO,wBACP9hB,EAAI2hB,WAAWG,OADR,IACxB,2BAAuC,KAA5B,EAA4B,QACrCA,EAAMzxB,KAAK,CACToE,GAAI,EACJ4uB,OAAQT,GAAoB,EAAIC,GAChClxB,KAAMkxB,EAAUD,GAAoB,EAAIC,OALpB,+BAU1BO,EAAmB/yB,KAAK,CACtBywB,YAAa9gB,EAAI8gB,YAEjBP,UAAWvgB,EAAIugB,UACfG,OAAQ1gB,EAAI0gB,OAEZ7gB,OAAQG,EAAIH,OACZ+gB,gBAAiBoC,EAAUhjB,EAAIH,QAE/B9F,KAAM,CACJtF,GAAIuL,EAAIzK,OACR8tB,OAAQP,EACRnxB,KAAMkxB,EAAUC,IAGlBf,UACAD,eAEG,GAAI9hB,EAAI0gB,QAAU,GAAWwC,SAAU,CAC5C,IAAMI,EAAaV,GACjB5iB,EAAI2hB,WAAWC,YACfiB,GAEIU,EAAYX,GAChB5iB,EAAI2hB,WAAWE,WACfgB,GAEFO,EAAmB/yB,KAAK,CACtBywB,YAAa9gB,EAAI8gB,YAEjBP,UAAWvgB,EAAIugB,UACfG,OAAQ1gB,EAAI0gB,OAEZ7gB,OAAQG,EAAIH,OACZ+gB,gBAAiBoC,EAAUhjB,EAAIH,QAE/B9F,KAAM,CACJtF,GAAIuL,EAAIzK,OACR8tB,OAAQP,EACRnxB,KAAMkxB,EAAUC,IAGlBU,iBAAkB,CAChB/uB,GAAIuL,EAAI2hB,WAAWC,YACnByB,OAAQC,EACR3xB,KAAMkxB,EAAUS,IAGlBG,gBAAiB,CACfhvB,GAAIuL,EAAI2hB,WAAWE,WACnBwB,OAAQE,EACR5xB,KAAMkxB,EAAUU,IAGlBG,UAAwC,MAA7B1jB,EAAI2hB,WAAWE,WAC1B8B,QAAuC,MAA9B3jB,EAAI2hB,WAAWC,kBAI9B7iB,EAAGqkB,UA1KN,2C,yBAiLD,SAAUQ,GACdC,EACAtuB,EACA0sB,GAEA,MAAkC,SAA9B4B,EAAWC,UAAU,EAAG,GAC1B,qDAAqDvuB,EAArD,aAAgE0sB,EAAhE,QAEA,oCAAoC1sB,EAApC,aAA+C0sB,EAA/C,SDrVJ,SAAYlB,GACV,yBACA,iCACA,uBACA,kBAJF,CAAY,QAAU,K,OEUhB,eAIK,yBAFD,2EAAwE,G,GAI9E,eAMK,WALH,eAIC,KAHC3D,OAAO,SACPC,KAAK,wEACJ,oC,MAGL,eAEI,SAFD,qCAEH,G,kBACM,oE,GAC2D,eAAM,mB,GACL,eAAM,mB,kBAAA,0E,GAEtE,eAAM,mB,gFA7BV,eAgCS,GA/BC0G,QAAS,EAAAjE,qB,kDAAA,EAAAA,qBAAoB,IACpC,OAAI,+BAAE,EAAA9B,MAAK,UACXgG,iBAAiB,EACjBC,UAAU,EACVC,OAAO,EACPC,eAAe,G,CAEL9U,OAAM,gBACf,iBAIK,CAJL,OAsBS+U,OAAM,gBAAjB,iBAA8B,M,wBAhB9B,iBAMK,CANL,GAOA,GAGA,eAKO,a,GAJ0D,G,eAAM,2CAC9B,eAAG,EAAArE,oBAAqB,IAAC,M,GAEhE,S,qCC1BS,kBAAgB,CAC7BpuB,KAAM,oBACN+kB,MAAO,CACL7E,KAAM4G,QACNsH,mBAAoBlJ,QAEtB8B,WAAY,CACV0L,OAAA,SAEF5N,MAAO,CAAC,QACRxF,MAV6B,SAUvByF,GACJ,IAAMoJ,EAAuB,gBAAI,GAOjC,OANA,gBACE,iBAAM,CAACpJ,EAAM7E,QADV,yDAEH,WAAOyS,EAASC,GAAhB,iFACEzE,EAAqB1tB,MAAQkyB,EAAQ,GADvC,2CAFG,yDAME,CACLxE,2BCpBN,GAAO3O,OAAS,GAED,UCSA,kBAAgB,CAC7Bxf,KAAM,YACN6yB,SAAU,CACRzD,WADQ,WAEN,OAAO,KAGXrK,MAAO,CACLpiB,OAAQ,CACN6S,KAAM0P,OACNC,UAAU,IAGd6B,WAAY,CACV8L,YACAC,qBACAC,SAAA,QACAC,KAAA,SAEF3T,MAnB6B,SAmBvByF,GACJ,IAAMxF,EAAQF,KACRqP,EAAe,gBACnB,kBAAMnP,EAAMtd,MAAMgK,KAAKA,OAASsT,EAAMtd,MAAMgK,KAAKA,KAAK2P,eAElDwS,EAAqB,eAAI,IACzBD,EAAuB,gBAAI,GAC3BI,EAAY,gBAAI,GAChBI,EAAU,eAAS,IACrBuE,EAAc,aAwBlB,OArBA,gBACE,iBAAM,CAACnO,EAAMpiB,OAAQ4rB,EAAU9tB,SAD5B,yDAEH,WAAOkyB,EAASC,GAAhB,oFACMD,EAAQ,IAAMC,EAAQ,KACxBrE,EAAU9tB,OAAQ,GAEpByyB,IACAA,EAAc,aAGS,GAAnB3E,EAAU9tB,MARhB,gCASwB2wB,GAClB,CAAC,GAAW/B,KAAM,GAAWE,QAAS,GAAWE,cACjD,CAAC1K,EAAMpiB,SACP,SAAAmtB,GACEnB,EAAQrvB,OAAR,MAAAqvB,EAAO,CAAQ,EAAGA,EAAQvwB,QAAnB,sBAA8B0xB,QAb7C,OASIoD,EATJ,kDAFG,yDAqBE,CACLvE,UACAJ,YACAC,OAAQ,SAAC/K,GACP8K,EAAU9tB,MAAQgjB,GAEpByL,aAAc,SAACpsB,GACbqrB,EAAqB1tB,OAAQ,EAC7B2tB,EAAmB3tB,MAAQ,6BAA+BqC,GAE5D4sB,WAAY,SAACjM,GACXA,EAAQA,EACR,IAFuC,EAEjC2M,EAAU,GAFuB,iBAGtB3M,EAAM2M,SAHgB,IAGvC,2BAAgC,KAArB+C,EAAqB,QAC9B/C,EAAQ1xB,KAAKuzB,GAAWkB,EAAGzB,OAAQyB,EAAGrwB,GAAIqwB,EAAGnzB,QAJR,8BAMvC,IANuC,EAMjCmwB,EAAQ,GANyB,iBAOtB1M,EAAM0M,OAPgB,IAOvC,2BAA8B,KAAnB,EAAmB,QAC5BA,EAAMzxB,KAAKuzB,GAAW,EAAGP,OAAQ,EAAG5uB,GAAI,EAAG9C,QARN,8BAWvC,IAAIf,EAAS,GAOb,OANImxB,EAAQhyB,OAAS,IACnBa,GAAU,YAAJ,OAAgBmxB,EAAQ1d,KAAK,QAEjCyd,EAAM/xB,OAAS,IACjBa,GAAU,eAAJ,OAAmBkxB,EAAMzd,KAAK,QAE/BzT,GAETkvB,uBACAC,qBACAM,mBC/FN,GAAOlP,OAAS,GAED,U,kBCJc,O,GASvB,eAEK,yBADA,iDAA8C,G,+LAVvD,eAAwC,GAA9B,QAAO,EAAA4T,UAAQ,C,wBAAE,iBAAG,C,2BAC9B,eAwBS,GAvBChB,QAAS,EAAAiB,iB,kDAAA,EAAAA,iBAAgB,IAChChB,iBAAiB,EACjBC,UAAU,EACVC,OAAO,EACPC,eAAe,G,CAEL9U,OAAM,gBACf,iBAEK,CAFL,OAOS+U,OAAM,gBACf,iBAKE,CALF,eAKE,GAJAa,MAAM,KACNC,KAAK,cACLtQ,MAAM,gBACL,QAAO,EAAAuQ,W,oBAEV,eAAsD,GAA9CF,MAAM,MAAMC,KAAK,cAAe,QAAO,EAAAtX,K,gDATjD,iBAA2E,CAA3E,eAA2E,G,WAAzD,EAAAwX,e,qDAAA,EAAAA,eAAc,IAAGC,QAAS,EAAAC,QAASC,YAAY,S,iOCT/B3Q,MAAM,O,GACtC,eAIE,OAHA7B,MAAA,gBACAgK,IAAI,UACJC,IAAA,M,mBAGQpI,MAAM,O,GAChB,eAIE,OAHA7B,MAAA,gBACAgK,IAAI,SACJC,IAAA,M,mFAhBN,eAmBM,OAlBJjK,MAAA,mBACC,aAAU,+BAAE,EAAAqL,WAAS,IACrB,aAAU,+BAAE,EAAAA,WAAS,K,CAEX,EAAAoH,UAAY,EAAApH,W,iBAAvB,eAMM,MANN,GAMM,CALJ,O,iBAMF,eAMM,MANN,GAMM,CALJ,O,OAaS,IACbzsB,KAAM,UACNsf,MAFa,WAGX,IAAMC,EAAQF,KACRoN,EAAY,gBAAI,GACtB,MAAO,CACLoH,SAAU,gBACR,uBAC4DC,IAA1DvU,EAAMtd,MAAM8c,IAAI7c,KAAKqd,EAAMtd,MAAMQ,KAAK4P,mBAE1Coa,e,UChCN,GAAOjN,OAAS,GAChB,GAAOuG,UAAY,kBAEJ,UF+BA,IACb/lB,KAAM,YACNgnB,WAAY,CACV+M,WACArB,OAAA,QACAsB,OAAA,QACAC,QAAA,SAEF3U,MARa,WASX,IAAMC,EAAQF,KACR6U,EAAY3U,EAAMtd,MAAMQ,KACxB4wB,EAAmB,gBAAI,GACvBI,EAAiB,gBAAI,GACrB9b,EAAe,gBAAS,kBAAM4H,EAAM7H,QAAQ,wBAC5Cyc,EAAe,eAAI,IACnBR,EAAU,gBAAS,WACvB,IAAMS,EAAsB,GACxB5xB,EAAgB0xB,EAAUxxB,WAAWwxB,EAAU7hB,gBAAgBzP,OACnE,MAAOsxB,EAAUxxB,WAAWF,EAAcM,IAAIF,OAC5CwxB,EAAoB11B,KAAK,CACvBqH,MAAOvD,EAAcuD,MACrBjD,GAAIN,EAAcM,KAEpBN,EAAgB0xB,EAAUxxB,WAAWF,EAAcM,IAAIF,OAGzD,OADAwxB,EAAoB11B,KAAK,CAAEqH,MAAO,OAAQjD,GAAI,IACvCsxB,KAGT,MAAO,CACLhB,SAAU,gBAEoDU,IAA1DvU,EAAMtd,MAAM8c,IAAI7c,KAAKqd,EAAMtd,MAAMQ,KAAK4P,iBAEtCkN,EAAM1H,SAAN,cACS,EAAW9V,WAClBwd,EAAMtd,MAAMQ,KAAK4P,gBAEnBnD,GAAI1C,SAAS+S,EAAMtd,MAAMgK,KAAKA,KAAMsT,EAAMtd,MAAM8c,IAAI7c,OAEpDmxB,EAAiB5yB,OAAS4yB,EAAiB5yB,OAG/CgzB,iBACAE,UACA1X,IAAK,WACHoX,EAAiB5yB,OAAQ,EACzB8e,EAAM1H,SAAN,cAAsB,EAAW/V,QAAU,CACzCiB,SAAU0wB,EAAehzB,MAAMqC,GAC/BH,OAAQgV,EAAalX,MAAMqC,KAE7BoM,GAAI1C,SAAS+S,EAAMtd,MAAMgK,KAAKA,KAAMsT,EAAMtd,MAAM8c,IAAI7c,MACpDuxB,EAAehzB,MAAQ,MAEzB+yB,UAAW,WACTH,EAAiB5yB,OAAQ,GAE3B4yB,mBACAc,kBG9FN,GAAO3U,OAAS,GAED,U,qICJb,eAKE,KAHA,UAAQ,EAAAuN,gBACP,QAAK,+BAAE,EAAAC,WAAS,KACjB/J,MAAM,S,gCAHG,EAAAgK,UAKX,eAQE,YAPAhK,MAAM,mFACN7B,MAAA,iBACAzX,IAAI,UACJmiB,KAAK,IACJrrB,MAAO,EAAA4a,QACP,QAAK,+BAAE,EAAA0Q,cAAcF,EAAOJ,OAAOhrB,SACnC,WAAQ,+BAAE,EAAAusB,WAAS,M,2BCXT,IACbhtB,KAAM,QACN8kB,MAAO,CAAC,mBACRC,MAAO,CACL1J,QAAS,CACP7F,KAAM0P,OACNC,UAAU,IAGd7F,MATa,SASPyF,EAAYO,GAChB,IAAMyH,EAAkB,gBAAS,WAC/B,OAAOhI,EAAM1J,WAET4R,EAAS,gBAAI,GAEbe,EAAU,eAA2B,MAE3C,MAAO,CACLf,SACAe,UACAhB,UAAW,SAACjhB,GACVkhB,EAAOxsB,MAAQsL,EACXA,GAAOiiB,EAAQvtB,QACjButB,EAAQvtB,MAAM2gB,MAAM6M,QAAU,QAC9BD,EAAQvtB,MAAMytB,UAEXniB,GAAOiiB,EAAQvtB,QAClButB,EAAQvtB,MAAM2gB,MAAM6M,QAAU,SAGlClB,kBACAhB,cAAe,SAACtrB,GACd6kB,EAAI9B,KAAK,kBAAmB/iB,O,UC9BpC,GAAO+e,OAAS,GAChB,GAAOuG,UAAY,kBAEJ,U,0KCPb,eAAyC,GAAxB,QAAO,EAAAsO,eAAa,oBACrC,eA6BS,GA5BCjC,QAAS,EAAAkC,iB,kDAAA,EAAAA,iBAAgB,IAChCjC,iBAAiB,EACjBC,UAAU,EACVC,OAAO,EACPC,eAAe,EACf,YAAS,4BAAV,cAAe,Y,CAEJ9U,OAAM,gBACf,iBAQK,CARL,eAQK,UARD,SACG,eACH,EAAA6W,iBAAiBxuB,MAAoB,mBAAiB,MAAoB,eAA2B,eAAa,M,IAKlH,0BAAuB,eAAG,EAAAyuB,WAAa,EAAAA,WAAWzuB,MAAK,IAAQ,KACnE,OAGS0sB,OAAM,gBACf,iBAKE,CALF,eAKE,GAJAa,MAAM,SACNC,KAAK,cACLtQ,MAAM,gBACL,QAAO,EAAAuQ,W,oBAEV,eAAuD,GAA/CF,MAAM,OAAOC,KAAK,cAAe,QAAO,EAAAtX,K,0LCvB5BgH,MAAM,U,GAC1B,eAIE,OAHA7B,MAAA,gBACAgK,IAAI,UACJC,IAAA,M,mBAGQpI,MAAM,U,GAChB,eAIE,OAHA7B,MAAA,gBACAgK,IAAI,SACJC,IAAA,M,mFAhBN,eAmBM,OAlBJjK,MAAA,mBACC,aAAU,+BAAE,EAAAqL,WAAS,IACrB,aAAU,+BAAE,EAAAA,WAAS,K,CAEX,EAAAA,W,iBAAX,eAMM,MANN,GAMM,CALJ,O,iBAMF,eAMM,MANN,GAMM,CALJ,O,OAYS,IACbzsB,KAAM,iBACNsf,MAFa,WAGX,IAAMmN,EAAY,gBAAI,GACtB,MAAO,CACLA,e,UC1BN,GAAOjN,OAAS,GAChB,GAAOuG,UAAY,kBAEJ,UFkCA,IACb/lB,KAAM,mBACNgnB,WAAY,CACV0L,OAAA,QACAsB,OAAA,QACAS,mBAEF3P,MAAO,CAAC,4BAA6B,8BACrCC,MAAO,CACLhF,eAAgB,CACdvK,KAAM0P,OACNC,UAAU,IAGd7F,MAda,SAcPyF,EAAOO,GACX,IAAM/F,EAAQF,KACRiV,EAAmB,gBAAI,GACvBE,EAAa,eAAI,IACjBD,EAAmB,eAAI,IACvB5c,EAAe,gBAAS,kBAAM4H,EAAM7H,QAAQ,wBAgBlD,OAdA,gBACE,kBAAMqN,EAAMhF,kBACZ,WAE6B,OAAzBgF,EAAMhF,gBACNR,EAAMtd,MAAMQ,KAAKC,WAAWqiB,EAAMhF,kBAElCwU,EAAiB9zB,MACf8e,EAAMtd,MAAMQ,KAAKC,WAAWqiB,EAAMhF,gBAAgB3X,QAGxD,CAAEmc,WAAW,IAGR,CACL8P,cAAe,WACb/O,EAAI9B,KAAK,6BACTgR,EAAW/zB,MAAQ8e,EAAM7H,QAAQ,qBACjC4c,EAAiB7zB,OAAS6zB,EAAiB7zB,OAE7Cwb,IAAK,WACH,IAAIyY,EAAmB,GACnBnV,EAAMtd,MAAM0c,aAAalb,cAAc+wB,EAAW/zB,MAAMqC,MAC1D4xB,EACEnV,EAAMtd,MAAM0c,aAAalb,cAAc+wB,EAAW/zB,MAAMqC,KAE5D4xB,EAAiBh2B,KAAK61B,EAAiB9zB,MAAMqC,IAE7CoM,GAAIlC,kBAAkBuS,EAAMtd,MAAMgK,KAAKA,KAAM,CAC3CtJ,OAAQ6xB,EAAW/zB,MAAMqC,GACzBoK,gBAAiBwnB,IAEnBpP,EAAI9B,KAAK,8BACT8Q,EAAiB7zB,OAAQ,EACzB8zB,EAAiB9zB,MAAQ,IAE3B+yB,UAAW,WACTc,EAAiB7zB,OAAQ,EACzB8zB,EAAiB9zB,MAAQ,GACzB6kB,EAAI9B,KAAK,+BAEX8Q,mBACAE,aACAD,mBACA5c,kBGxGN,GAAO6H,OAAS,GAED,UCaA,kBAAgB,CAC7Bxf,KAAM,cACNgnB,WAAY,CACV2N,oBACAC,SACAC,cAAA,GACA/B,YACAgC,SAAA,QACAC,qBAAA,GACAC,aACAC,cAEFnQ,MAAO,CAAC,4BAA6B,8BACrCC,MAAO,CACL7E,KAAM,CACJ1K,KAAMsR,QACN3B,UAAU,GAEZ9S,eAAgB,CACdmD,KAAM0P,QAAU,KAChBE,UAAW,SAACC,GAAD,MACO,kBAATA,GAA8B,OAATA,GAC9BF,UAAU,GAEZpF,eAAgB,CACdvK,KAAM0P,OACNC,UAAU,IAGd7F,MA7B6B,SA6BvByF,GACJ,IAAMxF,EAAQF,KACR7B,EAAU,kBACV/a,EAAO8c,EAAMtd,MAAMQ,KAEnBkV,EAAe,gBAAsB,kBACzCoN,EAAM1S,gBAAkB5P,EAAKC,WAAWqiB,EAAM1S,gBAC1C5P,EAAKC,WAAWqiB,EAAM1S,gBAAgBjK,KACtC,QAGAujB,EAAsB,gBAA6B,WACvD,GACE5G,EAAM1S,gBACNkN,EAAMtd,MAAMua,YAAYjB,aAAawJ,EAAM1S,gBAE3C,OAAOkN,EAAMtd,MAAMua,YAAYjB,aAAawJ,EAAM1S,gBAEpD,IAAMmd,EAAatqB,EAAMkW,IAEzB,OADAoU,EAAW5rB,OAASmhB,EAAM1S,eACnBmd,KAGHtD,EAAsB,gBAAiB,kBAC3CnH,EAAM1S,gBACNkN,EAAMtd,MAAMua,YAAYb,iBAAiBoJ,EAAM1S,gBAC3CkN,EAAMtd,MAAMua,YAAYb,iBAAiBoJ,EAAM1S,gBAAgBoJ,QAC/D,MAGN,MAAO,CACL9D,eACAgU,sBACAS,gBAAiB,WAAF,8CAAE,WAAOzgB,GAAP,oFACV4T,EAAMtd,MAAMgK,KAAKA,OAAQsT,EAAMtd,MAAMgK,KAAKA,KAAK2P,YADrC,gCAEP2D,EAAM1H,SAAN,UAAkB,GAAQoF,oBAAsBO,GAFzC,OAGb7R,EAAEupB,iBAHW,2CAAF,sDAAE,GAMjBhJ,sBACAN,gBAAiB,WAAF,8CAAE,WAAOnrB,GAAP,0FACVkX,EAAalX,OAAUkX,EAAalX,MAAMqC,GADhC,iEAIGoM,GAAIrF,gBAAJ,gCACR8N,EAAalX,MAAMqC,GADX,SACuBrC,IAL1B,OAITgE,EAJS,OAQXA,GACFU,EAAWV,EAAIE,MAAML,QAASG,EAAIF,IATrB,2CAAF,sDAAE,GAYjBwnB,cAAe,WAAF,8CAAE,WAAOtrB,GAAP,uGACK8e,EAAM1H,SAAN,sBACD,GAAmBqD,gBAClC,CACEtX,OAAQ+T,EAAalX,MAAOqC,GAC5BuY,QAAS5a,IALA,OACPgE,EADO,OASTA,GACFU,EAAWV,EAAK,IAVL,2CAAF,sDAAE,GAaf0nB,cAAe,WAAF,8CAAE,WAAO1rB,GAAP,uGACK8e,EAAM1H,SAAN,sBACD,GAAmBsD,gBAClC,CACEvX,OAAQ+T,EAAalX,MAAOqC,GAC5B2Y,QAAShb,IALA,OACPgE,EADO,OASTA,GACFU,EAAWV,EAAK,IAVL,2CAAF,sDAAE,O,UC3GrB,GAAO+a,OAAS,GAChB,GAAOuG,UAAY,kBAEJ,U,4DCHO3E,MAAA,gB,IACXA,MAAA,oC,GAED,eAAwE,OAAnEgK,IAAI,OAAOC,IAAA,KAAmCjK,MAAA,gB,aAIlDA,MAAA,sC,UAIkBA,MAAA,uC,UAGAA,MAAA,uC,UAGkBA,MAAA,uC,UAGAA,MAAA,uC,sYAxB7C,eAEM,OAFA6B,MAAO,EAAAsJ,OAAO4I,Y,CAClB,eAAc,I,GAEhB,eA4BM,OA5BAlS,MAAO,EAAAsJ,OAAO6I,S,CACP,EAAAC,O,iBAAX,eAuBM,MAvBN,GAuBM,CAtBJ,eAKM,MALN,GAKM,CAJJ,eAEa,GAFA,QAAO,EAAAC,gBAAc,C,wBAChC,iBAAwE,CAAxE,O,oBAEF,eAAsE,GAA3D3rB,IAAI,OAAO7G,GAAG,eAAgByyB,MAAO,EAAAC,MAAQC,OAAO,G,oBAEjE,eAEM,MAFN,GAEM,CADJ,eAAY,KAEd,eAAwD,GAA9CrU,MAAA,wCACC,EAAA9D,Y,iBAAX,eAEM,MAFN,GAEM,CADJ,eAAW,M,sBAEF,EAAAA,Y,iBAAX,eAEM,MAFN,GAEM,CADJ,eAAc,M,sBAEL,EAAAA,YAAc,EAAAoY,gB,iBAAzB,eAEM,MAFN,GAEM,CADY,EAAAA,gB,iBAAhB,eAAkC,Y,+CAEzB,EAAApY,YAAc,EAAAoY,gB,iBAAzB,eAEM,MAFN,GAEM,CADJ,eAAgB,M,2CAGpB,eAEM,UADJ,eAA6H,GAApH,QAAO,EAAAhc,OAAQ0H,MAAA,mCAAyCuU,QAAA,GAAQ9K,KAAK,QAAS0I,KAAK,gBAAgBD,MAAM,W,+DC5BpH,eAAuE,OAAlElI,IAAI,OAAOC,IAAA,KAAkCjK,MAAA,gB,YAClD,eAA+B,QAAzB6B,MAAM,UAAS,OAAG,G,gMAF1B,eAGa,GAHA,QAAO,EAAA2S,iBAAe,C,wBACjC,iBAAuE,CAAvE,GACA,O,oBAEF,eA6BS,GA5BCxD,QAAS,EAAAiB,iB,kDAAA,EAAAA,iBAAgB,IAChChB,iBAAiB,EACjBC,UAAU,EACVC,OAAO,EACPC,eAAe,EACf,YAAS,4BAAV,cAAe,Y,CAEJ9U,OAAM,gBACf,iBAMK,CANL,eAMK,yBAJD,EAAAmY,kBAAA,4BAAqD,qBAArD,e,OASKpD,OAAM,gBACf,iBAKE,CALF,eAKE,GAJAa,MAAM,KACNC,KAAK,cACLtQ,MAAM,gBACL,QAAO,EAAAuQ,W,oBAEV,eAAsD,GAA9CF,MAAM,MAAMC,KAAK,cAAe,QAAO,EAAAtX,K,gDATjD,iBAA4C,CAA5C,eAA4C,GAArCzG,KAAK,O,WAAgB,EAAA2e,a,qDAAA,EAAAA,aAAY,K,qJCtB1C,eAQS,GAPLtJ,KAAK,QACL8K,QAAA,GACC,aAAU,+BAAE,EAAAG,WAAS,IACrB,aAAU,+BAAE,EAAAA,WAAS,IACrB1U,OAAQ,EAAA0U,UAAA,yCAAwD,EAAAC,QAAA,4BAA+B,EAAAA,QAA/B,iCAA3D,uC,yBAER,iBAAa,CAAb,eAAa,wB,kBAQF,sBAAgB,CAC7B/1B,KAAM,aACNgnB,WAAY,CACVgN,OAAA,SAEFjP,MAAO,CACLgR,QAAS7Q,QAEX5F,MAR6B,WAS3B,IAAMwW,EAAY,gBAAI,GACtB,MAAO,CACLA,gBCxBN,GAAOtW,OAAS,GAED,UFyCA,IACbxf,KAAM,UACNgnB,WAAY,CACVgP,cACAtD,OAAA,QACAsB,OAAA,QACAiC,MAAA,SAEF3W,MARa,WASX,IAAMC,EAAQF,KACRgU,EAAmB,gBAAI,GACvB1b,EAAe,gBAAS,kBAAM4H,EAAM7H,QAAQ,wBAC5Cyc,EAAe,eAAI,IAEzB,MAAO,CACL0B,kBAAmB,gBAAS,kBAC1Ble,EAAalX,MAAQkX,EAAalX,MAAMsF,MAAQ,MAElD6vB,gBAAiB,kBAAOvC,EAAiB5yB,OAAS4yB,EAAiB5yB,OACnEwb,IAAK,WAAF,8CAAE,oHACqBsD,EAAM1H,SAAN,UAAkB,GAAQgF,YAAc,CAC9DrT,SAAUmO,EAAalX,MAAQkX,EAAalX,MAAMqC,GAAK,EACvDiD,MAAOouB,EAAa1zB,QAHnB,OACGy1B,EADH,OAKH3W,EAAMjd,OAAN,gCAC2B,EAA8ByB,WADzD,CAGImyB,GAHJ,sBAIO3W,EAAMtd,MAAMQ,KAAKC,WAClBiV,EAAalX,MAAMqC,IACnBsF,KAAKlC,SAASM,KAAI,SAAA4B,GAAG,OAAKA,EAAKtF,SAGrCqxB,EAAa1zB,MAAQ,GACrB4yB,EAAiB5yB,OAAQ,EAftB,2CAAF,qDAAE,GAiBL+yB,UAAW,WACTW,EAAa1zB,MAAQ,GACrB4yB,EAAiB5yB,OAAQ,GAE3B4yB,mBACAc,kBGpFN,GAAO3U,OAAS,GAED,U,2BCHX,eAAyE,OAApE4L,IAAI,OAAOC,IAAA,KAAoCjK,MAAA,gB,YACpD,eAAkC,QAA5B6B,MAAM,UAAS,UAAM,G,sKAF7B,eAGa,GAHA,QAAO,EAAAkT,aAAeC,UAAW,EAAAP,mB,yBAC5C,iBAAyE,CAAzE,GACA,O,+BAEF,eAsBS,GArBCzD,QAAS,EAAAiB,iB,kDAAA,EAAAA,iBAAgB,IAChChB,iBAAiB,EACjBC,UAAU,EACVC,OAAO,EACPC,eAAe,G,CAEL9U,OAAM,gBACf,iBAEK,CAFL,eAEK,0CADU,EAAAmY,kBACV,8BAD2B,OAIvBpD,OAAM,gBACf,iBAKE,CALF,eAKE,GAJAa,MAAM,KACNC,KAAK,cACLtQ,MAAM,gBACL,QAAO,EAAAoT,Q,oBAEV,eAAyD,GAAjD/C,MAAM,MAAMC,KAAK,cAAe,QAAO,EAAA/G,Q,iDAatC,QACbxsB,KAAM,aACNgnB,WAAY,CACVgP,cACAtD,OAAA,QACAsB,OAAA,SAEF1U,MAPa,WAQX,IAAMC,EAAQF,KACRgU,EAAmB,gBAAI,GACvB1b,EAAe,gBAAS,kBAAM4H,EAAM7H,QAAQ,wBAElD,MAAO,CACLme,kBAAmB,gBAAS,kBAC1Ble,EAAalX,MAAQkX,EAAalX,MAAMsF,MAAQ,MAElDowB,aAAc,kBAAO9C,EAAiB5yB,OAAS4yB,EAAiB5yB,OAChE+rB,OAAQ,WACN6G,EAAiB5yB,OAAQ,EACzB8e,EAAM1H,SAAN,UAAkB,GAAQkF,YAAcpF,EAAalX,MAAMqC,IAC3Dyc,EAAMjd,OAAN,gCAC2B,EAA8ByB,WACvDwb,EAAMtd,MAAMQ,KAAKC,WACfiV,EAAalX,MAAMqC,IACnBF,OAAOsD,SAASM,KAAI,SAAA4B,GAAG,OAAKA,EAAKtF,QAGvCuzB,OAAQ,WACNhD,EAAiB5yB,OAAQ,GAE3B4yB,sBCjEN,GAAO7T,OAAS,GAED,U,mDCFT,eAA6E,OAAxE4L,IAAI,OAAOC,IAAA,KAAwCjK,MAAA,gB,YACxD,eAAoC,QAA9B6B,MAAM,UAAS,YAAQ,G,GAG7B,eAA8E,OAAzEmI,IAAI,OAAOC,IAAA,KAAyCjK,MAAA,gB,YACzD,eAAoC,QAA9B6B,MAAM,UAAS,YAAQ,G,oFAPjC,eASM,YARe,EAAA3F,W,wCAAnB,eAGa,G,MAHmB,QAAO,EAAAzP,GAAIuT,MAAA,iB,yBACzC,iBAA6E,CAA7E,GACA,O,qBAEgB,EAAA9D,Y,iBAAlB,eAGa,G,MAHkB,QAAO,EAAA3P,IAAKyT,MAAA,iB,yBACzC,iBAA8E,CAA9E,GACA,O,6CAUS,QACbphB,KAAM,WACNgnB,WAAY,CACVgP,eAEF1W,MALa,WAMX,IAAMC,EAAQF,KAEd,MAAO,CACL/B,WAAY,gBAAS,kBAAMiC,EAAMtd,MAAMqb,cACvCzP,GAAI,WACF0R,EAAM1H,SAAN,UAAkB,GAAQmF,cAAe,IAE3CrP,IAAK,WACH4R,EAAM1H,SAAN,UAAkB,GAAQmF,cAAe,OC7BjD,GAAOwC,OAAS,GAED,U,mDCHX,eAAuE,OAAlE4L,IAAI,OAAOC,IAAA,KAAkCjK,MAAA,gB,YAClD,eAA+B,QAAzB6B,MAAM,UAAS,OAAG,G,GAGxB,eAAyE,OAApEmI,IAAI,OAAOC,IAAA,KAAoCjK,MAAA,gB,YACpD,eAAiC,QAA3B6B,MAAM,UAAS,SAAK,G,gHAND,MAAT,EAAAqT,W,iBAAlB,eAGa,G,MAHyB,QAAO,EAAAC,K,yBAC3C,iBAAuE,CAAvE,GACA,O,2CAEyB,MAAT,EAAAD,W,iBAAlB,eAGa,G,MAHyB,QAAO,EAAAE,O,yBAC3C,iBAAyE,CAAzE,GACA,O,gDAUW,QACbx2B,KAAM,WACNgnB,WAAY,CAACgP,eACb1W,MAHa,WAIX,IAAMC,EAAQF,KACR1H,EAAe,gBAAS,kBAAM4H,EAAM7H,QAAQ,wBAC5C4e,EAAY,eAAI,MAEtB,MAAO,CACLA,YACAC,IAAK,WACHD,EAAU71B,MAAQkX,EAAalX,MAAMqC,IAEvC0zB,MAAO,WAEL,IAAMC,EAAsBlX,EAAMtd,MAAMQ,KAAKC,WAC3C4zB,EAAU71B,OACVmC,OAAOsD,SAASM,KAAI,SAAA4B,GAAG,OAAKA,EAAKtF,MAC7B4zB,EAAsBnX,EAAMtd,MAAMQ,KAAKC,WAC3CiV,EAAalX,MAAMqC,IACnBsF,KAAKlC,SAASM,KAAI,SAAA4B,GAAG,OAAKA,EAAKtF,MACjCyc,EAAMjd,OAAN,gCAC2B,EAA8ByB,WADzD,yBAEM0yB,GAFN,eAE8BC,KAI9BnX,EAAM1H,SAAN,UAAkB,GAAQiF,cAAgB,CACxClZ,OAAQ0yB,EAAU71B,MAClB+I,SAAUmO,EAAalX,MAAMqC,KAG/BwzB,EAAU71B,MAAQ,SC9C1B,GAAO+e,OAAS,GAED,U,2BCHX,eAAwE,OAAnE4L,IAAI,OAAOC,IAAA,KAAmCjK,MAAA,gB,YACnD,eAAgC,QAA1B6B,MAAM,UAAS,QAAI,G,oFAF3B,eAGa,GAHA,QAAO,EAAA0T,MAAI,C,wBACtB,iBAAwE,CAAxE,GACA,O,oBAOW,QACb32B,KAAM,WACNgnB,WAAY,CACVgP,eAEF1W,MALa,WAMX,MAAO,CACLqX,KAAM,WACJr1B,OAAOs1B,KACL,uEACA,cCjBV,GAAOpX,OAAS,GAED,U,ICJPyD,MAAM,qBAAqB7B,MAAA,gB,mFAAjC,eAQO,OARP,GAQO,CAPL,eAAkE,KAA/D6B,MAAM,cAAc7B,MAAA,iBAAwB,QAAK,8BAAE,EAAAyV,UAAA,EAAAA,SAAA,uBACtD,eAKE,GAJC5T,MAAO,EAAAsJ,OAAM,aACdP,YAAY,gB,WACH,EAAAvrB,M,sDAAA,EAAAA,MAAK,I,+BACM,EAAAq2B,SAASjL,O,iCCApB,QACb7rB,KAAM,aACNgnB,WAAY,CACV+P,UAAA,SAGFzX,MANa,WAOX,IAAM7e,EAAQ,eAAI,IACZ8e,EAAQF,KACd,MAAO,CACLyX,SAAU,WAAF,8CAAE,WAAOr2B,GAAP,uGACUyb,GAAOzb,GADjB,cACFwR,EADE,OAERsN,EAAMjd,OAAN,uBAA6B,GAAgBuZ,cAAgB5J,GAFrD,kBAGDA,GAHC,2CAAF,sDAAE,GAKVxR,QACAo2B,SAAU,WACRp2B,EAAMA,MAAQ,O,aCpBtB,MAAM,GAAa,GAAOmsB,aAAe,GAEzC,GAAW,UAAY,cACvB,GAAOpN,OAAS,GAED,U,GCFX,eAIE,OAHE4L,IAAI,OACJC,IAAA,KACAjK,MAAA,gB,YAEJ,eAA+B,QAAzB6B,MAAM,UAAS,OAAG,G,GAWtB,eAEK,UAFD,oBAEJ,G,0MAxBJ,eAIE,GAHC/C,KAAM,EAAAiO,qBACNC,mBAAoB,EAAAA,mBACpB,OAAI,+BAAE,EAAAD,sBAAoB,K,sCAE7B,eAOa,GAPA,QAAO,EAAAyH,iBAAe,C,wBACjC,iBAIE,CAJF,GAKA,O,oBAEF,eA0BS,GAzBCxD,QAAS,EAAAiB,iB,kDAAA,EAAAA,iBAAgB,IAChChB,iBAAiB,EACjBC,UAAU,EACVC,OAAO,EACPC,eAAe,EACf,YAAS,4BAAV,cAAe,Y,CAEJ9U,OAAM,gBACf,iBAEK,CAFL,O,wBAII,iBAA6B,E,mBAAnC,eAYO,2BAZoB,EAAAiR,SAAO,SAApBlL,EAAOvlB,G,wBAArB,eAYO,GAZ8B6C,IAAK7C,EAAG+kB,MAAM,Q,CACtCld,MAAK,gBACd,iBAAoD,C,kCAA7C3B,KAAKqf,EAAMmL,WAAWC,sBAAuB,IACpD,mBAAOzqB,KAAKqf,EAAMmL,WAAWE,sBAAkB,OAEtCE,SAAQ,gBACjB,iBAA2B,C,8BAAxBvL,EAAMwL,iBAAkB,MAC3B,kBAAiE,KAA9DvD,KAAK,IAAK,QAAK,mBAAE,EAAAwD,aAAazL,EAAM0L,eAAc,WAAQ,mBAEpD9T,QAAO,gBAChB,iBAAgD,CAAhD,eAAgD,OAA3C,UAAQ,EAAA2b,qBAAqBvT,I,2EC5B3B,QACbzjB,KAAM,eACNgnB,WAAY,CACVgP,cACAjD,qBACAE,KAAA,QACAP,OAAA,SAEFpT,MARa,WASX,IAAM8O,EAAqB,eAAI,IACzBD,EAAuB,gBAAI,GAC3BkF,EAAmB,gBAAI,GACvB1E,EAAU,eAAS,IASzB,OARAyC,GAA2B,CAAC,GAAWG,UAAW,IAAI,SAAAzB,GACpDnB,EAAQrvB,OAAR,MAAAqvB,EAAO,CACL,EACAA,EAAQvwB,QAFH,sBAGD0xB,QAID,CACL1B,qBACAD,uBACAe,aAAc,SAACpsB,GACbqrB,EAAqB1tB,OAAQ,EAC7B2tB,EAAmB3tB,MAAQ,6BAA+BqC,GAE5D8yB,gBAAiB,kBAAOvC,EAAiB5yB,OAAS4yB,EAAiB5yB,OACnE4yB,mBACA1E,UACAqI,qBAAsB,SAACvT,GACrB,OAAIA,EAAMuO,QACR,eAAeC,GACbxO,EAAMrb,KAAKspB,OACXjO,EAAMrb,KAAKtF,GACX2gB,EAAMrb,KAAKpI,MAHb,yBAIkBiyB,GAChBxO,EAAMqO,gBAAgBJ,OACtBjO,EAAMqO,gBAAgBhvB,GACtB2gB,EAAMqO,gBAAgB9xB,OAGtByjB,EAAMsO,UACR,eAAeE,GACbxO,EAAMrb,KAAKspB,OACXjO,EAAMrb,KAAKtF,GACX2gB,EAAMrb,KAAKpI,MAHb,6BAIsBiyB,GACpBxO,EAAMoO,iBAAiBH,OACvBjO,EAAMoO,iBAAiB/uB,GACvB2gB,EAAMoO,iBAAiB7xB,OAI3B,eAAeiyB,GACbxO,EAAMrb,KAAKspB,OACXjO,EAAMrb,KAAKtF,GACX2gB,EAAMrb,KAAKpI,MAHb,2BAIoBiyB,GAClBxO,EAAMoO,iBAAiBH,OACvBjO,EAAMoO,iBAAiB/uB,GACvB2gB,EAAMoO,iBAAiB7xB,MAPzB,eAQQiyB,GACNxO,EAAMqO,gBAAgBJ,OACtBjO,EAAMqO,gBAAgBhvB,GACtB2gB,EAAMqO,gBAAgB9xB,WCxEhC,GAAOwf,OAAS,GAED,U,alB6CA,IACbxf,KAAM,OACNgnB,WAAY,CACVgN,OAAA,QACAiD,UAAA,QACAjB,cACAkB,YACAC,YACAC,WACAC,cACAC,YACAC,WAAA,GACAC,iBAEFlY,MAda,WAeX,IAAMC,EAAQF,KACRpT,EAAOsT,EAAMtd,MAAMgK,KACnBwrB,EAAO,iBAGPC,EAAe,gBAAS,kBAAOzrB,EAAKA,MAAQA,EAAKA,KAAK0rB,SAAW1rB,EAAKA,KAAK0rB,SAAW,kCACtFtC,EAAQ,gBAAS,kBAAOppB,EAAKA,KAAOA,EAAKA,KAAKopB,MAAQ,QACtDG,EAAQ,gBAAS,WACrB,MAAO,CACL,CACElC,MAAO+B,EAAM50B,MACb+0B,MAAO,CACL,CACElC,MAAO,WACPC,KAAM,iBACNqE,QAAS,WACPrY,EAAM1H,SAAN,eAAuB,GAAY8B,kBAO/C,MAAO,CACL0b,QACAqC,eACApa,WAAY,gBAAS,kBAAMiC,EAAMtd,MAAMqb,cACvCoY,eAAgB,gBAAS,kBAAMnW,EAAMtd,MAAMQ,KAAK4P,kBAChDwhB,SAAU,gBACR,uBAC4DC,IAA1DvU,EAAMtd,MAAM8c,IAAI7c,KAAKqd,EAAMtd,MAAMQ,KAAK4P,mBAG1CqH,OAAQ,kBAAM6F,EAAM1H,SAAN,eAAuB,GAAY6B,UAEjD+d,OACAnC,eAAgB,SAAC7R,GACfgU,EAAKh3B,MAAM+tB,OAAO/K,IAEpB+R,W,amBpGN,MAAM,GAAa,GAAO5I,aAAe,GAEzC,GAAW,UAAY,cACvB,GAAOpN,OAAS,GAED,UCoBA,kBAAgB,CAC7Bxf,KAAM,OAENgnB,WAAY,CACV6Q,OACAC,KAAA,GACAC,YAAA,GACAC,cAAA,QACAC,MAAA,SAGF3Y,MAX6B,WAY3B,IAAMC,EAAQF,KACR6Y,EAAS,kBACTC,EAAQ,kBACRjE,EAAY3U,EAAMtd,MAAMQ,KACxBmnB,EAAerK,EAAMtd,MAAMid,QAC3BkZ,EAAW7Y,EAAMtd,MAAM8c,IACvBsZ,EAAoB9Y,EAAMtd,MAAMmd,aAChCW,EAAiB,eAAI,MACvBuY,GAAyB,EACzB,GAAY,EAGhB,gBACE,kBAAMH,EAAM/sB,OAAOtI,MACnB,WACEyc,EAAMjd,OAAN,eACU,GAAc+U,sBACtB8gB,EAAM/sB,OAAOtI,MAGjB,CAAEyhB,WAAW,IAUf,IAAMgU,EAAe,SACnBC,EACAhzB,EACA9C,GACkC,MAEJwmB,GAC5B1jB,EACA9C,EACA81B,GALgC,sBAE3BC,EAF2B,KAEXh0B,EAFW,KAOlC,OAAIA,GACFU,EAAW,2CAA4C,CAAEV,QAClD,IAEFg0B,EAAeC,WAGlBF,EAAgB,eAAmB,MAEnCG,EAAgB,eAAoC,IAGtDC,GAAkB,EACtB,gBAAmB,yDAAC,WAAOlyB,EAAID,GAAX,iFAClBmyB,GAAkB,EADA,2CAAD,yDAInB,gBACE,iBAAM,CAAC1E,EAAU1uB,kBACjB,WACE,GACEozB,GACAT,EAAM/sB,OAAOtI,GAAG1E,OAAS,GACzB81B,EAAU1uB,cAAcpH,OAAS,EACjC,OACoBmH,EAClB4yB,EAAM/sB,OAAOtI,GACboxB,EAAU1uB,eAHZ,sBACOqzB,EADP,KAKiB,MAAbA,GACFtZ,EAAMjd,OAAN,kBAAwB,GAAiBsW,SAAW,CAClD7R,GAAI8xB,EAAU7yB,OAAOe,EAAImtB,EAAU1uB,cAAc,GAAG,KAAKQ,OAAOe,EAChEC,GAAI6xB,EAAU7yB,OAAOgB,EAAIktB,EAAU1uB,cAAc,GAAG,KAAKQ,OAAOgB,QAQ1E,gBACE,iBAAM,CACJktB,EAAU1uB,cACVokB,EAAa7Q,cACb6Q,EAAa3Q,iBAEf,WAAK,MAC6BmP,GAC9B8L,EAAU1uB,cACV0uB,EAAUxxB,WACV,CAAEqe,MAAOzf,OAAOyI,WAAYkX,OAAQ3f,OAAO2I,aAC3C2f,EAAa7Q,cACb6Q,EAAavQ,IACbuQ,EAAatQ,YAPZ,sBACIwf,EADJ,KACsBr0B,EADtB,KASQ,MAAPA,GACFU,EAAW,iDAAkD,CAAEV,QAGjE+zB,EAAc/3B,MAAQq4B,EACtBH,EAAcl4B,MAAQ83B,EACpBO,EACA5E,EAAU1uB,cACV0uB,EAAUxxB,cAGd,CAAE6hB,WAAW,EAAMwU,MAAM,IAG3B,IAAM3Y,EAA2B,eAAoC,IAuBrE,OAtBA,gBACE,iBAAM,CACJwJ,EAAavQ,IAAItS,EACjB6iB,EAAavQ,IAAIrS,EACjB4iB,EAAaxQ,KACbuf,MAEF,WAKE,IAAMK,EAAqB9zB,EAAMyzB,EAAcl4B,OAC/C2f,EAAyB3f,MAAQipB,GAC/BsP,EACApP,EAAaxQ,KACbwQ,EAAavQ,OAGjB,CAAEkL,WAAW,EAAMwU,MAAM,IAGpB,CAILzY,SAAU,gBAAS,WACjB,GAA2B,MAAvBkY,EAAc/3B,MAChB,MAAO,GAET,IAAMw4B,EAAab,EAASj2B,YAAYq2B,EAAc/3B,OACtD,IAAKw4B,EACH,MAAO,GANa,uBAUFN,EAAcl4B,OAVZ,IAUtB,2BAAyC,KAA9BiF,EAA8B,QACvC,IAAK,IAAM9B,KAAU8B,EAAO,CAC1B,IAAM0C,EAAO1C,EAAM9B,GACnB,GAAkB,IAAdwE,EAAKrC,MAAa,CACpB,IAAMyS,EAAMygB,EAAW/1B,QAAQkF,EAAKtF,KACxB,GAAR0V,GACFygB,EAAW35B,OAAOkZ,EAAK,MAhBT,8BAsBtB,IAtBsB,EAsBhB0gB,EAActzB,EAAaqzB,EAAY/E,EAAU1uB,eACjDvG,EAAS,GAvBO,iBAwBGi6B,GAxBH,IAwBtB,2BAAsC,KAA3BC,EAA2B,QAC9BC,EAAKl0B,EAAMi0B,GACjBC,EAAGpzB,OAASkiB,GACViR,EAAWnzB,OACX4jB,EAAaxQ,KACbwQ,EAAavQ,KAEfpa,EAAOP,KAAK06B,IA/BQ,8BAkCtB,OAAOn6B,KAMTuhB,oBAAqB,gBAAS,WAC5B,OAAO6X,EAAkBl0B,WAM3Boc,qBAAsB,gBAAS,WAC7B,GAA2B,MAAvBiY,EAAc/3B,MAChB,MAAO,GAET,IAAM+f,EAAsBtb,EAAMmzB,EAAkBl0B,SACpD,IAAKqc,EACH,MAAO,GANyB,uBAUdmY,EAAcl4B,OAVA,IAUlC,2BAAyC,KAA9BiF,EAA8B,QACvC,IAAK,IAAM9B,KAAU8B,EAAO,CAC1B,IAAM0C,EAAO1C,EAAM9B,GACnB,GAAkB,IAAdwE,EAAKrC,MAAa,CACpB,IAAMyS,EAAMgI,EAAoBtd,QAAQkF,EAAKtF,KACjC,GAAR0V,GACFgI,EAAoBlhB,OAAOkZ,EAAK,MAhBN,8BAsBlC,IAtBkC,EAsB5B6gB,EAAuBzzB,EAC3B4a,EACA0T,EAAU1uB,eAENvG,EAAS,GA1BmB,iBA2BAo6B,GA3BA,IA2BlC,2BAAwD,KAA7CC,EAA6C,QAChDF,EAAKl0B,EAAMo0B,GACjBF,EAAGpzB,OAASkiB,GACVoR,EAAoBtzB,OACpB4jB,EAAaxQ,KACbwQ,EAAavQ,KAEfpa,EAAOP,KAAK06B,IAlCoB,8BAqClC,OAAOn6B,KAGTqe,WAAY,gBAAS,kBAAMiC,EAAMtd,MAAMqb,cACvCjL,eAAgB,gBAAS,kBAAM6hB,EAAU7hB,kBACzCE,4BAA6B,gBAAS,kBACpC2hB,EAAU7hB,eACNkN,EAAMtd,MAAM0c,aAAalb,cAAcywB,EAAU7hB,gBACjD,MAEN+N,yBAA0BA,EAC1BK,aAAc,WAAF,8CAAE,WAAO9U,GAAP,uGACgB4T,EAAM1H,SAAN,gCACD,EAA6B5T,aACtD0H,EAAE7I,IAHQ,UACNy2B,EADM,OAKPA,EALO,iEAQNha,EAAM1H,SAAN,UAAkB,GAAQ+E,oBAAsB,CACpDja,OAAQgJ,EAAE7I,GACVyW,MAAO,CACLxS,EAAG4E,EAAE4N,MAAMxS,EAAI6iB,EAAaxQ,KAC5BpS,EAAG2E,EAAE4N,MAAMvS,EAAI4iB,EAAaxQ,QAZpB,2CAAF,sDAAE,GAgBd4G,wBAAyB,WACvBsY,GAAyB,GAE3BrY,yBAA0B,WACxBqY,GAAyB,GAE3BvY,iBACAW,WAAY,SAAC/U,GACN2sB,EAGHvY,EAAetf,MAAQkL,EAAE7I,GAFzBo1B,EAAOx5B,KAAK,CAAEsB,KAAM,OAAQoL,OAAQ,CAAEtI,GAAI6I,EAAE7I,OAKhD6d,UAAW,SAAChV,GACV,GAAY,EACZ4T,EAAMjd,OAAN,eAAqB,GAAc+U,sBAAwB1L,EAAE7I,KAE/D8d,WAAY,SAACjV,GACX,GAAY,EACZ4T,EAAMjd,OAAN,eACU,GAAc+U,sBACtB8gB,EAAM/sB,OAAOtI,KAGjB+d,YAAa,SAAC4C,GACRlE,EAAMtd,MAAMqb,YAAc,GAI9BiC,EAAMjd,OAAN,kBAAwB,GAAiBqW,SAAW8K,IAEtDrK,KAAM,SAACqK,GAEL,IAAM+V,EAAU,CACdzyB,GAAI0c,EAAMzd,OAAOe,EAAI6iB,EAAavQ,IAAItS,GAAK6iB,EAAaxQ,KACxDpS,GAAIyc,EAAMzd,OAAOgB,EAAI4iB,EAAavQ,IAAIrS,GAAK4iB,EAAaxQ,MAE1DmG,EAAMjd,OAAN,kBAAwB,GAAiBoW,WAAa,EAAI+K,EAAMlK,OAChE,IAAMkgB,EAAQ,CACZ1yB,EAAGyyB,EAAQzyB,EAAI6iB,EAAaxQ,KAAOwQ,EAAavQ,IAAItS,EACpDC,EAAGwyB,EAAQxyB,EAAI4iB,EAAaxQ,KAAOwQ,EAAavQ,IAAIrS,GAEtDuY,EAAMjd,OAAN,kBAAwB,GAAiBqW,SAAW,CAClDlS,KAAMgzB,EACN/yB,GAAI+c,EAAMzd,SAEZuZ,EAAMjd,OAAN,kBACa,GAAiBuW,iBAC5B4K,EAAMzd,aC/UhB,GAAOwZ,OAAS,GAED,U,yBCFN,eAAU,SAAP,OAAG,G,GAET,eAAiB,SAAd,cAAU,G,GAIV,eAAc,SAAX,WAAO,G,GACV,eAAe,SAAZ,YAAQ,G,GACX,eAAe,SAAZ,YAAQ,G,GAChB,eAAa,SAAV,UAAM,G,4EAXA,EAAAkP,c,iBACX,eAiBM,UAhBJ,eAA2C,YAAtC,G,eAAU,IAAC,eAAG,EAAAyJ,MAAM/sB,OAAOtI,IAAE,KAClC,eAIM,YAHJ,G,eAAiB,IACjB,mBAAOsB,KAAK,EAAAqW,OAAM,cAAeoU,sBAAuB,IACxD,mBAAOzqB,KAAK,EAAAqW,OAAM,cAAeqU,sBAAkB,KAErD,eAAgD,YAA3C,G,eAAc,IAAC,eAAG,EAAArU,OAAM,gBAC7B,eAAkD,YAA7C,G,eAAe,IAAC,eAAG,EAAAA,OAAM,iBAC9B,eAAkD,YAA7C,G,eAAe,IAAC,eAAG,EAAAA,OAAM,iBAC9B,IAE0C,G,mBAAdvX,QAAQ,EAAAuX,OAAM,Y,iBAD1C,eAIE,G,MAFCY,QAAS,EAAAZ,OAAM,uBACfqR,KAAM,I,uCAET,eAA4D,wBAA7Cjf,KAAKC,UAAU,EAAA2N,OAAM,wB,iBAjBtC,eAAoE,QAA3C,2CCMZ,QACbza,KAAM,SACNgnB,WAAY,CAAE8L,aAEdxT,MAJa,WAKX,IAAMC,EAAQF,KACRqP,EAAe,gBACnB,kBAAMnP,EAAMtd,MAAMgK,KAAKA,OAASsT,EAAMtd,MAAMgK,KAAKA,KAAK2P,eAElDuc,EAAQ,kBACR1d,EAAS,eAAI,IAwBnB,OAtBA,gBACE,kBAAMiU,EAAajuB,QADhB,wCAEH,0GACMiuB,EAAajuB,MADnB,uBAGUi5B,EAAS,eACb,iBACA,UACAvB,EAAM/sB,OAAOtI,IANnB,SAQ0B,eAAO42B,GARjC,OAQUC,EARV,OAUQA,EAAQ7tB,WACV2O,EAAOha,MAAQk5B,EAAQ/7B,QAX7B,2CAeA,CACE2mB,WAAW,IAIR,CACLmK,eACAyJ,QACA1d,YCzCN,GAAO+E,OAAS,GAED,U,yBCFN,eAAU,SAAP,OAAG,G,GACN,eAA2B,SAAxB,wBAAoB,G,GAE1B,eAAiB,SAAd,cAAU,G,GAKV,eAAY,SAAT,SAAK,G,GACb,eAAe,SAAZ,YAAQ,G,GAMT,eAAoB,SAAjB,iBAAa,G,GAMhB,eAAgB,SAAb,aAAS,G,iEAvBL,EAAAkP,c,iBACX,eA2BM,UA1BJ,eAA2C,YAAtC,G,eAAU,IAAC,eAAG,EAAAyJ,MAAM/sB,OAAOtI,IAAE,KAClC,eAAgE,YAA3D,G,eAA2B,IAAC,eAAG,EAAAsF,KAAI,qBACxC,eAKM,YAJJ,GACA,eAEM,KAFHqjB,OAAO,SAAUC,KAAM,EAAAtjB,KAAI,oB,eAC5B,EAAAA,KAAI,uBAAC,WAGT,eAAiD,YAA5C,G,eAAY,IAAC,eAAG,EAAAA,KAAI,qBACzB,GACA,eAGE,GAFCiT,QAAS,EAAAjT,KAAI,gBAAmB,EAAAA,KAAI,8BACpC0jB,KAAM,I,oBAET,eAKM,YAJJ,I,mBACA,eAEM,2BAFY,EAAA1jB,KAAI,0BAAVtF,G,wBAAZ,eAEM,OAFmC/B,IAAK+B,GAAE,CAC9C,eAA0C,KAAvC2oB,OAAO,SAAUC,KAAM5oB,G,eAAOA,GAAE,iB,QAGvC,eAKM,YAJJ,I,mBACA,eAEM,2BAFY,EAAAsF,KAAI,6BAAVtF,G,wBAAZ,eAEM,OAFsC/B,IAAK+B,GAAE,CACjD,eAA0C,KAAvC2oB,OAAO,SAAUC,KAAM5oB,G,eAAOA,GAAE,iB,6BAzBzC,eAAyE,QAAhD,gDCMZ,QACb9C,KAAM,kBACNgnB,WAAY,CAAE8L,aAEdxT,MAJa,WAKX,IAAMC,EAAQF,KACRqP,EAAe,gBACnB,kBAAMnP,EAAMtd,MAAMgK,KAAKA,OAASsT,EAAMtd,MAAMgK,KAAKA,KAAK2P,eAElDuc,EAAQ,kBACR/vB,EAAO,eAAI,IA0DjB,OAxDA,gBACE,kBAAMsmB,EAAajuB,QADhB,wCAEH,8FACE4E,QAAQgJ,IAAI,qBAAsBqgB,EAAajuB,OAC3CiuB,EAAajuB,OAEA,OACZiJ,WACAC,IAFY,iBAEEwuB,EAAM/sB,OAAOtI,KAC3B82B,KAAK,SAAS,SAAAh8B,GACTA,EAAKkO,UACP1D,EAAK3H,MAAQ7C,EAAKmO,MAClB3D,EAAK3H,MAAM,gBAAiB,EAC5B4E,QAAQgJ,IAAI,aAAcjG,EAAK3H,SAG/B2H,EAAK3H,MAAM,gBAAiB,EAG5B,OACGiJ,WACAC,IAFH,eAEewuB,EAAM/sB,OAAOtI,KACzB82B,KAAK,SAAS,SAAAh8B,GACTA,EAAKkO,WACP1D,EAAK3H,MAAM,OAAS7C,EAAKmO,UAK/B,OACGrC,WACAC,IAFH,wBAEwBwuB,EAAM/sB,OAAOtI,KAClC82B,KAAK,SAAS,SAAAh8B,GACTA,EAAKkO,WACP1D,EAAK3H,MAAM,gBAAkB7C,EAAKmO,UAKxC,OACGrC,WACAC,IAFH,wBAEwBwuB,EAAM/sB,OAAOtI,KAClC82B,KAAK,SAAS,SAAAh8B,GACTA,EAAKkO,WACP1D,EAAK3H,MAAM,gBAAkB7C,EAAKmO,cA1ClD,2CAiDA,CACEwY,WAAW,IAIR,CACLmK,aAAcA,EACdyJ,QACA/vB,UC3EN,GAAOoX,OAAS,GAED,U,yCCJb,eAAuE,UAAnE,kECAN,MAAMqa,GAAS,GACfA,GAAOra,OAAS,GAED,UCGTsa,GAAgC,CACpC,CACElsB,KAAM,iBACNmsB,UAAWC,IAEb,CACEpsB,KAAM,yBACN5N,KAAM,mBACN+5B,UAAWE,IAEb,CACErsB,KAAM,eACN5N,KAAM,SACN+5B,UAAWG,IAEb,CACEtsB,KAAM,QACN5N,KAAM,OACN+5B,UAAWI,IAEb,CACEvsB,KAAM,iBACNmsB,UAAWK,KAIT,GAAS,gBAAa,CAC1Bjb,QAAS,gBAAiB,KAC1B2a,YAGa,M,wCCzBf,eAAUO,IACP/M,IAAI,GAAO,IACXA,IAAI,IACJA,IAAI,SACJA,IAAI,SACJA,IAAI,SACJgN,MAAM,S,qBCnBT,IAAI9zB,EAAM,CACT,QAAS,OACT,WAAY,OACZ,QAAS,OACT,WAAY,OACZ,QAAS,OACT,WAAY,OACZ,QAAS,OACT,WAAY,OACZ,QAAS,OACT,WAAY,OACZ,QAAS,OACT,WAAY,OACZ,SAAU,OACV,YAAa,OACb,SAAU,OACV,YAAa,QAId,SAAS+zB,EAAeC,GACvB,IAAI13B,EAAK23B,EAAsBD,GAC/B,OAAOj7B,EAAoBuD,GAE5B,SAAS23B,EAAsBD,GAC9B,IAAIj7B,EAAoBW,EAAEsG,EAAKg0B,GAAM,CACpC,IAAI7uB,EAAI,IAAIjH,MAAM,uBAAyB81B,EAAM,KAEjD,MADA7uB,EAAEnH,KAAO,mBACHmH,EAEP,OAAOnF,EAAIg0B,GAEZD,EAAexkB,KAAO,WACrB,OAAO1X,OAAO0X,KAAKvP,IAEpB+zB,EAAeG,QAAUD,EACzB96B,EAAOD,QAAU66B,EACjBA,EAAez3B,GAAK,Q,qBCrCpBnD,EAAOD,QAAU,IAA0B,4B,qBCC3CC,EAAOD,QAAU,CAAC,MAAQ,8B,kECD1BC,EAAOD,QAAU,IAA0B,0B,kCCA3C,W,qBCAAC,EAAOD,QAAU,IAA0B,+B,kCCA3C,oE,qBCAAC,EAAOD,QAAU,IAA0B","file":"js/app.90c3c075.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","module.exports = __webpack_public_path__ + \"img/sign-in.857c8105.svg\";","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./RemoveIcon.vue?vue&type=style&index=0&id=fb1a5bf4&scoped=true&lang=css\"","module.exports = __webpack_public_path__ + \"img/chat.b54d0730.svg\";","module.exports = __webpack_public_path__ + \"img/action.885d4d13.svg\";","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Title.vue?vue&type=style&index=0&id=c3593888&scoped=true&lang=css\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./SVGTextBox.vue?vue&type=style&index=0&id=3400d8a7&scoped=true&lang=css\"","module.exports = __webpack_public_path__ + \"img/plugin.71b16b67.svg\";","module.exports = __webpack_public_path__ + \"img/add.2ade61b0.svg\";","module.exports = __webpack_public_path__ + \"img/talk.636aebb1.svg\";","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Index.vue?vue&type=style&index=0&id=801f6dba&scoped=true&lang=css\"","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Index_wrapper_1nXRC\",\"textSearch\":\"Index_textSearch_1a-zf\"};","module.exports = __webpack_public_path__ + \"img/switch-off.17f7401d.svg\";","module.exports = __webpack_public_path__ + \"img/remove-off.9d54941e.svg\";","module.exports = __webpack_public_path__ + \"img/remove-on.9d54941e.svg\";","export { default } from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-0-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-0-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-0-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Index.vue?vue&type=style&index=0&id=67eb0fd4&module=true&lang=css\"; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-0-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-0-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-0-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Index.vue?vue&type=style&index=0&id=67eb0fd4&module=true&lang=css\"","module.exports = __webpack_public_path__ + \"img/paste.c9ceeece.svg\";","module.exports = __webpack_public_path__ + \"img/add-on.5a83fc0e.svg\";","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./AddBasedOnIcon.vue?vue&type=style&index=0&id=2494d1ac&scoped=true&lang=css\"","module.exports = __webpack_public_path__ + \"img/switch-on.70cdd4b4.svg\";","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Markdown.vue?vue&type=style&index=0&id=051e2c63&scoped=true&lang=css\"","module.exports = __webpack_public_path__ + \"img/cut.5b0b166e.svg\";","module.exports = __webpack_public_path__ + \"img/goal.3f563b24.svg\";","export { default } from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-0-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-0-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-0-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Textsearch.vue?vue&type=style&index=0&id=e144fd9c&module=true&lang=css\"; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-0-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-0-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-0-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Textsearch.vue?vue&type=style&index=0&id=e144fd9c&module=true&lang=css\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./PinIcon.vue?vue&type=style&index=0&id=5b15f4ff&scoped=true&lang=css\"","module.exports = __webpack_public_path__ + \"img/pin-off.730bd912.svg\";","module.exports = __webpack_public_path__ + \"img/pin-on.0b6013a3.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchBox\":\"Textsearch_searchBox_1SbLb\"};","module.exports = __webpack_public_path__ + \"img/user.55fe760e.svg\";","<template>\n  <router-view />\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from \"vue\";\nimport { useStore, actions } from \"@/store\";\nexport default defineComponent({\n  setup() {\n    const store = useStore();\n    store.dispatch(actions.init);\n  }\n});\n</script>\n","import { Commit } from \"vuex\";\nimport { NodeRecordItem } from \"@/store/tree\";\n\nexport type Pins = Record<\n  string /* node_id of pinned node */,\n  string[] /* list of parents where this node_id is visible */\n>;\n\nexport interface State {\n  pins: Pins;\n  pinsReverse: Record<\n    string /* node_id of parent whose children contain pinned nodes (that must be visible) */,\n    string[] /* array of pins (= node ids) that is visible in this node_id */\n  >;\n}\n\nexport const mutations = {\n  SET_PINS: \"SET_PINS\",\n  ADD_TO_PINS: \"ADD_TO_PINS\",\n  REMOVE_PIN: \"REMOVE_PIN\",\n  ADD_TO_PINS_REVERSE: \"ADD_TO_PINS_REVERSE\"\n};\n\nexport const actions = {\n  AddPin: \"AddPin\",\n  RemovePin: \"RemovePin\"\n};\n\nexport const store = {\n  namespaced: true,\n  state: {\n    pins: {},\n    pinsReverse: {}\n  },\n  actions: {\n    // had to use action instead of mutation to get access to rootState https://github.com/vuejs/vuex/issues/344\n    [actions.AddPin](\n      {\n        commit,\n        rootState\n      }: {\n        commit: Commit;\n        rootState: { tree: { nodeRecord: Record<string, NodeRecordItem> } };\n      },\n      v: { nodeId: string; parentId: string }\n    ) {\n      // get all parents of nodeId until parentID\n      let currentParent = rootState.tree.nodeRecord[v.nodeId].parent;\n      if (!currentParent) {\n        return;\n      }\n      const parentIds = [];\n      while (currentParent && currentParent.id != v.parentId) {\n        parentIds.push(currentParent.id);\n        currentParent = rootState.tree.nodeRecord[currentParent.id].parent;\n      }\n      parentIds.push(v.parentId);\n      // Set them to pins\n      commit(mutations.ADD_TO_PINS, { nodeId: v.nodeId, parentIds });\n\n      // And for each parent add pined node id to it\n      for (const parentId of parentIds) {\n        commit(mutations.ADD_TO_PINS_REVERSE, {\n          nodeId: parentId,\n          pinId: v.nodeId\n        });\n      }\n    },\n    [actions.RemovePin]({ commit }: { commit: Commit }, nodeId: string) {\n      commit(mutations.REMOVE_PIN, nodeId);\n    }\n  },\n  mutations: {\n    [mutations.SET_PINS](state: State, pins: Pins) {\n      state.pins = pins;\n      state.pinsReverse = {};\n      for (const pinId in pins) {\n        for (const parentId of pins[pinId]) {\n          if (!state.pinsReverse[parentId]) {\n            state.pinsReverse[parentId] = [];\n          }\n          state.pinsReverse[parentId].push(pinId);\n        }\n      }\n    },\n    [mutations.ADD_TO_PINS](\n      state: State,\n      v: { nodeId: string; parentIds: string[] }\n    ) {\n      state.pins[v.nodeId] = v.parentIds;\n    },\n    [mutations.ADD_TO_PINS_REVERSE](\n      state: State,\n      v: { nodeId: string; pinId: string }\n    ) {\n      if (!state.pinsReverse[v.nodeId]) {\n        state.pinsReverse[v.nodeId] = [];\n      }\n      state.pinsReverse[v.nodeId].push(v.pinId);\n    },\n    [mutations.REMOVE_PIN](state: State, nodeId: string) {\n      for (const parentId of state.pins[nodeId]) {\n        const index = state.pinsReverse[parentId].indexOf(nodeId);\n        state.pinsReverse[parentId].splice(index, 1);\n      }\n      delete state.pins[nodeId];\n    }\n  }\n};\n","export type TitleBox = {\n  position: {\n    x: number;\n    y: number;\n  };\n  bbox: {\n    width: number;\n    height: number;\n  };\n};\n\nexport type TitleBoxMap = Record<\n  string /* node_id */,\n  TitleBox /* title box attributes */\n>;\n\nexport interface State {\n  layerMap: Record<string, TitleBoxMap>;\n}\n\nexport const mutations = {\n  SET_MAP: \"SET_MAP\"\n};\n\nexport const store = {\n  namespaced: true,\n  state: {\n    layerMap: {}\n  },\n  mutations: {\n    [mutations.SET_MAP](\n      state: State,\n      v: { layerName: string; titleBoxMap: TitleBoxMap }\n    ) {\n      state.layerMap[v.layerName] = v.titleBoxMap;\n    }\n  }\n};\n","export type Preconditions = Record<\n  string /* id of node with premises */,\n  string[] /* ids of premise nodes */\n>;\n\nexport type ReverseIndex = Record<\n  string /* id of node (A) */,\n  string[] /* ids nodes nodes that has node A as a premise */\n>;\n\nexport interface State {\n  preconditions: Preconditions;\n  reverseIndex: ReverseIndex; // reverse index for preconditions - i e reverseIndex[id1] as nodeID1 means that nodeID1 has id1 as its precondition\n}\n\nexport const mutations = {\n  SET_PRECONDITIONS: \"SET_PRECONDITIONS\",\n  UPDATE_PRECONDITIONS: \"UPDATE_PRECONDITIONS\"\n};\n\nexport const store = {\n  namespaced: true,\n  state: {\n    preconditions: {} as Record<string, string[]>,\n    reverseIndex: {} as Record<string, string[]>\n  },\n  mutations: {\n    [mutations.SET_PRECONDITIONS](state: State, preconditions: Preconditions) {\n      state.preconditions = preconditions;\n\n      // create reverseIndex\n      for (const id in preconditions) {\n        for (const precondID of preconditions[id]) {\n          if (typeof state.reverseIndex[precondID] === \"undefined\") {\n            state.reverseIndex[precondID] = [];\n          }\n          state.reverseIndex[precondID].push(id);\n        }\n      }\n    },\n    [mutations.UPDATE_PRECONDITIONS](\n      state: State,\n      v: { nodeID: string; preconditionIDs: Array<string> }\n    ) {\n      if (!state.preconditions[v.nodeID]) {\n        state.preconditions[v.nodeID] = [];\n      }\n      // remove from reverseIndex old preconditions\n      for (const id of state.preconditions[v.nodeID]) {\n        if (\n          state.reverseIndex[id] &&\n          state.reverseIndex[id].indexOf(v.nodeID) != -1\n        ) {\n          state.reverseIndex[id].splice(\n            state.reverseIndex[id].indexOf(v.nodeID),\n            1\n          );\n        }\n      }\n\n      state.preconditions[v.nodeID] = v.preconditionIDs;\n\n      // add to reverseIndex new preconditions\n      for (const precondID of state.preconditions[v.nodeID]) {\n        if (typeof state.reverseIndex[precondID] === \"undefined\") {\n          state.reverseIndex[precondID] = [];\n        }\n        state.reverseIndex[precondID].push(v.nodeID);\n      }\n    }\n  }\n};\n","/**\n * This store contains nodeIDs that is permitted to move (change positions)\n * The idea is to restrict position change only for just added nodes and its neighbours\n * Otherwise there is risk that everybody will to do little tweaks in node coordinates that will\n * sum up in constant map visual mess\n */\nimport { Commit, Dispatch } from \"vuex\";\nconst PERMISSION_TIMEOUT = 60 * 60 * 1000; // time after which permit is revoked (in milliseconds)\n\nexport const mutations = {\n  ADD_NODES: \"ADD_NODES\",\n  REMOVE_NODES: \"REMOVE_NODES\"\n};\n\nexport const actions = {\n  CheckNodeID: \"CheckNodeID\"\n};\n\nexport interface State {\n  permittedNodeIDs: Record<string, number>; // key is nodeID, value is created_at\n}\n\nexport const store = {\n  namespaced: true,\n  state: {\n    permittedNodeIDs: {}\n  },\n  mutations: {\n    [mutations.ADD_NODES](state: State, nodeIDs: string) {\n      for (const nodeID of nodeIDs) {\n        state.permittedNodeIDs[nodeID] = new Date().getTime();\n      }\n    },\n    [mutations.REMOVE_NODES](state: State, nodeIDs: string) {\n      for (const nodeID of nodeIDs) {\n        delete state.permittedNodeIDs[nodeID];\n      }\n    }\n  },\n  actions: {\n    [actions.CheckNodeID](\n      { commit, state }: { commit: Commit; state: State },\n      nodeID: string\n    ) {\n      if (\n        !!state.permittedNodeIDs[nodeID] &&\n        new Date().getTime() <\n          state.permittedNodeIDs[nodeID] + PERMISSION_TIMEOUT\n      ) {\n        return true;\n      }\n      if (state.permittedNodeIDs[nodeID]) {\n        commit(mutations.REMOVE_NODES, [nodeID]);\n      }\n      return false;\n    }\n  }\n};\n","/* eslint-disable  @typescript-eslint/no-explicit-any */\nimport { ErrorKV } from \"@/types/errorkv\";\n\nexport const UNAUTHORIZED = 401;\n\nexport default (\n  message: string,\n  kv: Record<string, any>,\n  code?: number\n): ErrorKV => {\n  const err = new Error(message);\n\n  return {\n    error: err,\n    kv: kv,\n    code\n  };\n};\n","import { cloneDeep } from \"lodash\";\nimport { Point, Tree, TreeSkeleton, Viewport } from \"@/types/graphics\";\nimport { ErrorKV } from \"@/types/errorkv\";\nimport NewErrorKV from \"../tools/errorkv\";\nimport { getBoundingBorders, getVoronoiCells } from \"../tools/graphics\";\n\nexport const ROUND_EPSILON = 0;\n\n/**\n * Correct modulo on negative numbers\n * @param n\n * @param m\n */\nexport function mod(n: number, m: number): number {\n  return ((n % m) + m) % m;\n}\n\nexport function round(num: number): number {\n  const t = Math.pow(10, ROUND_EPSILON);\n  return Math.round(num * t) / t;\n}\n\nexport function sleep(ms: number) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\n/* eslint-disable  @typescript-eslint/no-explicit-any */\nexport function clone(v: any): any {\n  return cloneDeep(v);\n}\n\nexport function generateTreeSkeleton(\n  levelsNum: number,\n  numOnLevel: number\n): TreeSkeleton {\n  let globalID = 0;\n  const root = { id: String(globalID), children: [] };\n  let toProcess: TreeSkeleton[] = [root];\n  for (let i = 1; i < levelsNum; i++) {\n    const nextToProcess = [];\n    while (toProcess.length) {\n      const node = toProcess.shift();\n      node!.children = [];\n      for (let j = 0; j < numOnLevel; j++) {\n        globalID++;\n        const child = { id: String(globalID) };\n        node!.children.push(child);\n        nextToProcess.push(child);\n      }\n    }\n    toProcess = nextToProcess;\n  }\n\n  return root;\n}\n\n/**\n * Fill TreeSkeleton with default values to make real Tree\n * @param sk\n */\nexport function skeletonToTree(sk: TreeSkeleton, idAsTitle: boolean): Tree {\n  const res = clone(sk);\n  const stack: TreeSkeleton[] = [res];\n  while (stack.length) {\n    const node = stack.pop();\n    if (!node) {\n      continue;\n    }\n    node.id = String(node.id);\n    if (!node.title) {\n      node.title = idAsTitle ? String(node.id) : \"\";\n    }\n    if (!node.position) {\n      node.position = { x: 0, y: 0 };\n    }\n    if (!node.children) {\n      node.children = [];\n    }\n    stack.push(...node.children);\n  }\n  return res;\n}\n\n/**\n * Traverse tree and fill position\n */\nexport function fillTreePositions(\n  tree: Tree,\n  rootWH: Viewport\n): ErrorKV | null {\n  if (tree.id !== \"0\") {\n    return NewErrorKV(\"fillTreePositions: root node id must be '0'\", { tree });\n  }\n  tree.position = { x: rootWH.width / 2, y: rootWH.height / 2 };\n  const nodeBorders: Record<string, { topLeft: Point; bottomRight: Point }> = {\n    0: {\n      topLeft: { x: 0, y: 0 },\n      bottomRight: { x: rootWH.width, y: rootWH.height }\n    }\n  };\n  const stack: Tree[] = [tree];\n  while (stack.length) {\n    const node = stack.pop();\n    if (!node || !node.children || !node.children.length) {\n      continue;\n    }\n    const borderBox = nodeBorders[node.id];\n    const height = borderBox.bottomRight.y - borderBox.topLeft.y;\n    const width = borderBox.bottomRight.x - borderBox.topLeft.x;\n    if (height > width) {\n      for (const i in node.children) {\n        node.children[i].position = {\n          x: node.position!.x,\n          y:\n            borderBox.topLeft.y +\n            (Number(i) + 1 / 2) * (height / node.children.length)\n        };\n      }\n    } else {\n      for (const i in node.children) {\n        node.children[i].position = {\n          x:\n            borderBox.topLeft.x +\n            ((Number(i) + 1 / 2) * width) / node.children.length,\n          y: node.position!.y\n        };\n      }\n    }\n\n    // compute children borders as voronoi cells bounding boxes\n    const [cells, err] = getVoronoiCells(\n      [\n        { x: borderBox.topLeft.x, y: borderBox.topLeft.y },\n        { x: borderBox.bottomRight.x, y: borderBox.topLeft.y },\n        { x: borderBox.bottomRight.x, y: borderBox.bottomRight.y },\n        { x: borderBox.topLeft.x, y: borderBox.bottomRight.y }\n      ],\n      node.children.map(ch => ch.position)\n    );\n    if (err) {\n      return NewErrorKV(\"fillTreePositions: error in getVoronoiCells\", { err });\n    }\n    for (const i in cells) {\n      const cellBBox = getBoundingBorders(cells[i].border);\n      nodeBorders[node.children[i].id] = {\n        topLeft: cellBBox.leftBottom,\n        bottomRight: cellBBox.rightTop\n      };\n    }\n\n    stack.push(...node.children);\n  }\n\n  return null;\n}\n\nexport function printError(msg: string, kv: any) {\n  if (!kv) {\n    console.error(msg);\n  }\n\n  // const callback = function(stackframes: StackFrame[]) {\n  //   const stringifiedStack = stackframes.map(function(sf) {\n  //     return sf.toString();\n  //   }).join('\\n');\n  //   console.error(msg, stringifiedStack);\n  // };\n  //\n  // const errBack = function(e: Error) { console.log(e.message); };\n  //\n  const kvArr = [];\n  for (const i in kv) {\n    kvArr.push(i, kv[i]);\n    // if (kv[i] instanceof Error) {\n    //   StackTrace.get({offline: true}).then(callback).catch(errBack);\n    // }\n  }\n\n  console.error(msg, ...kvArr);\n}\n","import { MapNode, Point, Tree } from \"@/types/graphics\";\nimport {\n  convertPosition,\n  getMaxDiagonal,\n  getVectorLength,\n  mergeMapNodeLayers,\n  treeToMapNodeLayers,\n  vectorOnNumber\n} from \"../../tools/graphics\";\nimport { ErrorKV } from \"@/types/errorkv\";\nimport NewErrorKV from \"../../tools/errorkv\";\nimport { clone } from \"../../tools/utils\";\nimport { NodeRecordItem } from \"@/store/tree/index\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nexport function findMapNode(\n  id: string,\n  mapNodeLayers: Array<Record<string, MapNode>>\n): [MapNode | null, number | null] {\n  for (const level in mapNodeLayers) {\n    const layer = mapNodeLayers[Number(level)];\n    if (layer && layer[id]) {\n      return [layer[id], Number(level)];\n    }\n  }\n\n  return [null, null];\n}\n\nexport function findMapNodes(\n  ids: string[],\n  mapNodeLayers: Array<Record<string, MapNode>>\n): MapNode[] {\n  const result: MapNode[] = [];\n  for (const layer of mapNodeLayers) {\n    if (!layer) {\n      continue;\n    }\n    for (const id of ids) {\n      if (layer[id]) {\n        result.push(layer[id]);\n      }\n    }\n  }\n\n  return result;\n}\n\nexport function createNewNode(title: string, center: Point): Tree {\n  return {\n    id: uuidv4(),\n    position: center,\n    title: title,\n    children: []\n  } as Tree;\n}\n\n/**\n * Вычисляет где можно поставить центр для нового подузла узла parent\n *\n * Логика добавления следующая.\n * Обозначим координаты центра узла parent как (Xc, Yc)\n * Если в узле нет ни одного подузла, то находим наибольшее расстояние между (Xc, Yc)\n * и вершинами границы, делим вектор соединяющий (Xc, Yc) и эту вершину пополам\n * и ставим там центр нового подузла\n *\n * Если в узле есть подузлы, берем подузел с наибольшей диагональю,\n * находим в нем наибольшую диагональ соединяющую 2 вершины границы,\n * делим ее пополам, старый центр ставим в центре одной половины, новый в центре другой.\n *\n * Добавляем рандом (см баг https://sci-map.atlassian.net/browse/SM-118)\n * @param parent\n * @param mapNodeLayers\n * @param addRandom\n */\nexport function getNewNodeCenter(\n  parent: Tree,\n  mapNodeLayers: Array<Record<number, MapNode>>,\n  addRandom: boolean\n): [\n  Point | null, // new node center\n  Tree | null, // existing node with corrected center (if any)\n  ErrorKV // error (if any)\n] {\n  const [parentMapNode] = findMapNode(parent.id, mapNodeLayers);\n  if (parentMapNode === null) {\n    return [\n      null,\n      null,\n      NewErrorKV(\"getNewNodeCenter: cannot find mapNode for parent\", {\n        parentId: parent.id,\n        mapNodeLayers: mapNodeLayers\n      })\n    ];\n  }\n\n  if (parent.children.length === 0) {\n    const fromCenterVectors = parentMapNode.border.map(p => ({\n      from: parentMapNode.center,\n      to: p\n    }));\n    let maxFromCenterVector = fromCenterVectors[0];\n    for (const v of fromCenterVectors) {\n      if (getVectorLength(v) > getVectorLength(maxFromCenterVector)) {\n        maxFromCenterVector = v;\n      }\n    }\n\n    let coeff = 1 / 2;\n    if (addRandom) {\n      coeff = Math.random() * (1 / 2) + 1 / 4;\n    }\n\n    return [\n      {\n        x:\n          maxFromCenterVector.from.x +\n          coeff * (maxFromCenterVector.to.x - maxFromCenterVector.from.x),\n        y:\n          maxFromCenterVector.from.y +\n          coeff * (maxFromCenterVector.to.y - maxFromCenterVector.from.y)\n      },\n      null,\n      null\n    ];\n  } else {\n    const maxDiagChild = parent.children[0];\n    let [maxDiagChildMapNode] = findMapNode(maxDiagChild.id, mapNodeLayers);\n    if (maxDiagChildMapNode === null) {\n      return [\n        null,\n        null,\n        NewErrorKV(\"getNewNodeCenter: cannot find maxDiagChild in layers\", {\n          maxDiagChildId: maxDiagChild.id,\n          mapNodeLayers: mapNodeLayers\n        })\n      ];\n    }\n    for (const child of parent.children) {\n      const [childMapNode] = findMapNode(child.id, mapNodeLayers);\n      if (childMapNode === null) {\n        return [\n          null,\n          null,\n          NewErrorKV(\"getNewNodeCenter: cannot find child in layers\", {\n            childId: child.id,\n            mapNodeLayers: mapNodeLayers\n          })\n        ];\n      }\n\n      const [childDiag, err1] = getMaxDiagonal(childMapNode.border);\n      if (err1) {\n        return [\n          null,\n          null,\n          NewErrorKV(\"getNewNodeCenter: error getMaxDiagonal\", {\n            childMapNode,\n            err1\n          })\n        ];\n      }\n      const [maxDiag, err2] = getMaxDiagonal(maxDiagChildMapNode.border);\n      if (err2) {\n        return [\n          null,\n          null,\n          NewErrorKV(\"getNewNodeCenter: error getMaxDiagonal\", {\n            maxDiagChildMapNode,\n            err2\n          })\n        ];\n      }\n      if (getVectorLength(childDiag) > getVectorLength(maxDiag)) {\n        maxDiagChildMapNode = childMapNode;\n      }\n    }\n\n    let coeff = 3 / 4;\n    if (addRandom) {\n      coeff = Math.random() * (1 / 4) + 2.5 / 4;\n    }\n\n    const [finalMaxDiag] = getMaxDiagonal(maxDiagChildMapNode.border);\n    const newNodeCenter = vectorOnNumber(finalMaxDiag!, coeff).to;\n    const modifiedNode = clone(maxDiagChild);\n    modifiedNode.position = vectorOnNumber(finalMaxDiag!, 1 / 4).to;\n    return [newNodeCenter, modifiedNode, null];\n  }\n}\n\nexport function updatePosition(\n  state: {\n    tree: Tree | null;\n    nodeRecord: Record<string, NodeRecordItem>;\n    mapNodeLayers: Array<Record<string, MapNode>>;\n  },\n  v: { nodeId: string; position: Point }\n): ErrorKV {\n  if (state.tree == null) {\n    return NewErrorKV(\"state.tree == null\", {});\n  }\n\n  const item = state.nodeRecord[v.nodeId];\n  if (!item) {\n    return NewErrorKV(\"updateNodePosition: cannot find node in nodeRecord\", {\n      \"v.nodeId\": v.nodeId,\n      \"state.nodeRecord\": state.nodeRecord\n    });\n  }\n\n  if (!item.parent) {\n    return NewErrorKV(\"updateNodePosition: cannot move root of tree\", {\n      \"v.nodeId\": v.nodeId\n    });\n  }\n\n  const [normalizedPosition] = convertPosition(\n    \"normalize\",\n    v.position,\n    item.parent.id,\n    state.mapNodeLayers\n  );\n  item.node.position = normalizedPosition!;\n\n  // Если мы меняем один узел, то могут поменяться границы всех соседей\n  // так что надо действовать так как будто поменялись границы всех подузлов родителя узла\n  const [parentMapNode, layerLevel] = findMapNode(\n    item.parent.id,\n    state.mapNodeLayers\n  );\n  if (!parentMapNode || layerLevel === null) {\n    return NewErrorKV(\"updateNodePosition: cannot find mapNode for parent\", {\n      id: item.parent.id,\n      \"state.mapNodeLayers\": state.mapNodeLayers\n    });\n  }\n  const [ls, err] = treeToMapNodeLayers(\n    item.parent,\n    parentMapNode.border,\n    parentMapNode.center\n  );\n  if (ls == null || err != null) {\n    return NewErrorKV(\"updateNodePosition: create layers for parent\", {\n      id: item.parent.id,\n      parentMapNode: parentMapNode\n    });\n  }\n  return mergeMapNodeLayers(state.mapNodeLayers, ls, layerLevel);\n}\n","import { DBNode } from \"@/api/types\";\nimport { Tree } from \"@/types/graphics\";\nimport { ErrorKV } from \"@/types/errorkv\";\nimport NewErrorKV from \"../tools/errorkv\";\n\n// convert children object to array\nexport function convertChildren(children: any): string[] {\n  let result: string[];\n\n  if (!children) {\n    result = [];\n  } else if (Array.isArray(children)) {\n    result = children.filter(childID => !!childID).sort();\n    result.forEach((childID, i, arr) => (arr[i] = childID.toString()));\n  } else {\n    result = Object.values(children)\n      .filter(childID => !!childID)\n      .sort() as string[];\n    result.forEach((childID, i, arr) => (arr[i] = childID.toString()));\n  }\n  return result;\n}\n\nexport function convertDBMapToTree(\n  dbNodes: Record<string, DBNode>\n): [Tree | null, ErrorKV] {\n  const root: Tree = {\n    id: dbNodes[\"0\"].id.toString(),\n    title: dbNodes[\"0\"].name,\n    position: dbNodes[\"0\"].position,\n    children: []\n  };\n  const stack = [root];\n\n  while (stack.length > 0) {\n    const node = stack.pop();\n    if (!node) {\n      continue;\n    }\n    if (!dbNodes[node.id]) {\n      return [\n        null,\n        NewErrorKV(\"Cannot find id in dbNodes\", { \"node.id\": node.id, dbNodes })\n      ];\n    }\n    dbNodes[node.id].children = convertChildren(dbNodes[node.id].children);\n    if (!dbNodes[node.id].children.length) {\n      continue;\n    }\n    const children: Tree[] = [];\n    for (const childID of dbNodes[node.id].children) {\n      if (!dbNodes[childID]) {\n        return [\n          null,\n          NewErrorKV(\"Cannot find child id in dbNodes\", {\n            childID,\n            parentID: node.id\n          })\n        ];\n      }\n      children.push({\n        id: childID.toString(),\n        title: dbNodes[childID].name,\n        position: dbNodes[childID].position,\n        children: []\n      });\n    }\n\n    node.children = children;\n    stack.push(...children);\n  }\n\n  return [root, null];\n}\n","import firebase from \"firebase/compat\";\nimport { Tree } from \"@/types/graphics\";\nimport { ErrorKV } from \"@/types/errorkv\";\nimport NewErrorKV from \"../tools/errorkv\";\nimport axios from \"axios\";\nimport { Pins } from \"@/store/pin\";\nimport { Preconditions } from \"src/store/precondition\";\nimport { DBNode } from \"@/api/types\";\nimport { convertChildren } from \"./helpers\";\nimport { NodeComment, NodeContent } from \"@/store/node_content\";\nimport emulatorConfig from \"../../firebase.json\";\nimport { debounce } from \"lodash\";\n\nimport { connectFirestoreEmulator, getFirestore } from \"firebase/firestore\";\nimport { QueryFilterConstraint } from \"@firebase/firestore\";\n\nconst MAP_FROM_STORAGE = false; // is storage is source for map (or database)\nlet FUNCTION_DOMAIN = \"https://us-central1-sci-map-1982.cloudfunctions.net/\";\n\nconst update = async (data: Record<string, any>): Promise<ErrorKV> => {\n  try {\n    await firebase\n      .database()\n      .ref()\n      .update(data);\n    return null;\n  } catch (e) {\n    return NewErrorKV(\"api: error in update\", { err: e });\n  }\n};\n\nconst debouncedUpdate = debounce(update, 2000);\n\nexport default {\n  ROOT_WIDTH: (2 * window.innerWidth) / 3,\n  ROOT_HEIGHT: window.innerHeight,\n  ROOT_CENTER_X: 0.3 * window.innerWidth + (0.7 * window.innerWidth) / 2,\n  ROOT_CENTER_Y: window.innerHeight / 2,\n  ST_WIDTH: 1000,\n  ST_HEIGHT: 1000,\n  initFirebase() {\n    // Your web app's Firebase configuration\n    // For Firebase JS SDK v7.20.0 and later, measurementId is optional\n    const firebaseConfig = {\n      apiKey: \"AIzaSyCP50k-WOkTeG8BYvRtu4Bo_x3T2RnVsxU\",\n      authDomain: \"sci-map-1982.firebaseapp.com\",\n      databaseURL: \"https://sci-map-1982.firebaseio.com\",\n      projectId: \"sci-map-1982\",\n      storageBucket: \"sci-map-1982.appspot.com\",\n      messagingSenderId: \"340899060236\",\n      appId: \"1:340899060236:web:b136e9289e342a8bb62c29\",\n      measurementId: \"G-TV74Q61H9P\"\n    };\n\n    // Initialize Firebase\n    firebase.initializeApp(firebaseConfig);\n    firebase.analytics();\n\n    if (process.env.VUE_APP_IS_EMULATOR === \"true\") {\n      console.log(\"Starting in emulator mode\");\n      firebase\n        .auth()\n        .useEmulator(`http://localhost:${emulatorConfig.emulators.auth.port}`);\n      firebase\n        .database()\n        .useEmulator(\"localhost\", emulatorConfig.emulators.database.port);\n      firebase\n        .storage()\n        .useEmulator(\"localhost\", emulatorConfig.emulators.storage.port);\n      connectFirestoreEmulator(\n        getFirestore(),\n        \"localhost\",\n        emulatorConfig.emulators.firestore.port\n      );\n      FUNCTION_DOMAIN = \"http://localhost:5001/sci-map-1982/us-central1/\";\n    }\n  },\n\n  async callFunction(\n    method: string,\n    params: Record<string, string>\n  ): Promise<[string, ErrorKV]> {\n    const currentUser = firebase.auth().currentUser;\n    if (!currentUser) {\n      return [\n        \"\",\n        NewErrorKV(\"callFunction: cannot determine current user\", {})\n      ];\n    }\n    const idToken = await currentUser.getIdToken(true);\n    params.idToken = idToken;\n    try {\n      const response = await axios.get(FUNCTION_DOMAIN + method, { params });\n      return [response.data, null];\n    } catch (e) {\n      return [\"\", NewErrorKV(\"Error in callFunction\", { method, params, e })];\n    }\n  },\n\n  async getMapFromDB(): Promise<[Record<string, DBNode> | null, ErrorKV]> {\n    const snapshot = await firebase\n      .database()\n      .ref(\"map\")\n      .get();\n    if (!snapshot.exists()) {\n      return [null, NewErrorKV(\"!snapshot.exists\", {})];\n    }\n    const map = snapshot.val();\n\n    return [map, null];\n  },\n\n  /**\n   * TODO: use it to cut costs on DB reads from read-only users\n   * @param user\n   */\n  async getMapFromStorage(\n    user: firebase.User | null\n  ): Promise<[Tree | null, ErrorKV]> {\n    const storage = firebase.storage().ref();\n    let ref = storage.child(`/map.json`);\n    if (user) {\n      ref = storage.child(`/user/${user.uid}/map.json`);\n    }\n    const url = await ref.getDownloadURL();\n\n    const response = await axios.get(url);\n    return [\n      {\n        id: \"0\",\n        title: \"\",\n        position: { x: this.ROOT_WIDTH / 2, y: this.ROOT_HEIGHT / 2 },\n        // children: apiTree.children\n        children: response.data\n      },\n      null\n    ];\n  },\n\n  async getMap(\n    user: firebase.User | null\n  ): Promise<[Record<string, DBNode> | null, ErrorKV]> {\n    try {\n      return await this.getMapFromDB();\n    } catch (e) {\n      return [null, NewErrorKV(e.message, { e: e })];\n    }\n  },\n\n  async getPins(user: firebase.User | null): Promise<[Pins | null, ErrorKV]> {\n    try {\n      const storage = firebase.storage().ref();\n      let ref = storage.child(`/pins.json`);\n      if (user) {\n        ref = storage.child(`/user/${user.uid}/pins.json`);\n      }\n      const url = await ref.getDownloadURL();\n\n      const response = await axios.get(url);\n      return [response.data, null];\n    } catch (e) {\n      return [null, NewErrorKV(e.message, { e: e })];\n    }\n  },\n\n  async savePins(user: firebase.User, pins: Pins) {\n    if (!user) {\n      return;\n    }\n\n    const storage = firebase.storage().ref();\n    const ref = storage.child(`/user/${user.uid}/pins.json`);\n    await ref.putString(\n      btoa(unescape(encodeURIComponent(JSON.stringify(pins)))),\n      \"base64\"\n    );\n  },\n\n  async getPreconditions(\n    user: firebase.User | null\n  ): Promise<[Preconditions | null, ErrorKV]> {\n    try {\n      const snapshot = await firebase\n        .database()\n        .ref(\"precondition\")\n        .get();\n      if (!snapshot.exists()) {\n        return [null, NewErrorKV(\"!snapshot.exists\", {})];\n      }\n      const preconditions = snapshot.val();\n\n      return [preconditions, null];\n    } catch (e) {\n      return [null, NewErrorKV(e.message, { e: e })];\n    }\n  },\n\n  async savePreconditions(\n    user: firebase.User | null,\n    preconditions: { nodeId: string; preconditionIds: string[] }\n  ) {\n    if (!user) {\n      return;\n    }\n    await firebase\n      .database()\n      .ref(\"precondition/\" + preconditions.nodeId)\n      .set(preconditions.preconditionIds);\n  },\n\n  subscribeMapNodeChange(nodeID: string, cb: (a: DBNode) => any) {\n    this.subscribeDBChange(\n      `map/${nodeID}`,\n      (snap: firebase.database.DataSnapshot) => {\n        if (!snap.exists()) {\n          return;\n        }\n        const node = snap.val() as DBNode;\n        // console.log('got update for map node', node)\n        node.id = node.id.toString();\n        node.children = convertChildren(node.children);\n        cb(node);\n      }\n    );\n  },\n\n  subscribeNodeContentChange(\n    nodeID: string,\n    cb: (a: { nodeID: string; content: string }) => any\n  ) {\n    this.subscribeDBChange(\n      `node_content/${nodeID}`,\n      (snap: firebase.database.DataSnapshot) => {\n        if (!snap.exists()) {\n          return;\n        }\n        const node = snap.val() as { nodeID: string; content: string };\n        // console.log('got update for node content', node)\n        cb(node);\n      }\n    );\n  },\n\n  subscribePreconditionNodeChange(\n    nodeID: string,\n    cb: (nodeID: string, preconditionIDs: Array<string>) => any\n  ) {\n    this.subscribeDBChange(\n      `precondition/${nodeID}`,\n      (snap: firebase.database.DataSnapshot) => {\n        if (!snap.exists()) {\n          return;\n        }\n        const preconditionIDs = snap.val() as Array<string>;\n        // console.log('got update for node precondition', 'nodeID', nodeID, 'preconditionIDs', preconditionIDs)\n        cb(nodeID, preconditionIDs);\n      }\n    );\n  },\n\n  unsubscribeMapNodeChange(nodeID: string) {\n    firebase\n      .database()\n      .ref(`map/${nodeID}`)\n      .off(\"value\");\n  },\n\n  subscribeDBChange(\n    path: string,\n    cb: (a: firebase.database.DataSnapshot) => any\n  ) {\n    firebase\n      .database()\n      .ref(path)\n      .on(\"value\", cb);\n  },\n\n  unsubscribeDBChange(\n    path: string,\n    cb?: (a: firebase.database.DataSnapshot) => any\n  ) {\n    firebase\n      .database()\n      .ref(path)\n      .off(\"value\", cb);\n  },\n\n  async transaction(nodeID: string, update: (val: any) => any) {\n    await firebase\n      .database()\n      .ref(\"map/\" + nodeID)\n      .transaction(\n        update,\n        () => {\n          return;\n        },\n        false\n      );\n  },\n\n  async setNode(node: DBNode) {\n    await firebase\n      .database()\n      .ref(\"map/\" + node.id)\n      .set(node);\n  },\n\n  async setPublicUserData(\n    userID: string,\n    displayName: string | null,\n    discordName: string | null\n  ) {\n    try {\n      const res = await firebase\n        .database()\n        .ref(\"public_user_data/\" + userID)\n        .set({\n          displayName,\n          discordName\n        });\n    } catch (e) {\n      console.log(e);\n    }\n  },\n\n  async getNode(nodeID: string): Promise<DBNode | null> {\n    const pr = await firebase\n      .database()\n      .ref(\"map/\" + nodeID)\n      .get();\n    const node = pr.val();\n    node.id = node.id.toString();\n    node.children = convertChildren(node.children);\n    return node;\n  },\n\n  generateKey(): string | null {\n    return firebase\n      .database()\n      .ref()\n      .push().key;\n  },\n\n  async findKeyInList(path: string, value: string): Promise<string | null> {\n    const snap = await firebase\n      .database()\n      .ref(path)\n      .orderByValue()\n      .equalTo(value)\n      .limitToFirst(1)\n      .get();\n    return snap.key;\n  },\n\n  async findKeyOfChild(\n    nodeID: string,\n    childID: string\n  ): Promise<string | null> {\n    const pr = await firebase\n      .database()\n      .ref(\"map/\" + nodeID)\n      .get();\n    const node = pr.val();\n    if (!node.children) {\n      return null;\n    }\n\n    for (const key in node.children) {\n      if (node.children[key].toString() === childID) {\n        return key;\n      }\n    }\n    return null;\n  },\n\n  update,\n  debouncedUpdate,\n\n  async getUserComments(\n    user: firebase.User\n  ): Promise<[Record<string, NodeComment> | null, ErrorKV]> {\n    const userID = user.uid;\n    const snapshot = await firebase\n      .database()\n      .ref(`user_data/${userID}/comment`)\n      .get();\n    if (!snapshot.exists()) {\n      return [null, NewErrorKV(\"!snapshot.exists\", {})];\n    }\n    const nodeComment = snapshot.val();\n\n    return [nodeComment, null];\n  },\n\n  async getNodeContent(): Promise<\n    [Record<string, NodeContent> | null, ErrorKV]\n  > {\n    const snapshot = await firebase\n      .database()\n      .ref(`node_content`)\n      .get();\n\n    if (!snapshot.exists()) {\n      return [{}, null];\n    }\n\n    return [snapshot.val(), null];\n  }\n};\n","import {\n  Tree,\n  Point,\n  Polygon,\n  VoronoiCell,\n  MapNode,\n  Vector,\n  Rectangle\n} from \"@/types/graphics\";\nimport * as turf from \"@turf/turf\";\nimport { ErrorKV } from \"@/types/errorkv\";\nimport { default as NewErrorKV } from \"../tools/errorkv\";\nimport { NodeRecordItem } from \"@/store/tree\";\nimport { polygonArea } from \"d3-polygon\";\nimport polygonClipping from \"polygon-clipping\";\nimport { clone, mod, round } from \"../tools/utils\";\nimport { findMapNode } from \"../store/tree/helpers\";\nimport api from \"../api/api\";\n\nconst NORMALIZED_BORDER = [\n  { x: 0, y: 0 },\n  { x: 0, y: api.ST_HEIGHT },\n  { x: api.ST_WIDTH, y: api.ST_HEIGHT },\n  { x: api.ST_WIDTH, y: 0 }\n];\n\nexport function getVectorLength(v: Vector): number {\n  return Math.sqrt(\n    Math.pow(v.from.x - v.to.x, 2) + Math.pow(v.from.y - v.to.y, 2)\n  );\n}\n\nexport function polygonToTurf(\n  p: Polygon\n): turf.Feature<turf.Polygon, turf.Properties> {\n  if (!p) {\n    throw new Error(\"polygonToTurf: p is empty\");\n  }\n  const pp = p.map(point => [point.x, point.y]);\n  pp.push([p[0].x, p[0].y]);\n  return turf.polygon([pp]);\n}\n\nexport function isInside(point: Point, polygon: Polygon): boolean {\n  return turf.booleanPointInPolygon(\n    turf.point([point.x, point.y]),\n    polygonToTurf(polygon)\n  );\n}\n\nexport function polygonToPCPolygon(p: Polygon): polygonClipping.Polygon {\n  const pp = p.map(point => [point.x, point.y] as polygonClipping.Pair);\n  pp.push([p[0].x, p[0].y]);\n  return [pp];\n}\n\nexport function area(p: Polygon): number {\n  return Math.abs(polygonArea(p.map(point => [point.x, point.y])));\n}\n\nexport function intersect(\n  p1: Polygon,\n  p2: Polygon\n): [Polygon[] | null, ErrorKV] {\n  // polygonClipping.intersection does not like digits after point\n  // so we find the least multiplier that gives area > 1000 for polygon\n  // and then round coordinates\n  let np1: Polygon = clone(p1);\n  let np2: Polygon = clone(p2);\n  let cf = 1;\n  while (area(np1) < 1000 && area(np2) < 1000) {\n    cf = cf * 10;\n    np1 = p1.map(p => ({ x: p.x * cf, y: p.y * cf }));\n    np2 = p2.map(p => ({ x: p.x * cf, y: p.y * cf }));\n  }\n  np1 = np1.map(p => ({ x: round(p.x), y: round(p.y) }));\n  np2 = np2.map(p => ({ x: round(p.x), y: round(p.y) }));\n\n  const tp1 = polygonToPCPolygon(np1);\n  const tp2 = polygonToPCPolygon(np2);\n  if (tp1 == null || tp2 == null) {\n    return [\n      null,\n      NewErrorKV(\"intersect: error in polygonToPCPolygon\", { p1: p1, p2: p2 })\n    ];\n  }\n\n  // polygonClipping.intersection\n  const polygonIntersect = polygonClipping.intersection(tp1, tp2);\n  if (polygonIntersect == null || !polygonIntersect.length) {\n    return [[], null];\n  }\n\n  const resultPolys = [];\n\n  for (const poly of polygonIntersect[0]) {\n    const resultPoly = [];\n    for (const p of poly) {\n      resultPoly.push({ x: p[0] / cf, y: p[1] / cf });\n    }\n    // удаляем последнюю точку полигона потому что она всегда совпадает с первой\n    resultPoly.pop();\n    resultPolys.push(resultPoly);\n  }\n\n  return [resultPolys, null];\n}\n\n// Возвращает левый нижний и правый верхний углы описанного вокруг Polygon квадрата\nexport function getBoundingBorders(border: Polygon): Rectangle {\n  if (!border) {\n    console.error(\"bad border\", border);\n  }\n  const minX = border.reduce((previousValue, currentValue) =>\n    previousValue.x > currentValue.x ? currentValue : previousValue\n  ).x;\n  const minY = border.reduce((previousValue, currentValue) =>\n    previousValue.y > currentValue.y ? currentValue : previousValue\n  ).y;\n  const maxX = border.reduce((previousValue, currentValue) =>\n    previousValue.x < currentValue.x ? currentValue : previousValue\n  ).x;\n  const maxY = border.reduce((previousValue, currentValue) =>\n    previousValue.y < currentValue.y ? currentValue : previousValue\n  ).y;\n  return {\n    leftBottom: { x: minX, y: minY },\n    rightTop: { x: maxX, y: maxY }\n  };\n}\n\nexport function getVoronoiCellsInSquare(\n  centers: Point[],\n  leftBottom: Point,\n  rightTop: Point\n): [Record<number, Polygon>, ErrorKV] {\n  const turfPoints = centers.map(p => turf.point([p.x, p.y]));\n  const collection = turf.featureCollection(turfPoints);\n  const cells = turf.voronoi(collection, {\n    bbox: [leftBottom.x, leftBottom.y, rightTop.x, rightTop.y]\n  });\n  const cellMap: Record<number, Polygon> = {};\n  let index = 0;\n  for (const cell of cells.features) {\n    if (!cell) {\n      return [\n        {},\n        NewErrorKV(\"getVoronoiCellsInSquare: undefined cell\", {\n          centers,\n          leftBottom,\n          rightTop,\n          cells\n        })\n      ];\n    }\n    const cellBorder = cell.geometry!.coordinates[0].map(p => ({\n      x: p[0],\n      y: p[1]\n    }));\n    cellBorder.pop(); // удаляем последнюю точку полигона потому что она всегда совпадает с первой\n    cellMap[index] = cellBorder;\n    index++;\n  }\n\n  return [cellMap, null];\n}\n\nexport function getVoronoiCells(\n  outerBorder: Polygon, //(граница массива точек)\n  centers: Point[] //(точки внутри этой границы)\n): [VoronoiCell[], ErrorKV] {\n  if (!outerBorder) {\n    return [\n      [],\n      NewErrorKV(\"getVoronoiCells: bad outerBorder\", { outerBorder, centers })\n    ];\n  }\n  const bb = getBoundingBorders(outerBorder);\n  const [cellMap, err] = getVoronoiCellsInSquare(\n    centers,\n    bb.leftBottom,\n    bb.rightTop\n  );\n  if (err) {\n    return [\n      [],\n      NewErrorKV(\"getVoronoiCells: error in getVoronoiCellsInSquare\", {\n        err,\n        bb,\n        centers\n      })\n    ];\n  }\n\n  const res = [];\n  for (const index in centers) {\n    if (!cellMap[index]) {\n      return [\n        [],\n        NewErrorKV(\"Cannot find index in cellMap\", {\n          index: index,\n          centers: centers,\n          cellMap: cellMap,\n          BoundingBorders: bb,\n          outerBorder\n        })\n      ];\n    }\n\n    const [intersections, err] = intersect(cellMap[index], outerBorder); // мы хотим чтобы граница всех cell совпадала с outerBorder\n    if (intersections == null || err != null) {\n      return [\n        [],\n        NewErrorKV(\"getVoronoiCells error\", {\n          err,\n          cellBorder: cellMap[index],\n          outerBorder\n        })\n      ];\n    }\n\n    if (intersections == []) {\n      return [\n        [],\n        NewErrorKV(\"Voronoi cell has no intersection with outerBorder\", {\n          point: centers[index]\n        })\n      ];\n    }\n    if (intersections.length > 1) {\n      return [\n        [],\n        NewErrorKV(\n          \"Voronoi cell has more than one intersection with outerBorder\",\n          { point: centers[index] }\n        )\n      ];\n    }\n    res.push({\n      border: intersections[0],\n      center: centers[index]\n    });\n  }\n\n  return [res, null];\n}\n\nexport function getVoronoiCellRecords(\n  outerBorder: Polygon, //(граница массива точек)\n  centers: Record<string, Point> //(точки внутри этой границы)\n): [Record<string, Polygon>, ErrorKV] {\n  const result: Record<string, Polygon> = {};\n  const ids: string[] = [];\n  const centersArray: Point[] = [];\n  for (const id in centers) {\n    ids.push(id);\n    centersArray.push(centers[id]);\n  }\n\n  const [cells, err] = getVoronoiCells(outerBorder, centersArray);\n  if (err !== null) {\n    return [{}, err];\n  }\n  for (const i in ids) {\n    result[ids[i]] = cells[i].border;\n  }\n\n  return [result, null];\n}\n\nexport function polygonFill(\n  selectedNodeId: string,\n  currentNodeId: string,\n  selectedNodePreconditionIds: string[]\n): string {\n  if (selectedNodeId && selectedNodeId == currentNodeId) {\n    return \"#f3afaf\";\n  }\n  if (\n    selectedNodePreconditionIds &&\n    selectedNodePreconditionIds.indexOf(currentNodeId) != -1\n  ) {\n    return \"#62f363\";\n  }\n  return \"transparent\";\n}\n\nexport function polygonFillOpacity(\n  selectedNodeId: string,\n  currentNodeId: string,\n  selectedNodePreconditionIds: string[]\n): string {\n  if (selectedNodeId && selectedNodeId == currentNodeId) {\n    return \"0.2\";\n  }\n  if (\n    selectedNodePreconditionIds &&\n    selectedNodePreconditionIds.indexOf(currentNodeId) != -1\n  ) {\n    return \"0.2\";\n  }\n  return \"0\";\n}\n\nexport function polygonToPath(polygon: Polygon): string {\n  return polygon.map((point: Point) => `${point.x} ${point.y}`).join(\",\");\n}\n\nexport function treeToNodeRecord(tree: Tree): Record<number, NodeRecordItem> {\n  const nodeRecord: Record<string, NodeRecordItem> = {};\n  const stack: NodeRecordItem[] = [{ node: tree, parent: null }];\n  while (stack.length) {\n    const item = stack.pop();\n    if (!item) {\n      break;\n    }\n    nodeRecord[item.node.id] = item;\n    stack.push(\n      ...item.node.children.map(child => ({\n        node: child,\n        parent: item.node\n      }))\n    );\n  }\n\n  return nodeRecord;\n}\n\nexport function transferToPoint(vector: Vector, point: Point): Vector {\n  return {\n    from: {\n      x: point.x,\n      y: point.y\n    },\n    to: {\n      x: point.x + (vector.to.x - vector.from.x),\n      y: point.y + (vector.to.y - vector.from.y)\n    }\n  };\n}\n\nexport function pointToVector(p: Point): Vector {\n  return { from: { x: 0, y: 0 }, to: p };\n}\n\nexport function addVector(a: Vector, b: Vector): Vector {\n  const bTransferred = transferToPoint(b, a.to);\n  return {\n    from: { x: a.from.x, y: a.from.y },\n    to: { x: bTransferred.to.x, y: bTransferred.to.y }\n  };\n}\n\nexport function subtractVector(a: Vector, b: Vector): Vector {\n  return transferToPoint(\n    addVector(\n      { from: { x: b.from.x, y: b.from.y }, to: { x: -b.to.x, y: -b.to.y } },\n      a\n    ),\n    transferToPoint(b, a.from).to\n  );\n}\n\nexport function vectorOnNumber(a: Vector, c: number): Vector {\n  const aTr = transferToPoint(a, { x: 0, y: 0 });\n  return transferToPoint(\n    { from: { x: 0, y: 0 }, to: { x: aTr.to.x * c, y: aTr.to.y * c } },\n    a.from\n  );\n}\n\nexport function getRectangleCenter(s: Rectangle): Point {\n  const diagonal = subtractVector(\n    pointToVector(s.rightTop),\n    pointToVector(s.leftBottom)\n  );\n  return vectorOnNumber(diagonal, 1 / 2).to;\n}\n\nexport function transferPointOnVector(p: Point, v: Vector): Point {\n  return transferToPoint(v, p).to;\n}\n\n// math: https://web.archive.org/web/20060911055655/http://local.wasp.uwa.edu.au/~pbourke/geometry/lineline2d/\nexport function getVectorIntersection(v1: Vector, v2: Vector): Point | null {\n  const x1 = v1.from.x;\n  const y1 = v1.from.y;\n  const x2 = v1.to.x;\n  const y2 = v1.to.y;\n  const x3 = v2.from.x;\n  const y3 = v2.from.y;\n  const x4 = v2.to.x;\n  const y4 = v2.to.y;\n  const denom = (y4 - y3) * (x2 - x1) - (x4 - x3) * (y2 - y1);\n  const numeA = (x4 - x3) * (y1 - y3) - (y4 - y3) * (x1 - x3);\n  const numeB = (x2 - x1) * (y1 - y3) - (y2 - y1) * (x1 - x3);\n\n  if (denom == 0) {\n    return null;\n  }\n\n  const uA = numeA / denom;\n  const uB = numeB / denom;\n\n  if (uA >= 0 && uA <= 1 && uB >= 0 && uB <= 1) {\n    return {\n      x: x1 + uA * (x2 - x1),\n      y: y1 + uA * (y2 - y1)\n    };\n  }\n\n  return null;\n}\n\nexport function morphChildrenPoints(\n  oldBorder: Polygon,\n  newBorder: Polygon,\n  oldPoints: Record<string, Point>\n): [Record<string, Point> | null, ErrorKV] {\n  const oldCenterTf = turf.centerOfMass(polygonToTurf(oldBorder)).geometry;\n  if (oldCenterTf == null) {\n    return [\n      null,\n      NewErrorKV(\"morphChildrenPoints oldBorder centerOfMass error\", {\n        oldBorder: oldBorder,\n        oldPoints: oldPoints\n      })\n    ];\n  }\n  const newCenterTf = turf.centerOfMass(polygonToTurf(newBorder)).geometry;\n  if (newCenterTf == null) {\n    return [\n      null,\n      NewErrorKV(\"morphChildrenPoints newBorder centerOfMass error\", {\n        newBorder: newBorder,\n        oldPoints: oldPoints\n      })\n    ];\n  }\n  const oldCenter = {\n    x: oldCenterTf.coordinates[0],\n    y: oldCenterTf.coordinates[1]\n  };\n  const newCenter = {\n    x: newCenterTf.coordinates[0],\n    y: newCenterTf.coordinates[1]\n  };\n\n  // Move old node and its children to new node center\n  oldBorder = oldBorder.map(\n    (p): Point => {\n      return transferPointOnVector(p, { from: oldCenter, to: newCenter });\n    }\n  );\n  for (const id in oldPoints) {\n    oldPoints[id] = transferPointOnVector(oldPoints[id], {\n      from: oldCenter,\n      to: newCenter\n    });\n  }\n\n  // morph children\n  const maxDiameter = Math.max(\n    getVectorLength({\n      from: getBoundingBorders(oldBorder).leftBottom,\n      to: getBoundingBorders(oldBorder).rightTop\n    }),\n    getVectorLength({\n      from: getBoundingBorders(newBorder).leftBottom,\n      to: getBoundingBorders(newBorder).rightTop\n    })\n  );\n\n  const newPoints: Record<string, Point> = {};\n  for (const id in oldPoints) {\n    const oldPoint = oldPoints[id];\n    if (newCenter.x == oldPoint.x && newCenter.y == oldPoint.y) {\n      newPoints[id] = oldPoint;\n      continue;\n    }\n    let centerToPoint = { from: newCenter, to: oldPoints[id] };\n    // enlarge it to guarantee intersect with both newBorder and oldBorder (transferred to newBorder center)\n    centerToPoint = vectorOnNumber(\n      centerToPoint,\n      maxDiameter / getVectorLength(centerToPoint)\n    );\n    let oldBorderIntersection = null;\n    for (const i in oldBorder) {\n      const segment = {\n        from: oldBorder[i],\n        to: oldBorder[(Number(i) + 1) % oldBorder.length]\n      };\n      const p = getVectorIntersection(centerToPoint, segment);\n      if (p != null) {\n        oldBorderIntersection = p;\n        break;\n      }\n    }\n    if (oldBorderIntersection == null) {\n      return [\n        null,\n        NewErrorKV(\n          \"morphChildrenPoints cannot find intersection with oldBorder\",\n          {\n            centerToPoint: centerToPoint,\n            oldBorder: oldBorder\n          }\n        )\n      ];\n    }\n\n    let newBorderIntersection = null;\n    for (const i in newBorder) {\n      const segment = {\n        from: newBorder[i],\n        to: newBorder[(Number(i) + 1) % newBorder.length]\n      };\n      const p = getVectorIntersection(centerToPoint, segment);\n      if (p != null) {\n        newBorderIntersection = p;\n        break;\n      }\n    }\n    if (newBorderIntersection == null) {\n      return [\n        null,\n        NewErrorKV(\n          \"morphChildrenPoints cannot find intersection with newBorder\",\n          {\n            centerToPoint: centerToPoint,\n            newBorder: newBorder\n          }\n        )\n      ];\n    }\n\n    if (\n      oldBorderIntersection.x == newBorderIntersection.x &&\n      oldBorderIntersection.y == newBorderIntersection.y\n    ) {\n      newPoints[id] = oldPoint;\n      continue;\n    }\n\n    const coeff =\n      getVectorLength({ from: newCenter, to: newBorderIntersection }) /\n      getVectorLength({ from: newCenter, to: oldBorderIntersection });\n    newPoints[id] = vectorOnNumber({ from: newCenter, to: oldPoint }, coeff).to;\n  }\n\n  return [newPoints, null];\n}\n\nexport function NewEmptyVector(): Vector {\n  return { from: { x: 0, y: 0 }, to: { x: 0, y: 0 } };\n}\n\nexport function getMaxDiagonal(polygon: Polygon): [Vector, ErrorKV] {\n  if (!polygon || polygon.length < 3) {\n    return [\n      NewEmptyVector(),\n      NewErrorKV(\"getMaxDiagonal: bad polygon\", { polygon })\n    ];\n  }\n\n  const diagonals: Vector[] = [];\n  if (polygon.length == 3) {\n    // triangle does not has diagonals, so me emulate them\n    for (const i in polygon) {\n      const middle = vectorOnNumber(\n        {\n          from: polygon[mod(Number(i) - 1, polygon.length)],\n          to: polygon[mod(Number(i) + 1, polygon.length)]\n        },\n        1 / 2\n      );\n      diagonals.push({ from: polygon[i], to: middle.to });\n    }\n  } else {\n    for (const i in polygon) {\n      for (const j in polygon) {\n        if (\n          Number(j) != mod(Number(i) - 1, polygon.length) &&\n          Number(j) != Number(i) &&\n          Number(j) != mod(Number(i) + 1, polygon.length)\n        ) {\n          diagonals.push({ from: polygon[i], to: polygon[j] });\n        }\n      }\n    }\n  }\n\n  let maxDiagonal = diagonals[0];\n  for (const diag of diagonals) {\n    if (getVectorLength(diag) > getVectorLength(maxDiagonal)) {\n      maxDiagonal = diag;\n    }\n  }\n\n  return [maxDiagonal, null];\n}\n\nexport function convertPosition(\n  type: \"normalize\" | \"denormalize\",\n  position: Point,\n  parentID: string | null,\n  mapNodeLayers: Array<Record<string, MapNode>>\n): [Point | null, ErrorKV] {\n  let convertedPosition: Point;\n  if (parentID) {\n    const [parentMapNode] = findMapNode(parentID, mapNodeLayers);\n    if (!parentMapNode) {\n      return [\n        null,\n        NewErrorKV(\"UPDATE_NODE: Cannot findMapNode\", { id: parentID })\n      ];\n    }\n\n    let morphedPositions: Record<string, Point> | null, err: ErrorKV;\n    if (type === \"denormalize\") {\n      if (!isInside(position, NORMALIZED_BORDER)) {\n        return [\n          null,\n          NewErrorKV(\"convertPosition: position outside NORMALIZED_BORDER\", {\n            normalizedBorder: NORMALIZED_BORDER,\n            position,\n            parentID\n          })\n        ];\n      }\n      [morphedPositions, err] = morphChildrenPoints(\n        NORMALIZED_BORDER,\n        parentMapNode.border,\n        { tmp: position }\n      );\n    } else {\n      if (!isInside(position, parentMapNode.border)) {\n        return [\n          null,\n          NewErrorKV(\"convertPosition: position outside parentMapNode.border\", {\n            \"parentMapNode.border\": parentMapNode.border,\n            \"parentMapNode.center\": parentMapNode.center,\n            position,\n            parentID\n          })\n        ];\n      }\n      [morphedPositions, err] = morphChildrenPoints(\n        parentMapNode.border,\n        NORMALIZED_BORDER,\n        { tmp: position }\n      );\n      if (err !== null) {\n        return [\n          null,\n          NewErrorKV(\"UPDATE_NODE: Cannot morphChildrenPoints\", {\n            type: type,\n            normalizedBorder: NORMALIZED_BORDER,\n            \"parentMapNode.border\": parentMapNode.border,\n            \"dbNode.position\": position\n          })\n        ];\n      }\n      // make sure that after normalization position is strictly inside border\n      if (morphedPositions![\"tmp\"].x < 0) {\n        morphedPositions![\"tmp\"].x = 1;\n      }\n      if (morphedPositions![\"tmp\"].x > api.ST_WIDTH) {\n        morphedPositions![\"tmp\"].x = api.ST_WIDTH - 1;\n      }\n      if (morphedPositions![\"tmp\"].y < 0) {\n        morphedPositions![\"tmp\"].y = 1;\n      }\n      if (morphedPositions![\"tmp\"].y > api.ST_HEIGHT) {\n        morphedPositions![\"tmp\"].y = api.ST_HEIGHT - 1;\n      }\n    }\n    if (err !== null) {\n      return [\n        null,\n        NewErrorKV(\"UPDATE_NODE: Cannot morphChildrenPoints\", {\n          type: type,\n          normalizedBorder: NORMALIZED_BORDER,\n          \"parentMapNode.border\": parentMapNode.border,\n          \"dbNode.position\": position\n        })\n      ];\n    }\n    convertedPosition = morphedPositions![\"tmp\"];\n  } else {\n    if (type === \"denormalize\") {\n      convertedPosition = { x: api.ROOT_CENTER_X, y: api.ROOT_CENTER_Y };\n    } else {\n      convertedPosition = { x: api.ST_WIDTH / 2, y: api.ST_HEIGHT / 2 };\n    }\n  }\n\n  return [convertedPosition, null];\n}\n\n/**\n *\n * @param tree\n * @param rootBorder\n * @param rootPosition\n */\nexport function treeToMapNodeLayers(\n  tree: Tree,\n  rootBorder: Polygon,\n  rootPosition: Point\n): [Array<Record<string, MapNode>> | null, ErrorKV] {\n  if (Object.keys(tree).length == 0) {\n    return [[], null];\n  }\n  const treeLayers: Array<Array<Tree>> = [[tree]];\n  const mapNodeLayers: Array<Record<string, MapNode>> = [\n    {\n      [tree.id]: {\n        id: tree.id,\n        border: rootBorder,\n        title: tree.title,\n        center: rootPosition\n      }\n    }\n  ];\n  /*eslint no-constant-condition: [\"error\", { \"checkLoops\": false }]*/\n  while (true) {\n    const lastTreeLayer = treeLayers[treeLayers.length - 1];\n    const lastMapNodeLayer = mapNodeLayers[treeLayers.length - 1];\n    const newTreeLayer = [];\n    const newMapNodeLayer: Record<string, MapNode> = {};\n    for (const treeNode of lastTreeLayer) {\n      if (!treeNode.children) {\n        return [\n          null,\n          NewErrorKV(\"treeToMapNodeLayers: treeNode with children undefined\", {\n            treeNode\n          })\n        ];\n      }\n      if (!treeNode.children.length) {\n        continue;\n      }\n\n      // check that no two children have the same center\n      const tmpMap = {} as Record<string, string>;\n      let strPos = \"\";\n      for (const i in treeNode.children) {\n        strPos = JSON.stringify(treeNode.children[i].position);\n        if (tmpMap[strPos] && tmpMap[strPos].length > 0) {\n          return [\n            null,\n            NewErrorKV(\"two children has the same center\", {\n              firstId: tmpMap[strPos],\n              secondId: treeNode.children[i].id\n            })\n          ];\n        } else {\n          tmpMap[strPos] = treeNode.children[i].id;\n        }\n      }\n\n      newTreeLayer.push(...treeNode.children);\n      if (!lastMapNodeLayer[treeNode.id]) {\n        return [\n          null,\n          NewErrorKV(\"Cannot find node in mapNodeLayers\", {\n            layer: mapNodeLayers[mapNodeLayers.length - 1],\n            treeNode: treeNode\n          })\n        ];\n      }\n\n      // denormalize positions\n      const treeNodeChildren = clone(treeNode.children) as Array<Tree>;\n      for (const child of treeNodeChildren) {\n        const [denormalizedPosition, err] = convertPosition(\n          \"denormalize\",\n          child.position,\n          treeNode.id,\n          [lastMapNodeLayer]\n        );\n        if (err) {\n          return [null, err];\n        }\n        child.position = denormalizedPosition!;\n      }\n      const [cells, error] = getVoronoiCells(\n        lastMapNodeLayer[treeNode.id].border,\n        treeNodeChildren.map(ch => ({ x: ch.position.x, y: ch.position.y }))\n      );\n      if (error != null) {\n        return [null, error];\n      }\n\n      for (const cell of cells) {\n        for (const child of treeNodeChildren) {\n          if (\n            child.position.x == cell.center.x &&\n            child.position.y == cell.center.y\n          ) {\n            newMapNodeLayer[child.id] = {\n              id: child.id,\n              title: child.title,\n              center: child.position,\n              border: cell.border\n            };\n          }\n        }\n      }\n    }\n\n    if (newTreeLayer.length) {\n      treeLayers.push(newTreeLayer);\n      mapNodeLayers.push(newMapNodeLayer);\n    } else {\n      return [mapNodeLayers, null];\n    }\n  }\n}\n\nexport function mergeMapNodeLayers(\n  recipientLayers: Record<string, MapNode>[],\n  insertedLayers: Record<string, MapNode>[],\n  startFromLevel: number\n): ErrorKV {\n  if (startFromLevel >= recipientLayers.length || startFromLevel < 0) {\n    return NewErrorKV(\n      \"startFromLevel >= recipientLayers.length or startFromLevel < 0\",\n      {\n        startFromLevel,\n        \"recipientLayers.length\": recipientLayers.length\n      }\n    );\n  }\n  let i = startFromLevel;\n  while (i < startFromLevel + insertedLayers.length) {\n    for (const id in insertedLayers[i - startFromLevel]) {\n      recipientLayers[i][id] = insertedLayers[i - startFromLevel][id];\n    }\n    i++;\n  }\n\n  return null;\n}\n","import { MapNode, Point, Tree } from \"@/types/graphics\";\nimport {\n  convertPosition,\n  isInside,\n  treeToMapNodeLayers,\n  treeToNodeRecord\n} from \"@/tools/graphics\";\nimport { findMapNode, updatePosition } from \"@/store/tree/helpers\";\nimport { ErrorKV } from \"@/types/errorkv\";\nimport NewErrorKV from \"@/tools/errorkv\";\nimport { DBNode } from \"@/api/types\";\nimport { printError, round } from \"@/tools/utils\";\nimport api from \"@/api/api\";\nimport { Commit, Dispatch } from \"vuex\";\n\n// Define root border for 2560x1600\nconst ROOT_WIDTH = 2560;\nconst ROOT_HEIGHT = 1600;\nconst cf = 1 / 3;\nconst ROOT_BORDER = [\n  { x: 0, y: cf * ROOT_HEIGHT },\n  { x: 0, y: 2 * cf * ROOT_HEIGHT },\n  { x: (cf / 2.5) * ROOT_WIDTH, y: (1 - cf / 4) * ROOT_HEIGHT },\n  { x: cf * ROOT_WIDTH, y: ROOT_HEIGHT },\n  { x: 2 * cf * ROOT_WIDTH, y: ROOT_HEIGHT },\n  { x: (1 - cf / 2.5) * ROOT_WIDTH, y: (1 - cf / 4) * ROOT_HEIGHT },\n  { x: ROOT_WIDTH, y: 2 * cf * ROOT_HEIGHT },\n  { x: ROOT_WIDTH, y: cf * ROOT_HEIGHT },\n  { x: (1 - cf / 2.5) * ROOT_WIDTH, y: (cf / 4) * ROOT_HEIGHT },\n  { x: 2 * cf * ROOT_WIDTH, y: 0 },\n  { x: cf * ROOT_WIDTH, y: 0 },\n  { x: (cf / 2.5) * ROOT_WIDTH, y: (cf / 4) * ROOT_HEIGHT }\n];\nconst ROOT_CENTER = { x: api.ROOT_CENTER_X, y: api.ROOT_CENTER_Y };\n\n// Scale root border proportionally to fit 2/3 of user browser viewport and move the left\nconst userFitCoefficient = Math.min(\n  api.ROOT_WIDTH / ROOT_WIDTH,\n  api.ROOT_HEIGHT / ROOT_HEIGHT\n);\nfor (const idx in ROOT_BORDER) {\n  ROOT_BORDER[idx].x =\n    userFitCoefficient * ROOT_BORDER[idx].x +\n    api.ROOT_CENTER_X -\n    (userFitCoefficient * ROOT_WIDTH) / 2;\n  ROOT_BORDER[idx].y =\n    userFitCoefficient * ROOT_BORDER[idx].y +\n    api.ROOT_CENTER_Y -\n    (userFitCoefficient * ROOT_HEIGHT) / 2;\n}\n\nexport interface NodeRecordItem {\n  node: Tree;\n  parent: Tree | null;\n}\n\nexport interface State {\n  tree: Tree | null;\n  nodeRecord: Record<string, NodeRecordItem>;\n  mapNodeLayers: Array<Record<string, MapNode>>;\n  selectedNodeId: string | null;\n}\n\nexport const mutations = {\n  SET_SELECTED_NODE_ID: \"SET_SELECTED_NODE_ID\",\n  SET_TREE: \"SET_TREE\",\n  UPDATE_NODE_POSITION: \"UPDATE_NODE_POSITION\",\n  REMOVE_NODE: \"REMOVE_NODE\"\n};\n\nexport const actions = {\n  handleMapNodeUpdate: \"handleMapNodeUpdate\"\n};\n\nexport const store = {\n  namespaced: true,\n  state() {\n    return {\n      tree: null,\n      nodeRecord: {} as Record<string, NodeRecordItem>, // id => NodeRecordItem\n      mapNodeLayers: [] as Array<Record<string, MapNode>>,\n      selectedNodeId: null\n    };\n  },\n\n  getters: {\n    selectedNode: (state: State) => {\n      if (!state.selectedNodeId) {\n        return null;\n      }\n      if (!state.nodeRecord[state.selectedNodeId]) {\n        return null;\n      }\n      return state.nodeRecord[state.selectedNodeId].node;\n    }\n  },\n\n  actions: {\n    /**\n     * Update tree and dependant structures on DBNode change\n     *\n     * После добавления нового узла мы не вносим изменения локально, а сохраняем в базу и ждем пока оттуда придет обновление\n     *\n     * Маппинг изменений в виде снэпшотов на изменения в формате store/history выглядит следующим образом.\n     * Мы сравниваем наш узел и пришедший новый снэпшот этого узла\n     *\n     * Если видим удаление child, то это либо перенос, либо удаление узла.\n     * В любом случае мы можем у себя удалить этот узел (мы не удаляем всю информацию, только из дерева - 'fake removal').\n     * Если это перенос, то мы либо получили событие добавления в другой узел\n     * до этого события, либо получим его после. Если получили до, то из этого узла уже должны были его удалить,\n     * так что остается вариант когда мы еще получим событие о добавлении. В этом случаем для нас это будет добавление нового узла.\n     * То есть мы запросим из базы этот узел и вставим его\n     *\n     * Если видим добавление child, то это либо перенос, либо добавление нового узла. Если мы не находим у себя child с таким id,\n     * то это добавление - нам нужно запросить из базы node с таким id и добавить его к себе.\n     * Если в nodeRecord есть такой узел, то это перенос - мы удаляем его из старого родителя и вставляем в новый\n     *\n     * Этими двумя кейсами покрываются события добавления, удаления и переноса.\n     * Событие изменения имени и позиции мапятся тривиально\n     *\n     * @param commit\n     * @param state\n     * @param dispatch\n     * @param dbNode\n     */\n    async [actions.handleMapNodeUpdate](\n      {\n        commit,\n        state,\n        dispatch\n      }: { commit: Commit; state: State; dispatch: Dispatch },\n      dbNode: DBNode\n    ) {\n      const dbNodeRecord = state.nodeRecord[dbNode.id];\n      if (!dbNodeRecord) {\n        printError(\"UPDATE_NODE: Cannot find dbNode in dbNodeRecord\", {\n          \"dbNode.id\": dbNode.id\n        });\n        return;\n      }\n\n      const oldDBNode = {\n        id: dbNodeRecord.node.id,\n        parentID: dbNodeRecord.parent ? dbNodeRecord.parent.id : null,\n        name: dbNodeRecord.node.title,\n        children: dbNodeRecord.node.children.map(n => n.id).sort(),\n        position: dbNodeRecord.node.position\n      };\n\n      const newChildren = dbNode.children.filter(\n        x => !oldDBNode.children.includes(x)\n      );\n      const removedChildren = oldDBNode.children.filter(\n        x => !dbNode.children.includes(x)\n      );\n\n      // Add/move of new child\n      if (newChildren.length) {\n        for (const childID of newChildren) {\n          if (state.nodeRecord[childID]) {\n            console.log(\n              \"actions.handleDBUpdate: remove node for cut-and-paste\",\n              state.nodeRecord[childID]\n            );\n            // if we already have this node, then it is cut-and-paste new parent\n            // so we should remove node from old parent\n            const v = {\n              nodeID: childID,\n              returnError: null\n            };\n            commit(mutations.REMOVE_NODE, {\n              nodeID: childID,\n              returnError: null\n            });\n            if (v.returnError) {\n              printError(\"handleDBUpdate: cannot cut node\", {\n                err: v.returnError\n              });\n            }\n          }\n\n          // request node and its children from the server, fill in tree\n          const addedDBNode = await api.getNode(childID);\n          console.log(\n            \"actions.handleDBUpdate: add node for cut-and-paste\",\n            addedDBNode\n          );\n\n          const toProcess = [addedDBNode];\n          if (!addedDBNode) {\n            // we cannot find node for addition, remove it from parent\n            dbNode.children = dbNode.children.filter(id => id != childID);\n            printError(\"Cannot find node for addition\", { nodeID: childID });\n            continue;\n          }\n          while (toProcess.length) {\n            const inProcessNode = toProcess.pop();\n            if (!inProcessNode) {\n              continue;\n            }\n            // create new MapNode\n            const treeNode = {\n              id: inProcessNode.id,\n              title: inProcessNode.name,\n              position: inProcessNode.position,\n              children: []\n            } as Tree;\n            if (!state.nodeRecord[inProcessNode.parentID]) {\n              printError(\"Cannot find nodeID in nodeRecord\", {\n                nodeID: inProcessNode.parentID\n              });\n              return;\n            }\n            // make sure we have no duplicates\n            state.nodeRecord[\n              inProcessNode.parentID\n            ].node.children = state.nodeRecord[\n              inProcessNode.parentID\n            ].node.children.filter(n => n.id != treeNode.id);\n            // add child to parent\n            state.nodeRecord[inProcessNode.parentID].node.children.push(\n              treeNode\n            );\n            // add child to nodeRecord\n            state.nodeRecord[treeNode.id] = {\n              parent: state.nodeRecord[inProcessNode.parentID].node,\n              node: treeNode\n            };\n            // subscribe to new node changes\n            api.subscribeMapNodeChange(treeNode.id, (dbNode: DBNode) =>\n              dispatch(actions.handleMapNodeUpdate, dbNode)\n            );\n            for (const childID of inProcessNode.children) {\n              const childNode = await api.getNode(childID);\n              if (!childNode) {\n                // we cannot find node for addition, remove it from parent\n                inProcessNode.children = inProcessNode.children.filter(\n                  id => id != childID\n                );\n                printError(\"Cannot find node for addition\", {\n                  nodeID: childID\n                });\n                continue;\n              }\n              toProcess.push(childNode);\n            }\n          }\n        }\n      }\n\n      // Remove of child\n      if (removedChildren.length) {\n        for (const childID of removedChildren) {\n          if (!state.nodeRecord[childID] || !state.nodeRecord[childID].parent) {\n            // node was already removed somewhere\n            continue;\n          }\n          if (\n            state.nodeRecord[childID] &&\n            state.nodeRecord[childID].parent!.id !== dbNode.id\n          ) {\n            // node was already removed from this parent (this is cut-and-paste operation)\n            continue;\n          }\n          console.log(\n            \"actions.handleDBUpdate: removing children\",\n            state.nodeRecord[childID]\n          );\n          const v = { nodeID: childID, returnError: null };\n          commit(mutations.REMOVE_NODE, v);\n          if (v.returnError) {\n            printError(\"actions.handleDBUpdate: cannot remove node\", {\n              err: v.returnError,\n              id: childID\n            });\n          }\n          // unsubscribe from removed node changes\n          api.unsubscribeMapNodeChange(childID);\n        }\n      }\n\n      if (removedChildren.length || newChildren.length) {\n        const [ls, err2] = treeToMapNodeLayers(\n          state.tree!,\n          ROOT_BORDER,\n          ROOT_CENTER\n        );\n        if (err2) {\n          printError(\"Cannot treeToMapNodeLayers\", { err: err2 });\n          return;\n        }\n        state.mapNodeLayers = ls!;\n      }\n\n      // Change of position\n      if (\n        round(dbNode.position.x) !== round(oldDBNode.position.x) ||\n        round(dbNode.position.y) !== round(oldDBNode.position.y)\n      ) {\n        // calculate denormalized position of dbNode\n        const [denormalizedPosition] = convertPosition(\n          \"denormalize\",\n          dbNode.position,\n          dbNodeRecord.parent ? dbNodeRecord.parent.id : null,\n          state.mapNodeLayers\n        );\n        if (oldDBNode.parentID == dbNode.parentID) {\n          // we do not want to process position change due to parent change - it is already processed by ADD_NODE\n          const v = {\n            nodeId: dbNode.id,\n            newCenter: denormalizedPosition,\n            returnError: null\n          };\n          commit(mutations.UPDATE_NODE_POSITION, v);\n          if (v.returnError !== null) {\n            printError(\n              \"actions.handleDBUpdate: cannot update node's position\",\n              { dbNode: dbNode, err: v.returnError }\n            );\n            return;\n          }\n        }\n      }\n\n      // Change of name\n      if (oldDBNode.name !== dbNode.name) {\n        dbNodeRecord.node.title = dbNode.name;\n        const [node] = findMapNode(oldDBNode.id, state.mapNodeLayers);\n        if (!node) {\n          return;\n        }\n        node.title = dbNode.name;\n      }\n    }\n  },\n  mutations: {\n    /**\n     * REMOVE_NODE\n     * @param state\n     * @param v\n     */\n    [mutations.REMOVE_NODE](\n      state: State,\n      v: { nodeID: string; returnError: ErrorKV }\n    ) {\n      if (state.tree === null) {\n        v.returnError = NewErrorKV(\"state.tree === null\", {});\n        return;\n      }\n\n      if (!state.nodeRecord[v.nodeID]) {\n        v.returnError = NewErrorKV(\n          \"REMOVE_NODE: cannot find nodeId in nodeRecord\",\n          { nodeID: v.nodeID, nodeRecord: state.nodeRecord }\n        );\n        return;\n      }\n      const parent = state.nodeRecord[v.nodeID].parent;\n      if (!parent) {\n        v.returnError = NewErrorKV(\"REMOVE_NODE: cannot remove root node\", {\n          nodeId: v.nodeID\n        });\n        return;\n      }\n\n      // remove node and its descendants from nodeRecord\n      const stack = [v.nodeID];\n      while (stack.length) {\n        const id = stack.pop();\n        if (!id) {\n          continue;\n        }\n        stack.push(...state.nodeRecord[id].node.children.map(node => node.id));\n        delete state.nodeRecord[id];\n      }\n\n      // remove from parent's children\n      const ind = parent.children.findIndex(node => node.id === v.nodeID);\n      parent.children.splice(ind, 1);\n    },\n\n    /**\n     * SET_SELECTED_NODE_ID\n     * @param state\n     * @param id\n     */\n    [mutations.SET_SELECTED_NODE_ID](state: State, id: string | null) {\n      state.selectedNodeId = id;\n    },\n\n    /**\n     * SET_TREE\n     * @param state\n     * @param tree\n     */\n    [mutations.SET_TREE](state: State, tree: Tree | null) {\n      if (tree == null) {\n        state.tree = null;\n        state.nodeRecord = {};\n        state.mapNodeLayers = [];\n        return;\n      }\n      state.tree = tree;\n\n      // traverse tree and fill in nodeRecord\n      state.nodeRecord = treeToNodeRecord(tree);\n\n      // fill state.mapNodeLayers\n      const [ls, err] = treeToMapNodeLayers(tree, ROOT_BORDER, ROOT_CENTER);\n      if (ls == null || err != null) {\n        console.error(err);\n        return;\n      }\n      state.mapNodeLayers = ls;\n    },\n\n    /**\n     * UPDATE_NODE_POSITION\n     * @param state\n     * @param v\n     */\n    [mutations.UPDATE_NODE_POSITION](\n      state: State,\n      v: {\n        nodeId: string;\n        newCenter: Point;\n        returnError: ErrorKV; // still waiting for vuex to implement mutation return values https://github.com/vuejs/vuex/issues/1437\n      }\n    ) {\n      // check that new position is inside parent borders\n      const parent = state.nodeRecord[v.nodeId].parent;\n      if (parent !== null) {\n        const [parentMapNode] = findMapNode(parent.id, state.mapNodeLayers);\n        if (!parentMapNode) {\n          v.returnError = NewErrorKV(\n            \"UPDATE_NODE_POSITION: cannot find parent mapNode\",\n            {\n              \"parent.id\": parent.id,\n              \"state.mapNodeLayers\": state.mapNodeLayers\n            }\n          );\n          return;\n        }\n\n        if (!isInside(v.newCenter, parentMapNode.border)) {\n          v.returnError = NewErrorKV(\"!isInside\", {\n            newCenter: v.newCenter,\n            \"parentMapNode.border\": parentMapNode.border\n          });\n          return;\n        }\n      }\n\n      v.returnError = updatePosition(state, {\n        nodeId: v.nodeId,\n        position: v.newCenter\n      });\n    }\n  }\n};\n","import { Point } from \"@/types/graphics\";\n\nexport const mutations = {\n  ADD_CUT_PASTE: \"ADD_CUT_PASTE\",\n  ADD_CREATE: \"ADD_CREATE\",\n  ADD_REMOVE: \"ADD_REMOVE\",\n  ADD_POSITION_CHANGE: \"ADD_POSITION_CHANGE\"\n};\n\nenum changeTypeEnum {\n  CUT_PASTE = \"CUT_PASTE\",\n  CREATE = \"CREATE\",\n  REMOVE = \"REMOVE\",\n  POSITION_CHANGE = \"POSITION_CHANGE\"\n}\n\nconst changeTypes = {\n  CUT_PASTE: \"CUT_PASTE\" as changeTypeEnum.CUT_PASTE,\n  CREATE: \"CREATE\" as changeTypeEnum.CREATE,\n  REMOVE: \"REMOVE\" as changeTypeEnum.REMOVE,\n  POSITION_CHANGE: \"POSITION_CHANGE\" as changeTypeEnum.POSITION_CHANGE\n};\n\nexport interface CHCutPaste {\n  nodeID: string; // object of change\n  oldParentID: string; // old parent\n  newParentID: string; // new parent\n}\n\nexport interface CHCreate {\n  nodeID: string; // object of change\n  parentID: string; // new parent\n}\n\nexport interface CHRemove {\n  nodeID: string; // object of change\n  parentID: string; // parent where object sits (we need it to revert this event)\n}\n\nexport interface CHPositionChange {\n  nodeID: string; // object of change\n  oldPosition: Point; // old position (we need it to revert this event)\n  newPosition: Point; // new position\n}\n\nexport type TreeChangeList = Record<\n  string,\n  {\n    [changeTypeEnum.CUT_PASTE]?: CHCutPaste;\n    [changeTypeEnum.CREATE]?: CHCreate;\n    [changeTypeEnum.REMOVE]?: CHRemove;\n    [changeTypeEnum.POSITION_CHANGE]?: CHPositionChange;\n  }\n>;\n\nexport interface State {\n  // список изменений который отличает текущую мастер ветку\n  // от того мастера с которого мы начали локальные изменения\n  stableChangeList: TreeChangeList;\n  // список локальных изменений\n  localChangeList: TreeChangeList;\n}\n\nexport const store = {\n  namespaced: true,\n  state: {\n    stableChangeList: {},\n    localChangeList: {}\n  },\n  mutations: {\n    [mutations.ADD_CUT_PASTE](state: State, change: CHCutPaste) {\n      if (!state.localChangeList[change.nodeID]) {\n        state.localChangeList[change.nodeID] = {};\n      }\n      if (state.localChangeList[change.nodeID][changeTypes.CREATE]) {\n        // if user ADDed then MOVEd node then it is simply addition to CUT_PASTE newParentID\n        state.localChangeList[change.nodeID][changeTypes.CREATE]!.parentID =\n          change.newParentID;\n      } else {\n        state.localChangeList[change.nodeID][changeTypes.CUT_PASTE] = change;\n      }\n    },\n    [mutations.ADD_CREATE](state: State, change: CHCreate) {\n      if (!state.localChangeList[change.nodeID]) {\n        state.localChangeList[change.nodeID] = {};\n      }\n      state.localChangeList[change.nodeID][changeTypes.CREATE] = change;\n    },\n    [mutations.ADD_REMOVE](state: State, change: CHRemove) {\n      // clear changelist for this node because REMOVE vanishes them anyway\n      state.localChangeList[change.nodeID] = {};\n      state.localChangeList[change.nodeID][changeTypes.REMOVE] = change;\n    },\n    [mutations.ADD_POSITION_CHANGE](state: State, change: CHPositionChange) {\n      if (!state.localChangeList[change.nodeID]) {\n        state.localChangeList[change.nodeID] = {};\n      }\n      let firstOldPosition = change.oldPosition;\n      if (state.localChangeList[change.nodeID][changeTypes.POSITION_CHANGE]) {\n        firstOldPosition = state.localChangeList[change.nodeID][\n          changeTypes.POSITION_CHANGE\n        ]!.oldPosition;\n      }\n      state.localChangeList[change.nodeID][changeTypes.POSITION_CHANGE] = {\n        nodeID: change.nodeID,\n        oldPosition: firstOldPosition,\n        newPosition: change.newPosition\n      };\n    }\n  },\n  actions: {}\n};\n","import { Point, Vector } from \"@/types/graphics\";\nimport { addVector, vectorOnNumber } from \"@/tools/graphics\";\nimport { debounce } from \"lodash\";\n\nexport interface State {\n  zoom: number;\n  zoomCenter: Point;\n  pan: Point;\n  debouncedZoom: number;\n  debouncedPan: Point;\n}\n\nexport const mutations = {\n  ADD_ZOOM: \"ADD_ZOOM\",\n  ADD_PAN: \"ADD_PAN\",\n  SET_PAN: \"SET_PAN\",\n  SET_ZOOM_CENTER: \"SET_ZOOM_CENTER\"\n};\n\nconst zoomDebounce = debounce((state, value: number) => {\n  state.debouncedZoom = value;\n}, 100);\n\nconst panDebounce = debounce((state, value: Point) => {\n  state.debouncedPan = value;\n}, 100);\n\nconst ZOOM_SENSITIVITY = 1 / 500;\nconst PAN_SENSITIVITY = 1;\n\nexport const store = {\n  namespaced: true,\n  state: {\n    zoom: 1,\n    pan: { x: 0, y: 0 },\n    debouncedZoom: 1,\n    debouncedPan: { x: 0, y: 0 },\n    zoomCenter: { x: 0, y: 0 }\n  },\n  mutations: {\n    [mutations.SET_ZOOM_CENTER](state: State, center: Point) {\n      state.zoomCenter = center;\n    },\n    [mutations.ADD_ZOOM](state: State, delta: number) {\n      const newZoom = state.zoom * Math.pow(2, delta * ZOOM_SENSITIVITY);\n      if (newZoom < 0.5) {\n        // foolproof from too much zoom\n        return;\n      }\n      state.zoom = newZoom;\n      zoomDebounce(state, state.zoom);\n    },\n    [mutations.ADD_PAN](state: State, delta: Vector) {\n      state.pan = addVector(\n        { from: { x: 0, y: 0 }, to: state.pan },\n        vectorOnNumber(delta, PAN_SENSITIVITY)\n      ).to;\n      panDebounce(state, state.pan);\n    },\n    [mutations.SET_PAN](state: State, point: Point) {\n      state.pan = point;\n      panDebounce(state, state.pan);\n    }\n  }\n};\n","import firebase from \"firebase/compat\";\nimport api from \"@/api/api\";\nimport { Commit } from \"vuex\";\n\nexport interface State {\n  user: firebase.User | null;\n}\n\nexport const mutations = {\n  SET_USER: \"SET_USER\"\n};\nexport const actions = {\n  signIn: \"signIn\",\n  signOut: \"signOut\"\n};\n\nexport const store = {\n  namespaced: true,\n  state: {\n    user: null\n  },\n  mutations: {\n    [mutations.SET_USER](state: State, user: firebase.User) {\n      state.user = user;\n    }\n  },\n  actions: {\n    async [actions.signIn]({ commit }: { commit: Commit }) {\n      await firebase\n        .auth()\n        .signInWithPopup(new firebase.auth.GoogleAuthProvider());\n    },\n\n    async [actions.signOut]({ commit }: { commit: Commit }) {\n      await firebase.auth().signOut();\n      commit(mutations.SET_USER, null);\n    }\n  }\n};\n","import { clone } from \"@/tools/utils\";\nimport { Commit } from \"vuex\";\nimport api from \"@/api/api\";\nimport { ErrorKV } from \"@/types/errorkv\";\nimport { State as UserState } from \"@/store/user\";\n\nexport type NodeContent = {\n  nodeID: string;\n  content: string;\n};\n\n// user private comment\nexport type NodeComment = {\n  nodeID: string;\n  comment: string;\n};\n\nexport interface State {\n  nodeContents: Record<string, NodeContent>;\n  userNodeComments: Record<string, NodeComment>;\n}\n\nexport const mutations = {\n  SET_CONTENTS: \"SET_CONTENTS\",\n  SET_USER_COMMENTS: \"SET_USER_COMMENTS\",\n  SET_NODE_CONTENT: \"SET_NODE_CONTENT\",\n  SET_NODE_COMMENT: \"SET_NODE_COMMENT\"\n};\n\nexport const actions = {\n  getNodeContent: \"getNodeContent\",\n  setNodeContent: \"setNodeContent\",\n  setNodeComment: \"setNodeComment\"\n};\n\nexport const EmptyNodeContent = {\n  nodeID: \"\",\n  content: \"\"\n} as NodeContent;\n\nfunction createContentIfNotExist(\n  nodeContents: Record<string, NodeContent>,\n  nodeID: string\n) {\n  if (!nodeContents[nodeID]) {\n    nodeContents[nodeID] = clone(EmptyNodeContent);\n    nodeContents[nodeID].nodeID = nodeID;\n  }\n}\n\nexport const EmptyNodeComment = {\n  nodeID: \"\",\n  comment: \"\"\n} as NodeComment;\n\nfunction createCommentIfNotExist(\n  userNodeComments: Record<string, NodeComment>,\n  nodeID: string\n) {\n  if (!userNodeComments[nodeID]) {\n    userNodeComments[nodeID] = clone(EmptyNodeComment);\n    userNodeComments[nodeID].nodeID = nodeID;\n  }\n}\n\nexport const store = {\n  namespaced: true,\n  state: {\n    nodeContents: {} as Record<string, NodeContent>,\n    userNodeComments: {} as Record<string, NodeComment>\n  } as State,\n  actions: {\n    [actions.getNodeContent](\n      { state }: { state: State },\n      nodeID: string\n    ): NodeContent {\n      return state.nodeContents[nodeID];\n    },\n\n    /**\n     * setNodeComment\n     * @param commit\n     * @param state\n     * @param v\n     */\n    async [actions.setNodeComment](\n      { commit, rootState }: { commit: Commit; rootState: { user: UserState } },\n      v: { nodeID: string; comment: string }\n    ): Promise<ErrorKV> {\n      // cannot save for unauthorized user\n      if (!rootState.user.user || rootState.user.user.isAnonymous) {\n        return null;\n      }\n\n      // add to DB\n      const err = await api.debouncedUpdate({\n        [`user_data/${rootState.user.user.uid}/comment/${v.nodeID}/nodeID`]: v.nodeID,\n        [`user_data/${rootState.user.user.uid}/comment/${v.nodeID}/comment`]: v.comment\n      });\n      if (err) {\n        return err;\n      }\n\n      // change in local store\n      commit(`${mutations.SET_NODE_COMMENT}`, v);\n\n      return null;\n    },\n\n    /**\n     * setNodeContent\n     * @param commit\n     * @param state\n     * @param v\n     */\n    async [actions.setNodeContent](\n      { commit, state }: { commit: Commit; state: State },\n      v: { nodeID: string; content: string }\n    ): Promise<ErrorKV> {\n      // change in local store before adding to DB for comfortable textbox editing experience\n      commit(`${mutations.SET_NODE_CONTENT}`, v);\n\n      // add to DB\n      const err = await api.debouncedUpdate({\n        [`node_content/${v.nodeID}/nodeID`]: v.nodeID,\n        [`node_content/${v.nodeID}/content`]: v.content\n      });\n      if (err) {\n        return err;\n      }\n\n      return null;\n    }\n  },\n  mutations: {\n    /**\n     * SET_CONTENTS\n     * @param state\n     * @param nodeContents\n     */\n    [mutations.SET_CONTENTS](\n      state: State,\n      nodeContents: Record<string, NodeContent>\n    ) {\n      state.nodeContents = nodeContents;\n    },\n\n    /**\n     * SET_USER_CONTENTS\n     * @param state\n     * @param userNodeComments\n     */\n    [mutations.SET_USER_COMMENTS](\n      state: State,\n      userNodeComments: Record<string, NodeComment>\n    ) {\n      state.userNodeComments = userNodeComments;\n    },\n\n    /**\n     * SET_NODE_CONTENT\n     * @param state\n     * @param v\n     */\n    [mutations.SET_NODE_CONTENT](\n      state: State,\n      v: { nodeID: string; content: string }\n    ) {\n      createContentIfNotExist(state.nodeContents, v.nodeID);\n      state.nodeContents[v.nodeID].content = v.content;\n    },\n\n    /**\n     * SET_NODE_COMMENT\n     * @param state\n     * @param v\n     */\n    [mutations.SET_NODE_COMMENT](\n      state: State,\n      v: { nodeID: string; comment: string }\n    ) {\n      createCommentIfNotExist(state.userNodeComments, v.nodeID);\n      state.userNodeComments[v.nodeID].comment = v.comment;\n    }\n  }\n};\n","export interface State {\n  nodeIDs: string[];\n}\n\nexport const mutations = {\n  SET_NODE_IDS: \"SET_NODE_IDS\"\n};\n\nexport const store = {\n  namespaced: true,\n  state: {\n    nodeIDs: []\n  },\n  mutations: {\n    [mutations.SET_NODE_IDS](state: State, nodeIDs: Array<string>) {\n      // show only first 20 results\n      if (nodeIDs.length > 20) {\n        // TODO: show notification that only first 20 results are shown\n        state.nodeIDs = nodeIDs.slice(0, 20);\n      } else {\n        state.nodeIDs = nodeIDs;\n      }\n    }\n  }\n};\n","// FlexSearch for full-text search\n// @ts-ignore\nimport { Worker } from \"flexsearch\";\nconst index = new Worker({\n  language: \"en\",\n  tokenize: \"forward\"\n});\n\nexport function add(id: string, text: string) {\n  index.add(id, text);\n}\nexport function search(text: string): Promise<Array<string>> {\n  return index.search(text);\n}\n","import firebase from \"firebase/compat\";\nimport api from \"@/api/api\";\nimport {\n  mutations as treeMutations,\n  actions as treeActions\n} from \"@/store/tree\";\nimport { mutations as pinMutations } from \"@/store/pin\";\nimport { mutations as preconditionMutations } from \"@/store/precondition\";\nimport {\n  mutations as nodeContentMutations,\n  NodeContent\n} from \"@/store/node_content\";\nimport { store } from \"@/store/index\";\nimport { printError } from \"@/tools/utils\";\nimport { convertDBMapToTree } from \"@/api/helpers\";\nimport { DBNode } from \"@/api/types\";\nimport { add as textSearchAdd } from \"@/tools/textsearch\";\n\n/**\n * 1) fetch map\n * 2) subscribe to changes\n * 3) convert to tree and set to internal store\n * @param user\n */\nexport async function initMap(user: firebase.User | null) {\n  const [map, err] = await api.getMap(user);\n  if (map === null || err) {\n    printError(\"fetchMap: cannot api.getMap(user)\", { err });\n  }\n  // create Tree with denormalized positions\n  const [tree, convErr] = convertDBMapToTree(map!);\n  if (convErr !== null) {\n    return [null, convErr];\n  }\n  store.commit(`tree/${treeMutations.SET_TREE}`, tree);\n\n  // subscribe on changes for every node in map\n  for (const id in map) {\n    api.subscribeMapNodeChange(id, (dbNode: DBNode) =>\n      store.dispatch(`tree/${treeActions.handleMapNodeUpdate}`, dbNode)\n    );\n  }\n}\n\nexport async function fetchPins(user: firebase.User | null) {\n  let [pins, err] = await api.getPins(user);\n  if (pins == null || err) {\n    console.error(err);\n  }\n\n  if (user && !pins) {\n    [pins, err] = await api.getPins(null);\n    if (pins == null || err) {\n      console.error(err);\n      pins = {};\n    }\n  }\n\n  store.commit(`pin/${pinMutations.SET_PINS}`, pins);\n}\n\nexport async function initPreconditions(user: firebase.User | null) {\n  let [preconditions, err] = await api.getPreconditions(user);\n  if (preconditions == null || err) {\n    console.error(err);\n    preconditions = {};\n  }\n\n  if (user && !preconditions) {\n    [preconditions, err] = await api.getPreconditions(null);\n    if (preconditions == null || err) {\n      console.error(err);\n      preconditions = {};\n    }\n  }\n\n  // subscribe on precondition changes for every node\n  for (const id in preconditions) {\n    api.subscribePreconditionNodeChange(id, (nodeID, preconditionIDs) => {\n      return store.commit(\n        `precondition/${preconditionMutations.UPDATE_PRECONDITIONS}`,\n        { nodeID: nodeID, preconditionIDs: preconditionIDs }\n      );\n    });\n  }\n\n  store.commit(\n    `precondition/${preconditionMutations.SET_PRECONDITIONS}`,\n    preconditions\n  );\n}\n\n/**\n * Fetch all node content and subscribe for content change for each node\n * @param user\n */\nexport async function initNodeContents(user: firebase.User | null) {\n  // fetch node_content from general map\n  const [nodeContent, err] = await api.getNodeContent();\n  if (nodeContent == null || err) {\n    printError(\"fetchNodeContents error\", { err });\n    return;\n  }\n\n  const nodeContents: Record<string, NodeContent> = {};\n  for (const i in nodeContent) {\n    nodeContents[i] = {\n      nodeID: nodeContent[i].nodeID,\n      content: nodeContent[i].content\n    } as NodeContent;\n\n    api.subscribeNodeContentChange(\n      nodeContents[i].nodeID,\n      (v: { nodeID: string; content: string }) => {\n        textSearchAdd(v.nodeID, v.content);\n        store.commit(`nodeContent/${nodeContentMutations.SET_NODE_CONTENT}`, v);\n      }\n    );\n  }\n\n  store.commit(\n    `nodeContent/${nodeContentMutations.SET_CONTENTS}`,\n    nodeContents\n  );\n\n  if (user) {\n    const [userComments, err] = await api.getUserComments(user);\n    if (err) {\n      printError(\"fetch userComments error\", { err, user });\n      return;\n    }\n    if (userComments === null) {\n      return;\n    }\n\n    // fix in store\n    store.commit(\n      `nodeContent/${nodeContentMutations.SET_USER_COMMENTS}`,\n      userComments\n    );\n  }\n}\n\nexport async function initData(user: firebase.User | null) {\n  await initMap(user);\n  await fetchPins(user);\n  await initPreconditions(user);\n  await initNodeContents(user);\n}\n","import {\n  Commit,\n  createStore,\n  Dispatch,\n  Store,\n  useStore as baseUseStore\n} from \"vuex\";\nimport { InjectionKey } from \"vue\";\n\nimport { store as pinStore, State as PinState } from \"./pin\";\n\nimport { store as titleBoxStore, State as TitleBoxState } from \"./title_box\";\n\nimport {\n  store as preconditionStore,\n  State as PreconditionState\n} from \"./precondition\";\n\nimport {\n  store as positionChangePermitsStore,\n  State as positionChangePermitsState\n} from \"./position_change_permits\";\n\nimport {\n  store as treeStore,\n  State as TreeState,\n  mutations as treeMutations\n} from \"./tree\";\n\nimport { store as zoomPanStore, State as ZoomPanState } from \"./zoom_pan\";\n\nimport {\n  store as userStore,\n  State as UserState,\n  mutations as userMutations,\n  actions as userActions\n} from \"./user\";\n\nimport {\n  store as historyStore,\n  State as HistoryState,\n  mutations as historyMutations\n} from \"./history\";\n\nimport {\n  store as nodeContentStore,\n  State as NodeContentState\n} from \"./node_content\";\n\nimport {\n  store as searchResultStore,\n  State as SearchResultState\n} from \"./search_result\";\n\nimport api from \"@/api/api\";\nimport { initData } from \"./helpers\";\nimport { MapNode, Point } from \"@/types/graphics\";\nimport {\n  createNewNode,\n  findMapNode,\n  getNewNodeCenter\n} from \"@/store/tree/helpers\";\nimport NewErrorKV from \"@/tools/errorkv\";\nimport { addVector, convertPosition } from \"@/tools/graphics\";\nimport { DBNode } from \"@/api/types\";\nimport { clone, debounce } from \"lodash\";\nimport { printError } from \"@/tools/utils\";\nimport firebase from \"firebase/compat\";\n\nexport type State = {\n  // root states\n  editModeOn: boolean;\n  subscribedNodeIDs: string[];\n\n  // module states\n  titleBox: TitleBoxState;\n  pin: PinState;\n  precondition: PreconditionState;\n  positionChangePermits: positionChangePermitsState;\n  tree: TreeState;\n  user: UserState;\n  zoomPan: ZoomPanState;\n  history: HistoryState;\n  nodeContent: NodeContentState;\n  searchResult: SearchResultState;\n};\n\nexport const actions = {\n  init: \"init\",\n  updateNodePosition: \"updateNodePosition\",\n  createNode: \"createNode\",\n  cutPasteNode: \"cutPasteNode\",\n  removeNode: \"removeNode\",\n  setEditMode: \"setEditMode\",\n  subscribeDBChange: \"subscribeDBChange\",\n\n  // confirmSignInPopup\n  confirmSignInPopup: \"confirmSignInPopup\"\n};\n\nexport const mutations = {\n  SET_EDIT_MODE: \"SET_EDIT_MODE\",\n  SET_SUBSCRIBED_NODE_IDS: \"SET_SUBSCRIBED_NODE_IDS\"\n};\n\nconst debouncedPositionSet = debounce(\n  (\n    nodeID: string,\n    newCenter: Point,\n    parentID: string,\n    mapNodeLayers: Record<string, MapNode>[]\n  ) => {\n    const [normalizedNewNodeCenter] = convertPosition(\n      \"normalize\",\n      newCenter,\n      parentID,\n      mapNodeLayers\n    );\n\n    api.update({ [`map/${nodeID}/position`]: normalizedNewNodeCenter });\n  },\n  200\n);\n\nexport const key: InjectionKey<Store<State>> = Symbol();\n\nexport const store = createStore<State>({\n  state: {\n    editModeOn: false,\n    subscribedNodeIDs: [] as string[]\n  } as State,\n  mutations: {\n    [mutations.SET_EDIT_MODE](state: State, val: boolean) {\n      state.editModeOn = val;\n    },\n    [mutations.SET_SUBSCRIBED_NODE_IDS](state: State, val: string[]) {\n      state.subscribedNodeIDs = val;\n    }\n  },\n  actions: {\n    /**\n     * confirmSignInPopup\n     * @param commit\n     * @param state\n     * @param confirm\n     */\n    async [actions.confirmSignInPopup](\n      { dispatch, state }: { dispatch: Dispatch; state: State },\n      confirm: {\n        require(args: {\n          message?: string;\n          target?: EventTarget;\n          group?: string;\n          icon?: string;\n          header?: string;\n          accept?: () => void;\n          reject?: () => void;\n          acceptLabel?: string;\n          rejectLabel?: string;\n          acceptIcon?: string;\n          rejectIcon?: string;\n          blockScroll?: boolean;\n          acceptClass?: string;\n          rejectClass?: string;\n        }): void;\n\n        close(): void;\n      }\n    ) {\n      confirm.require({\n        message: \"Please authorize to change node contents\",\n        header: \"SignIn\",\n        acceptLabel: \"Ok, Sign In\",\n        rejectLabel: \"No, thanks, just watching\",\n        accept: async () => {\n          await dispatch(`user/${userActions.signIn}`);\n        },\n        reject: () => {\n          return;\n        }\n      });\n    },\n\n    /**\n     *\n     * @param commit\n     * @param state\n     * @param val\n     */\n    [actions.setEditMode](\n      { commit, state }: { commit: Commit; state: State },\n      val: boolean\n    ) {\n      commit(mutations.SET_EDIT_MODE, val);\n      if (!val) {\n        state.subscribedNodeIDs.forEach(id =>\n          api.unsubscribeDBChange(\"map/\" + id)\n        );\n        commit(mutations.SET_SUBSCRIBED_NODE_IDS, []);\n      }\n    },\n\n    /**\n     *\n     * @param commit\n     */\n    async [actions.init]({ commit }: { commit: Commit }) {\n      api.initFirebase();\n      firebase.auth().onAuthStateChanged(user => {\n        if (user && !user.isAnonymous) {\n          api.setPublicUserData(user.uid, user.displayName, null);\n          commit(`user/${userMutations.SET_USER}`, user);\n          initData(user);\n        } else {\n          commit(`user/${userMutations.SET_USER}`, null);\n          initData(null);\n        }\n      });\n    },\n\n    /**\n     *\n     * @param commit\n     * @param state\n     * @param v\n     */\n    async [actions.createNode](\n      { commit, state }: { commit: Commit; state: State },\n      v: {\n        parentID: string;\n        title: string;\n      }\n    ) {\n      const parent = state.tree.nodeRecord[v.parentID].node;\n      const [newCenter, changedNode, err1] = getNewNodeCenter(\n        parent,\n        state.tree.mapNodeLayers,\n        true\n      );\n      if (err1 !== null) {\n        printError(\"Cannot create new center\", {\n          err: err1,\n          parent,\n          \"state.tree.mapNodeLayers\": state.tree.mapNodeLayers\n        });\n        return;\n      }\n\n      const [normalizedPosition, err2] = convertPosition(\n        \"normalize\",\n        newCenter!,\n        v.parentID,\n        state.tree.mapNodeLayers\n      );\n      if (err2) {\n        printError(\"createNode: cannot create new center\", {\n          err: err2,\n          parent,\n          \"state.tree.mapNodeLayers\": state.tree.mapNodeLayers\n        });\n        return;\n      }\n      const node = createNewNode(v.title, normalizedPosition!);\n      const newDBNode = {\n        id: node.id,\n        parentID: v.parentID,\n        name: v.title,\n        children: [],\n        position: normalizedPosition\n      };\n      const newKey = api.generateKey();\n      const updateMap: Record<string, any> = {\n        [`map/${newDBNode.id}`]: newDBNode,\n        [`map/${newDBNode.parentID}/children/${newKey}`]: newDBNode.id\n      };\n\n      if (changedNode) {\n        const [normalizedChangedCenter] = convertPosition(\n          \"normalize\",\n          changedNode.position,\n          v.parentID,\n          state.tree.mapNodeLayers\n        );\n        updateMap[`map/${changedNode.id}/position`] = normalizedChangedCenter;\n      }\n\n      await api.update(updateMap);\n\n      commit(`history/${historyMutations.ADD_CREATE}`, {\n        nodeID: node.id,\n        parentID: v.parentID\n      });\n\n      return node.id;\n    },\n\n    /**\n     *\n     * @param commit\n     * @param state\n     * @param v\n     */\n    async [actions.cutPasteNode](\n      { commit, state }: { commit: Commit; state: State },\n      v: {\n        nodeID: string;\n        parentID: string;\n      }\n    ) {\n      // remove nodeID from oldParent children,\n      // add to newParent children,\n      // recalculate position of node, normalize it and\n      // update DB with these three modifications in one transaction\n      const oldParent = state.tree.nodeRecord[v.nodeID].parent;\n      const newParent = state.tree.nodeRecord[v.parentID].node;\n      const [newCenter, changedNode, err1] = getNewNodeCenter(\n        newParent,\n        state.tree.mapNodeLayers,\n        true\n      );\n      if (err1) {\n        printError(\"cutPasteNode: cannot getNewNodeCenter\", { err: err1 });\n        return;\n      }\n      const [normalizedNewNodeCenter, err2] = convertPosition(\n        \"normalize\",\n        newCenter!,\n        v.parentID,\n        state.tree.mapNodeLayers\n      );\n      if (err2) {\n        printError(\"cutPasteNode: cannot create new center\", {\n          err: err2,\n          parent,\n          \"state.tree.mapNodeLayers\": state.tree.mapNodeLayers\n        });\n        return;\n      }\n      // generate key for new child in list of newParent\n      const newKey = api.generateKey();\n      // search for key of childID in children of oldParent\n      const oldKey = await api.findKeyOfChild(oldParent!.id, v.nodeID);\n      const updateMap = {\n        [`map/${v.nodeID}/parentID`]: newParent!.id,\n        [`map/${oldParent!.id}/children/${oldKey}`]: null, // remove from old parent children\n        [`map/${newParent!.id}/children/${newKey}`]: v.nodeID, // add to children of new parents\n        [`map/${v.nodeID}/position`]: normalizedNewNodeCenter\n      };\n      if (changedNode) {\n        const [normalizedChangedCenter] = convertPosition(\n          \"normalize\",\n          changedNode.position,\n          v.parentID,\n          state.tree.mapNodeLayers\n        );\n        updateMap[`map/${changedNode.id}/position`] = normalizedChangedCenter;\n      }\n      await api.update(updateMap);\n\n      commit(`history/${historyMutations.ADD_CUT_PASTE}`, {\n        nodeID: v.nodeID,\n        parentID: v.parentID\n      });\n    },\n\n    /**\n     *\n     * @param commit\n     * @param state\n     * @param nodeID\n     */\n    async [actions.removeNode](\n      { commit, state }: { commit: Commit; state: State },\n      nodeID: string\n    ) {\n      const parent = state.tree.nodeRecord[nodeID].parent;\n      if (!parent) {\n        return;\n      }\n      const parentID = parent.id;\n      const node = (await api.getNode(nodeID)) as DBNode;\n      // collect all children id recursively\n      const allChildrenID = clone(node.children);\n      const allChildrenIDMap = {} as Record<string, DBNode>;\n      while (allChildrenID.length > 0) {\n        const id = allChildrenID.pop();\n        if (\n          !id ||\n          !state.tree.nodeRecord[id!] ||\n          !state.tree.nodeRecord[id!].node ||\n          !state.tree.nodeRecord[id!].parent\n        ) {\n          continue;\n        }\n        allChildrenIDMap[id] = {\n          id: id,\n          parentID: state.tree.nodeRecord[id].parent!.id,\n          name: state.tree.nodeRecord[id].node.title,\n          children: state.tree.nodeRecord[id].node.children.map(\n            node => node.id\n          ),\n          position: state.tree.nodeRecord[id].node.position\n        };\n        allChildrenID.push(\n          ...state.tree.nodeRecord[id].node.children.map(node => node.id)\n        );\n      }\n      // move node and its children to /trash atomically\n      const moveToTrash = {} as Record<string, any>;\n      const oldKey = await api.findKeyOfChild(parent.id, nodeID);\n      moveToTrash[`trash/${nodeID}/map`] = node;\n      moveToTrash[`map/${nodeID}`] = null;\n      moveToTrash[`map/${parent.id}/children/${oldKey}`] = null;\n      if (state.nodeContent.nodeContents[nodeID]) {\n        moveToTrash[`trash/${nodeID}/node_content`] =\n          state.nodeContent.nodeContents[nodeID];\n        moveToTrash[`node_content/${nodeID}`] = null;\n      }\n      if (state.precondition.preconditions[nodeID]) {\n        moveToTrash[`trash/${nodeID}/precondition`] =\n          state.precondition.preconditions[nodeID];\n        moveToTrash[`precondition/${nodeID}`] = null;\n      }\n\n      // move also all children to /trash\n      for (const id in allChildrenIDMap) {\n        moveToTrash[`trash/${id}/map`] = allChildrenIDMap[id];\n        moveToTrash[`map/${id}`] = null;\n        if (state.nodeContent.nodeContents[id]) {\n          moveToTrash[`trash/${id}/node_content`] =\n            state.nodeContent.nodeContents[id];\n          moveToTrash[`node_content/${id}`] = null;\n        }\n        if (state.precondition.preconditions[id]) {\n          moveToTrash[`trash/${id}/precondition`] =\n            state.precondition.preconditions[id];\n          moveToTrash[`precondition/${id}`] = null;\n        }\n      }\n\n      await api.update(moveToTrash);\n\n      commit(`history/${historyMutations.ADD_REMOVE}`, {\n        parentNodeID: parentID,\n        nodeID: nodeID\n      });\n    },\n\n    /**\n     *\n     * @param commit\n     * @param state\n     * @param v\n     */\n    [actions.updateNodePosition](\n      { commit, state }: { commit: Commit; state: State },\n      v: { nodeId: string; delta: Point }\n    ) {\n      if (!state.editModeOn) {\n        return;\n      }\n      const [mapNode] = findMapNode(v.nodeId, state.tree.mapNodeLayers);\n      if (!mapNode) {\n        return NewErrorKV(\"UPDATE_NODE_POSITION: cannot find mapNode\", {\n          \"v.nodeId\": v.nodeId,\n          \"state.mapNodeLayers\": state.tree.mapNodeLayers\n        });\n      }\n      const newCenter = addVector(\n        { from: { x: 0, y: 0 }, to: mapNode.center },\n        { from: { x: 0, y: 0 }, to: v.delta }\n      ).to;\n\n      const args = { nodeId: v.nodeId, newCenter, returnError: null };\n      commit(`tree/${treeMutations.UPDATE_NODE_POSITION}`, args);\n      if (args.returnError === null) {\n        commit(`history/${historyMutations.ADD_POSITION_CHANGE}`, {\n          nodeID: v.nodeId,\n          oldPosition: mapNode.center,\n          newPosition: newCenter\n        });\n\n        // save to DB with debounce\n        debouncedPositionSet(\n          v.nodeId,\n          newCenter,\n          state.tree.nodeRecord[v.nodeId].parent!.id,\n          state.tree.mapNodeLayers\n        );\n      }\n    }\n  },\n  modules: {\n    pin: pinStore,\n    titleBox: titleBoxStore,\n    precondition: preconditionStore,\n    positionChangePermits: positionChangePermitsStore,\n    tree: treeStore,\n    user: userStore,\n    zoomPan: zoomPanStore,\n    history: historyStore,\n    nodeContent: nodeContentStore,\n    searchResult: searchResultStore\n  }\n});\n\n// define your own `useStore` composition function\nexport function useStore() {\n  return baseUseStore(key);\n}\n","\nimport { defineComponent } from \"vue\";\nimport { useStore, actions } from \"@/store\";\nexport default defineComponent({\n  setup() {\n    const store = useStore();\n    store.dispatch(actions.init);\n  }\n});\n","import { render } from \"./App.vue?vue&type=template&id=8c892ede\"\nimport script from \"./App.vue?vue&type=script&lang=ts\"\nexport * from \"./App.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\n  This section is just for test/emulator cases for now\n  <input id=\"email\" />\n  <input id=\"password\" />\n  <button @click=\"login\">login</button>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from \"vue\";\nimport api from \"@/api/api\";\nimport { mutations } from \"@/store/user\";\nimport firebase from \"firebase/compat\";\nimport { useStore } from \"@/store\";\n\nexport default defineComponent({\n  name: \"PasswordLogin\",\n\n  setup() {\n    const store = useStore();\n\n    return {\n      login: async () => {\n        const emailEl = document.getElementById(\"email\") as HTMLInputElement;\n        const passwordEl = document.getElementById(\n          \"password\"\n        ) as HTMLInputElement;\n        await firebase\n          .auth()\n          .signInWithEmailAndPassword(emailEl.value, passwordEl.value);\n      }\n    };\n  }\n});\n</script>\n","\nimport { defineComponent } from \"vue\";\nimport api from \"@/api/api\";\nimport { mutations } from \"@/store/user\";\nimport firebase from \"firebase/compat\";\nimport { useStore } from \"@/store\";\n\nexport default defineComponent({\n  name: \"PasswordLogin\",\n\n  setup() {\n    const store = useStore();\n\n    return {\n      login: async () => {\n        const emailEl = document.getElementById(\"email\") as HTMLInputElement;\n        const passwordEl = document.getElementById(\n          \"password\"\n        ) as HTMLInputElement;\n        await firebase\n          .auth()\n          .signInWithEmailAndPassword(emailEl.value, passwordEl.value);\n      }\n    };\n  }\n});\n","import { render } from \"./PasswordLogin.vue?vue&type=template&id=63c7a1a8\"\nimport script from \"./PasswordLogin.vue?vue&type=script&lang=ts\"\nexport * from \"./PasswordLogin.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\n  <ConfirmDialog></ConfirmDialog>\n  <Toast position=\"bottom-left\" />\n  <NodeContent\n    :clickedTitleId=\"clickedTitleId\"\n    @select-precondition-is-on=\"setSelectPreconditionON\"\n    @select-precondition-is-off=\"setSelectPreconditionOFF\"\n    :show=\"!editModeOn\"\n    :selectedNodeId=\"selectedNodeId\"\n  />\n  <Menu />\n  <Map\n    :layers=\"visibleZoomedPanedLayers\"\n    :selectedNodeId=\"selectedNodeId\"\n    :selectedNodePreconditionIds=\"selectedNodePreconditionIds\"\n    :pin-nodes=\"pinNodes\"\n    :searchResultPinNodes=\"searchResultPinNodes\"\n    :searchResultNodeIDs=\"searchResultNodeIDs\"\n    @title-dragging=\"nodeDragging\"\n    @title-click=\"titleClick\"\n    @title-over=\"titleOver\"\n    @title-leave=\"titleLeave\"\n    @dragging-background=\"mapDragging\"\n    @wheel=\"zoom\"\n  />\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, ref, watch } from \"vue\";\nimport Map from \"@/components/map/Map.vue\";\nimport NodeContent from \"@/components/node_content/Index.vue\";\nimport ConfirmDialog from \"primevue/confirmdialog\";\nimport Toast from \"primevue/toast\";\nimport {\n  EventClickNode,\n  EventDraggingBackground,\n  EventDraggingNode,\n  EventWheel\n} from \"@/components/map/Map\";\nimport Menu from \"@/components/menu/Index.vue\";\nimport { useStore } from \"@/store\";\nimport { useRouter, useRoute, onBeforeRouteUpdate } from \"vue-router\";\nimport { mutations as treeMutations, NodeRecordItem } from \"@/store/tree\";\nimport { mutations as zoomPanMutations } from \"@/store/zoom_pan\";\nimport { actions } from \"@/store/\";\nimport {\n  filterNodesAndLayers,\n  findCentralNode,\n  zoomAndPanPoint,\n  zoomAnPanLayers\n} from \"@/views/Home\";\nimport { clone, printError } from \"@/tools/utils\";\nimport { MapNode } from \"@/types/graphics\";\nimport { findMapNode, findMapNodes } from \"@/store/tree/helpers\";\nimport { actions as positionChangePermitsActions } from \"@/store/position_change_permits\";\n\nexport default defineComponent({\n  name: \"Home\",\n\n  components: {\n    Map,\n    Menu,\n    NodeContent,\n    ConfirmDialog,\n    Toast\n  },\n\n  setup() {\n    const store = useStore();\n    const router = useRouter();\n    const route = useRoute();\n    const treeState = store.state.tree;\n    const zoomPanState = store.state.zoomPan;\n    const pinState = store.state.pin;\n    const searchResultState = store.state.searchResult;\n    const clickedTitleId = ref(\"-1\");\n    let selectPreconditionIsOn = false;\n    let titleOver = false;\n\n    // Set node from URL as selected\n    watch(\n      () => route.params.id,\n      () => {\n        store.commit(\n          `tree/${treeMutations.SET_SELECTED_NODE_ID}`,\n          route.params.id\n        );\n      },\n      { immediate: true }\n    );\n\n    /**\n     * From mapNodeLayers method updateLayers determines visibleLayers and nodes\n     * that will be shown to user (which is always just a small part of all nodes of the map)\n     * @param centralNodeId\n     * @param mapNodeLayers\n     * @param nodeRecord\n     */\n    const updateLayers = (\n      centralNodeId: string,\n      mapNodeLayers: Array<Record<string, MapNode>>,\n      nodeRecord: Record<string, NodeRecordItem>\n    ): Array<Record<number, MapNode>> => {\n      // Вычленяем слои и узлы которые мы хотим показывать учитывая что текущий видимый узел это centralNodeId\n      const [filteredLayers, err] = filterNodesAndLayers(\n        mapNodeLayers,\n        nodeRecord,\n        centralNodeId\n      );\n      if (err) {\n        printError(\"Home.vue: error in filterNodesAndLayers:\", { err });\n        return [];\n      }\n      return filteredLayers.reverse();\n    };\n\n    const centralNodeId = ref<string | null>(null);\n    // visibleLayers consists only from user visible nodes and visibleLayers of all (which is treeState.mapNodeLayers)\n    const visibleLayers = ref<Array<Record<string, MapNode>>>([]);\n\n    // Ugly hack to determine first load of page\n    let isFirstPageLoad = true;\n    onBeforeRouteUpdate(async (to, from) => {\n      isFirstPageLoad = false;\n    });\n    // If this is isFirstPageLoad then pan map to node in URL\n    watch(\n      () => [treeState.mapNodeLayers],\n      () => {\n        if (\n          isFirstPageLoad &&\n          route.params.id.length > 0 &&\n          treeState.mapNodeLayers.length > 0\n        ) {\n          const [firstNode] = findMapNode(\n            route.params.id as string,\n            treeState.mapNodeLayers\n          );\n          if (firstNode != null) {\n            store.commit(`zoomPan/${zoomPanMutations.SET_PAN}`, {\n              x: -firstNode.center.x + treeState.mapNodeLayers[0][\"0\"].center.x,\n              y: -firstNode.center.y + treeState.mapNodeLayers[0][\"0\"].center.y\n            });\n          }\n        }\n      }\n    );\n\n    // Determine which nodes to show based on current pan and zoom\n    watch(\n      () => [\n        treeState.mapNodeLayers,\n        zoomPanState.debouncedZoom,\n        zoomPanState.debouncedPan\n      ],\n      () => {\n        const [newCentralNodeId, err] = findCentralNode(\n          treeState.mapNodeLayers,\n          treeState.nodeRecord,\n          { width: window.innerWidth, height: window.innerHeight },\n          zoomPanState.debouncedZoom,\n          zoomPanState.pan,\n          zoomPanState.zoomCenter\n        );\n        if (err != null) {\n          printError(\"filterNodesAndLayers: error in findCurrentNode\", { err });\n        }\n\n        centralNodeId.value = newCentralNodeId;\n        visibleLayers.value = updateLayers(\n          newCentralNodeId,\n          treeState.mapNodeLayers,\n          treeState.nodeRecord\n        );\n      },\n      { immediate: true, deep: true }\n    );\n\n    const visibleZoomedPanedLayers = ref<Array<Record<string, MapNode>>>([]);\n    watch(\n      () => [\n        zoomPanState.pan.x,\n        zoomPanState.pan.y,\n        zoomPanState.zoom,\n        visibleLayers\n      ],\n      () => {\n        // visibleLayers это всегда слои с zoom=1 и pan={0, 0} состоящий из только видимых прямо сейчас элементов.\n        // Мы применяем к этому объекту текущий zoomPanState но сам эталон не трогаем, поэтому здесь clone\n        // Это не дорогая операция так как visibleLayers всегда содержит небольшое кол-во элементов\n        // видимых только прямо сейчас\n        const layersToZoomAndPan = clone(visibleLayers.value);\n        visibleZoomedPanedLayers.value = zoomAnPanLayers(\n          layersToZoomAndPan,\n          zoomPanState.zoom,\n          zoomPanState.pan\n        );\n      },\n      { immediate: true, deep: true }\n    );\n\n    return {\n      /**\n       * pinNodes\n       */\n      pinNodes: computed(() => {\n        if (centralNodeId.value == null) {\n          return [];\n        }\n        const pinNodeIDs = pinState.pinsReverse[centralNodeId.value];\n        if (!pinNodeIDs) {\n          return [];\n        }\n\n        // remove pins that already exists on visibleLayers\n        for (const layer of visibleLayers.value) {\n          for (const nodeID in layer) {\n            const node = layer[nodeID];\n            if (node.title != \"\") {\n              const ind = pinNodeIDs.indexOf(node.id);\n              if (ind != -1) {\n                pinNodeIDs.splice(ind, 1);\n              }\n            }\n          }\n        }\n\n        const pinMapNodes = findMapNodes(pinNodeIDs, treeState.mapNodeLayers);\n        const result = [];\n        for (const pinMapNode of pinMapNodes) {\n          const cl = clone(pinMapNode);\n          cl.center = zoomAndPanPoint(\n            pinMapNode.center,\n            zoomPanState.zoom,\n            zoomPanState.pan\n          );\n          result.push(cl);\n        }\n\n        return result;\n      }),\n\n      /**\n       * searchResultNodeIDs\n       */\n      searchResultNodeIDs: computed(() => {\n        return searchResultState.nodeIDs;\n      }),\n\n      /**\n       * searchResultPinNodes\n       */\n      searchResultPinNodes: computed(() => {\n        if (centralNodeId.value == null) {\n          return [];\n        }\n        const searchResultNodeIDs = clone(searchResultState.nodeIDs);\n        if (!searchResultNodeIDs) {\n          return [];\n        }\n\n        // remove pins that already exists on visibleLayers\n        for (const layer of visibleLayers.value) {\n          for (const nodeID in layer) {\n            const node = layer[nodeID];\n            if (node.title != \"\") {\n              const ind = searchResultNodeIDs.indexOf(node.id);\n              if (ind != -1) {\n                searchResultNodeIDs.splice(ind, 1);\n              }\n            }\n          }\n        }\n\n        const searchResultMapNodes = findMapNodes(\n          searchResultNodeIDs,\n          treeState.mapNodeLayers\n        );\n        const result = [];\n        for (const searchResultMapNode of searchResultMapNodes) {\n          const cl = clone(searchResultMapNode);\n          cl.center = zoomAndPanPoint(\n            searchResultMapNode.center,\n            zoomPanState.zoom,\n            zoomPanState.pan\n          );\n          result.push(cl);\n        }\n\n        return result;\n      }),\n\n      editModeOn: computed(() => store.state.editModeOn),\n      selectedNodeId: computed(() => treeState.selectedNodeId),\n      selectedNodePreconditionIds: computed(() =>\n        treeState.selectedNodeId\n          ? store.state.precondition.preconditions[treeState.selectedNodeId]\n          : []\n      ),\n      visibleZoomedPanedLayers: visibleZoomedPanedLayers,\n      nodeDragging: async (e: EventDraggingNode) => {\n        const hasDragPermit = await store.dispatch(\n          `positionChangePermits/${positionChangePermitsActions.CheckNodeID}`,\n          e.id\n        );\n        if (!hasDragPermit) {\n          return;\n        }\n        await store.dispatch(`${actions.updateNodePosition}`, {\n          nodeId: e.id,\n          delta: {\n            x: e.delta.x / zoomPanState.zoom,\n            y: e.delta.y / zoomPanState.zoom\n          }\n        });\n      },\n      setSelectPreconditionON: () => {\n        selectPreconditionIsOn = true;\n      },\n      setSelectPreconditionOFF: () => {\n        selectPreconditionIsOn = false;\n      },\n      clickedTitleId,\n      titleClick: (e: EventClickNode) => {\n        if (!selectPreconditionIsOn) {\n          router.push({ name: \"node\", params: { id: e.id } });\n        } else {\n          clickedTitleId.value = e.id;\n        }\n      },\n      titleOver: (e: EventClickNode) => {\n        titleOver = true;\n        store.commit(`tree/${treeMutations.SET_SELECTED_NODE_ID}`, e.id);\n      },\n      titleLeave: (e: EventClickNode) => {\n        titleOver = false;\n        store.commit(\n          `tree/${treeMutations.SET_SELECTED_NODE_ID}`,\n          route.params.id\n        );\n      },\n      mapDragging: (event: EventDraggingBackground) => {\n        if (store.state.editModeOn && titleOver) {\n          // to prevent pan while node position editing ( = title dragging in edit mode)\n          return;\n        }\n        store.commit(`zoomPan/${zoomPanMutations.ADD_PAN}`, event);\n      },\n      zoom: (event: EventWheel) => {\n        // initial value of center (when root.border == viewport)\n        const initial = {\n          x: (event.center.x - zoomPanState.pan.x) / zoomPanState.zoom,\n          y: (event.center.y - zoomPanState.pan.y) / zoomPanState.zoom\n        };\n        store.commit(`zoomPan/${zoomPanMutations.ADD_ZOOM}`, -1 * event.delta);\n        const after = {\n          x: initial.x * zoomPanState.zoom + zoomPanState.pan.x,\n          y: initial.y * zoomPanState.zoom + zoomPanState.pan.y\n        };\n        store.commit(`zoomPan/${zoomPanMutations.ADD_PAN}`, {\n          from: after,\n          to: event.center\n        });\n        store.commit(\n          `zoomPan/${zoomPanMutations.SET_ZOOM_CENTER}`,\n          event.center\n        );\n      }\n    };\n  }\n});\n</script>\n","<template>\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    :width=\"svgWidth\"\n    :height=\"svgHeight\"\n    :id=\"mapID\"\n    style=\"touch-action: none;\"\n  >\n    <MapLayer\n      v-for=\"(layer, index) of layers\"\n      :key=\"index\"\n      :layer-id=\"index\"\n      :map-nodes=\"layer\"\n      :border-color=\"borderColor(index)\"\n      :font-color=\"fontColor(index)\"\n      :font-size=\"fontSize(index)\"\n      :font-opacity=\"fontOpacity(index)\"\n      :selectedNodeId=\"selectedNodeId\"\n      :selectedNodePreconditionIds=\"selectedNodePreconditionIds\"\n      :searchResultNodeIDs=\"searchResultNodeIDs\"\n      :map-id=\"mapID\"\n      @title-dragging=\"draggingNode\"\n      @title-click=\"titleClick\"\n      @title-over=\"titleOver\"\n      @title-leave=\"titleLeave\"\n    />\n    <PreconditionLayer\n      :selectedNodeId=\"selectedNodeId\"\n      :visibleTitleIds=\"visibleTitleIds\"\n      :layer-id=\"`precondition`\"\n      @title-click=\"titleClick\"\n      @title-over=\"titleOver\"\n      @title-leave=\"titleLeave\"\n    />\n    <PinLayer\n      :pinNodes=\"pinNodes\"\n      :layer-id=\"`pinNodes`\"\n      color=\"pink\"\n      :font-size=\"8\"\n      font-weight=\"normal\"\n      text-decoration=\"none\"\n      :selectedNodeId=\"selectedNodeId\"\n      @title-click=\"titleClick\"\n      @title-over=\"titleOver\"\n      @title-leave=\"titleLeave\"\n    />\n    <PinLayer\n      :pinNodes=\"searchResultPinNodes\"\n      :layer-id=\"`searchResultPinNodes`\"\n      color=\"red\"\n      :font-size=\"10\"\n      font-weight=\"bold\"\n      text-decoration=\"underline\"\n      :selectedNodeId=\"selectedNodeId\"\n      @title-click=\"titleClick\"\n      @title-over=\"titleOver\"\n      @title-leave=\"titleLeave\"\n    />\n  </svg>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, onMounted, PropType } from \"vue\";\nimport { MapNode } from \"@/types/graphics\";\nimport MapLayer from \"@/components/map_layer/MapLayer.vue\";\nimport {\n  EventClickNode,\n  EventDraggingNode\n} from \"@/components/map_layer/MapLayer\";\nimport pan from \"./MapPan\";\nimport PinLayer from \"@/components/pin_layer/PinLayer.vue\";\nimport { printError } from \"@/tools/utils\";\nimport PreconditionLayer from \"@/components/precondition_layer/PreconditionLayer.vue\";\n\nconst mapID = \"mapID\";\n\nexport default defineComponent({\n  name: \"Map\",\n  emits: [\n    \"title-dragging\",\n    \"title-click\",\n    \"title-over\",\n    \"title-leave\",\n    \"dragging-background\",\n    \"wheel\"\n  ],\n  components: {\n    PreconditionLayer,\n    PinLayer,\n    MapLayer\n  },\n  props: {\n    layers: Object as PropType<Array<Record<string, MapNode>>>,\n    selectedNodeId: {\n      type: String || null,\n      validator: (prop: string | null) =>\n        typeof prop === \"string\" || prop === null,\n      required: true\n    },\n    selectedNodePreconditionIds: Object as PropType<string[]>,\n    pinNodes: Object as PropType<MapNode[]>,\n    searchResultPinNodes: Object as PropType<MapNode[]>,\n    searchResultNodeIDs: Object as PropType<string[]>\n  },\n  setup(props, ctx) {\n    onMounted(() => {\n      const map = document.getElementById(mapID);\n      if (!map) {\n        printError(\"Map.vue: cannot find map id for event listener\", {});\n        return;\n      }\n\n      map.addEventListener(\"mousedown\", event => {\n        pan.mouseDown();\n      });\n      map.addEventListener(\"mouseup\", event => {\n        pan.mouseUp();\n      });\n      map.addEventListener(\"mousemove\", event => {\n        pan.mouseMove(ctx.emit, {\n          from: {\n            x: event.clientX - event.movementX,\n            y: event.clientY - event.movementY\n          },\n          to: { x: event.clientX, y: event.clientY }\n        });\n      });\n\n      // zoom with mouse wheel\n      map.addEventListener(\n        \"wheel\",\n        event => {\n          ctx.emit(\"wheel\", {\n            delta: event.deltaY,\n            center: { x: event.clientX, y: event.clientY }\n          });\n        },\n        { passive: true }\n      );\n\n      let prevDist = Infinity;\n      const prevPoint = { x: Infinity, y: Infinity };\n      map.addEventListener(\n        \"touchstart\",\n        event => {\n          pan.mouseDown();\n        },\n        { passive: true }\n      );\n      map.addEventListener(\"touchend\", event => {\n        prevDist = Infinity;\n        prevPoint.x = Infinity;\n        prevPoint.y = Infinity;\n        pan.mouseUp();\n      });\n\n      // mobile zoom\n      map.addEventListener(\n        \"touchmove\",\n        e => {\n          if (e.touches.length === 1) {\n            if (prevPoint.x != Infinity && prevPoint.y != Infinity) {\n              pan.mouseMove(ctx.emit, {\n                from: prevPoint,\n                to: { x: e.touches[0].clientX, y: e.touches[0].clientY }\n              });\n            }\n            prevPoint.x = e.touches[0].clientX;\n            prevPoint.y = e.touches[0].clientY;\n          } else if (e.touches.length === 2) {\n            let delta = 0;\n            const dist = Math.hypot(\n              e.touches[0].pageX - e.touches[1].pageX,\n              e.touches[0].pageY - e.touches[1].pageY\n            );\n            if (prevDist !== Infinity) {\n              delta = prevDist - dist;\n            }\n            prevDist = dist;\n\n            ctx.emit(\"wheel\", {\n              delta: delta,\n              center: {\n                x: (e.touches[0].pageX - e.touches[1].pageX) / 2,\n                y: (e.touches[0].pageY - e.touches[1].pageY) / 2\n              }\n            });\n          }\n        },\n        { passive: true }\n      );\n    });\n\n    return {\n      svgWidth: window.innerWidth,\n      // 0.99 because if svg == innerHeight then browser vertical scroll bar appears\n      svgHeight: 0.99 * window.innerHeight,\n      visibleTitleIds: computed(() => {\n        if (!props.layers) {\n          return [];\n        }\n        const ids = [];\n        for (const layer of props.layers) {\n          for (const idx in layer) {\n            if (layer[idx].title != \"\") {\n              ids.push(idx);\n            }\n          }\n        }\n        return ids;\n      }),\n      draggingNode: (e: EventDraggingNode) => {\n        ctx.emit(\"title-dragging\", {\n          id: e.nodeId,\n          delta: e.delta\n        });\n      },\n      titleClick: (e: EventClickNode) => {\n        ctx.emit(\"title-click\", { id: e.id });\n      },\n      titleOver: (e: EventClickNode) => {\n        ctx.emit(\"title-over\", { id: e.id });\n      },\n      titleLeave: (e: EventClickNode) => {\n        ctx.emit(\"title-leave\", { id: e.id });\n      },\n      mapID: mapID,\n      fontSize: (index: number): number => {\n        let size = 0;\n        const levelSizes: Record<number, number> = {\n          0: 6,\n          1: 11,\n          2: 21,\n          3: 28\n        };\n        if (props.layers!.length >= 4) {\n          size = levelSizes[index];\n        }\n        if (props.layers!.length == 3) {\n          size = levelSizes[index + 1];\n        }\n        return size;\n      },\n      fontOpacity: (index: number): number => {\n        let val = 0;\n        const levelSizes: Record<number, number> = {\n          0: 1,\n          1: 1,\n          2: 0.2,\n          3: 1\n        };\n        if (props.layers!.length >= 4) {\n          val = levelSizes[index];\n        }\n        if (props.layers!.length == 3) {\n          val = levelSizes[index + 1];\n        }\n        return val;\n      },\n      fontColor: (index: number): string => {\n        if (props.layers!.length >= 4) {\n          return `rgb(${200 - 100 * index},${200 - 100 * index},${200 -\n            100 * index})`;\n        }\n        if (props.layers!.length == 3) {\n          return `rgb(${200 - 100 * (index + 1)},${200 -\n            100 * (index + 1)},${200 - 100 * (index + 1)})`;\n        }\n        return \"\";\n      },\n      borderColor: (index: number): string => {\n        let color = 0;\n        const levelColors: Record<number, number> = {\n          0: 240,\n          1: 200,\n          2: 100,\n          3: 90\n        };\n        if (props.layers!.length >= 4) {\n          color = levelColors[index];\n        }\n        if (props.layers!.length == 3) {\n          color = levelColors[index + 1];\n        }\n        return `rgb(${color},${color},${color})`;\n      }\n    };\n  }\n});\n</script>\n\n<style scoped></style>\n","<template>\n  <polygon\n    v-for=\"(mapNode, i) of mapNodes\"\n    :key=\"i\"\n    :stroke=\"borderColor\"\n    :fill=\"polygonFill(selectedNodeId, mapNode.id, selectedNodePreconditionIds)\"\n    :fill-opacity=\"\n      polygonFillOpacity(\n        selectedNodeId,\n        mapNode.id,\n        selectedNodePreconditionIds\n      )\n    \"\n    stroke-width=\"2\"\n    :points=\"polygonToPath(mapNode.border)\"\n    pointer-events=\"none\"\n  />\n  <!--    <circle-->\n  <!--      v-for=\"mapNode of mapNodes\"-->\n  <!--      :key=\"mapNode.id\"-->\n  <!--      :cx=\"mapNode.center.x\"-->\n  <!--      :cy=\"mapNode.center.y\"-->\n  <!--      r=\"10\"-->\n  <!--      stroke=\"black\"-->\n  <!--      stroke-width=\"1\"-->\n  <!--      fill=\"red\"-->\n  <!--    />-->\n  <!--  <SVGTextBox> component shows unpredictable behaviour here and I didn't dig the reason so just used copy of SVGTextBox here -->\n  <text\n    v-for=\"mapNode of mapNodes\"\n    :id=\"`${TITLE_PREFIX}${mapNode.id}`\"\n    :key=\"mapNode.id\"\n    font-family=\"Roboto\"\n    :font-size=\"fontSize\"\n    :font-weight=\"textWeight(mapNode.id, selectedNodeId)\"\n    :fill=\"textColor(mapNode.id, selectedNodeId)\"\n    :fill-opacity=\"fontOpacity\"\n    :text-decoration=\"textDecoration(mapNode.id)\"\n    class=\"text\"\n  >\n    <tspan\n      v-for=\"(line, i) of splitLines(mapNode.title, 20)\"\n      :key=\"i\"\n      :x=\"titleBox[mapNode.id] ? titleBox[mapNode.id].position.x : 0\"\n      :y=\"\n        titleBox[mapNode.id]\n          ? titleBox[mapNode.id].position.y + i * fontSize\n          : 0\n      \"\n      alignment-baseline=\"hanging\"\n    >\n      {{ line }}\n    </tspan>\n  </text>\n  <!-- Add rectangle to change cursor to pointer when hover on text -->\n  <rect\n    v-for=\"mapNode of mapNodes\"\n    :key=\"mapNode.id\"\n    :x=\"titleBox[mapNode.id] ? titleBox[mapNode.id].position.x : 0\"\n    :y=\"titleBox[mapNode.id] ? titleBox[mapNode.id].position.y : 0\"\n    :width=\"titleBox[mapNode.id] ? titleBox[mapNode.id].bbox.width : 0\"\n    :height=\"titleBox[mapNode.id] ? titleBox[mapNode.id].bbox.height : 0\"\n    fill=\"transparent\"\n    stroke-width=\"0\"\n    @mouseover=\"titleOver(mapNode.id)\"\n    @mouseleave=\"titleLeave(mapNode.id)\"\n    @click=\"titleClick(mapNode.id)\"\n    @mousedown=\"titleMouseDown(mapNode.id)\"\n    stroke=\"pink\"\n    cursor=\"pointer\"\n    pointer-events=\"fill\"\n  />\n</template>\n\n<script lang=\"ts\">\nimport {\n  defineComponent,\n  PropType,\n  toRef,\n  onMounted,\n  onUnmounted,\n  computed\n} from \"vue\";\nimport { MapNode } from \"@/types/graphics\";\nimport {\n  polygonToPath,\n  polygonFill,\n  polygonFillOpacity\n} from \"@/tools/graphics\";\nimport {\n  setTitleBoxes,\n  MouseDownInfo,\n  mouseMoveListener,\n  mouseUpListener\n} from \"@/components/map_layer/MapLayer\";\nimport { printError } from \"@/tools/utils\";\nimport { splitLines } from \"@/components/SVGTextBox\";\nimport { useStore } from \"@/store\";\nimport { TitleBox, mutations as titleBoxMutations } from \"@/store/title_box\";\n\nconst TITLE_PREFIX = \"title_\";\n\nexport default defineComponent({\n  name: \"MapLayer\",\n  emits: [\n    \"title-over\",\n    \"title-leave\",\n    \"title-click\",\n    \"title-drop\",\n    \"title-dragging\"\n  ],\n  props: {\n    layerId: {\n      type: Number\n    },\n    mapId: {\n      type: String,\n      required: true\n    },\n    mapNodes: {\n      type: Object as PropType<Record<string, MapNode>>,\n      required: true\n    },\n    borderColor: {\n      type: String,\n      required: true\n    },\n    fontSize: {\n      type: Number,\n      required: true\n    },\n    fontColor: {\n      type: String,\n      required: true\n    },\n    fontOpacity: {\n      type: Number,\n      required: true\n    },\n    selectedNodeId: {\n      type: String,\n      validator: (prop: string | null) =>\n        typeof prop === \"string\" || prop === null,\n      required: true\n    },\n    selectedNodePreconditionIds: Object as PropType<string[]>,\n    searchResultNodeIDs: Object as PropType<string[]>\n  },\n\n  setup(props, ctx) {\n    const mapNodes = toRef(props, \"mapNodes\");\n\n    const store = useStore();\n    const layerID = \"map_\" + props.layerId;\n    const titleBox = computed(() => {\n      return store.state.titleBox.layerMap[layerID];\n    });\n    setTitleBoxes(\n      TITLE_PREFIX,\n      \"center\",\n      mapNodes,\n      (titleBoxMap: Record<string, TitleBox>) => {\n        store.commit(`titleBox/${titleBoxMutations.SET_MAP}`, {\n          layerName: layerID,\n          titleBoxMap\n        });\n      }\n    );\n\n    /**\n     * Send event on titleBox click, drag and drop\n     */\n    const titleMouseDownInfo: MouseDownInfo = {\n      nodeId: null,\n      dragStart: false\n    };\n    const mouseMove = (event: MouseEvent) =>\n      mouseMoveListener(ctx.emit, event, titleMouseDownInfo);\n    const mouseUp = () => mouseUpListener(ctx.emit, titleMouseDownInfo);\n    onMounted(() => {\n      const map = document.getElementById(props.mapId);\n      if (!map) {\n        printError(\"MapLayer.vue: cannot find map id for event listener\", {});\n        return;\n      }\n      map.addEventListener(\"mousemove\", mouseMove);\n      map.addEventListener(\"mouseup\", mouseUp);\n    });\n    onUnmounted(() => {\n      const map = document.getElementById(props.mapId);\n      if (!map) {\n        printError(\"MapLayer.vue: cannot find map id for event listener\", {});\n        return;\n      }\n      map.removeEventListener(\"mousemove\", mouseMove);\n      map.removeEventListener(\"mouseup\", mouseUp);\n    });\n\n    const searchResultNodeIDsMap = computed(() => {\n      const map = {} as Record<string, boolean>;\n      if (!props.searchResultNodeIDs) {\n        return map;\n      }\n      for (const id of props.searchResultNodeIDs) {\n        map[id] = true;\n      }\n      return map;\n    });\n\n    return {\n      TITLE_PREFIX,\n      titleBox,\n      textColor: (nodeID: string, selectedNodeId: string) => {\n        if (selectedNodeId && selectedNodeId == nodeID) {\n          return \"#ffa500\";\n        }\n        if (\n          props.selectedNodePreconditionIds &&\n          props.selectedNodePreconditionIds?.indexOf(nodeID) != -1\n        ) {\n          return \"#ffa500\";\n        }\n        if (searchResultNodeIDsMap.value[nodeID]) {\n          return \"red\";\n        }\n\n        return props.fontColor;\n      },\n      textWeight: (nodeID: string, selectedNodeId: string) => {\n        if (selectedNodeId && selectedNodeId == nodeID) {\n          return \"bold\";\n        }\n        if (searchResultNodeIDsMap.value[nodeID]) {\n          return \"bold\";\n        }\n\n        return \"normal\";\n      },\n      textDecoration: (nodeID: string) => {\n        if (searchResultNodeIDsMap.value[nodeID]) {\n          return \"underline\";\n        }\n\n        return \"none\";\n      },\n      titleClick: (nodeID: string) => {\n        ctx.emit(\"title-click\", {\n          id: nodeID\n        });\n      },\n      titleOver: (nodeID: string) => {\n        ctx.emit(\"title-over\", {\n          id: nodeID\n        });\n      },\n      titleLeave: (nodeID: string) => {\n        ctx.emit(\"title-leave\", {\n          id: nodeID\n        });\n      },\n      titleMouseDown: (id: string) => {\n        titleMouseDownInfo.nodeId = id;\n        titleMouseDownInfo.dragStart = false;\n      }\n    };\n  },\n\n  methods: {\n    splitLines,\n    polygonToPath,\n    polygonFill,\n    polygonFillOpacity\n  }\n});\n</script>\n\n<style scoped>\n.text {\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n  pointer-events: none;\n}\n</style>\n","import { MapNode, Point } from \"@/types/graphics\";\nimport { nextTick, Ref, watch } from \"vue\";\n\nexport type EventClickNode = {\n  id: string;\n};\n\nexport type EventDraggingNode = {\n  nodeId: string;\n  delta: Point;\n};\n\nexport type MouseDownInfo = {\n  nodeId: string | null;\n  dragStart: boolean;\n};\n\ntype emitDragging = (\n  event: \"title-dragging\",\n  args: { nodeId: string; delta: Point }\n) => void;\ntype emitDrop = (event: \"title-drop\", args: { id: string }) => void;\n\ntype TitleBox = {\n  position: Point;\n  bbox: {\n    width: number;\n    height: number;\n  };\n};\n\nexport const mouseMoveListener = (\n  emit: emitDragging,\n  event: MouseEvent,\n  mouseDownInfo: MouseDownInfo\n) => {\n  if (mouseDownInfo.nodeId) {\n    mouseDownInfo.dragStart = true;\n    emit(\"title-dragging\", {\n      nodeId: mouseDownInfo.nodeId,\n      delta: {\n        x: event.movementX,\n        y: event.movementY\n      }\n    });\n  }\n};\n\nexport const mouseUpListener = (\n  emit: emitDrop,\n  mouseDownInfo: MouseDownInfo\n) => {\n  if (mouseDownInfo.nodeId) {\n    if (mouseDownInfo.dragStart) {\n      emit(\"title-drop\", { id: mouseDownInfo.nodeId });\n    }\n    mouseDownInfo.dragStart = false;\n    mouseDownInfo.nodeId = null;\n  }\n};\n\nexport const nodeToTitleBox = (\n  nodes: Record<string, MapNode>\n): Record<string, TitleBox> => {\n  const titleBox: Record<string, TitleBox> = {};\n  for (const i in nodes) {\n    const node = nodes[i];\n    titleBox[node.id] = {\n      position: node.center,\n      bbox: {\n        width: 0,\n        height: 0\n      }\n    };\n  }\n\n  return titleBox;\n};\n\nconst updateTitleBox = async (\n  titleIdPrefix: string,\n  position: \"center\" | \"left\",\n  mapNodes: Record<string, MapNode>\n): Promise<Record<string, TitleBox>> => {\n  const titleBox = {} as Record<string, TitleBox>;\n\n  // Code that will run only after the entire view has been rendered\n  await nextTick(() => {\n    // fill new ones\n    for (const i in mapNodes) {\n      const node = mapNodes[i];\n      const dom = document.getElementById(`${titleIdPrefix}${node.id}`);\n      if (dom == null) {\n        continue;\n      }\n      if (position == \"center\") {\n        titleBox[node.id] = {\n          position: {\n            x: node.center.x - dom.getBoundingClientRect().width / 2,\n            y: node.center.y - dom.getBoundingClientRect().height / 2\n          },\n          bbox: {\n            width: dom.getBoundingClientRect().width,\n            height: dom.getBoundingClientRect().height\n          }\n        };\n      } else if (position == \"left\") {\n        titleBox[node.id] = {\n          position: {\n            x: node.center.x - dom.getBoundingClientRect().width,\n            y: node.center.y - dom.getBoundingClientRect().height / 2\n          },\n          bbox: {\n            width: dom.getBoundingClientRect().width,\n            height: dom.getBoundingClientRect().height\n          }\n        };\n      }\n    }\n  });\n\n  return titleBox;\n};\n\nexport const setTitleBoxes = (\n  titleIdPrefix: string,\n  position: \"center\" | \"left\",\n  mapNodes: Ref<Record<string, MapNode>>,\n  cb: (titleBoxMap: Record<string, TitleBox>) => void\n) => {\n  cb(nodeToTitleBox(mapNodes.value));\n  /**\n   * Update titleBox on every prop change after DOM rerender\n   */\n  watch(\n    mapNodes,\n    async mps => {\n      return updateTitleBox(titleIdPrefix, position, mps).then(titleBoxMap =>\n        cb(titleBoxMap)\n      );\n    },\n    {\n      immediate: true\n    }\n  );\n};\n","export function splitLines(text: string, maxCharNum: number): string[] {\n  if (maxCharNum <= 0) {\n    return [];\n  }\n  if (text == \"\") {\n    return [];\n  }\n  const words = text.split(\" \");\n  const lines: string[] = [];\n  let currLine: string[] = [];\n  while (words.length) {\n    if (currLine.join(\" \").length > maxCharNum) {\n      const nextLine: string[] = [];\n      if (currLine.length > 1) {\n        nextLine.push(currLine.pop()!);\n      }\n      lines.push(currLine.join(\" \"));\n      currLine = nextLine;\n    } else {\n      currLine.push(words.shift()!);\n    }\n  }\n\n  if (currLine.join(\" \").length > maxCharNum) {\n    const nextLine: string[] = [];\n    if (currLine.length > 1) {\n      nextLine.push(currLine.pop()!);\n    }\n    lines.push(currLine.join(\" \"));\n    currLine = nextLine;\n  }\n  if (currLine.length) {\n    lines.push(currLine.join(\" \"));\n  }\n  return lines;\n}\n","\nimport {\n  defineComponent,\n  PropType,\n  toRef,\n  onMounted,\n  onUnmounted,\n  computed\n} from \"vue\";\nimport { MapNode } from \"@/types/graphics\";\nimport {\n  polygonToPath,\n  polygonFill,\n  polygonFillOpacity\n} from \"@/tools/graphics\";\nimport {\n  setTitleBoxes,\n  MouseDownInfo,\n  mouseMoveListener,\n  mouseUpListener\n} from \"@/components/map_layer/MapLayer\";\nimport { printError } from \"@/tools/utils\";\nimport { splitLines } from \"@/components/SVGTextBox\";\nimport { useStore } from \"@/store\";\nimport { TitleBox, mutations as titleBoxMutations } from \"@/store/title_box\";\n\nconst TITLE_PREFIX = \"title_\";\n\nexport default defineComponent({\n  name: \"MapLayer\",\n  emits: [\n    \"title-over\",\n    \"title-leave\",\n    \"title-click\",\n    \"title-drop\",\n    \"title-dragging\"\n  ],\n  props: {\n    layerId: {\n      type: Number\n    },\n    mapId: {\n      type: String,\n      required: true\n    },\n    mapNodes: {\n      type: Object as PropType<Record<string, MapNode>>,\n      required: true\n    },\n    borderColor: {\n      type: String,\n      required: true\n    },\n    fontSize: {\n      type: Number,\n      required: true\n    },\n    fontColor: {\n      type: String,\n      required: true\n    },\n    fontOpacity: {\n      type: Number,\n      required: true\n    },\n    selectedNodeId: {\n      type: String,\n      validator: (prop: string | null) =>\n        typeof prop === \"string\" || prop === null,\n      required: true\n    },\n    selectedNodePreconditionIds: Object as PropType<string[]>,\n    searchResultNodeIDs: Object as PropType<string[]>\n  },\n\n  setup(props, ctx) {\n    const mapNodes = toRef(props, \"mapNodes\");\n\n    const store = useStore();\n    const layerID = \"map_\" + props.layerId;\n    const titleBox = computed(() => {\n      return store.state.titleBox.layerMap[layerID];\n    });\n    setTitleBoxes(\n      TITLE_PREFIX,\n      \"center\",\n      mapNodes,\n      (titleBoxMap: Record<string, TitleBox>) => {\n        store.commit(`titleBox/${titleBoxMutations.SET_MAP}`, {\n          layerName: layerID,\n          titleBoxMap\n        });\n      }\n    );\n\n    /**\n     * Send event on titleBox click, drag and drop\n     */\n    const titleMouseDownInfo: MouseDownInfo = {\n      nodeId: null,\n      dragStart: false\n    };\n    const mouseMove = (event: MouseEvent) =>\n      mouseMoveListener(ctx.emit, event, titleMouseDownInfo);\n    const mouseUp = () => mouseUpListener(ctx.emit, titleMouseDownInfo);\n    onMounted(() => {\n      const map = document.getElementById(props.mapId);\n      if (!map) {\n        printError(\"MapLayer.vue: cannot find map id for event listener\", {});\n        return;\n      }\n      map.addEventListener(\"mousemove\", mouseMove);\n      map.addEventListener(\"mouseup\", mouseUp);\n    });\n    onUnmounted(() => {\n      const map = document.getElementById(props.mapId);\n      if (!map) {\n        printError(\"MapLayer.vue: cannot find map id for event listener\", {});\n        return;\n      }\n      map.removeEventListener(\"mousemove\", mouseMove);\n      map.removeEventListener(\"mouseup\", mouseUp);\n    });\n\n    const searchResultNodeIDsMap = computed(() => {\n      const map = {} as Record<string, boolean>;\n      if (!props.searchResultNodeIDs) {\n        return map;\n      }\n      for (const id of props.searchResultNodeIDs) {\n        map[id] = true;\n      }\n      return map;\n    });\n\n    return {\n      TITLE_PREFIX,\n      titleBox,\n      textColor: (nodeID: string, selectedNodeId: string) => {\n        if (selectedNodeId && selectedNodeId == nodeID) {\n          return \"#ffa500\";\n        }\n        if (\n          props.selectedNodePreconditionIds &&\n          props.selectedNodePreconditionIds?.indexOf(nodeID) != -1\n        ) {\n          return \"#ffa500\";\n        }\n        if (searchResultNodeIDsMap.value[nodeID]) {\n          return \"red\";\n        }\n\n        return props.fontColor;\n      },\n      textWeight: (nodeID: string, selectedNodeId: string) => {\n        if (selectedNodeId && selectedNodeId == nodeID) {\n          return \"bold\";\n        }\n        if (searchResultNodeIDsMap.value[nodeID]) {\n          return \"bold\";\n        }\n\n        return \"normal\";\n      },\n      textDecoration: (nodeID: string) => {\n        if (searchResultNodeIDsMap.value[nodeID]) {\n          return \"underline\";\n        }\n\n        return \"none\";\n      },\n      titleClick: (nodeID: string) => {\n        ctx.emit(\"title-click\", {\n          id: nodeID\n        });\n      },\n      titleOver: (nodeID: string) => {\n        ctx.emit(\"title-over\", {\n          id: nodeID\n        });\n      },\n      titleLeave: (nodeID: string) => {\n        ctx.emit(\"title-leave\", {\n          id: nodeID\n        });\n      },\n      titleMouseDown: (id: string) => {\n        titleMouseDownInfo.nodeId = id;\n        titleMouseDownInfo.dragStart = false;\n      }\n    };\n  },\n\n  methods: {\n    splitLines,\n    polygonToPath,\n    polygonFill,\n    polygonFillOpacity\n  }\n});\n","import { render } from \"./MapLayer.vue?vue&type=template&id=59d7967e&scoped=true\"\nimport script from \"./MapLayer.vue?vue&type=script&lang=ts\"\nexport * from \"./MapLayer.vue?vue&type=script&lang=ts\"\n\nimport \"./MapLayer.vue?vue&type=style&index=0&id=59d7967e&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-59d7967e\"\n\nexport default script","import { Vector } from \"@/types/graphics\";\n\nconst mouseDownBg = {\n  on: false\n};\n\nconst mouseDown = () => {\n  mouseDownBg.on = true;\n};\nconst mouseUp = () => {\n  mouseDownBg.on = false;\n};\n\nconst mouseMove = (\n  emit: (name: \"dragging-background\", o: any) => void,\n  vector: Vector\n) => {\n  if (!mouseDownBg.on) {\n    return;\n  }\n  emit(\"dragging-background\", vector);\n};\n\nexport default {\n  mouseDown,\n  mouseUp,\n  mouseMove\n};\n","<template>\n  <!--  <circle-->\n  <!--    v-for=\"node of pinNodes\"-->\n  <!--    :key=\"node.id\"-->\n  <!--    :cx=\"node.center.x\"-->\n  <!--    :cy=\"node.center.y\"-->\n  <!--    r=\"10\"-->\n  <!--    stroke=\"black\"-->\n  <!--    stroke-width=\"1\"-->\n  <!--    fill=\"red\"-->\n  <!--  />-->\n  <PinMarker\n    v-for=\"node of visiblePinNodes\"\n    :key=\"node.id\"\n    :x=\"node.center.x\"\n    :y=\"node.center.y\"\n    :color=\"color\"\n  />\n  <SVGTextBox\n    v-for=\"node of visiblePinNodes\"\n    :text=\"node.title\"\n    :id=\"`${TITLE_PREFIX}${node.id}`\"\n    :key=\"node.id\"\n    :useLineBreak=\"true\"\n    :x=\"titleXY[node.id].x\"\n    :y=\"titleXY[node.id].y\"\n    :line-height=\"8\"\n    :max-char-per-line=\"10\"\n    font-family=\"Roboto\"\n    :font-size=\"fontSize\"\n    :font-weight=\"fontWeight\"\n    :color=\"color\"\n    :text-decoration=\"textDecoration\"\n  />\n  <rect\n    v-for=\"node of pinNodes\"\n    :key=\"node.id\"\n    :x=\"titleXY[node.id].x\"\n    :y=\"titleXY[node.id].y\"\n    :width=\"titleBox[node.id] ? titleBox[node.id].bbox.width : 0\"\n    :height=\"titleBox[node.id] ? titleBox[node.id].bbox.height : 0\"\n    cursor=\"pointer\"\n    fill=\"transparent\"\n    @click=\"titleBoxClick(node.id)\"\n    @mouseover=\"titleOver(node.id)\"\n    @mouseleave=\"titleLeave(node.id)\"\n    stroke-width=\"0\"\n    stroke=\"pink\"\n  />\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, PropType } from \"vue\";\nimport { MapNode, Point } from \"@/types/graphics\";\nimport { setTitleBoxes } from \"@/components/map_layer/MapLayer\";\nimport PinMarker from \"@/components/pin_layer/PinMarker.vue\";\nimport {\n  WIDTH as PIN_MARKER_WIDTH,\n  HEIGHT as PIN_MARKER_HEIGHT\n} from \"@/components/pin_layer/PinMarker.vue\";\nimport SVGTextBox from \"@/components/SVGTextBox.vue\";\nimport { useStore } from \"@/store\";\nimport { mutations as titleBoxMutations, TitleBox } from \"@/store/title_box\";\n\nconst TITLE_PREFIX = \"pin_title_\";\n\nexport default defineComponent({\n  name: \"PinLayer\",\n  components: { SVGTextBox, PinMarker },\n  emits: [\"title-click\", \"title-over\", \"title-leave\"],\n  props: {\n    layerId: String,\n    pinNodes: {\n      type: Object as PropType<MapNode[]>,\n      required: true\n    },\n    selectedNodeId: {\n      type: String,\n      validator: (prop: string | null) =>\n        typeof prop === \"string\" || prop === null,\n      required: true\n    },\n    color: {\n      type: String\n    },\n    fontWeight: {\n      type: String\n    },\n    fontSize: {\n      type: Number\n    },\n    textDecoration: {\n      type: String\n    }\n  },\n  setup(props, ctx) {\n    const allPinNodes = computed(() => {\n      const result: Record<string, MapNode> = {};\n      for (const node of props.pinNodes) {\n        result[node.id] = node;\n      }\n      return result;\n    });\n    const visiblePinNodes = computed(() => {\n      const result: Record<string, MapNode> = {};\n      for (const node of props.pinNodes) {\n        if (node.id != props.selectedNodeId) {\n          result[node.id] = node;\n        }\n      }\n      return result;\n    });\n\n    const store = useStore();\n    const layerID = \"pin_\" + props.layerId;\n    const titleBox = computed(() => store.state.titleBox.layerMap[layerID]);\n    // watch pin nodes and set its title boxes to titleBox store\n    setTitleBoxes(\n      TITLE_PREFIX,\n      \"left\",\n      allPinNodes,\n      (titleBoxMap: Record<string, TitleBox>) => {\n        store.commit(`titleBox/${titleBoxMutations.SET_MAP}`, {\n          layerName: layerID,\n          titleBoxMap\n        });\n      }\n    );\n\n    return {\n      TITLE_PREFIX,\n      PIN_MARKER_HEIGHT,\n      PIN_MARKER_WIDTH,\n      visiblePinNodes,\n      titleBox,\n      titleXY: computed(() => {\n        const alignedXY: Record<string, Point> = {};\n        for (const i in allPinNodes.value) {\n          const node = allPinNodes.value[i];\n          alignedXY[node.id] = {\n            x: titleBox.value[node.id] ? titleBox.value[node.id].position.x : 0,\n            y: titleBox.value[node.id] ? titleBox.value[node.id].position.y : 0\n          };\n        }\n        return alignedXY;\n      }),\n      titleBoxClick: (nodeId: string) => {\n        ctx.emit(\"title-click\", { id: nodeId });\n      },\n      titleOver: (nodeId: string) => {\n        ctx.emit(\"title-over\", { id: nodeId });\n      },\n      titleLeave: (nodeId: string) => {\n        ctx.emit(\"title-leave\", { id: nodeId });\n      }\n    };\n  }\n});\n</script>\n","<template>\n  <g :transform=\"`translate(${x - WIDTH / 2} ${y - HEIGHT}) scale(0.05 0.05)`\">\n    <path\n      :fill=\"`${color}`\"\n      d=\"M182.9,551.7c0,0.1,0.2,0.3,0.2,0.3S358.3,283,358.3,194.6c0-130.1-88.8-186.7-175.4-186.9\n        C96.3,7.9,7.5,64.5,7.5,194.6c0,88.4,175.3,357.4,175.3,357.4S182.9,551.7,182.9,551.7z M122.2,187.2c0-33.6,27.2-60.8,60.8-60.8\n        c33.6,0,60.8,27.2,60.8,60.8S216.5,248,182.9,248C149.4,248,122.2,220.8,122.2,187.2z\"\n    />\n  </g>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from \"vue\";\n\nexport const WIDTH = 18;\nexport const HEIGHT = 26;\n\nexport default defineComponent({\n  name: \"PinMarker\",\n  props: {\n    x: {\n      type: Number,\n      required: true\n    },\n    y: {\n      type: Number,\n      required: true\n    },\n    color: {\n      type: String,\n      required: true\n    }\n  },\n  setup() {\n    return {\n      WIDTH,\n      HEIGHT\n    };\n  }\n});\n</script>\n","\nimport { defineComponent } from \"vue\";\n\nexport const WIDTH = 18;\nexport const HEIGHT = 26;\n\nexport default defineComponent({\n  name: \"PinMarker\",\n  props: {\n    x: {\n      type: Number,\n      required: true\n    },\n    y: {\n      type: Number,\n      required: true\n    },\n    color: {\n      type: String,\n      required: true\n    }\n  },\n  setup() {\n    return {\n      WIDTH,\n      HEIGHT\n    };\n  }\n});\n","import { render } from \"./PinMarker.vue?vue&type=template&id=d238f9c2\"\nimport script from \"./PinMarker.vue?vue&type=script&lang=ts\"\nexport * from \"./PinMarker.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\n  <text\n    :id=\"id\"\n    :font-family=\"fontFamily\"\n    :font-size=\"fontSize\"\n    :font-weight=\"fontWeight\"\n    :fill=\"color\"\n    class=\"text\"\n  >\n    <tspan\n      v-for=\"(line, i) of lines\"\n      :key=\"i\"\n      :x=\"x\"\n      :y=\"y > 0 ? y + i * lineHeight : 0\"\n      alignment-baseline=\"hanging\"\n    >\n      {{ line }}\n    </tspan>\n  </text>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from \"vue\";\nimport { splitLines } from \"@/components/SVGTextBox\";\n\nexport default defineComponent({\n  name: \"SVGTextBox\",\n  props: {\n    id: {\n      type: String,\n      required: true\n    },\n    useLineBreak: {\n      type: Boolean,\n      required: true\n    },\n    text: {\n      type: String,\n      required: true\n    },\n    x: {\n      type: Number,\n      required: true\n    },\n    y: {\n      type: Number,\n      required: true\n    },\n    lineHeight: {\n      type: Number,\n      required: true\n    },\n    maxCharPerLine: {\n      type: Number,\n      required: true\n    },\n    fontFamily: {\n      type: String,\n      required: true\n    },\n    fontSize: {\n      type: Number,\n      required: true\n    },\n    fontWeight: {\n      type: String,\n      required: true\n    },\n    color: {\n      type: String,\n      required: true\n    }\n  },\n  setup(props) {\n    let lines = [];\n    if (props.useLineBreak) {\n      lines = splitLines(props.text, props.maxCharPerLine);\n    } else {\n      lines = [props.text];\n    }\n    return {\n      lines\n    };\n  }\n});\n</script>\n\n<style scoped>\n.text {\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n  pointer-events: none;\n}\n</style>\n","\nimport { defineComponent } from \"vue\";\nimport { splitLines } from \"@/components/SVGTextBox\";\n\nexport default defineComponent({\n  name: \"SVGTextBox\",\n  props: {\n    id: {\n      type: String,\n      required: true\n    },\n    useLineBreak: {\n      type: Boolean,\n      required: true\n    },\n    text: {\n      type: String,\n      required: true\n    },\n    x: {\n      type: Number,\n      required: true\n    },\n    y: {\n      type: Number,\n      required: true\n    },\n    lineHeight: {\n      type: Number,\n      required: true\n    },\n    maxCharPerLine: {\n      type: Number,\n      required: true\n    },\n    fontFamily: {\n      type: String,\n      required: true\n    },\n    fontSize: {\n      type: Number,\n      required: true\n    },\n    fontWeight: {\n      type: String,\n      required: true\n    },\n    color: {\n      type: String,\n      required: true\n    }\n  },\n  setup(props) {\n    let lines = [];\n    if (props.useLineBreak) {\n      lines = splitLines(props.text, props.maxCharPerLine);\n    } else {\n      lines = [props.text];\n    }\n    return {\n      lines\n    };\n  }\n});\n","import { render } from \"./SVGTextBox.vue?vue&type=template&id=3400d8a7&scoped=true\"\nimport script from \"./SVGTextBox.vue?vue&type=script&lang=ts\"\nexport * from \"./SVGTextBox.vue?vue&type=script&lang=ts\"\n\nimport \"./SVGTextBox.vue?vue&type=style&index=0&id=3400d8a7&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-3400d8a7\"\n\nexport default script","\nimport { computed, defineComponent, PropType } from \"vue\";\nimport { MapNode, Point } from \"@/types/graphics\";\nimport { setTitleBoxes } from \"@/components/map_layer/MapLayer\";\nimport PinMarker from \"@/components/pin_layer/PinMarker.vue\";\nimport {\n  WIDTH as PIN_MARKER_WIDTH,\n  HEIGHT as PIN_MARKER_HEIGHT\n} from \"@/components/pin_layer/PinMarker.vue\";\nimport SVGTextBox from \"@/components/SVGTextBox.vue\";\nimport { useStore } from \"@/store\";\nimport { mutations as titleBoxMutations, TitleBox } from \"@/store/title_box\";\n\nconst TITLE_PREFIX = \"pin_title_\";\n\nexport default defineComponent({\n  name: \"PinLayer\",\n  components: { SVGTextBox, PinMarker },\n  emits: [\"title-click\", \"title-over\", \"title-leave\"],\n  props: {\n    layerId: String,\n    pinNodes: {\n      type: Object as PropType<MapNode[]>,\n      required: true\n    },\n    selectedNodeId: {\n      type: String,\n      validator: (prop: string | null) =>\n        typeof prop === \"string\" || prop === null,\n      required: true\n    },\n    color: {\n      type: String\n    },\n    fontWeight: {\n      type: String\n    },\n    fontSize: {\n      type: Number\n    },\n    textDecoration: {\n      type: String\n    }\n  },\n  setup(props, ctx) {\n    const allPinNodes = computed(() => {\n      const result: Record<string, MapNode> = {};\n      for (const node of props.pinNodes) {\n        result[node.id] = node;\n      }\n      return result;\n    });\n    const visiblePinNodes = computed(() => {\n      const result: Record<string, MapNode> = {};\n      for (const node of props.pinNodes) {\n        if (node.id != props.selectedNodeId) {\n          result[node.id] = node;\n        }\n      }\n      return result;\n    });\n\n    const store = useStore();\n    const layerID = \"pin_\" + props.layerId;\n    const titleBox = computed(() => store.state.titleBox.layerMap[layerID]);\n    // watch pin nodes and set its title boxes to titleBox store\n    setTitleBoxes(\n      TITLE_PREFIX,\n      \"left\",\n      allPinNodes,\n      (titleBoxMap: Record<string, TitleBox>) => {\n        store.commit(`titleBox/${titleBoxMutations.SET_MAP}`, {\n          layerName: layerID,\n          titleBoxMap\n        });\n      }\n    );\n\n    return {\n      TITLE_PREFIX,\n      PIN_MARKER_HEIGHT,\n      PIN_MARKER_WIDTH,\n      visiblePinNodes,\n      titleBox,\n      titleXY: computed(() => {\n        const alignedXY: Record<string, Point> = {};\n        for (const i in allPinNodes.value) {\n          const node = allPinNodes.value[i];\n          alignedXY[node.id] = {\n            x: titleBox.value[node.id] ? titleBox.value[node.id].position.x : 0,\n            y: titleBox.value[node.id] ? titleBox.value[node.id].position.y : 0\n          };\n        }\n        return alignedXY;\n      }),\n      titleBoxClick: (nodeId: string) => {\n        ctx.emit(\"title-click\", { id: nodeId });\n      },\n      titleOver: (nodeId: string) => {\n        ctx.emit(\"title-over\", { id: nodeId });\n      },\n      titleLeave: (nodeId: string) => {\n        ctx.emit(\"title-leave\", { id: nodeId });\n      }\n    };\n  }\n});\n","import { render } from \"./PinLayer.vue?vue&type=template&id=4510c475\"\nimport script from \"./PinLayer.vue?vue&type=script&lang=ts\"\nexport * from \"./PinLayer.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\n  <defs>\n    <marker\n      id=\"preconditionArrowHead\"\n      markerWidth=\"6\"\n      markerHeight=\"7\"\n      refX=\"3\"\n      refY=\"3.5\"\n      orient=\"auto\"\n    >\n      <polygon fill=\"#aae3b9\" stroke=\"#aae3b9\" points=\"0 0, 6 3.5, 0 7\" />\n    </marker>\n  </defs>\n  <PreconditionArrow\n    v-for=\"precondition of preconditions\"\n    :key=\"precondition.id\"\n    markerId=\"preconditionArrow\"\n    :from=\"precondition.center\"\n    :to=\"selectedNode.center\"\n    color=\"#aae3b9\"\n  />\n  <SVGTextBox\n    v-for=\"node of visibleTitleNodes\"\n    :text=\"node.title\"\n    :id=\"`${TITLE_PREFIX}${node.id}`\"\n    :key=\"node.id\"\n    :useLineBreak=\"true\"\n    :x=\"\n      visibleTitleNodeBoxes[node.id]\n        ? visibleTitleNodeBoxes[node.id].position.x\n        : 0\n    \"\n    :y=\"\n      visibleTitleNodeBoxes[node.id]\n        ? visibleTitleNodeBoxes[node.id].position.y\n        : 0\n    \"\n    :line-height=\"8\"\n    :max-char-per-line=\"10\"\n    font-family=\"Roboto\"\n    :font-size=\"8\"\n    font-weight=\"normal\"\n    color=\"#ffa500\"\n  />\n  <rect\n    v-for=\"node of visibleTitleNodes\"\n    :key=\"node.id\"\n    :x=\"\n      visibleTitleNodeBoxes[node.id]\n        ? visibleTitleNodeBoxes[node.id].position.x\n        : 0\n    \"\n    :y=\"\n      visibleTitleNodeBoxes[node.id]\n        ? visibleTitleNodeBoxes[node.id].position.y\n        : 0\n    \"\n    :width=\"\n      visibleTitleNodeBoxes[node.id]\n        ? visibleTitleNodeBoxes[node.id].bbox.width\n        : 0\n    \"\n    :height=\"\n      visibleTitleNodeBoxes[node.id]\n        ? visibleTitleNodeBoxes[node.id].bbox.height\n        : 0\n    \"\n    cursor=\"pointer\"\n    fill=\"transparent\"\n    @click=\"titleBoxClick(node.id)\"\n    @mouseover=\"titleBoxOver(node.id)\"\n    @mouseleave=\"titleBoxLeave(node.id)\"\n    stroke-width=\"0\"\n    stroke=\"pink\"\n  />\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, PropType, ref, watchEffect } from \"vue\";\nimport PreconditionArrow from \"@/components/precondition_layer/PreconditionArrow.vue\";\nimport { useStore } from \"@/store\";\nimport { MapNode } from \"@/types/graphics\";\nimport { findMapNode, findMapNodes } from \"@/store/tree/helpers\";\nimport { clone } from \"@/tools/utils\";\nimport { zoomAndPanPoint } from \"@/views/Home\";\nimport SVGTextBox from \"@/components/SVGTextBox.vue\";\nimport { setTitleBoxes } from \"@/components/map_layer/MapLayer\";\nimport { mutations as titleBoxMutations, TitleBox } from \"@/store/title_box\";\n\nconst TITLE_PREFIX = \"precondition_title_\";\n\nexport default defineComponent({\n  name: \"PreconditionLayer\",\n  emits: [\"title-over\", \"title-leave\", \"title-click\"],\n  components: { SVGTextBox, PreconditionArrow },\n  props: {\n    layerId: String,\n    selectedNodeId: String,\n    visibleTitleIds: Object as PropType<Array<string>> // all visible titles on page\n  },\n  setup(props, ctx) {\n    const store = useStore();\n    const zoomPanState = store.state.zoomPan;\n\n    /**\n     * compute selectedNode\n     */\n    const selectedNode = computed(() => {\n      if (props.selectedNodeId && store.state.tree.mapNodeLayers) {\n        const [mapNode] = findMapNode(\n          props.selectedNodeId,\n          store.state.tree.mapNodeLayers\n        );\n        if (!mapNode) {\n          return null;\n        }\n        const zoomedPannedSelectedNode = clone(mapNode);\n        zoomedPannedSelectedNode.center = zoomAndPanPoint(\n          zoomedPannedSelectedNode.center,\n          zoomPanState.zoom,\n          zoomPanState.pan\n        );\n        return zoomedPannedSelectedNode;\n      } else {\n        return null;\n      }\n    });\n\n    /**\n     * compute selectedNodePreconditions\n     */\n    const preconditions = ref<Record<string, MapNode>>({});\n    const visibleTitleNodes = ref<Record<string, MapNode>>({});\n\n    const layerID = \"precondition\";\n    const visibleTitleNodeBoxes = computed(\n      () => store.state.titleBox.layerMap[layerID]\n    );\n    setTitleBoxes(\n      TITLE_PREFIX,\n      \"left\",\n      visibleTitleNodes,\n      (titleBoxMap: Record<string, TitleBox>) => {\n        store.commit(`titleBox/${titleBoxMutations.SET_MAP}`, {\n          layerName: layerID,\n          titleBoxMap\n        });\n      }\n    );\n\n    watchEffect(() => {\n      preconditions.value = {};\n      visibleTitleNodes.value = {};\n      if (\n        props.selectedNodeId &&\n        store.state.precondition.preconditions[props.selectedNodeId] &&\n        store.state.tree.mapNodeLayers\n      ) {\n        const nodes = clone(\n          findMapNodes(\n            store.state.precondition.preconditions[props.selectedNodeId],\n            store.state.tree.mapNodeLayers\n          )\n        );\n        for (const node of nodes) {\n          node.center = zoomAndPanPoint(\n            node.center,\n            zoomPanState.zoom,\n            zoomPanState.pan\n          );\n          preconditions.value[node.id] = node;\n        }\n      }\n      for (const id in preconditions.value) {\n        if (props.visibleTitleIds?.indexOf(id) == -1) {\n          visibleTitleNodes.value[id] = preconditions.value[id];\n        }\n      }\n      if (\n        props.selectedNodeId &&\n        selectedNode.value &&\n        store.state.tree.mapNodeLayers &&\n        props.visibleTitleIds?.indexOf(props.selectedNodeId) == -1\n      ) {\n        visibleTitleNodes.value[props.selectedNodeId] = selectedNode.value;\n      }\n    });\n\n    return {\n      TITLE_PREFIX,\n      selectedNode,\n      preconditions,\n      visibleTitleNodes,\n      visibleTitleNodeBoxes,\n      titleBoxClick: (nodeId: string) => {\n        ctx.emit(\"title-click\", { id: nodeId });\n      },\n      titleBoxOver: (nodeId: string) => {\n        ctx.emit(\"title-over\", { id: nodeId });\n      },\n      titleBoxLeave: (nodeId: string) => {\n        ctx.emit(\"title-leave\", { id: nodeId });\n      }\n    };\n  }\n});\n</script>\n","<template>\n  <line\n    :x1=\"from.x\"\n    :y1=\"from.y\"\n    :x2=\"to.x\"\n    :y2=\"to.y\"\n    :stroke=\"color\"\n    stroke-width=\"1\"\n    marker-end=\"url(#preconditionArrowHead)\"\n  />\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType } from \"vue\";\nimport { Point } from \"@/types/graphics\";\n\nexport default defineComponent({\n  name: \"PreconditionArrow\",\n  props: {\n    markerId: String,\n    color: String,\n    from: Object as PropType<Point>,\n    to: Object as PropType<Point>\n  }\n});\n</script>\n","\nimport { defineComponent, PropType } from \"vue\";\nimport { Point } from \"@/types/graphics\";\n\nexport default defineComponent({\n  name: \"PreconditionArrow\",\n  props: {\n    markerId: String,\n    color: String,\n    from: Object as PropType<Point>,\n    to: Object as PropType<Point>\n  }\n});\n","import { render } from \"./PreconditionArrow.vue?vue&type=template&id=10f878f0\"\nimport script from \"./PreconditionArrow.vue?vue&type=script&lang=ts\"\nexport * from \"./PreconditionArrow.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","import { MapNode, Point, Polygon, Viewport } from \"@/types/graphics\";\nimport { area, getVectorLength, isInside } from \"@/tools/graphics\";\nimport { ErrorKV } from \"@/types/errorkv\";\nimport NewErrorKV from \"@/tools/errorkv\";\nimport { NodeRecordItem } from \"@/store/tree\";\nimport { findMapNode } from \"@/store/tree/helpers\";\nimport { clone } from \"@/tools/utils\";\n\nconst MIN_VISIBLE_NUM_IN_LAYER = 3;\n\nexport function zoomAndPanPoint(p: Point, zoom: number, pan: Point): Point {\n  return { x: p.x * zoom + pan.x, y: p.y * zoom + pan.y };\n}\n\nexport function zoomAndPanPolygon(\n  p: Polygon,\n  zoom: number,\n  pan: Point\n): Polygon {\n  return p.map(point => zoomAndPanPoint(point, zoom, pan));\n}\n\n/**\n * CentralNode вычисляется следующим образом.\n * Начинаем смотреть с самого верхнего слоя.\n * Для каждого узла слоя применяем zoomFactor, затем pan\n * Потом смотрим находится ли zoomCenter внутри него. Если да, то это претендент на currentNode (назовем его N).\n * Мы берем его полную площадь и умножаем на 2.\n * Если получившееся значение ≤ площади экрана, то мы считаем что currentNode это parent узла N\n * Если больше то повторяем итерацию но только с детьми N.\n * @param layers\n * @param nodeRecord\n * @param viewport\n * @param zoomFactor\n * @param pan\n * @param zoomCenter\n */\nexport function findCentralNode(\n  layers: Array<Record<string, MapNode>>,\n  nodeRecord: Record<string, NodeRecordItem>,\n  viewport: Viewport,\n  zoomFactor: number,\n  pan: Point,\n  zoomCenter: Point\n): [string, ErrorKV] {\n  if (!layers || layers.length == 0) {\n    return [\"\", null];\n  }\n\n  let underCursorNodeId = null;\n  const viewportArea = viewport.width * viewport.height;\n  let nodesToCheck = layers[0];\n  while (Object.keys(nodesToCheck).length) {\n    underCursorNodeId = \"\";\n\n    for (const nodeId in nodesToCheck) {\n      const borderToCheck = zoomAndPanPolygon(\n        nodesToCheck[nodeId].border,\n        zoomFactor,\n        pan\n      );\n      if (isInside(zoomCenter, borderToCheck)) {\n        underCursorNodeId = nodeId;\n        break;\n      }\n    }\n\n    if (underCursorNodeId === \"\") {\n      // if zoomCenter is outside take the closest node\n      let minDist = Infinity;\n      for (const nodeId in nodesToCheck) {\n        const nodeCenter = zoomAndPanPoint(\n          nodesToCheck[nodeId].center,\n          zoomFactor,\n          pan\n        );\n        const dist = getVectorLength({ from: nodeCenter, to: zoomCenter });\n        if (dist < minDist) {\n          minDist = dist;\n          underCursorNodeId = nodeId;\n        }\n      }\n    }\n\n    const underCursorNodeArea = area(\n      zoomAndPanPolygon(nodesToCheck[underCursorNodeId].border, zoomFactor, pan)\n    );\n    if (\n      Math.floor(underCursorNodeArea) <=\n      Math.floor(viewportArea / MIN_VISIBLE_NUM_IN_LAYER)\n    ) {\n      if (nodeRecord[underCursorNodeId].parent == null) {\n        return [underCursorNodeId, null];\n      }\n      return [nodeRecord[underCursorNodeId].parent!.id, null];\n    } else {\n      nodesToCheck = {};\n      if (!nodeRecord[underCursorNodeId]) {\n        return [\n          \"\",\n          NewErrorKV(\n            \"findCurrentNode: cannot find underCursorNodeId in nodeRecord\",\n            { maxIntersectNodeId: underCursorNodeId, nodeRecord }\n          )\n        ];\n      }\n      for (const child of nodeRecord[underCursorNodeId].node.children) {\n        const [mapNode] = findMapNode(child.id, layers);\n        if (mapNode == null) {\n          return [\n            \"\",\n            NewErrorKV(\"filterNodesAndLayers: Cannot find node in layers\", {\n              \"child.id\": child.id,\n              layers: layers\n            })\n          ];\n        }\n        nodesToCheck[child.id] = mapNode;\n      }\n\n      if (Object.keys(nodesToCheck).length === 0) {\n        return [underCursorNodeId, null];\n      }\n    }\n  }\n\n  return [\"\", NewErrorKV(\"filterNodesAndLayers: unknown error\", {})];\n}\n\n/**\n * Мы показываем слой в котором находится currentNode (без названий) плюс еще 3.\n * Причем полноценно мы показываем только подузлы currentNode.\n * Узлы слоя currentNode отображаются только если у них тот же parent что и у\n * currentNode. Плюс подузлы НЕ ИЗ currentNode мы отображаем только одного следующего слоя.\n * @param layers\n * @param nodeRecord\n * @param currentNodeId\n */\nexport function filterNodesAndLayers(\n  layers: Array<Record<string, MapNode>>,\n  nodeRecord: Record<string, NodeRecordItem>,\n  currentNodeId: string\n): [Array<Record<number, MapNode>>, ErrorKV] {\n  if (!layers || !layers.length) {\n    return [[], null];\n  }\n  const resultLayers = [];\n\n  // узнаем какой слой у currentNode\n  const [currentNode, level] = findMapNode(currentNodeId, layers);\n  if (currentNode == null || level == null) {\n    return [\n      [],\n      NewErrorKV(\"filterNodesAndLayers-currentNode: error in findMapNode\", {\n        currentNodeId,\n        layers\n      })\n    ];\n  }\n\n  // убираем из этого слоя все кроме детей currentNode.parent\n  const upperLayer: Record<string, MapNode> = {};\n  if (nodeRecord[currentNode.id].parent == null) {\n    upperLayer[currentNode.id] = clone(currentNode);\n  } else {\n    for (const child of nodeRecord[currentNode.id].parent!.children) {\n      const [mapNode, l] = findMapNode(child.id, [layers[level]]);\n      if (mapNode == null || l === null) {\n        return [\n          [],\n          NewErrorKV(\"filterNodesAndLayers-upperLayer: error in findMapNode\", {\n            \"child.id\": child.id,\n            level,\n            layers: [layers[level]]\n          })\n        ];\n      }\n      upperLayer[child.id] = clone(mapNode);\n      upperLayer[child.id].title = \"\";\n    }\n  }\n  resultLayers.push(upperLayer);\n\n  // следующий слой это дети всех узлов из upperLayer, но дети всех кроме currentNode не имеют названий\n  const firstLayer: Record<string, MapNode> = {};\n  for (const nodeId in upperLayer) {\n    for (const child of nodeRecord[nodeId].node.children) {\n      const [mapNode, l] = findMapNode(child.id, [layers[level + 1]]);\n      if (mapNode == null || l === null) {\n        return [\n          [],\n          NewErrorKV(\"filterNodesAndLayers-firstLayer: error in findMapNode\", {\n            \"child.id\": child.id,\n            layers: [layers[level + 1]]\n          })\n        ];\n      }\n      if (nodeId != currentNodeId) {\n        firstLayer[child.id] = clone(mapNode);\n        firstLayer[child.id].title = \"\";\n      } else {\n        firstLayer[child.id] = clone(mapNode);\n      }\n    }\n  }\n\n  if (Object.keys(firstLayer).length > 0) {\n    resultLayers.push(firstLayer);\n  }\n\n  // следующий слой это дети детей currentNode\n  const secondLayer: Record<string, MapNode> = {};\n  //for (const childId in firstLayer) {\n  for (const child of nodeRecord[currentNodeId].node.children) {\n    for (const childOfChild of nodeRecord[child.id].node.children) {\n      const [mapNode, l] = findMapNode(childOfChild.id, [layers[level + 2]]);\n      if (mapNode == null || l === null) {\n        return [\n          [],\n          NewErrorKV(\"filterNodesAndLayers-secondLayer: error in findMapNode\", {\n            \"child.id\": child.id,\n            layers: [layers[level + 2]]\n          })\n        ];\n      }\n      secondLayer[childOfChild.id] = clone(mapNode);\n    }\n  }\n\n  if (Object.keys(secondLayer).length > 0) {\n    resultLayers.push(secondLayer);\n  }\n\n  // следующий это дети узлов из secondLayer и у них нет названий\n  const thirdLayer: Record<string, MapNode> = {};\n  for (const nodeId in secondLayer) {\n    for (const child of nodeRecord[nodeId].node.children) {\n      const [mapNode, l] = findMapNode(child.id, [layers[level + 3]]);\n      if (mapNode == null || l === null) {\n        return [\n          [],\n          NewErrorKV(\"filterNodesAndLayers-thirdLayer:cannot findMapNode\", {\n            \"child.id\": child.id,\n            level: level + 3,\n            layers: [layers[level + 3]]\n          })\n        ];\n      }\n      thirdLayer[child.id] = clone(mapNode);\n      thirdLayer[child.id].title = \"\";\n    }\n  }\n\n  if (Object.keys(thirdLayer).length > 0) {\n    resultLayers.push(thirdLayer);\n  }\n\n  return [resultLayers, null];\n}\n\nexport function zoomAnPanLayers(\n  layers: Array<Record<number, MapNode>>,\n  zoom: number,\n  pan: Point\n): Array<Record<number, MapNode>> {\n  if (!layers || layers.length == 0) {\n    return [];\n  }\n  for (const layer of layers) {\n    for (const id in layer) {\n      const node = layer[id];\n      node.center = zoomAndPanPoint(node.center, zoom, pan);\n      node.border = zoomAndPanPolygon(node.border, zoom, pan);\n    }\n  }\n\n  return layers;\n}\n","\nimport { computed, defineComponent, PropType, ref, watchEffect } from \"vue\";\nimport PreconditionArrow from \"@/components/precondition_layer/PreconditionArrow.vue\";\nimport { useStore } from \"@/store\";\nimport { MapNode } from \"@/types/graphics\";\nimport { findMapNode, findMapNodes } from \"@/store/tree/helpers\";\nimport { clone } from \"@/tools/utils\";\nimport { zoomAndPanPoint } from \"@/views/Home\";\nimport SVGTextBox from \"@/components/SVGTextBox.vue\";\nimport { setTitleBoxes } from \"@/components/map_layer/MapLayer\";\nimport { mutations as titleBoxMutations, TitleBox } from \"@/store/title_box\";\n\nconst TITLE_PREFIX = \"precondition_title_\";\n\nexport default defineComponent({\n  name: \"PreconditionLayer\",\n  emits: [\"title-over\", \"title-leave\", \"title-click\"],\n  components: { SVGTextBox, PreconditionArrow },\n  props: {\n    layerId: String,\n    selectedNodeId: String,\n    visibleTitleIds: Object as PropType<Array<string>> // all visible titles on page\n  },\n  setup(props, ctx) {\n    const store = useStore();\n    const zoomPanState = store.state.zoomPan;\n\n    /**\n     * compute selectedNode\n     */\n    const selectedNode = computed(() => {\n      if (props.selectedNodeId && store.state.tree.mapNodeLayers) {\n        const [mapNode] = findMapNode(\n          props.selectedNodeId,\n          store.state.tree.mapNodeLayers\n        );\n        if (!mapNode) {\n          return null;\n        }\n        const zoomedPannedSelectedNode = clone(mapNode);\n        zoomedPannedSelectedNode.center = zoomAndPanPoint(\n          zoomedPannedSelectedNode.center,\n          zoomPanState.zoom,\n          zoomPanState.pan\n        );\n        return zoomedPannedSelectedNode;\n      } else {\n        return null;\n      }\n    });\n\n    /**\n     * compute selectedNodePreconditions\n     */\n    const preconditions = ref<Record<string, MapNode>>({});\n    const visibleTitleNodes = ref<Record<string, MapNode>>({});\n\n    const layerID = \"precondition\";\n    const visibleTitleNodeBoxes = computed(\n      () => store.state.titleBox.layerMap[layerID]\n    );\n    setTitleBoxes(\n      TITLE_PREFIX,\n      \"left\",\n      visibleTitleNodes,\n      (titleBoxMap: Record<string, TitleBox>) => {\n        store.commit(`titleBox/${titleBoxMutations.SET_MAP}`, {\n          layerName: layerID,\n          titleBoxMap\n        });\n      }\n    );\n\n    watchEffect(() => {\n      preconditions.value = {};\n      visibleTitleNodes.value = {};\n      if (\n        props.selectedNodeId &&\n        store.state.precondition.preconditions[props.selectedNodeId] &&\n        store.state.tree.mapNodeLayers\n      ) {\n        const nodes = clone(\n          findMapNodes(\n            store.state.precondition.preconditions[props.selectedNodeId],\n            store.state.tree.mapNodeLayers\n          )\n        );\n        for (const node of nodes) {\n          node.center = zoomAndPanPoint(\n            node.center,\n            zoomPanState.zoom,\n            zoomPanState.pan\n          );\n          preconditions.value[node.id] = node;\n        }\n      }\n      for (const id in preconditions.value) {\n        if (props.visibleTitleIds?.indexOf(id) == -1) {\n          visibleTitleNodes.value[id] = preconditions.value[id];\n        }\n      }\n      if (\n        props.selectedNodeId &&\n        selectedNode.value &&\n        store.state.tree.mapNodeLayers &&\n        props.visibleTitleIds?.indexOf(props.selectedNodeId) == -1\n      ) {\n        visibleTitleNodes.value[props.selectedNodeId] = selectedNode.value;\n      }\n    });\n\n    return {\n      TITLE_PREFIX,\n      selectedNode,\n      preconditions,\n      visibleTitleNodes,\n      visibleTitleNodeBoxes,\n      titleBoxClick: (nodeId: string) => {\n        ctx.emit(\"title-click\", { id: nodeId });\n      },\n      titleBoxOver: (nodeId: string) => {\n        ctx.emit(\"title-over\", { id: nodeId });\n      },\n      titleBoxLeave: (nodeId: string) => {\n        ctx.emit(\"title-leave\", { id: nodeId });\n      }\n    };\n  }\n});\n","import { render } from \"./PreconditionLayer.vue?vue&type=template&id=d1670c94\"\nimport script from \"./PreconditionLayer.vue?vue&type=script&lang=ts\"\nexport * from \"./PreconditionLayer.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","\nimport { computed, defineComponent, onMounted, PropType } from \"vue\";\nimport { MapNode } from \"@/types/graphics\";\nimport MapLayer from \"@/components/map_layer/MapLayer.vue\";\nimport {\n  EventClickNode,\n  EventDraggingNode\n} from \"@/components/map_layer/MapLayer\";\nimport pan from \"./MapPan\";\nimport PinLayer from \"@/components/pin_layer/PinLayer.vue\";\nimport { printError } from \"@/tools/utils\";\nimport PreconditionLayer from \"@/components/precondition_layer/PreconditionLayer.vue\";\n\nconst mapID = \"mapID\";\n\nexport default defineComponent({\n  name: \"Map\",\n  emits: [\n    \"title-dragging\",\n    \"title-click\",\n    \"title-over\",\n    \"title-leave\",\n    \"dragging-background\",\n    \"wheel\"\n  ],\n  components: {\n    PreconditionLayer,\n    PinLayer,\n    MapLayer\n  },\n  props: {\n    layers: Object as PropType<Array<Record<string, MapNode>>>,\n    selectedNodeId: {\n      type: String || null,\n      validator: (prop: string | null) =>\n        typeof prop === \"string\" || prop === null,\n      required: true\n    },\n    selectedNodePreconditionIds: Object as PropType<string[]>,\n    pinNodes: Object as PropType<MapNode[]>,\n    searchResultPinNodes: Object as PropType<MapNode[]>,\n    searchResultNodeIDs: Object as PropType<string[]>\n  },\n  setup(props, ctx) {\n    onMounted(() => {\n      const map = document.getElementById(mapID);\n      if (!map) {\n        printError(\"Map.vue: cannot find map id for event listener\", {});\n        return;\n      }\n\n      map.addEventListener(\"mousedown\", event => {\n        pan.mouseDown();\n      });\n      map.addEventListener(\"mouseup\", event => {\n        pan.mouseUp();\n      });\n      map.addEventListener(\"mousemove\", event => {\n        pan.mouseMove(ctx.emit, {\n          from: {\n            x: event.clientX - event.movementX,\n            y: event.clientY - event.movementY\n          },\n          to: { x: event.clientX, y: event.clientY }\n        });\n      });\n\n      // zoom with mouse wheel\n      map.addEventListener(\n        \"wheel\",\n        event => {\n          ctx.emit(\"wheel\", {\n            delta: event.deltaY,\n            center: { x: event.clientX, y: event.clientY }\n          });\n        },\n        { passive: true }\n      );\n\n      let prevDist = Infinity;\n      const prevPoint = { x: Infinity, y: Infinity };\n      map.addEventListener(\n        \"touchstart\",\n        event => {\n          pan.mouseDown();\n        },\n        { passive: true }\n      );\n      map.addEventListener(\"touchend\", event => {\n        prevDist = Infinity;\n        prevPoint.x = Infinity;\n        prevPoint.y = Infinity;\n        pan.mouseUp();\n      });\n\n      // mobile zoom\n      map.addEventListener(\n        \"touchmove\",\n        e => {\n          if (e.touches.length === 1) {\n            if (prevPoint.x != Infinity && prevPoint.y != Infinity) {\n              pan.mouseMove(ctx.emit, {\n                from: prevPoint,\n                to: { x: e.touches[0].clientX, y: e.touches[0].clientY }\n              });\n            }\n            prevPoint.x = e.touches[0].clientX;\n            prevPoint.y = e.touches[0].clientY;\n          } else if (e.touches.length === 2) {\n            let delta = 0;\n            const dist = Math.hypot(\n              e.touches[0].pageX - e.touches[1].pageX,\n              e.touches[0].pageY - e.touches[1].pageY\n            );\n            if (prevDist !== Infinity) {\n              delta = prevDist - dist;\n            }\n            prevDist = dist;\n\n            ctx.emit(\"wheel\", {\n              delta: delta,\n              center: {\n                x: (e.touches[0].pageX - e.touches[1].pageX) / 2,\n                y: (e.touches[0].pageY - e.touches[1].pageY) / 2\n              }\n            });\n          }\n        },\n        { passive: true }\n      );\n    });\n\n    return {\n      svgWidth: window.innerWidth,\n      // 0.99 because if svg == innerHeight then browser vertical scroll bar appears\n      svgHeight: 0.99 * window.innerHeight,\n      visibleTitleIds: computed(() => {\n        if (!props.layers) {\n          return [];\n        }\n        const ids = [];\n        for (const layer of props.layers) {\n          for (const idx in layer) {\n            if (layer[idx].title != \"\") {\n              ids.push(idx);\n            }\n          }\n        }\n        return ids;\n      }),\n      draggingNode: (e: EventDraggingNode) => {\n        ctx.emit(\"title-dragging\", {\n          id: e.nodeId,\n          delta: e.delta\n        });\n      },\n      titleClick: (e: EventClickNode) => {\n        ctx.emit(\"title-click\", { id: e.id });\n      },\n      titleOver: (e: EventClickNode) => {\n        ctx.emit(\"title-over\", { id: e.id });\n      },\n      titleLeave: (e: EventClickNode) => {\n        ctx.emit(\"title-leave\", { id: e.id });\n      },\n      mapID: mapID,\n      fontSize: (index: number): number => {\n        let size = 0;\n        const levelSizes: Record<number, number> = {\n          0: 6,\n          1: 11,\n          2: 21,\n          3: 28\n        };\n        if (props.layers!.length >= 4) {\n          size = levelSizes[index];\n        }\n        if (props.layers!.length == 3) {\n          size = levelSizes[index + 1];\n        }\n        return size;\n      },\n      fontOpacity: (index: number): number => {\n        let val = 0;\n        const levelSizes: Record<number, number> = {\n          0: 1,\n          1: 1,\n          2: 0.2,\n          3: 1\n        };\n        if (props.layers!.length >= 4) {\n          val = levelSizes[index];\n        }\n        if (props.layers!.length == 3) {\n          val = levelSizes[index + 1];\n        }\n        return val;\n      },\n      fontColor: (index: number): string => {\n        if (props.layers!.length >= 4) {\n          return `rgb(${200 - 100 * index},${200 - 100 * index},${200 -\n            100 * index})`;\n        }\n        if (props.layers!.length == 3) {\n          return `rgb(${200 - 100 * (index + 1)},${200 -\n            100 * (index + 1)},${200 - 100 * (index + 1)})`;\n        }\n        return \"\";\n      },\n      borderColor: (index: number): string => {\n        let color = 0;\n        const levelColors: Record<number, number> = {\n          0: 240,\n          1: 200,\n          2: 100,\n          3: 90\n        };\n        if (props.layers!.length >= 4) {\n          color = levelColors[index];\n        }\n        if (props.layers!.length == 3) {\n          color = levelColors[index + 1];\n        }\n        return `rgb(${color},${color},${color})`;\n      }\n    };\n  }\n});\n","import { render } from \"./Map.vue?vue&type=template&id=33972798\"\nimport script from \"./Map.vue?vue&type=script&lang=ts\"\nexport * from \"./Map.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\n  <div v-if=\"show && selectedNode\" class=\"wrapper\">\n    <div class=\"p-fluid\">\n      <img\n        style=\"position: absolute; left:0; top:0; width: 100%; height: 240px\"\n        alt=\"welcome\"\n        src=\"../../assets/images/bottles.png\"\n      />\n\n      <!-- Content   -->\n      <div class=\"p-field p-grid\">\n        <div class=\"p-col-12\">\n          <div style=\"height: 240px\"></div>\n        </div>\n        <div class=\"p-col-10\">\n          <Title\n            :content=\"selectedNodeContent ? selectedNode.title : ''\"\n            @content-changed=\"changeNodeTitle($event)\"\n          />\n        </div>\n        <div class=\"p-col-2\">\n          <PinButton />\n        </div>\n        <div class=\"p-col-12\">\n          <Markdown\n            :content=\"selectedNodeContent ? selectedNodeContent.content : ''\"\n            :rows=\"20\"\n            @content-changed=\"changeContent($event)\"\n          />\n        </div>\n      </div>\n\n      <!-- Comment -->\n      <div class=\"p-field p-grid\">\n        <div class=\"p-col-12 p-md-12\">\n          <TextArea\n            id=\"comment\"\n            placeholder=\"Your notes (visible only to you)\"\n            :autoResize=\"true\"\n            rows=\"2\"\n            :value=\"selectedNodeComment\"\n            @update:modelValue=\"changeComment($event)\"\n            v-on:keydown=\"checkAuthorized\"\n          />\n        </div>\n      </div>\n\n      <!-- Preconditions section -->\n      <div class=\"p-field p-grid\">\n        <div class=\"p-col-10 section\">\n          based on\n        </div>\n        <div class=\"p-col-2\">\n          <AddBasedOnButton\n            :clickedTitleId=\"clickedTitleId\"\n            @select-precondition-is-on=\"$emit('select-precondition-is-on')\"\n            @select-precondition-is-off=\"$emit('select-precondition-is-off')\"\n          />\n        </div>\n      </div>\n      <SectionPreconditions\n        v-if=\"selectedNodeContent\"\n        :node-id=\"selectedNode.id\"\n      />\n\n      <!-- Used by section -->\n      <div class=\"p-field p-grid\">\n        <div class=\"p-col-10 section\">\n          used by\n        </div>\n      </div>\n      <SectionUsedBy v-if=\"selectedNodeContent\" :node-id=\"selectedNode.id\" />\n\n      <!-- ChangeLog section -->\n      <ChangeLog :node-id=\"selectedNode.id\" />\n    </div>\n  </div>\n  <div v-else class=\"wrapper\">\n    <div class=\"p-fluid\">\n      <div class=\"p-field p-grid\">\n        <div class=\"p-col-12\">\n          <div style=\"height: 60px;\"></div>\n        </div>\n        <div class=\"p-col-12\">\n          <div class=\"title\">\n            Welcome to new way of knowledge crowdsourcing!\n          </div>\n        </div>\n        <div class=\"p-col-12\">\n          <iframe\n            width=\"100%\"\n            height=\"225px\"\n            src=\"https://www.youtube.com/embed/4S9sDyooxf4?si=u4z2DkDwNTsVdMBH\"\n            title=\"YouTube video player\"\n            frameborder=\"0\"\n            allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\"\n            allowfullscreen\n          ></iframe>\n        </div>\n        <div class=\"p-col-1 icon\">\n          <img\n            alt=\"logo\"\n            src=\"../../assets/images/sign-in.svg\"\n            style=\"width: 25px\"\n          />\n        </div>\n        <div class=\"p-col-11 list\">\n          Sign in to edit map\n        </div>\n        <div class=\"p-col-1 icon\">\n          <img\n            alt=\"logo\"\n            src=\"../../assets/images/goal.svg\"\n            style=\"width: 30px\"\n          />\n        </div>\n        <div class=\"p-col-11 list\">\n          Keep description focused and simple but profound (i - snippet with\n          example of formula and image markdown)\n        </div>\n        <div class=\"p-col-1 icon\">\n          <img\n            alt=\"logo\"\n            src=\"../../assets/images/plugin.svg\"\n            style=\"width: 30px\"\n          />\n        </div>\n        <div class=\"p-col-11 list\">\n          Use <b>\"based on\"</b> to link nodes that are necessary for solid\n          understanding of your description\n        </div>\n        <div class=\"p-col-1 icon\">\n          <img\n            alt=\"logo\"\n            src=\"../../assets/images/pin-on-map.svg\"\n            style=\"width: 30px\"\n          />\n        </div>\n        <div class=\"p-col-11 list\">\n          Pin nodes that you are focused on\n        </div>\n        <div class=\"p-col-1 icon\">\n          <img\n            alt=\"logo\"\n            src=\"../../assets/images/action.svg\"\n            style=\"width: 30px\"\n          />\n        </div>\n        <div class=\"p-col-11 list\">\n          Not only description, if you know actions one can take to push\n          knowledge further (vacancies, crowdsourcing etc) - add it!\n        </div>\n        <div class=\"p-col-1 icon\">\n          <img\n            alt=\"logo\"\n            src=\"../../assets/images/talk.svg\"\n            style=\"width: 20px\"\n          />\n        </div>\n        <div class=\"p-col-11 list\">\n          Talk to your coauthors to make description better in\n          <a\n            target=\"_blank\"\n            href=\"https://discord.com/channels/1171118046543347782/1171118047587745953\"\n            >chat</a\n          >\n        </div>\n        <div class=\"p-col-12 list\">\n          <i\n            >If you thank we need more rules or change these ones, feel free to\n            discuss them in community chat</i\n          >\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { actions, useStore } from \"@/store\";\nimport { actions as nodeContentActions } from \"@/store/node_content\";\nimport { computed, defineComponent } from \"vue\";\nimport TextArea from \"primevue/textarea\";\nimport SectionPreconditions from \"./Preconditions.vue\";\nimport SectionUsedBy from \"./UsedBy.vue\";\nimport { Tree } from \"@/types/graphics\";\nimport { EmptyNodeContent, NodeContent } from \"@/store/node_content\";\nimport { clone, printError } from \"@/tools/utils\";\nimport { useConfirm } from \"primevue/useconfirm\";\nimport api from \"@/api/api\";\nimport Markdown from \"./Markdown.vue\";\nimport ChangeLog from \"./ChangeLog.vue\";\nimport PinButton from \"./PinButton.vue\";\nimport Title from \"@/components/node_content/Title.vue\";\nimport AddBasedOnButton from \"@/components/node_content/AddBasedOnButton.vue\";\n\nexport default defineComponent({\n  name: \"NodeContent\",\n  components: {\n    AddBasedOnButton,\n    Title,\n    SectionUsedBy,\n    Markdown,\n    TextArea,\n    SectionPreconditions,\n    ChangeLog,\n    PinButton\n  },\n  emits: [\"select-precondition-is-on\", \"select-precondition-is-off\"],\n  props: {\n    show: {\n      type: Boolean,\n      required: true\n    },\n    selectedNodeId: {\n      type: String || null,\n      validator: (prop: string | null) =>\n        typeof prop === \"string\" || prop === null,\n      required: true\n    },\n    clickedTitleId: {\n      type: String,\n      required: true\n    }\n  },\n  setup(props) {\n    const store = useStore();\n    const confirm = useConfirm();\n    const tree = store.state.tree;\n\n    const selectedNode = computed<Tree | null>(() =>\n      props.selectedNodeId && tree.nodeRecord[props.selectedNodeId]\n        ? tree.nodeRecord[props.selectedNodeId].node\n        : null\n    );\n\n    const selectedNodeContent = computed<NodeContent | null>(() => {\n      if (\n        props.selectedNodeId &&\n        store.state.nodeContent.nodeContents[props.selectedNodeId]\n      ) {\n        return store.state.nodeContent.nodeContents[props.selectedNodeId];\n      }\n      const newContent = clone(EmptyNodeContent);\n      newContent.nodeID = props.selectedNodeId;\n      return newContent;\n    });\n\n    const selectedNodeComment = computed<string>(() =>\n      props.selectedNodeId &&\n      store.state.nodeContent.userNodeComments[props.selectedNodeId]\n        ? store.state.nodeContent.userNodeComments[props.selectedNodeId].comment\n        : \"\"\n    );\n\n    return {\n      selectedNode,\n      selectedNodeContent,\n      checkAuthorized: async (e: Event) => {\n        if (!store.state.user.user || store.state.user.user.isAnonymous) {\n          await store.dispatch(`${actions.confirmSignInPopup}`, confirm);\n          e.preventDefault();\n        }\n      },\n      selectedNodeComment,\n      changeNodeTitle: async (value: string) => {\n        if (!selectedNode.value || !selectedNode.value.id) {\n          return;\n        }\n        const err = await api.debouncedUpdate({\n          [`map/${selectedNode.value.id}/name`]: value\n        });\n\n        if (err) {\n          printError(err.error.message, err.kv);\n        }\n      },\n      changeContent: async (value: string) => {\n        const err = await store.dispatch(\n          `nodeContent/${nodeContentActions.setNodeContent}`,\n          {\n            nodeID: selectedNode.value!.id,\n            content: value\n          }\n        );\n\n        if (err) {\n          printError(err, {});\n        }\n      },\n      changeComment: async (value: string) => {\n        const err = await store.dispatch(\n          `nodeContent/${nodeContentActions.setNodeComment}`,\n          {\n            nodeID: selectedNode.value!.id,\n            comment: value\n          }\n        );\n\n        if (err) {\n          printError(err, {});\n        }\n      }\n    };\n  }\n});\n</script>\n\n<style scoped>\n.wrapper {\n  position: absolute;\n  width: 30%;\n  height: 100%;\n  padding: 24px;\n  overflow-y: scroll;\n  background-color: rgba(255, 255, 255, 1);\n  font-family: Roboto, Arial, sans-serif;\n  color: rgb(73, 80, 87);\n\n  border-right: 1px solid rgb(218, 220, 224);\n  box-shadow: 0 0 5px rgba(0, 0, 0, 0.5);\n  clip-path: inset(0px -5px 0px 0px);\n}\n.title {\n  font-family: \"Google Sans\", Roboto, Arial, sans-serif;\n  font-size: 1.375rem;\n  font-weight: 400;\n  letter-spacing: 0;\n  line-height: 1.75rem;\n  color: #202124;\n  margin-bottom: 20px;\n}\n.list {\n  font-family: Roboto, Arial, sans-serif;\n  font-size: 0.875rem;\n  font-weight: 400;\n  letter-spacing: 0;\n  padding-left: 20px;\n  margin-bottom: 10px;\n  margin-top: 10px;\n}\n.icon {\n  margin-top: 9px;\n}\n.section {\n  font-family: \"Google Sans\", Roboto, Arial, sans-serif;\n  font-size: 1rem;\n  font-weight: 500;\n  letter-spacing: 0;\n  line-height: 1.5rem;\n}\n</style>\n","<template>\n  <div\n    v-for=\"precondition of preconditions\"\n    class=\"p-grid\"\n    :key=\"precondition.id\"\n  >\n    <div class=\"p-col-12\">\n      <div class=\"p-grid\">\n        <div :class=\"`p-col-10 ${$style.title}`\">\n          <a :href=\"precondition.id\">{{ precondition.title }}</a>\n        </div>\n        <div class=\"p-col-2\">\n          <RemoveIcon @click=\"remove(precondition.id)\" />\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { ref, watchEffect, defineComponent } from \"vue\";\nimport { useStore } from \"@/store\";\nimport api from \"@/api/api\";\nimport { Tree } from \"@/types/graphics\";\nimport RemoveIcon from \"@/components/node_content/RemoveIcon.vue\";\n\nexport default defineComponent({\n  name: \"Preconditions\",\n  props: {\n    nodeId: {\n      type: String,\n      required: true\n    }\n  },\n  components: {\n    RemoveIcon\n  },\n  setup(props) {\n    const store = useStore();\n    const preconditions = ref<Array<Tree>>([]);\n    watchEffect(() => {\n      preconditions.value = [];\n      if (\n        props.nodeId &&\n        store.state.precondition.preconditions[props.nodeId]\n      ) {\n        for (const id of store.state.precondition.preconditions[props.nodeId]) {\n          preconditions.value.push(store.state.tree.nodeRecord[id].node);\n        }\n      }\n    });\n\n    return {\n      preconditions,\n      remove: (id: string) => {\n        const p = store.state.precondition.preconditions[props.nodeId];\n        if (!p) {\n          return;\n        }\n        if (p.indexOf(id) == -1) {\n          return;\n        }\n        p.splice(p.indexOf(id), 1);\n        api.savePreconditions(store.state.user.user, {\n          nodeId: props.nodeId,\n          preconditionIds: p\n        });\n      }\n    };\n  }\n});\n</script>\n\n<style module>\n.title {\n  margin-top: 7px;\n}\n</style>\n","<template>\n  <div\n    style=\"cursor: pointer;\"\n    @mouseenter=\"mouseOver = true\"\n    @mouseleave=\"mouseOver = false\"\n  >\n    <div v-if=\"mouseOver\" class=\"custom\">\n      <img\n        style=\"height: 35px\"\n        alt=\"pin-off\"\n        src=\"../../assets/images/remove-on.svg\"\n      />\n    </div>\n    <div v-else class=\"custom\">\n      <img\n        style=\"height: 35px\"\n        alt=\"pin-on\"\n        src=\"../../assets/images/remove-off.svg\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref } from \"vue\";\n\nexport default {\n  name: \"RemoveIcon\",\n  setup() {\n    const mouseOver = ref(false);\n    return {\n      mouseOver\n    };\n  }\n};\n</script>\n\n<style scoped>\n.custom {\n  margin-left: 15px;\n}\n</style>\n","import { render } from \"./RemoveIcon.vue?vue&type=template&id=fb1a5bf4&scoped=true\"\nimport script from \"./RemoveIcon.vue?vue&type=script&lang=js\"\nexport * from \"./RemoveIcon.vue?vue&type=script&lang=js\"\n\nimport \"./RemoveIcon.vue?vue&type=style&index=0&id=fb1a5bf4&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-fb1a5bf4\"\n\nexport default script","\nimport { ref, watchEffect, defineComponent } from \"vue\";\nimport { useStore } from \"@/store\";\nimport api from \"@/api/api\";\nimport { Tree } from \"@/types/graphics\";\nimport RemoveIcon from \"@/components/node_content/RemoveIcon.vue\";\n\nexport default defineComponent({\n  name: \"Preconditions\",\n  props: {\n    nodeId: {\n      type: String,\n      required: true\n    }\n  },\n  components: {\n    RemoveIcon\n  },\n  setup(props) {\n    const store = useStore();\n    const preconditions = ref<Array<Tree>>([]);\n    watchEffect(() => {\n      preconditions.value = [];\n      if (\n        props.nodeId &&\n        store.state.precondition.preconditions[props.nodeId]\n      ) {\n        for (const id of store.state.precondition.preconditions[props.nodeId]) {\n          preconditions.value.push(store.state.tree.nodeRecord[id].node);\n        }\n      }\n    });\n\n    return {\n      preconditions,\n      remove: (id: string) => {\n        const p = store.state.precondition.preconditions[props.nodeId];\n        if (!p) {\n          return;\n        }\n        if (p.indexOf(id) == -1) {\n          return;\n        }\n        p.splice(p.indexOf(id), 1);\n        api.savePreconditions(store.state.user.user, {\n          nodeId: props.nodeId,\n          preconditionIds: p\n        });\n      }\n    };\n  }\n});\n","import { render } from \"./Preconditions.vue?vue&type=template&id=630684d1\"\nimport script from \"./Preconditions.vue?vue&type=script&lang=ts\"\nexport * from \"./Preconditions.vue?vue&type=script&lang=ts\"\n\nconst cssModules = script.__cssModules = {}\nimport style0 from \"./Preconditions.vue?vue&type=style&index=0&id=630684d1&module=true&lang=css\"\ncssModules[\"$style\"] = style0\nscript.render = render\n\nexport default script","<template>\n  <div v-for=\"usedByNode of usedBy\" class=\"p-grid\" :key=\"usedByNode.id\">\n    <div class=\"p-col-12\">\n      <div class=\"p-grid\">\n        <div class=\"p-col-11\">\n          <a :href=\"usedByNode.id\">{{ usedByNode.title }}</a>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { ref, watchEffect, defineComponent } from \"vue\";\nimport { useStore } from \"@/store\";\nimport { Tree } from \"@/types/graphics\";\n\nexport default defineComponent({\n  name: \"UsedBy\",\n  props: {\n    nodeId: String\n  },\n  setup(props) {\n    const store = useStore();\n    const usedBy = ref<Array<Tree>>([]);\n    watchEffect(() => {\n      usedBy.value = [];\n      if (props.nodeId && store.state.precondition.reverseIndex[props.nodeId]) {\n        for (const id of store.state.precondition.reverseIndex[props.nodeId]) {\n          if (!store.state.tree.nodeRecord[id]) {\n            console.log(\"UsedBy: cannot find id in nodeRecord\", id);\n          } else {\n            usedBy.value.push(store.state.tree.nodeRecord[id].node);\n          }\n        }\n      }\n    });\n\n    return {\n      usedBy\n    };\n  }\n});\n</script>\n","\nimport { ref, watchEffect, defineComponent } from \"vue\";\nimport { useStore } from \"@/store\";\nimport { Tree } from \"@/types/graphics\";\n\nexport default defineComponent({\n  name: \"UsedBy\",\n  props: {\n    nodeId: String\n  },\n  setup(props) {\n    const store = useStore();\n    const usedBy = ref<Array<Tree>>([]);\n    watchEffect(() => {\n      usedBy.value = [];\n      if (props.nodeId && store.state.precondition.reverseIndex[props.nodeId]) {\n        for (const id of store.state.precondition.reverseIndex[props.nodeId]) {\n          if (!store.state.tree.nodeRecord[id]) {\n            console.log(\"UsedBy: cannot find id in nodeRecord\", id);\n          } else {\n            usedBy.value.push(store.state.tree.nodeRecord[id].node);\n          }\n        }\n      }\n    });\n\n    return {\n      usedBy\n    };\n  }\n});\n","import { render } from \"./UsedBy.vue?vue&type=template&id=4685b46b\"\nimport script from \"./UsedBy.vue?vue&type=script&lang=ts\"\nexport * from \"./UsedBy.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\n  <p\n    v-show=\"!editOn\"\n    v-html=\"renderedContent\"\n    @click=\"setEditOn(true)\"\n    class=\"renderedContent\"\n  />\n  <textarea\n    class=\"rawContent p-inputtextarea p-inputtext p-component p-inputtextarea-resizable\"\n    style=\"display: none\"\n    ref=\"txtarea\"\n    :rows=\"rows\"\n    :value=\"content\"\n    @input=\"changeContent($event.target.value)\"\n    @focusout=\"setEditOn(false)\"\n  />\n</template>\n\n<script lang=\"ts\">\nimport { computed, ref } from \"vue\";\nimport MarkdownIt from \"markdown-it\";\nconst mdKatex = require('markdown-it-katex'); // eslint-disable-line\nconst mdImsize = require('markdown-it-imsize'); // eslint-disable-line\nconst mdContainer = require('markdown-it-container'); // eslint-disable-line\nconst md = new MarkdownIt();\nmd.use(mdKatex, { output: \"html\" })\n  .use(mdImsize)\n  .use(mdContainer, \"warning\", {\n    validate: function(params: any) {\n      console.log(\"validate\", params.trim(), params.trim() == \"warning\");\n      return params.trim().match(/^warning$/);\n    },\n    render: function(tokens: any, idx: any) {\n      const m = tokens[idx].info.trim().match(/^warning(.*)$/);\n      if (tokens[idx].nesting === 1) {\n        // opening tag\n        return (\n          '<div style=\"background-color: #c6f68d; padding: 8px;\">' +\n          md.utils.escapeHtml(m[1]) +\n          \"\\n\"\n        );\n      } else {\n        // closing tag\n        return \"</div>\\n\";\n      }\n    }\n  });\n\nexport default {\n  name: \"Markdown\",\n  emits: [\"content-changed\"],\n  props: {\n    content: {\n      type: String,\n      required: true\n    },\n    rows: {\n      type: Number,\n      required: true\n    }\n  },\n  setup(props: any, ctx: any) {\n    const renderedContent = computed(() => {\n      return md.render(props.content);\n    });\n    const editOn = ref(false);\n\n    const txtarea = ref<HTMLDivElement | null>(null);\n\n    return {\n      editOn,\n      txtarea,\n      setEditOn: (val: boolean) => {\n        editOn.value = val;\n        if (val && txtarea.value) {\n          txtarea.value.style.display = \"block\";\n          txtarea.value.focus();\n        }\n        if (!val && txtarea.value) {\n          txtarea.value.style.display = \"none\";\n        }\n      },\n      renderedContent,\n      changeContent: (value: string) => {\n        ctx.emit(\"content-changed\", value);\n      }\n    };\n  }\n};\n</script>\n\n<style scoped>\n@import \"../../../node_modules/katex/dist/katex.min.css\";\n.renderedContent {\n  color: rgb(32, 33, 36);\n  font-family: Roboto, Arial, sans-serif;\n  font-size: 14px;\n  font-weight: 400;\n  letter-spacing: normal;\n  line-height: 20px;\n  margin-right: 4px;\n  text-align: left;\n  text-wrap: wrap;\n  overflow-y: scroll;\n  height: 300px;\n}\n.rawContent {\n  overflow-y: scroll;\n  height: 100%;\n}\n</style>\n","\nimport { computed, ref } from \"vue\";\nimport MarkdownIt from \"markdown-it\";\nconst mdKatex = require('markdown-it-katex'); // eslint-disable-line\nconst mdImsize = require('markdown-it-imsize'); // eslint-disable-line\nconst mdContainer = require('markdown-it-container'); // eslint-disable-line\nconst md = new MarkdownIt();\nmd.use(mdKatex, { output: \"html\" })\n  .use(mdImsize)\n  .use(mdContainer, \"warning\", {\n    validate: function(params: any) {\n      console.log(\"validate\", params.trim(), params.trim() == \"warning\");\n      return params.trim().match(/^warning$/);\n    },\n    render: function(tokens: any, idx: any) {\n      const m = tokens[idx].info.trim().match(/^warning(.*)$/);\n      if (tokens[idx].nesting === 1) {\n        // opening tag\n        return (\n          '<div style=\"background-color: #c6f68d; padding: 8px;\">' +\n          md.utils.escapeHtml(m[1]) +\n          \"\\n\"\n        );\n      } else {\n        // closing tag\n        return \"</div>\\n\";\n      }\n    }\n  });\n\nexport default {\n  name: \"Markdown\",\n  emits: [\"content-changed\"],\n  props: {\n    content: {\n      type: String,\n      required: true\n    },\n    rows: {\n      type: Number,\n      required: true\n    }\n  },\n  setup(props: any, ctx: any) {\n    const renderedContent = computed(() => {\n      return md.render(props.content);\n    });\n    const editOn = ref(false);\n\n    const txtarea = ref<HTMLDivElement | null>(null);\n\n    return {\n      editOn,\n      txtarea,\n      setEditOn: (val: boolean) => {\n        editOn.value = val;\n        if (val && txtarea.value) {\n          txtarea.value.style.display = \"block\";\n          txtarea.value.focus();\n        }\n        if (!val && txtarea.value) {\n          txtarea.value.style.display = \"none\";\n        }\n      },\n      renderedContent,\n      changeContent: (value: string) => {\n        ctx.emit(\"content-changed\", value);\n      }\n    };\n  }\n};\n","import { render } from \"./Markdown.vue?vue&type=template&id=051e2c63&scoped=true\"\nimport script from \"./Markdown.vue?vue&type=script&lang=ts\"\nexport * from \"./Markdown.vue?vue&type=script&lang=ts\"\n\nimport \"./Markdown.vue?vue&type=style&index=0&id=051e2c63&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-051e2c63\"\n\nexport default script","<template>\n  <ChangeLogComplain\n    :show=\"complainModalVisible\"\n    :complainChangeLink=\"complainChangeLink\"\n    @hide=\"complainModalVisible = false\"\n  />\n  <Fieldset\n    legend=\"change log\"\n    :toggleable=\"true\"\n    :collapsed=\"collapsed\"\n    @update:collapsed=\"toggle($event)\"\n    :pt=\"{\n      legend: { class: 'bg-primary' }\n    }\"\n  >\n    <div v-if=\"!isAuthorized\">\n      Sign in to see node change log\n    </div>\n    <div v-else class=\"m-0\">\n      <Card v-for=\"(event, i) of changes\" :key=\"i\" class=\"mt-3\">\n        <template #title>\n          {{ new Date(event.timestamp).toLocaleDateString() }}\n          {{ new Date(event.timestamp).toLocaleTimeString() }} /\n          {{ event.action }} change\n        </template>\n        <template #subtitle>\n          {{\n            !!event.userDisplayName\n              ? event.userDisplayName\n              : `user id ${event.userID}`\n          }}\n          / <a href=\"#\" @click=\"showComplain(event.changeLogID)\">Complain</a>\n        </template>\n        <template #content v-if=\"event.action == ActionType.Name\">\n          {{ event.newName }}\n        </template>\n        <template #content v-else-if=\"event.action == ActionType.Content\">\n          <Markdown :content=\"event.newContent\" :rows=\"10\" />\n        </template>\n        <template #content v-else-if=\"event.action == ActionType.Precondition\">\n          <div v-html=\"getContent(event)\" />\n        </template>\n      </Card>\n    </div>\n  </Fieldset>\n</template>\n\n<script lang=\"ts\">\nimport Fieldset from \"primevue/fieldset\";\nimport Card from \"primevue/card\";\nimport { subscribeChangeLogEnriched, GetNodeUrl } from \"@/api/change_log\";\nimport { computed, reactive, ref, watch, defineComponent } from \"vue\";\nimport {\n  ActionType,\n  ChangeLogEnriched,\n  ChangeLogNodePrecondition\n} from \"@/store/change_log\";\nimport { useStore } from \"@/store\";\nimport ChangeLogComplain from \"@/components/node_content/ChangeLogComplain.vue\";\nimport Markdown from \"@/components/node_content/Markdown.vue\";\n\nexport default defineComponent({\n  name: \"ChangeLog\",\n  computed: {\n    ActionType() {\n      return ActionType;\n    }\n  },\n  props: {\n    nodeId: {\n      type: String,\n      required: true\n    }\n  },\n  components: {\n    Markdown,\n    ChangeLogComplain,\n    Fieldset,\n    Card\n  },\n  setup(props) {\n    const store = useStore();\n    const isAuthorized = computed(\n      () => store.state.user.user && !store.state.user.user.isAnonymous\n    );\n    const complainChangeLink = ref(\"\");\n    const complainModalVisible = ref(false);\n    const collapsed = ref(true);\n    const changes = reactive([]) as Array<ChangeLogEnriched>;\n    let unsubscribe = () => {\n      /**/\n    };\n    watch(\n      () => [props.nodeId, collapsed.value],\n      async (newArgs, oldArgs) => {\n        if (newArgs[0] != oldArgs[0]) {\n          collapsed.value = true;\n        }\n        unsubscribe();\n        unsubscribe = () => {\n          /**/\n        };\n        if (collapsed.value == false) {\n          unsubscribe = await subscribeChangeLogEnriched(\n            [ActionType.Name, ActionType.Content, ActionType.Precondition],\n            [props.nodeId],\n            changeLogs => {\n              changes.splice(0, changes.length, ...changeLogs);\n            }\n          );\n        }\n      }\n    );\n    return {\n      changes,\n      collapsed,\n      toggle: (event: boolean) => {\n        collapsed.value = event;\n      },\n      showComplain: (id: string) => {\n        complainModalVisible.value = true;\n        complainChangeLink.value = \"https://scimap.org/change/\" + id;\n      },\n      getContent: (event: ChangeLogEnriched) => {\n        event = event as ChangeLogNodePrecondition;\n        const removed = [];\n        for (const cd of event.removed) {\n          removed.push(GetNodeUrl(cd.idPath, cd.id, cd.name));\n        }\n        const added = [];\n        for (const cd of event.added) {\n          added.push(GetNodeUrl(cd.idPath, cd.id, cd.name));\n        }\n\n        let result = \"\";\n        if (removed.length > 0) {\n          result += `removed: ${removed.join(\", \")}`;\n        }\n        if (added.length > 0) {\n          result += `<br> added: ${added.join(\", \")}`;\n        }\n        return result;\n      },\n      complainModalVisible,\n      complainChangeLink,\n      isAuthorized\n    };\n  }\n});\n</script>\n","export enum ActionType {\n  ParentID = \"parentID\",\n  Precondition = \"precondition\",\n  Content = \"content\",\n  Name = \"name\"\n}\n\nexport type Node = {\n  id: string;\n  idPath: string;\n  name: string;\n};\n\nexport type ChangeLog = {\n  changeLogID: string;\n  nodeID: string;\n  userID: string;\n  timestamp: number;\n  action: ActionType;\n  attributes: {\n    value: any;\n    valueBefore: any;\n    valueAfter: any;\n    added: any;\n    removed: any;\n  };\n};\n\nexport type ChangeLogNodePrecondition = {\n  changeLogID: string;\n\n  timestamp: number;\n  action: ActionType;\n\n  userID: string;\n  userDisplayName: string;\n\n  removed: Array<Node>;\n  added: Array<Node>;\n};\n\nexport type ChangeLogNodeContent = {\n  changeLogID: string;\n\n  timestamp: number;\n  action: ActionType;\n\n  userID: string;\n  userDisplayName: string;\n\n  node: Node;\n\n  newContent: string;\n};\n\nexport type ChangeLogNodeName = {\n  changeLogID: string;\n\n  timestamp: number;\n  action: ActionType;\n\n  userID: string;\n  userDisplayName: string;\n\n  node: Node;\n\n  newName: string;\n};\n\nexport type ChangeLogNodeParent = {\n  changeLogID: string;\n\n  timestamp: number;\n  action: ActionType;\n\n  userID: string;\n  userDisplayName: string;\n\n  parentNodeBefore: Node;\n  parentNodeAfter: Node;\n  node: Node;\n\n  isRemoved: boolean;\n  isAdded: boolean;\n};\n\nexport type ChangeLogEnriched =\n  | ChangeLogNodeContent\n  | ChangeLogNodeName\n  | ChangeLogNodePrecondition\n  | ChangeLogNodeParent;\n","import { ActionType, ChangeLog, ChangeLogEnriched } from \"@/store/change_log\";\nimport { QueryFilterConstraint } from \"@firebase/firestore\";\nimport {\n  and,\n  collection,\n  getFirestore,\n  onSnapshot,\n  orderBy,\n  query,\n  where\n} from \"firebase/firestore\";\nimport firebase from \"firebase/compat\";\n\n/**\n * TODO: add limit\n * @param actions\n * @param nodeIDs\n * @param cb\n */\nexport async function subscribeChangeLog(\n  actions: Array<ActionType>,\n  nodeIDs: Array<string>,\n  cb: (changeLogs: Array<ChangeLog>) => void\n) {\n  const andConditions = [] as Array<QueryFilterConstraint>;\n  if (nodeIDs.length) {\n    andConditions.push(where(\"node_id\", \"in\", nodeIDs));\n  }\n  if (actions.length) {\n    andConditions.push(where(\"action\", \"in\", actions));\n  }\n  const q = query(\n    collection(getFirestore(), \"changes\"),\n    and(...andConditions),\n    orderBy(\"timestamp\", \"desc\")\n  );\n\n  return onSnapshot(q, snapshot => {\n    const changeLogs = [] as Array<ChangeLog>;\n    snapshot.forEach(doc => {\n      changeLogs.push({\n        changeLogID: doc.id,\n        nodeID: doc.get(\"node_id\"),\n        userID: doc.get(\"user_id\"),\n        timestamp: doc.get(\"timestamp\"),\n        action: doc.get(\"action\"),\n        attributes: {\n          value: doc.get(\"attributes.value\"),\n          valueBefore: doc.get(\"attributes.valueBefore\"),\n          valueAfter: doc.get(\"attributes.valueAfter\"),\n          added: doc.get(\"attributes.added\"),\n          removed: doc.get(\"attributes.removed\")\n        }\n      });\n    });\n    cb(changeLogs);\n  });\n}\n\n/**\n * @param nodeID\n */\nexport async function getNodeName(\n  nodeID: string\n): Promise<Record<string, string>> {\n  const nodeName = {} as Record<string, string>;\n  const pr = await firebase\n    .database()\n    .ref(`map/${nodeID}/name`)\n    .get();\n  if (pr.exists()) {\n    nodeName[`map/${nodeID}`] = pr.val();\n  } else {\n    const prTrash = await firebase\n      .database()\n      .ref(`trash/${nodeID}/map/name`)\n      .get();\n    if (prTrash.exists()) {\n      nodeName[`trash/${nodeID}`] = prTrash.val();\n    }\n  }\n\n  return nodeName;\n}\n\n/**\n * @param userID\n */\nexport async function getUserDisplayName(\n  userID: string\n): Promise<Record<string, string>> {\n  const userName = {} as Record<string, string>;\n  const pr = await firebase\n    .database()\n    .ref(`public_user_data/${userID}/displayName`)\n    .get();\n  if (pr.exists()) {\n    userName[`${userID}`] = pr.val();\n  }\n  return userName;\n}\n\nexport async function getUserDisplayNames(\n  userIDs: Array<string>\n): Promise<Record<string, string>> {\n  const fetches = [];\n  for (const userID of userIDs) {\n    fetches.push(getUserDisplayName(userID));\n  }\n  const responses = await Promise.all(fetches);\n  const result = {} as Record<string, string>;\n  for (const response of responses) {\n    result[Object.keys(response)[0]] = Object.values(response)[0];\n  }\n  return result;\n}\n\n// Note: realtime database charges for bandwidth and does not have batch fetch for multiple paths\n// If someday we switch to Firestore this must be implemented in other way\nexport async function getNodeNames(\n  nodeIDs: Array<string>\n): Promise<Record<string, string>> {\n  const fetches = [];\n  for (const nodeID of nodeIDs) {\n    fetches.push(getNodeName(nodeID));\n  }\n  const responses = await Promise.all(fetches);\n  const result = {} as Record<string, string>;\n  for (const response of responses) {\n    result[Object.keys(response)[0]] = Object.values(response)[0];\n  }\n  return result;\n}\n\nfunction getPathFromNodeName(\n  nodeID: string | null,\n  nodeNames: Record<string, string>\n): string {\n  if (nodeID == null) {\n    return \"\";\n  }\n  let nodePath = \"\";\n  if (nodeNames[`map/${nodeID}`] != null) {\n    nodePath = `map/${nodeID}`;\n  } else if (nodeNames[`trash/${nodeID}`] != null) {\n    nodePath = `trash/${nodeID}`;\n  }\n  return nodePath;\n}\n\n/**\n * Same as subscribeChangeLog but enriched with username\n * @param actions\n * @param nodeIDs\n * @param cb\n */\nexport async function subscribeChangeLogEnriched(\n  actions: Array<ActionType>,\n  nodeIDs: Array<string>,\n  cb: (changeLogsEnriched: Array<ChangeLogEnriched>) => void\n) {\n  return subscribeChangeLog(\n    actions,\n    nodeIDs,\n    (changeLogs: Array<ChangeLog>) => {\n      // collect userIDs to request names\n      // and nodeIDs to request node names\n      const userNames = {} as Record<string, string>;\n      const nodeNames = {} as Record<string, string>;\n      for (const changeLog of changeLogs) {\n        userNames[changeLog.userID] = \"\";\n        nodeNames[changeLog.nodeID] = \"\";\n        if (changeLog.action == ActionType.ParentID) {\n          if (changeLog.attributes.valueBefore != null) {\n            nodeNames[changeLog.attributes.valueBefore] = \"\";\n          }\n          if (changeLog.attributes.valueAfter != null) {\n            nodeNames[changeLog.attributes.valueAfter] = \"\";\n          }\n        }\n        if (changeLog.action == ActionType.Precondition) {\n          if (changeLog.attributes.removed != null) {\n            for (const id of changeLog.attributes.removed) {\n              nodeNames[id] = \"\";\n            }\n          }\n          if (changeLog.attributes.added != null) {\n            for (const id of changeLog.attributes.added) {\n              nodeNames[id] = \"\";\n            }\n          }\n        }\n      }\n      // fetch node and user names\n      const nodeIDs = [];\n      for (const nodeID in nodeNames) {\n        nodeIDs.push(nodeID);\n      }\n      const userIDs = [];\n      for (const userID in userNames) {\n        userIDs.push(userID);\n      }\n      Promise.all([getNodeNames(nodeIDs), getUserDisplayNames(userIDs)]).then(\n        resp => {\n          const nodeNames = resp[0];\n          const userNames = resp[1];\n          const changeLogsEnriched = [] as Array<ChangeLogEnriched>;\n          changeLogs.forEach(log => {\n            const nodePath = getPathFromNodeName(log.nodeID, nodeNames);\n            if (log.action == ActionType.Name) {\n              changeLogsEnriched.push({\n                changeLogID: log.changeLogID,\n\n                timestamp: log.timestamp,\n                action: log.action,\n\n                userID: log.userID,\n                userDisplayName: userNames[log.userID],\n\n                node: {\n                  id: log.nodeID,\n                  idPath: nodePath,\n                  name: nodeNames[nodePath]\n                },\n\n                newName: log.attributes.value\n              });\n            } else if (log.action == ActionType.Content) {\n              changeLogsEnriched.push({\n                changeLogID: log.changeLogID,\n\n                timestamp: log.timestamp,\n                action: log.action,\n\n                userID: log.userID,\n                userDisplayName: userNames[log.userID],\n\n                node: {\n                  id: log.nodeID,\n                  idPath: nodePath,\n                  name: nodeNames[nodePath]\n                },\n\n                newContent: log.attributes.value\n              });\n            } else if (log.action == ActionType.Precondition) {\n              const removed = [];\n              if (log.attributes.removed) {\n                for (const id of log.attributes.removed) {\n                  removed.push({\n                    id: id,\n                    idPath: getPathFromNodeName(id, nodeNames),\n                    name: nodeNames[getPathFromNodeName(id, nodeNames)]\n                  });\n                }\n              }\n              const added = [];\n              if (log.attributes.added) {\n                for (const id of log.attributes.added) {\n                  added.push({\n                    id: id,\n                    idPath: getPathFromNodeName(id, nodeNames),\n                    name: nodeNames[getPathFromNodeName(id, nodeNames)]\n                  });\n                }\n              }\n\n              changeLogsEnriched.push({\n                changeLogID: log.changeLogID,\n\n                timestamp: log.timestamp,\n                action: log.action,\n\n                userID: log.userID,\n                userDisplayName: userNames[log.userID],\n\n                node: {\n                  id: log.nodeID,\n                  idPath: nodePath,\n                  name: nodeNames[nodePath]\n                },\n\n                removed,\n                added\n              });\n            } else if (log.action == ActionType.ParentID) {\n              const beforePath = getPathFromNodeName(\n                log.attributes.valueBefore,\n                nodeNames\n              );\n              const afterPath = getPathFromNodeName(\n                log.attributes.valueAfter,\n                nodeNames\n              );\n              changeLogsEnriched.push({\n                changeLogID: log.changeLogID,\n\n                timestamp: log.timestamp,\n                action: log.action,\n\n                userID: log.userID,\n                userDisplayName: userNames[log.userID],\n\n                node: {\n                  id: log.nodeID,\n                  idPath: nodePath,\n                  name: nodeNames[nodePath]\n                },\n\n                parentNodeBefore: {\n                  id: log.attributes.valueBefore,\n                  idPath: beforePath,\n                  name: nodeNames[beforePath]\n                },\n\n                parentNodeAfter: {\n                  id: log.attributes.valueAfter,\n                  idPath: afterPath,\n                  name: nodeNames[afterPath]\n                },\n\n                isRemoved: log.attributes.valueAfter == null,\n                isAdded: log.attributes.valueBefore == null\n              });\n            }\n          });\n          cb(changeLogsEnriched);\n        }\n      );\n    }\n  );\n}\n\nexport function GetNodeUrl(\n  nodeIDPath: string,\n  nodeID: string,\n  nodeName: string\n): string {\n  if (nodeIDPath.substring(0, 5) == \"trash\") {\n    return `<a target=\"_blank\" href=\"/node_description/${nodeID}\">${nodeName}</a>`;\n  } else {\n    return `<a target=\"_blank\" href=\"/${nodeID}\">${nodeName}</a>`;\n  }\n}\n","<template>\n  <Dialog\n    v-model:visible=\"complainModalVisible\"\n    @hide=\"$emit('hide')\"\n    :dismissableMask=\"true\"\n    :closable=\"true\"\n    :modal=\"true\"\n    :closeOnEscape=\"true\"\n  >\n    <template #header>\n      <h3>\n        {{\n          `Please use our discord channel to complain about inappropriate changes`\n        }}\n      </h3>\n    </template>\n    <h3>\n      <a\n        target=\"_blank\"\n        href=\"https://discord.com/channels/1171118046543347782/1196694554791915600\"\n        >Discord edit-complains channel</a\n      >\n    </h3>\n    <p>\n      You can use the following text:\n    </p>\n    <code>\n      Hi, I think I found changes that was inappropriate because ... <br />\n      Here is the changes I am talking about {{ complainChangeLink }} <br />\n      This is the ...st time I found inappropriate changes from this user.\n      <br />\n    </code>\n    <template #footer> </template>\n  </Dialog>\n</template>\n<script lang=\"ts\">\nimport Dialog from \"primevue/dialog\";\nimport { ref, watch, defineComponent } from \"vue\";\n\nexport default defineComponent({\n  name: \"ChangeLogComplain\",\n  props: {\n    show: Boolean,\n    complainChangeLink: String\n  },\n  components: {\n    Dialog\n  },\n  emits: [\"hide\"],\n  setup(props) {\n    const complainModalVisible = ref(false);\n    watch(\n      () => [props.show],\n      async (newArgs, oldArgs) => {\n        complainModalVisible.value = newArgs[0];\n      }\n    );\n    return {\n      complainModalVisible\n    };\n  }\n});\n</script>\n","\nimport Dialog from \"primevue/dialog\";\nimport { ref, watch, defineComponent } from \"vue\";\n\nexport default defineComponent({\n  name: \"ChangeLogComplain\",\n  props: {\n    show: Boolean,\n    complainChangeLink: String\n  },\n  components: {\n    Dialog\n  },\n  emits: [\"hide\"],\n  setup(props) {\n    const complainModalVisible = ref(false);\n    watch(\n      () => [props.show],\n      async (newArgs, oldArgs) => {\n        complainModalVisible.value = newArgs[0];\n      }\n    );\n    return {\n      complainModalVisible\n    };\n  }\n});\n","import { render } from \"./ChangeLogComplain.vue?vue&type=template&id=0a57cd10\"\nimport script from \"./ChangeLogComplain.vue?vue&type=script&lang=ts\"\nexport * from \"./ChangeLogComplain.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","\nimport Fieldset from \"primevue/fieldset\";\nimport Card from \"primevue/card\";\nimport { subscribeChangeLogEnriched, GetNodeUrl } from \"@/api/change_log\";\nimport { computed, reactive, ref, watch, defineComponent } from \"vue\";\nimport {\n  ActionType,\n  ChangeLogEnriched,\n  ChangeLogNodePrecondition\n} from \"@/store/change_log\";\nimport { useStore } from \"@/store\";\nimport ChangeLogComplain from \"@/components/node_content/ChangeLogComplain.vue\";\nimport Markdown from \"@/components/node_content/Markdown.vue\";\n\nexport default defineComponent({\n  name: \"ChangeLog\",\n  computed: {\n    ActionType() {\n      return ActionType;\n    }\n  },\n  props: {\n    nodeId: {\n      type: String,\n      required: true\n    }\n  },\n  components: {\n    Markdown,\n    ChangeLogComplain,\n    Fieldset,\n    Card\n  },\n  setup(props) {\n    const store = useStore();\n    const isAuthorized = computed(\n      () => store.state.user.user && !store.state.user.user.isAnonymous\n    );\n    const complainChangeLink = ref(\"\");\n    const complainModalVisible = ref(false);\n    const collapsed = ref(true);\n    const changes = reactive([]) as Array<ChangeLogEnriched>;\n    let unsubscribe = () => {\n      /**/\n    };\n    watch(\n      () => [props.nodeId, collapsed.value],\n      async (newArgs, oldArgs) => {\n        if (newArgs[0] != oldArgs[0]) {\n          collapsed.value = true;\n        }\n        unsubscribe();\n        unsubscribe = () => {\n          /**/\n        };\n        if (collapsed.value == false) {\n          unsubscribe = await subscribeChangeLogEnriched(\n            [ActionType.Name, ActionType.Content, ActionType.Precondition],\n            [props.nodeId],\n            changeLogs => {\n              changes.splice(0, changes.length, ...changeLogs);\n            }\n          );\n        }\n      }\n    );\n    return {\n      changes,\n      collapsed,\n      toggle: (event: boolean) => {\n        collapsed.value = event;\n      },\n      showComplain: (id: string) => {\n        complainModalVisible.value = true;\n        complainChangeLink.value = \"https://scimap.org/change/\" + id;\n      },\n      getContent: (event: ChangeLogEnriched) => {\n        event = event as ChangeLogNodePrecondition;\n        const removed = [];\n        for (const cd of event.removed) {\n          removed.push(GetNodeUrl(cd.idPath, cd.id, cd.name));\n        }\n        const added = [];\n        for (const cd of event.added) {\n          added.push(GetNodeUrl(cd.idPath, cd.id, cd.name));\n        }\n\n        let result = \"\";\n        if (removed.length > 0) {\n          result += `removed: ${removed.join(\", \")}`;\n        }\n        if (added.length > 0) {\n          result += `<br> added: ${added.join(\", \")}`;\n        }\n        return result;\n      },\n      complainModalVisible,\n      complainChangeLink,\n      isAuthorized\n    };\n  }\n});\n","import { render } from \"./ChangeLog.vue?vue&type=template&id=1f629591\"\nimport script from \"./ChangeLog.vue?vue&type=script&lang=ts\"\nexport * from \"./ChangeLog.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\n  <PinIcon @click=\"clickPin\">pin</PinIcon>\n  <Dialog\n    v-model:visible=\"addDialogVisible\"\n    :dismissableMask=\"true\"\n    :closable=\"true\"\n    :modal=\"true\"\n    :closeOnEscape=\"true\"\n  >\n    <template #header>\n      <h3>\n        {{ `Choose parent from which pin will be visible` }}\n      </h3>\n    </template>\n\n    <Listbox v-model=\"selectedParent\" :options=\"parents\" optionLabel=\"title\" />\n\n    <template #footer>\n      <Button\n        label=\"No\"\n        icon=\"pi pi-times\"\n        class=\"p-button-text\"\n        @click=\"cancelAdd\"\n      />\n      <Button label=\"Yes\" icon=\"pi pi-check\" @click=\"add\" />\n    </template>\n  </Dialog>\n</template>\n\n<script>\nimport Dialog from \"primevue/dialog\";\nimport Button from \"primevue/button\";\nimport Listbox from \"primevue/listbox\";\nimport { useStore } from \"@/store\";\nimport { computed, ref } from \"vue\";\nimport { actions as pinActions } from \"@/store/pin\";\nimport api from \"@/api/api\";\nimport PinIcon from \"@/components/node_content/PinIcon.vue\";\n\nexport default {\n  name: \"PinButton\",\n  components: {\n    PinIcon,\n    Dialog,\n    Button,\n    Listbox\n  },\n  setup() {\n    const store = useStore();\n    const treeState = store.state.tree;\n    const addDialogVisible = ref(false);\n    const selectedParent = ref(false);\n    const selectedNode = computed(() => store.getters[\"tree/selectedNode\"]);\n    const newNodeTitle = ref(\"\");\n    const parents = computed(() => {\n      const selectedNodeParents = [];\n      let currentParent = treeState.nodeRecord[treeState.selectedNodeId].parent;\n      while (treeState.nodeRecord[currentParent.id].parent) {\n        selectedNodeParents.push({\n          title: currentParent.title,\n          id: currentParent.id\n        });\n        currentParent = treeState.nodeRecord[currentParent.id].parent;\n      }\n      selectedNodeParents.push({ title: \"root\", id: 0 });\n      return selectedNodeParents;\n    });\n\n    return {\n      clickPin: () => {\n        if (\n          store.state.pin.pins[store.state.tree.selectedNodeId] !== undefined\n        ) {\n          store.dispatch(\n            `pin/${pinActions.RemovePin}`,\n            store.state.tree.selectedNodeId\n          );\n          api.savePins(store.state.user.user, store.state.pin.pins);\n        } else {\n          addDialogVisible.value = !addDialogVisible.value;\n        }\n      },\n      selectedParent,\n      parents,\n      add: () => {\n        addDialogVisible.value = false;\n        store.dispatch(`pin/${pinActions.AddPin}`, {\n          parentId: selectedParent.value.id,\n          nodeId: selectedNode.value.id\n        });\n        api.savePins(store.state.user.user, store.state.pin.pins);\n        selectedParent.value = null;\n      },\n      cancelAdd: () => {\n        addDialogVisible.value = false;\n      },\n      addDialogVisible,\n      newNodeTitle\n    };\n  }\n};\n</script>\n","<template>\n  <div\n    style=\"cursor: pointer;\"\n    @mouseenter=\"mouseOver = true\"\n    @mouseleave=\"mouseOver = false\"\n  >\n    <div v-if=\"isPinned || mouseOver\" class=\"pin\">\n      <img\n        style=\"height: 35px\"\n        alt=\"pin-off\"\n        src=\"../../assets/images/pin-on.svg\"\n      />\n    </div>\n    <div v-else class=\"pin\">\n      <img\n        style=\"height: 35px\"\n        alt=\"pin-on\"\n        src=\"../../assets/images/pin-off.svg\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\nimport { useStore } from \"@/store\";\nimport { computed, ref } from \"vue\";\n\nexport default {\n  name: \"PinIcon\",\n  setup() {\n    const store = useStore();\n    const mouseOver = ref(false);\n    return {\n      isPinned: computed(\n        () =>\n          store.state.pin.pins[store.state.tree.selectedNodeId] !== undefined\n      ),\n      mouseOver\n    };\n  }\n};\n</script>\n\n<style scoped>\n.pin {\n  margin-top: 15px;\n  margin-left: 15px;\n}\n</style>\n","import { render } from \"./PinIcon.vue?vue&type=template&id=5b15f4ff&scoped=true\"\nimport script from \"./PinIcon.vue?vue&type=script&lang=js\"\nexport * from \"./PinIcon.vue?vue&type=script&lang=js\"\n\nimport \"./PinIcon.vue?vue&type=style&index=0&id=5b15f4ff&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-5b15f4ff\"\n\nexport default script","import { render } from \"./PinButton.vue?vue&type=template&id=37279644\"\nimport script from \"./PinButton.vue?vue&type=script&lang=js\"\nexport * from \"./PinButton.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\n  <p\n    v-show=\"!editOn\"\n    v-html=\"renderedContent\"\n    @click=\"setEditOn(true)\"\n    class=\"title\"\n  />\n  <textarea\n    class=\"title rawTitle p-inputtextarea p-inputtext p-component p-inputtextarea-resizable\"\n    style=\"display: none\"\n    ref=\"txtarea\"\n    rows=\"1\"\n    :value=\"content\"\n    @input=\"changeContent($event.target.value)\"\n    @focusout=\"setEditOn(false)\"\n  />\n</template>\n\n<script lang=\"ts\">\nimport { computed, ref } from \"vue\";\n\nexport default {\n  name: \"Title\",\n  emits: [\"content-changed\"],\n  props: {\n    content: {\n      type: String,\n      required: true\n    }\n  },\n  setup(props: any, ctx: any) {\n    const renderedContent = computed(() => {\n      return props.content;\n    });\n    const editOn = ref(false);\n\n    const txtarea = ref<HTMLDivElement | null>(null);\n\n    return {\n      editOn,\n      txtarea,\n      setEditOn: (val: boolean) => {\n        editOn.value = val;\n        if (val && txtarea.value) {\n          txtarea.value.style.display = \"block\";\n          txtarea.value.focus();\n        }\n        if (!val && txtarea.value) {\n          txtarea.value.style.display = \"none\";\n        }\n      },\n      renderedContent,\n      changeContent: (value: string) => {\n        ctx.emit(\"content-changed\", value);\n      }\n    };\n  }\n};\n</script>\n\n<style scoped>\n.title {\n  font-family: \"Google Sans\", Roboto, Arial, sans-serif;\n  font-size: 1.375rem;\n  font-weight: 400;\n  letter-spacing: 0;\n  line-height: 1.75rem;\n}\n.rawTitle {\n  margin-top: 10px;\n}\n</style>\n","\nimport { computed, ref } from \"vue\";\n\nexport default {\n  name: \"Title\",\n  emits: [\"content-changed\"],\n  props: {\n    content: {\n      type: String,\n      required: true\n    }\n  },\n  setup(props: any, ctx: any) {\n    const renderedContent = computed(() => {\n      return props.content;\n    });\n    const editOn = ref(false);\n\n    const txtarea = ref<HTMLDivElement | null>(null);\n\n    return {\n      editOn,\n      txtarea,\n      setEditOn: (val: boolean) => {\n        editOn.value = val;\n        if (val && txtarea.value) {\n          txtarea.value.style.display = \"block\";\n          txtarea.value.focus();\n        }\n        if (!val && txtarea.value) {\n          txtarea.value.style.display = \"none\";\n        }\n      },\n      renderedContent,\n      changeContent: (value: string) => {\n        ctx.emit(\"content-changed\", value);\n      }\n    };\n  }\n};\n","import { render } from \"./Title.vue?vue&type=template&id=c3593888&scoped=true\"\nimport script from \"./Title.vue?vue&type=script&lang=ts\"\nexport * from \"./Title.vue?vue&type=script&lang=ts\"\n\nimport \"./Title.vue?vue&type=style&index=0&id=c3593888&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-c3593888\"\n\nexport default script","<template>\n  <AddBasedOnIcon @click=\"showAddBanner\" />\n  <Dialog\n    v-model:visible=\"addBannerVisible\"\n    :dismissableMask=\"false\"\n    :closable=\"true\"\n    :modal=\"false\"\n    :closeOnEscape=\"true\"\n    @mousedown.stop\n  >\n    <template #header>\n      <h3>\n        Set \"{{\n          preconditionNode.title\n            ? preconditionNode.title\n            : selectedNode\n            ? selectedNode.title\n            : \"\"\n        }}\" as precondition for \"{{ targetNode ? targetNode.title : \"\" }}\"\n      </h3>\n    </template>\n\n    <template #footer>\n      <Button\n        label=\"Cancel\"\n        icon=\"pi pi-times\"\n        class=\"p-button-text\"\n        @click=\"cancelAdd\"\n      />\n      <Button label=\"Done\" icon=\"pi pi-check\" @click=\"add\" />\n    </template>\n  </Dialog>\n</template>\n\n<script>\nimport Dialog from \"primevue/dialog\";\nimport Button from \"primevue/button\";\nimport { useStore } from \"@/store\";\nimport { computed, ref, watch } from \"vue\";\nimport api from \"@/api/api\";\nimport AddBasedOnIcon from \"@/components/node_content/AddBasedOnIcon.vue\";\n\nexport default {\n  name: \"AddBasedOnButton\",\n  components: {\n    Dialog,\n    Button,\n    AddBasedOnIcon\n  },\n  emits: [\"select-precondition-is-on\", \"select-precondition-is-off\"],\n  props: {\n    clickedTitleId: {\n      type: String,\n      required: true\n    }\n  },\n  setup(props, ctx) {\n    const store = useStore();\n    const addBannerVisible = ref(false);\n    const targetNode = ref({}); // node where precondition must be added\n    const preconditionNode = ref({}); // node where precondition must be added\n    const selectedNode = computed(() => store.getters[\"tree/selectedNode\"]); // current selected node\n\n    watch(\n      () => props.clickedTitleId,\n      () => {\n        if (\n          props.clickedTitleId !== \"-1\" &&\n          store.state.tree.nodeRecord[props.clickedTitleId]\n        ) {\n          preconditionNode.value =\n            store.state.tree.nodeRecord[props.clickedTitleId].node;\n        }\n      },\n      { immediate: true }\n    );\n\n    return {\n      showAddBanner: () => {\n        ctx.emit(\"select-precondition-is-on\");\n        targetNode.value = store.getters[\"tree/selectedNode\"];\n        addBannerVisible.value = !addBannerVisible.value;\n      },\n      add: () => {\n        let preconditionsIDs = [];\n        if (store.state.precondition.preconditions[targetNode.value.id]) {\n          preconditionsIDs =\n            store.state.precondition.preconditions[targetNode.value.id];\n        }\n        preconditionsIDs.push(preconditionNode.value.id);\n\n        api.savePreconditions(store.state.user.user, {\n          nodeId: targetNode.value.id,\n          preconditionIds: preconditionsIDs\n        });\n        ctx.emit(\"select-precondition-is-off\");\n        addBannerVisible.value = false;\n        preconditionNode.value = {};\n      },\n      cancelAdd: () => {\n        addBannerVisible.value = false;\n        preconditionNode.value = {};\n        ctx.emit(\"select-precondition-is-off\");\n      },\n      addBannerVisible,\n      targetNode,\n      preconditionNode,\n      selectedNode\n    };\n  }\n};\n</script>\n","<template>\n  <div\n    style=\"cursor: pointer;\"\n    @mouseenter=\"mouseOver = true\"\n    @mouseleave=\"mouseOver = false\"\n  >\n    <div v-if=\"mouseOver\" class=\"custom\">\n      <img\n        style=\"height: 35px\"\n        alt=\"pin-off\"\n        src=\"../../assets/images/add-on.svg\"\n      />\n    </div>\n    <div v-else class=\"custom\">\n      <img\n        style=\"height: 35px\"\n        alt=\"pin-on\"\n        src=\"../../assets/images/add-off.svg\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref } from \"vue\";\n\nexport default {\n  name: \"AddBasedOnIcon\",\n  setup() {\n    const mouseOver = ref(false);\n    return {\n      mouseOver\n    };\n  }\n};\n</script>\n\n<style scoped>\n.custom {\n  margin-left: 15px;\n}\n</style>\n","import { render } from \"./AddBasedOnIcon.vue?vue&type=template&id=2494d1ac&scoped=true\"\nimport script from \"./AddBasedOnIcon.vue?vue&type=script&lang=js\"\nexport * from \"./AddBasedOnIcon.vue?vue&type=script&lang=js\"\n\nimport \"./AddBasedOnIcon.vue?vue&type=style&index=0&id=2494d1ac&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-2494d1ac\"\n\nexport default script","import { render } from \"./AddBasedOnButton.vue?vue&type=template&id=7f240509\"\nimport script from \"./AddBasedOnButton.vue?vue&type=script&lang=js\"\nexport * from \"./AddBasedOnButton.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","\nimport { actions, useStore } from \"@/store\";\nimport { actions as nodeContentActions } from \"@/store/node_content\";\nimport { computed, defineComponent } from \"vue\";\nimport TextArea from \"primevue/textarea\";\nimport SectionPreconditions from \"./Preconditions.vue\";\nimport SectionUsedBy from \"./UsedBy.vue\";\nimport { Tree } from \"@/types/graphics\";\nimport { EmptyNodeContent, NodeContent } from \"@/store/node_content\";\nimport { clone, printError } from \"@/tools/utils\";\nimport { useConfirm } from \"primevue/useconfirm\";\nimport api from \"@/api/api\";\nimport Markdown from \"./Markdown.vue\";\nimport ChangeLog from \"./ChangeLog.vue\";\nimport PinButton from \"./PinButton.vue\";\nimport Title from \"@/components/node_content/Title.vue\";\nimport AddBasedOnButton from \"@/components/node_content/AddBasedOnButton.vue\";\n\nexport default defineComponent({\n  name: \"NodeContent\",\n  components: {\n    AddBasedOnButton,\n    Title,\n    SectionUsedBy,\n    Markdown,\n    TextArea,\n    SectionPreconditions,\n    ChangeLog,\n    PinButton\n  },\n  emits: [\"select-precondition-is-on\", \"select-precondition-is-off\"],\n  props: {\n    show: {\n      type: Boolean,\n      required: true\n    },\n    selectedNodeId: {\n      type: String || null,\n      validator: (prop: string | null) =>\n        typeof prop === \"string\" || prop === null,\n      required: true\n    },\n    clickedTitleId: {\n      type: String,\n      required: true\n    }\n  },\n  setup(props) {\n    const store = useStore();\n    const confirm = useConfirm();\n    const tree = store.state.tree;\n\n    const selectedNode = computed<Tree | null>(() =>\n      props.selectedNodeId && tree.nodeRecord[props.selectedNodeId]\n        ? tree.nodeRecord[props.selectedNodeId].node\n        : null\n    );\n\n    const selectedNodeContent = computed<NodeContent | null>(() => {\n      if (\n        props.selectedNodeId &&\n        store.state.nodeContent.nodeContents[props.selectedNodeId]\n      ) {\n        return store.state.nodeContent.nodeContents[props.selectedNodeId];\n      }\n      const newContent = clone(EmptyNodeContent);\n      newContent.nodeID = props.selectedNodeId;\n      return newContent;\n    });\n\n    const selectedNodeComment = computed<string>(() =>\n      props.selectedNodeId &&\n      store.state.nodeContent.userNodeComments[props.selectedNodeId]\n        ? store.state.nodeContent.userNodeComments[props.selectedNodeId].comment\n        : \"\"\n    );\n\n    return {\n      selectedNode,\n      selectedNodeContent,\n      checkAuthorized: async (e: Event) => {\n        if (!store.state.user.user || store.state.user.user.isAnonymous) {\n          await store.dispatch(`${actions.confirmSignInPopup}`, confirm);\n          e.preventDefault();\n        }\n      },\n      selectedNodeComment,\n      changeNodeTitle: async (value: string) => {\n        if (!selectedNode.value || !selectedNode.value.id) {\n          return;\n        }\n        const err = await api.debouncedUpdate({\n          [`map/${selectedNode.value.id}/name`]: value\n        });\n\n        if (err) {\n          printError(err.error.message, err.kv);\n        }\n      },\n      changeContent: async (value: string) => {\n        const err = await store.dispatch(\n          `nodeContent/${nodeContentActions.setNodeContent}`,\n          {\n            nodeID: selectedNode.value!.id,\n            content: value\n          }\n        );\n\n        if (err) {\n          printError(err, {});\n        }\n      },\n      changeComment: async (value: string) => {\n        const err = await store.dispatch(\n          `nodeContent/${nodeContentActions.setNodeComment}`,\n          {\n            nodeID: selectedNode.value!.id,\n            comment: value\n          }\n        );\n\n        if (err) {\n          printError(err, {});\n        }\n      }\n    };\n  }\n});\n","import { render } from \"./Index.vue?vue&type=template&id=801f6dba&scoped=true\"\nimport script from \"./Index.vue?vue&type=script&lang=ts\"\nexport * from \"./Index.vue?vue&type=script&lang=ts\"\n\nimport \"./Index.vue?vue&type=style&index=0&id=801f6dba&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-801f6dba\"\n\nexport default script","<template>\n  <div :class=\"$style.textSearch\">\n    <TextSearch />\n  </div>\n  <div :class=\"$style.wrapper\">\n    <div v-if=\"email\" style=\"width:100%\">\n      <div style=\"position: absolute; right: 2rem;\">\n        <MenuButton @click=\"toggleUserMenu\">\n          <img alt=\"user\" src=\"../../assets/images/user.svg\" style=\"width: 20px\"/>\n        </MenuButton>\n        <PrimeMenu ref=\"menu\" id=\"overlay_menu\" :model=\"items\" :popup=\"true\"/>\n      </div>\n      <div style=\"position: absolute; right: 6.1rem;\">\n        <Feedback />\n      </div>\n      <EditMode style=\"position: absolute; right: 12.5rem;\" />\n      <div v-if=\"editModeOn\" style=\"position: absolute; right: 20.6rem;\">\n        <AddNode />\n      </div>\n      <div v-if=\"editModeOn\" style=\"position: absolute; right: 26.6rem;\">\n        <RemoveNode />\n      </div>\n      <div v-if=\"editModeOn && isNodeSelected\" style=\"position: absolute; right: 33.6rem;\">\n        <CutPaste v-if=\"isNodeSelected\" />\n      </div>\n      <div v-if=\"editModeOn && isNodeSelected\" style=\"position: absolute; right: 39.3rem;\">\n        <MapChangeLog />\n      </div>\n    </div>\n    <div v-else>\n      <Button @click=\"signIn\" style=\"position: absolute; right: 2rem;\" rounded size=\"small\"  icon=\"pi pi-sign-in\" label=\"sign in\"/>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { useStore } from \"@/store\";\nimport { computed, ref } from \"vue\";\nimport { actions as userActions } from \"@/store/user\";\nimport AddNode from \"./AddNode\";\nimport RemoveNode from \"./RemoveNode\";\nimport EditMode from \"./EditMode\";\nimport CutPaste from \"@/components/menu/CutPaste\";\nimport Feedback from \"@/components/menu/Feedback\";\nimport TextSearch from \"@/components/menu/Textsearch\";\nimport MapChangeLog from \"@/components/menu/MapChangeLog\";\nimport MenuButton from \"@/components/menu/MenuButton.vue\";\nimport PrimeMenu from \"primevue/menu\";\nimport Button from \"primevue/button\";\n\nexport default {\n  name: \"Menu\",\n  components: {\n    Button,\n    PrimeMenu,\n    MenuButton,\n    Feedback,\n    CutPaste,\n    AddNode,\n    RemoveNode,\n    EditMode,\n    TextSearch,\n    MapChangeLog\n  },\n  setup() {\n    const store = useStore();\n    const user = store.state.user;\n    const menu = ref();\n\n    // user info\n    const userPhotoURL = computed(() => (user.user && user.user.photoURL ? user.user.photoURL : '../../assets/images/user.svg'));\n    const email = computed(() => (user.user ? user.user.email : null));\n    const items = computed(() => {\n      return [\n        {\n          label: email.value,\n          items: [\n            {\n              label: 'sign out',\n              icon: 'pi pi-sign-out',\n              command: () => {\n                store.dispatch(`user/${userActions.signOut}`);\n              }\n            },\n          ]\n        },\n      ]\n    })\n    return {\n      email,\n      userPhotoURL,\n      editModeOn: computed(() => store.state.editModeOn),\n      isNodeSelected: computed(() => store.state.tree.selectedNodeId),\n      isPinned: computed(\n        () =>\n          store.state.pin.pins[store.state.tree.selectedNodeId] !== undefined\n      ),\n      // SignIn\n      signIn: () => store.dispatch(`user/${userActions.signIn}`),\n      // User Menu\n      menu,\n      toggleUserMenu: (event) => {\n        menu.value.toggle(event);\n      },\n      items,\n    };\n  }\n};\n</script>\n\n<style module>\n.wrapper {\n  position: fixed;\n  display: flex;\n  top: 0;\n  right: 0;\n  padding: 8px;\n  background-color: rgba(255, 255, 255, 0.2);\n  width: 70%;\n}\n.textSearch {\n  position: fixed;\n  display: flex;\n  top: 0%;\n  left: 0%;\n  width: 30%;\n  padding: 15px 20px;\n  background: linear-gradient(rgba(120, 120, 120, 0.4), rgba(120, 120, 120, 0));\n}\n</style>\n","<template>\n  <MenuButton @click=\"toggleAddDialog\">\n    <img alt=\"icon\" src=\"../../assets/images/add.svg\" style=\"width: 20px\"/>\n    <span class=\"p-ml-2\">add</span>\n  </MenuButton>\n  <Dialog\n    v-model:visible=\"addDialogVisible\"\n    :dismissableMask=\"true\"\n    :closable=\"true\"\n    :modal=\"true\"\n    :closeOnEscape=\"true\"\n    @mousedown.stop\n  >\n    <template #header>\n      <h3>\n        {{\n          selectedNodeTitle\n            ? `Add subsection to ${selectedNodeTitle}`\n            : `Add section`\n        }}\n      </h3>\n    </template>\n\n    <Input type=\"text\" v-model=\"newNodeTitle\" />\n\n    <template #footer>\n      <Button\n        label=\"No\"\n        icon=\"pi pi-times\"\n        class=\"p-button-text\"\n        @click=\"cancelAdd\"\n      />\n      <Button label=\"Yes\" icon=\"pi pi-check\" @click=\"add\" />\n    </template>\n  </Dialog>\n</template>\n\n<script>\nimport Dialog from \"primevue/dialog\";\nimport Button from \"primevue/button\";\nimport Input from \"primevue/inputtext\";\nimport { useStore, actions } from \"@/store\";\nimport { computed, ref } from \"vue\";\nimport { mutations as positionChangePermitMutations } from \"@/store/position_change_permits\";\nimport MenuButton from \"@/components/menu/MenuButton.vue\";\n\nexport default {\n  name: \"AddNode\",\n  components: {\n    MenuButton,\n    Dialog,\n    Button,\n    Input\n  },\n  setup() {\n    const store = useStore();\n    const addDialogVisible = ref(false);\n    const selectedNode = computed(() => store.getters[\"tree/selectedNode\"]);\n    const newNodeTitle = ref(\"\");\n\n    return {\n      selectedNodeTitle: computed(() =>\n        selectedNode.value ? selectedNode.value.title : \"\"\n      ),\n      toggleAddDialog: () => (addDialogVisible.value = !addDialogVisible.value),\n      add: async () => {\n        const newNodeID = await store.dispatch(`${actions.createNode}`, {\n          parentID: selectedNode.value ? selectedNode.value.id : 0,\n          title: newNodeTitle.value\n        });\n        store.commit(\n          `positionChangePermits/${positionChangePermitMutations.ADD_NODES}`,\n          [\n            newNodeID,\n            ...store.state.tree.nodeRecord[\n              selectedNode.value.id\n            ].node.children.map(node => node.id)\n          ]\n        );\n        newNodeTitle.value = \"\";\n        addDialogVisible.value = false;\n      },\n      cancelAdd: () => {\n        newNodeTitle.value = \"\";\n        addDialogVisible.value = false;\n      },\n      addDialogVisible,\n      newNodeTitle\n    };\n  }\n};\n</script>\n","<template>\n  <Button\n      size=\"small\"\n      rounded\n      @mouseenter=\"mouseover=true\"\n      @mouseleave=\"mouseover=false\"\n      :style=\"(mouseover ? `background-color: rgba(0, 0, 0, 0.1); ` : (bgColor ? `background-color: ${bgColor};` : `background-color: white;`)) + `color: black; border-color:#3B6BF9;`\"\n  >\n    <slot></slot>\n  </Button>\n</template>\n\n<script>\nimport Button from \"primevue/button\";\nimport {ref, defineComponent} from \"vue\";\n\nexport default defineComponent({\n  name: \"MenuButton\",\n  components: {\n    Button\n  },\n  props: {\n    bgColor: String,\n  },\n  setup() {\n    const mouseover = ref(false)\n    return {\n      mouseover,\n    };\n  }\n});\n</script>\n","import { render } from \"./MenuButton.vue?vue&type=template&id=24ff0e6a\"\nimport script from \"./MenuButton.vue?vue&type=script&lang=js\"\nexport * from \"./MenuButton.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","import { render } from \"./AddNode.vue?vue&type=template&id=f2b91a76\"\nimport script from \"./AddNode.vue?vue&type=script&lang=js\"\nexport * from \"./AddNode.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\n  <MenuButton @click=\"toggleDialog\" :disabled=\"!selectedNodeTitle\">\n    <img alt=\"icon\" src=\"../../assets/images/minus.svg\" style=\"width: 20px\"/>\n    <span class=\"p-ml-2\">delete</span>\n  </MenuButton>\n  <Dialog\n    v-model:visible=\"addDialogVisible\"\n    :dismissableMask=\"true\"\n    :closable=\"true\"\n    :modal=\"true\"\n    :closeOnEscape=\"true\"\n  >\n    <template #header>\n      <h3>\n        {{ `Remove ${selectedNodeTitle} and all its descendants?` }}\n      </h3>\n    </template>\n\n    <template #footer>\n      <Button\n        label=\"No\"\n        icon=\"pi pi-times\"\n        class=\"p-button-text\"\n        @click=\"cancel\"\n      />\n      <Button label=\"Yes\" icon=\"pi pi-check\" @click=\"remove\" />\n    </template>\n  </Dialog>\n</template>\n\n<script>\nimport Dialog from \"primevue/dialog\";\nimport Button from \"primevue/button\";\nimport { useStore, actions } from \"@/store\";\nimport { computed, ref } from \"vue\";\nimport { mutations as positionChangePermitMutations } from \"@/store/position_change_permits\";\nimport MenuButton from \"@/components/menu/MenuButton.vue\";\n\nexport default {\n  name: \"RemoveNode\",\n  components: {\n    MenuButton,\n    Dialog,\n    Button\n  },\n  setup() {\n    const store = useStore();\n    const addDialogVisible = ref(false);\n    const selectedNode = computed(() => store.getters[\"tree/selectedNode\"]);\n\n    return {\n      selectedNodeTitle: computed(() =>\n        selectedNode.value ? selectedNode.value.title : \"\"\n      ),\n      toggleDialog: () => (addDialogVisible.value = !addDialogVisible.value),\n      remove: () => {\n        addDialogVisible.value = false;\n        store.dispatch(`${actions.removeNode}`, selectedNode.value.id);\n        store.commit(\n          `positionChangePermits/${positionChangePermitMutations.ADD_NODES}`,\n          store.state.tree.nodeRecord[\n            selectedNode.value.id\n          ].parent.children.map(node => node.id)\n        );\n      },\n      cancel: () => {\n        addDialogVisible.value = false;\n      },\n      addDialogVisible\n    };\n  }\n};\n</script>\n","import { render } from \"./RemoveNode.vue?vue&type=template&id=672898f9\"\nimport script from \"./RemoveNode.vue?vue&type=script&lang=js\"\nexport * from \"./RemoveNode.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\n  <div>\n    <MenuButton v-if=\"!editModeOn\" @click=\"on\" style=\"height:35px\">\n      <img alt=\"icon\" src=\"../../assets/images/switch-on.svg\" style=\"width: 20px\"/>\n      <span class=\"p-ml-2\">edit map</span>\n    </MenuButton>\n    <MenuButton v-if=\"editModeOn\" @click=\"off\" style=\"height:35px;\">\n      <img alt=\"icon\" src=\"../../assets/images/switch-off.svg\" style=\"width: 20px\"/>\n      <span class=\"p-ml-2\">edit map</span>\n    </MenuButton>\n  </div>\n</template>\n\n<script>\nimport { actions, useStore } from \"@/store\";\nimport { computed } from \"vue\";\nimport MenuButton from \"@/components/menu/MenuButton.vue\";\n\nexport default {\n  name: \"EditMode\",\n  components: {\n    MenuButton,\n  },\n  setup() {\n    const store = useStore();\n\n    return {\n      editModeOn: computed(() => store.state.editModeOn),\n      on: () => {\n        store.dispatch(`${actions.setEditMode}`, true);\n      },\n      off: () => {\n        store.dispatch(`${actions.setEditMode}`, false);\n      },\n    };\n  }\n};\n</script>\n","import { render } from \"./EditMode.vue?vue&type=template&id=205fb344\"\nimport script from \"./EditMode.vue?vue&type=script&lang=js\"\nexport * from \"./EditMode.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\n  <MenuButton v-if=\"cutNodeID == null\" @click=\"cut\">\n    <img alt=\"icon\" src=\"../../assets/images/cut.svg\" style=\"width: 20px\"/>\n    <span class=\"p-ml-2\">cut</span>\n  </MenuButton>\n  <MenuButton v-if=\"cutNodeID != null\" @click=\"paste\">\n    <img alt=\"icon\" src=\"../../assets/images/paste.svg\" style=\"width: 20px\"/>\n    <span class=\"p-ml-2\">paste</span>\n  </MenuButton>\n</template>\n\n<script>\nimport { useStore, actions } from \"@/store\";\nimport { computed, ref } from \"vue\";\nimport { mutations as positionChangePermitMutations } from \"@/store/position_change_permits\";\nimport MenuButton from \"@/components/menu/MenuButton.vue\";\n\nexport default {\n  name: \"CutPaste\",\n  components: {MenuButton},\n  setup() {\n    const store = useStore();\n    const selectedNode = computed(() => store.getters[\"tree/selectedNode\"]);\n    const cutNodeID = ref(null);\n\n    return {\n      cutNodeID,\n      cut: () => {\n        cutNodeID.value = selectedNode.value.id;\n      },\n      paste: () => {\n        // permit to move children of both new and old parents\n        const oldParentChildrenID = store.state.tree.nodeRecord[\n          cutNodeID.value\n        ].parent.children.map(node => node.id);\n        const newParentChildrenID = store.state.tree.nodeRecord[\n          selectedNode.value.id\n        ].node.children.map(node => node.id);\n        store.commit(\n          `positionChangePermits/${positionChangePermitMutations.ADD_NODES}`,\n          [...oldParentChildrenID, ...newParentChildrenID]\n        );\n\n        // do cut and paste of node\n        store.dispatch(`${actions.cutPasteNode}`, {\n          nodeID: cutNodeID.value,\n          parentID: selectedNode.value.id\n        });\n\n        cutNodeID.value = null;\n      }\n    };\n  }\n};\n</script>\n","import { render } from \"./CutPaste.vue?vue&type=template&id=ef0ab006\"\nimport script from \"./CutPaste.vue?vue&type=script&lang=js\"\nexport * from \"./CutPaste.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\n  <MenuButton @click=\"send\">\n    <img alt=\"icon\" src=\"../../assets/images/chat.svg\" style=\"width: 20px\"/>\n    <span class=\"p-ml-2\">chat</span>\n  </MenuButton>\n</template>\n\n<script>\nimport MenuButton from \"@/components/menu/MenuButton.vue\";\n\nexport default {\n  name: \"Feedback\",\n  components: {\n    MenuButton,\n  },\n  setup() {\n    return {\n      send: () => {\n        window.open(\n          \"https://discord.com/channels/1171118046543347782/1171118047105396749\",\n          \"_blank\"\n        );\n      }\n    };\n  }\n};\n</script>\n","import { render } from \"./Feedback.vue?vue&type=template&id=e004e622\"\nimport script from \"./Feedback.vue?vue&type=script&lang=js\"\nexport * from \"./Feedback.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\n  <span class=\"p-input-icon-right\" style=\"width: 100%\">\n    <i class=\"pi pi-times\" style=\"right: 1.2rem;\" @click=\"clearBox\" />\n    <InputText\n      :class=\"$style['searchBox']\"\n      placeholder=\"Search SciMap\"\n      v-model=\"value\"\n      @update:modelValue=\"doSearch($event)\"\n    />\n  </span>\n</template>\n\n<script lang=\"ts\">\nimport InputText from \"primevue/inputtext\";\nimport { search } from \"@/tools/textsearch\";\nimport { mutations as searchMutations } from \"@/store/search_result\";\nimport { useStore } from \"@/store\";\nimport { ref } from \"vue\";\n\nexport default {\n  name: \"TextSearch\",\n  components: {\n    InputText\n  },\n\n  setup() {\n    const value = ref(\"\");\n    const store = useStore();\n    return {\n      doSearch: async (value: string) => {\n        const res = await search(value);\n        store.commit(`searchResult/${searchMutations.SET_NODE_IDS}`, res);\n        return res;\n      },\n      value,\n      clearBox: () => {\n        value.value = \"\";\n      }\n    };\n  }\n};\n</script>\n\n<style module>\n.searchBox {\n  border-radius: 2rem !important;\n  padding: 0.8rem 2rem !important;\n  width: 100%;\n}\n</style>\n","\nimport InputText from \"primevue/inputtext\";\nimport { search } from \"@/tools/textsearch\";\nimport { mutations as searchMutations } from \"@/store/search_result\";\nimport { useStore } from \"@/store\";\nimport { ref } from \"vue\";\n\nexport default {\n  name: \"TextSearch\",\n  components: {\n    InputText\n  },\n\n  setup() {\n    const value = ref(\"\");\n    const store = useStore();\n    return {\n      doSearch: async (value: string) => {\n        const res = await search(value);\n        store.commit(`searchResult/${searchMutations.SET_NODE_IDS}`, res);\n        return res;\n      },\n      value,\n      clearBox: () => {\n        value.value = \"\";\n      }\n    };\n  }\n};\n","import { render } from \"./Textsearch.vue?vue&type=template&id=e144fd9c\"\nimport script from \"./Textsearch.vue?vue&type=script&lang=ts\"\nexport * from \"./Textsearch.vue?vue&type=script&lang=ts\"\n\nconst cssModules = script.__cssModules = {}\nimport style0 from \"./Textsearch.vue?vue&type=style&index=0&id=e144fd9c&module=true&lang=css\"\ncssModules[\"$style\"] = style0\nscript.render = render\n\nexport default script","<template>\n  <ChangeLogComplain\n    :show=\"complainModalVisible\"\n    :complainChangeLink=\"complainChangeLink\"\n    @hide=\"complainModalVisible = false\"\n  />\n  <MenuButton @click=\"toggleAddDialog\">\n    <img\n        alt=\"icon\"\n        src=\"../../assets/images/chat.svg\"\n        style=\"width: 20px\"\n    />\n    <span class=\"p-ml-2\">log</span>\n  </MenuButton>\n  <Dialog\n    v-model:visible=\"addDialogVisible\"\n    :dismissableMask=\"true\"\n    :closable=\"true\"\n    :modal=\"true\"\n    :closeOnEscape=\"true\"\n    @mousedown.stop\n  >\n    <template #header>\n      <h3>\n        Map change log\n      </h3>\n    </template>\n    <Card v-for=\"(event, i) of changes\" :key=\"i\" class=\"mt-3\">\n      <template #title>\n        {{ new Date(event.timestamp).toLocaleDateString() }}\n        {{ new Date(event.timestamp).toLocaleTimeString() }}\n      </template>\n      <template #subtitle>\n        {{ event.userDisplayName }} /\n        <a href=\"#\" @click=\"showComplain(event.changeLogID)\">Complain</a>\n      </template>\n      <template #content>\n        <div v-html=\"getActionDescription(event)\"></div>\n      </template>\n    </Card>\n  </Dialog>\n</template>\n\n<script lang=\"ts\">\nimport Dialog from \"primevue/dialog\";\nimport { reactive, ref } from \"vue\";\nimport { ActionType, ChangeLogNodeParent } from \"@/store/change_log\";\nimport { GetNodeUrl, subscribeChangeLogEnriched } from \"@/api/change_log\";\nimport Card from \"primevue/card\";\nimport ChangeLogComplain from \"@/components/node_content/ChangeLogComplain.vue\";\nimport MenuButton from \"@/components/menu/MenuButton.vue\";\n\nexport default {\n  name: \"MapChangeLog\",\n  components: {\n    MenuButton,\n    ChangeLogComplain,\n    Card,\n    Dialog,\n  },\n  setup() {\n    const complainChangeLink = ref(\"\");\n    const complainModalVisible = ref(false);\n    const addDialogVisible = ref(false);\n    const changes = reactive([]) as Array<ChangeLogNodeParent>;\n    subscribeChangeLogEnriched([ActionType.ParentID], [], changeLogs => {\n      changes.splice(\n        0,\n        changes.length,\n        ...(changeLogs as Array<ChangeLogNodeParent>)\n      );\n    });\n\n    return {\n      complainChangeLink,\n      complainModalVisible,\n      showComplain: (id: string) => {\n        complainModalVisible.value = true;\n        complainChangeLink.value = \"https://scimap.org/change/\" + id;\n      },\n      toggleAddDialog: () => (addDialogVisible.value = !addDialogVisible.value),\n      addDialogVisible,\n      changes,\n      getActionDescription: (event: ChangeLogNodeParent): string => {\n        if (event.isAdded) {\n          return `node ${GetNodeUrl(\n            event.node.idPath,\n            event.node.id,\n            event.node.name\n          )} was added to ${GetNodeUrl(\n            event.parentNodeAfter.idPath,\n            event.parentNodeAfter.id,\n            event.parentNodeAfter.name\n          )}`;\n        }\n        if (event.isRemoved) {\n          return `node ${GetNodeUrl(\n            event.node.idPath,\n            event.node.id,\n            event.node.name\n          )} was removed from ${GetNodeUrl(\n            event.parentNodeBefore.idPath,\n            event.parentNodeBefore.id,\n            event.parentNodeBefore.name\n          )}`;\n        }\n\n        return `node ${GetNodeUrl(\n          event.node.idPath,\n          event.node.id,\n          event.node.name\n        )} was moved from ${GetNodeUrl(\n          event.parentNodeBefore.idPath,\n          event.parentNodeBefore.id,\n          event.parentNodeBefore.name\n        )} to ${GetNodeUrl(\n          event.parentNodeAfter.idPath,\n          event.parentNodeAfter.id,\n          event.parentNodeAfter.name\n        )}`;\n      }\n    };\n  }\n};\n</script>\n","\nimport Dialog from \"primevue/dialog\";\nimport { reactive, ref } from \"vue\";\nimport { ActionType, ChangeLogNodeParent } from \"@/store/change_log\";\nimport { GetNodeUrl, subscribeChangeLogEnriched } from \"@/api/change_log\";\nimport Card from \"primevue/card\";\nimport ChangeLogComplain from \"@/components/node_content/ChangeLogComplain.vue\";\nimport MenuButton from \"@/components/menu/MenuButton.vue\";\n\nexport default {\n  name: \"MapChangeLog\",\n  components: {\n    MenuButton,\n    ChangeLogComplain,\n    Card,\n    Dialog,\n  },\n  setup() {\n    const complainChangeLink = ref(\"\");\n    const complainModalVisible = ref(false);\n    const addDialogVisible = ref(false);\n    const changes = reactive([]) as Array<ChangeLogNodeParent>;\n    subscribeChangeLogEnriched([ActionType.ParentID], [], changeLogs => {\n      changes.splice(\n        0,\n        changes.length,\n        ...(changeLogs as Array<ChangeLogNodeParent>)\n      );\n    });\n\n    return {\n      complainChangeLink,\n      complainModalVisible,\n      showComplain: (id: string) => {\n        complainModalVisible.value = true;\n        complainChangeLink.value = \"https://scimap.org/change/\" + id;\n      },\n      toggleAddDialog: () => (addDialogVisible.value = !addDialogVisible.value),\n      addDialogVisible,\n      changes,\n      getActionDescription: (event: ChangeLogNodeParent): string => {\n        if (event.isAdded) {\n          return `node ${GetNodeUrl(\n            event.node.idPath,\n            event.node.id,\n            event.node.name\n          )} was added to ${GetNodeUrl(\n            event.parentNodeAfter.idPath,\n            event.parentNodeAfter.id,\n            event.parentNodeAfter.name\n          )}`;\n        }\n        if (event.isRemoved) {\n          return `node ${GetNodeUrl(\n            event.node.idPath,\n            event.node.id,\n            event.node.name\n          )} was removed from ${GetNodeUrl(\n            event.parentNodeBefore.idPath,\n            event.parentNodeBefore.id,\n            event.parentNodeBefore.name\n          )}`;\n        }\n\n        return `node ${GetNodeUrl(\n          event.node.idPath,\n          event.node.id,\n          event.node.name\n        )} was moved from ${GetNodeUrl(\n          event.parentNodeBefore.idPath,\n          event.parentNodeBefore.id,\n          event.parentNodeBefore.name\n        )} to ${GetNodeUrl(\n          event.parentNodeAfter.idPath,\n          event.parentNodeAfter.id,\n          event.parentNodeAfter.name\n        )}`;\n      }\n    };\n  }\n};\n","import { render } from \"./MapChangeLog.vue?vue&type=template&id=24b1a077\"\nimport script from \"./MapChangeLog.vue?vue&type=script&lang=ts\"\nexport * from \"./MapChangeLog.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","import { render } from \"./Index.vue?vue&type=template&id=67eb0fd4\"\nimport script from \"./Index.vue?vue&type=script&lang=js\"\nexport * from \"./Index.vue?vue&type=script&lang=js\"\n\nconst cssModules = script.__cssModules = {}\nimport style0 from \"./Index.vue?vue&type=style&index=0&id=67eb0fd4&module=true&lang=css\"\ncssModules[\"$style\"] = style0\nscript.render = render\n\nexport default script","\nimport { computed, defineComponent, ref, watch } from \"vue\";\nimport Map from \"@/components/map/Map.vue\";\nimport NodeContent from \"@/components/node_content/Index.vue\";\nimport ConfirmDialog from \"primevue/confirmdialog\";\nimport Toast from \"primevue/toast\";\nimport {\n  EventClickNode,\n  EventDraggingBackground,\n  EventDraggingNode,\n  EventWheel\n} from \"@/components/map/Map\";\nimport Menu from \"@/components/menu/Index.vue\";\nimport { useStore } from \"@/store\";\nimport { useRouter, useRoute, onBeforeRouteUpdate } from \"vue-router\";\nimport { mutations as treeMutations, NodeRecordItem } from \"@/store/tree\";\nimport { mutations as zoomPanMutations } from \"@/store/zoom_pan\";\nimport { actions } from \"@/store/\";\nimport {\n  filterNodesAndLayers,\n  findCentralNode,\n  zoomAndPanPoint,\n  zoomAnPanLayers\n} from \"@/views/Home\";\nimport { clone, printError } from \"@/tools/utils\";\nimport { MapNode } from \"@/types/graphics\";\nimport { findMapNode, findMapNodes } from \"@/store/tree/helpers\";\nimport { actions as positionChangePermitsActions } from \"@/store/position_change_permits\";\n\nexport default defineComponent({\n  name: \"Home\",\n\n  components: {\n    Map,\n    Menu,\n    NodeContent,\n    ConfirmDialog,\n    Toast\n  },\n\n  setup() {\n    const store = useStore();\n    const router = useRouter();\n    const route = useRoute();\n    const treeState = store.state.tree;\n    const zoomPanState = store.state.zoomPan;\n    const pinState = store.state.pin;\n    const searchResultState = store.state.searchResult;\n    const clickedTitleId = ref(\"-1\");\n    let selectPreconditionIsOn = false;\n    let titleOver = false;\n\n    // Set node from URL as selected\n    watch(\n      () => route.params.id,\n      () => {\n        store.commit(\n          `tree/${treeMutations.SET_SELECTED_NODE_ID}`,\n          route.params.id\n        );\n      },\n      { immediate: true }\n    );\n\n    /**\n     * From mapNodeLayers method updateLayers determines visibleLayers and nodes\n     * that will be shown to user (which is always just a small part of all nodes of the map)\n     * @param centralNodeId\n     * @param mapNodeLayers\n     * @param nodeRecord\n     */\n    const updateLayers = (\n      centralNodeId: string,\n      mapNodeLayers: Array<Record<string, MapNode>>,\n      nodeRecord: Record<string, NodeRecordItem>\n    ): Array<Record<number, MapNode>> => {\n      // Вычленяем слои и узлы которые мы хотим показывать учитывая что текущий видимый узел это centralNodeId\n      const [filteredLayers, err] = filterNodesAndLayers(\n        mapNodeLayers,\n        nodeRecord,\n        centralNodeId\n      );\n      if (err) {\n        printError(\"Home.vue: error in filterNodesAndLayers:\", { err });\n        return [];\n      }\n      return filteredLayers.reverse();\n    };\n\n    const centralNodeId = ref<string | null>(null);\n    // visibleLayers consists only from user visible nodes and visibleLayers of all (which is treeState.mapNodeLayers)\n    const visibleLayers = ref<Array<Record<string, MapNode>>>([]);\n\n    // Ugly hack to determine first load of page\n    let isFirstPageLoad = true;\n    onBeforeRouteUpdate(async (to, from) => {\n      isFirstPageLoad = false;\n    });\n    // If this is isFirstPageLoad then pan map to node in URL\n    watch(\n      () => [treeState.mapNodeLayers],\n      () => {\n        if (\n          isFirstPageLoad &&\n          route.params.id.length > 0 &&\n          treeState.mapNodeLayers.length > 0\n        ) {\n          const [firstNode] = findMapNode(\n            route.params.id as string,\n            treeState.mapNodeLayers\n          );\n          if (firstNode != null) {\n            store.commit(`zoomPan/${zoomPanMutations.SET_PAN}`, {\n              x: -firstNode.center.x + treeState.mapNodeLayers[0][\"0\"].center.x,\n              y: -firstNode.center.y + treeState.mapNodeLayers[0][\"0\"].center.y\n            });\n          }\n        }\n      }\n    );\n\n    // Determine which nodes to show based on current pan and zoom\n    watch(\n      () => [\n        treeState.mapNodeLayers,\n        zoomPanState.debouncedZoom,\n        zoomPanState.debouncedPan\n      ],\n      () => {\n        const [newCentralNodeId, err] = findCentralNode(\n          treeState.mapNodeLayers,\n          treeState.nodeRecord,\n          { width: window.innerWidth, height: window.innerHeight },\n          zoomPanState.debouncedZoom,\n          zoomPanState.pan,\n          zoomPanState.zoomCenter\n        );\n        if (err != null) {\n          printError(\"filterNodesAndLayers: error in findCurrentNode\", { err });\n        }\n\n        centralNodeId.value = newCentralNodeId;\n        visibleLayers.value = updateLayers(\n          newCentralNodeId,\n          treeState.mapNodeLayers,\n          treeState.nodeRecord\n        );\n      },\n      { immediate: true, deep: true }\n    );\n\n    const visibleZoomedPanedLayers = ref<Array<Record<string, MapNode>>>([]);\n    watch(\n      () => [\n        zoomPanState.pan.x,\n        zoomPanState.pan.y,\n        zoomPanState.zoom,\n        visibleLayers\n      ],\n      () => {\n        // visibleLayers это всегда слои с zoom=1 и pan={0, 0} состоящий из только видимых прямо сейчас элементов.\n        // Мы применяем к этому объекту текущий zoomPanState но сам эталон не трогаем, поэтому здесь clone\n        // Это не дорогая операция так как visibleLayers всегда содержит небольшое кол-во элементов\n        // видимых только прямо сейчас\n        const layersToZoomAndPan = clone(visibleLayers.value);\n        visibleZoomedPanedLayers.value = zoomAnPanLayers(\n          layersToZoomAndPan,\n          zoomPanState.zoom,\n          zoomPanState.pan\n        );\n      },\n      { immediate: true, deep: true }\n    );\n\n    return {\n      /**\n       * pinNodes\n       */\n      pinNodes: computed(() => {\n        if (centralNodeId.value == null) {\n          return [];\n        }\n        const pinNodeIDs = pinState.pinsReverse[centralNodeId.value];\n        if (!pinNodeIDs) {\n          return [];\n        }\n\n        // remove pins that already exists on visibleLayers\n        for (const layer of visibleLayers.value) {\n          for (const nodeID in layer) {\n            const node = layer[nodeID];\n            if (node.title != \"\") {\n              const ind = pinNodeIDs.indexOf(node.id);\n              if (ind != -1) {\n                pinNodeIDs.splice(ind, 1);\n              }\n            }\n          }\n        }\n\n        const pinMapNodes = findMapNodes(pinNodeIDs, treeState.mapNodeLayers);\n        const result = [];\n        for (const pinMapNode of pinMapNodes) {\n          const cl = clone(pinMapNode);\n          cl.center = zoomAndPanPoint(\n            pinMapNode.center,\n            zoomPanState.zoom,\n            zoomPanState.pan\n          );\n          result.push(cl);\n        }\n\n        return result;\n      }),\n\n      /**\n       * searchResultNodeIDs\n       */\n      searchResultNodeIDs: computed(() => {\n        return searchResultState.nodeIDs;\n      }),\n\n      /**\n       * searchResultPinNodes\n       */\n      searchResultPinNodes: computed(() => {\n        if (centralNodeId.value == null) {\n          return [];\n        }\n        const searchResultNodeIDs = clone(searchResultState.nodeIDs);\n        if (!searchResultNodeIDs) {\n          return [];\n        }\n\n        // remove pins that already exists on visibleLayers\n        for (const layer of visibleLayers.value) {\n          for (const nodeID in layer) {\n            const node = layer[nodeID];\n            if (node.title != \"\") {\n              const ind = searchResultNodeIDs.indexOf(node.id);\n              if (ind != -1) {\n                searchResultNodeIDs.splice(ind, 1);\n              }\n            }\n          }\n        }\n\n        const searchResultMapNodes = findMapNodes(\n          searchResultNodeIDs,\n          treeState.mapNodeLayers\n        );\n        const result = [];\n        for (const searchResultMapNode of searchResultMapNodes) {\n          const cl = clone(searchResultMapNode);\n          cl.center = zoomAndPanPoint(\n            searchResultMapNode.center,\n            zoomPanState.zoom,\n            zoomPanState.pan\n          );\n          result.push(cl);\n        }\n\n        return result;\n      }),\n\n      editModeOn: computed(() => store.state.editModeOn),\n      selectedNodeId: computed(() => treeState.selectedNodeId),\n      selectedNodePreconditionIds: computed(() =>\n        treeState.selectedNodeId\n          ? store.state.precondition.preconditions[treeState.selectedNodeId]\n          : []\n      ),\n      visibleZoomedPanedLayers: visibleZoomedPanedLayers,\n      nodeDragging: async (e: EventDraggingNode) => {\n        const hasDragPermit = await store.dispatch(\n          `positionChangePermits/${positionChangePermitsActions.CheckNodeID}`,\n          e.id\n        );\n        if (!hasDragPermit) {\n          return;\n        }\n        await store.dispatch(`${actions.updateNodePosition}`, {\n          nodeId: e.id,\n          delta: {\n            x: e.delta.x / zoomPanState.zoom,\n            y: e.delta.y / zoomPanState.zoom\n          }\n        });\n      },\n      setSelectPreconditionON: () => {\n        selectPreconditionIsOn = true;\n      },\n      setSelectPreconditionOFF: () => {\n        selectPreconditionIsOn = false;\n      },\n      clickedTitleId,\n      titleClick: (e: EventClickNode) => {\n        if (!selectPreconditionIsOn) {\n          router.push({ name: \"node\", params: { id: e.id } });\n        } else {\n          clickedTitleId.value = e.id;\n        }\n      },\n      titleOver: (e: EventClickNode) => {\n        titleOver = true;\n        store.commit(`tree/${treeMutations.SET_SELECTED_NODE_ID}`, e.id);\n      },\n      titleLeave: (e: EventClickNode) => {\n        titleOver = false;\n        store.commit(\n          `tree/${treeMutations.SET_SELECTED_NODE_ID}`,\n          route.params.id\n        );\n      },\n      mapDragging: (event: EventDraggingBackground) => {\n        if (store.state.editModeOn && titleOver) {\n          // to prevent pan while node position editing ( = title dragging in edit mode)\n          return;\n        }\n        store.commit(`zoomPan/${zoomPanMutations.ADD_PAN}`, event);\n      },\n      zoom: (event: EventWheel) => {\n        // initial value of center (when root.border == viewport)\n        const initial = {\n          x: (event.center.x - zoomPanState.pan.x) / zoomPanState.zoom,\n          y: (event.center.y - zoomPanState.pan.y) / zoomPanState.zoom\n        };\n        store.commit(`zoomPan/${zoomPanMutations.ADD_ZOOM}`, -1 * event.delta);\n        const after = {\n          x: initial.x * zoomPanState.zoom + zoomPanState.pan.x,\n          y: initial.y * zoomPanState.zoom + zoomPanState.pan.y\n        };\n        store.commit(`zoomPan/${zoomPanMutations.ADD_PAN}`, {\n          from: after,\n          to: event.center\n        });\n        store.commit(\n          `zoomPan/${zoomPanMutations.SET_ZOOM_CENTER}`,\n          event.center\n        );\n      }\n    };\n  }\n});\n","import { render } from \"./Home.vue?vue&type=template&id=a5aa7710\"\nimport script from \"./Home.vue?vue&type=script&lang=ts\"\nexport * from \"./Home.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\n  <h1 v-if=\"!isAuthorized\">Only authorized users can view changes</h1>\n  <div v-else>\n    <div><b>id:</b> {{ route.params.id }}</div>\n    <div>\n      <b>timestamp:</b>\n      {{ new Date(change[\"timestamp\"]).toLocaleDateString() }}\n      {{ new Date(change[\"timestamp\"]).toLocaleTimeString() }}\n    </div>\n    <div><b>action:</b> {{ change[\"action\"] }}</div>\n    <div><b>node_id:</b> {{ change[\"node_id\"] }}</div>\n    <div><b>user_id:</b> {{ change[\"user_id\"] }}</div>\n    <b>value:</b>\n    <Markdown\n      v-if=\"['content', 'name'].indexOf(change['action']) != -1\"\n      :content=\"change['attributes']['value']\"\n      :rows=\"20\"\n    />\n    <div v-else>{{ JSON.stringify(change[\"attributes\"]) }}</div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { useRoute } from \"vue-router\";\nimport { useStore } from \"@/store\";\nimport { computed, watch, ref } from \"vue\";\nimport { doc, getDoc, getFirestore } from \"firebase/firestore\";\nimport Markdown from \"@/components/node_content/Markdown.vue\";\n\nexport default {\n  name: \"Change\",\n  components: { Markdown },\n\n  setup() {\n    const store = useStore();\n    const isAuthorized = computed(\n      () => store.state.user.user && !store.state.user.user.isAnonymous\n    );\n    const route = useRoute();\n    const change = ref({});\n\n    watch(\n      () => isAuthorized.value,\n      async () => {\n        if (isAuthorized.value) {\n          // fetch change from firestore\n          const docRef = doc(\n            getFirestore(),\n            \"changes\",\n            route.params.id as string\n          );\n          const docSnap = await getDoc(docRef);\n\n          if (docSnap.exists()) {\n            change.value = docSnap.data();\n          }\n        }\n      },\n      {\n        immediate: true\n      }\n    );\n\n    return {\n      isAuthorized,\n      route,\n      change\n    };\n  }\n};\n</script>\n","\nimport { useRoute } from \"vue-router\";\nimport { useStore } from \"@/store\";\nimport { computed, watch, ref } from \"vue\";\nimport { doc, getDoc, getFirestore } from \"firebase/firestore\";\nimport Markdown from \"@/components/node_content/Markdown.vue\";\n\nexport default {\n  name: \"Change\",\n  components: { Markdown },\n\n  setup() {\n    const store = useStore();\n    const isAuthorized = computed(\n      () => store.state.user.user && !store.state.user.user.isAnonymous\n    );\n    const route = useRoute();\n    const change = ref({});\n\n    watch(\n      () => isAuthorized.value,\n      async () => {\n        if (isAuthorized.value) {\n          // fetch change from firestore\n          const docRef = doc(\n            getFirestore(),\n            \"changes\",\n            route.params.id as string\n          );\n          const docSnap = await getDoc(docRef);\n\n          if (docSnap.exists()) {\n            change.value = docSnap.data();\n          }\n        }\n      },\n      {\n        immediate: true\n      }\n    );\n\n    return {\n      isAuthorized,\n      route,\n      change\n    };\n  }\n};\n","import { render } from \"./Change.vue?vue&type=template&id=14f8614f\"\nimport script from \"./Change.vue?vue&type=script&lang=ts\"\nexport * from \"./Change.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\n  <h1 v-if=\"!isAuthorized\">Only authorized users can view node profile</h1>\n  <div v-else>\n    <div><b>id:</b> {{ route.params.id }}</div>\n    <div><b>is removed from map:</b> {{ node[\"is_in_trash\"] }}</div>\n    <div>\n      <b>parent_id:</b>\n      <a target=\"_blank\" :href=\"node['map']['parentID']\">{{\n        node[\"map\"][\"parentID\"]\n      }}</a>\n    </div>\n    <div><b>name:</b> {{ node[\"map\"][\"name\"] }}</div>\n    <b>content:</b>\n    <Markdown\n      :content=\"node['node_content'] ? node['node_content']['content'] : ''\"\n      :rows=\"20\"\n    />\n    <div>\n      <b>precondition:</b>\n      <div v-for=\"id of node['precondition']\" :key=\"id\">\n        <a target=\"_blank\" :href=\"id\">{{ id }}</a>\n      </div>\n    </div>\n    <div>\n      <b>children:</b>\n      <div v-for=\"id of node['map']['children']\" :key=\"id\">\n        <a target=\"_blank\" :href=\"id\">{{ id }}</a>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { useRoute } from \"vue-router\";\nimport { useStore } from \"@/store\";\nimport { computed, watch, ref } from \"vue\";\nimport Markdown from \"@/components/node_content/Markdown.vue\";\nimport firebase from \"firebase/compat\";\n\nexport default {\n  name: \"NodeDescription\",\n  components: { Markdown },\n\n  setup() {\n    const store = useStore();\n    const isAuthorized = computed(\n      () => store.state.user.user && !store.state.user.user.isAnonymous\n    );\n    const route = useRoute();\n    const node = ref({} as any);\n\n    watch(\n      () => isAuthorized.value,\n      async () => {\n        console.log(\"isAuthorized.value\", isAuthorized.value);\n        if (isAuthorized.value) {\n          // fetch change from firestore\n          const docRef = firebase\n            .database()\n            .ref(`/trash/${route.params.id}`)\n            .once(\"value\", data => {\n              if (data.exists()) {\n                node.value = data.val();\n                node.value[\"is_in_trash\"] = true;\n                console.log(\"node.value\", node.value);\n              } else {\n                // not in /trash, try to get from /map, /node_content, /precondition\n                node.value[\"is_in_trash\"] = false;\n\n                // map\n                firebase\n                  .database()\n                  .ref(`/map/${route.params.id}`)\n                  .once(\"value\", data => {\n                    if (data.exists()) {\n                      node.value[\"map\"] = data.val();\n                    }\n                  });\n\n                // node_content\n                firebase\n                  .database()\n                  .ref(`/node_content/${route.params.id}`)\n                  .once(\"value\", data => {\n                    if (data.exists()) {\n                      node.value[\"node_content\"] = data.val();\n                    }\n                  });\n\n                // precondition\n                firebase\n                  .database()\n                  .ref(`/precondition/${route.params.id}`)\n                  .once(\"value\", data => {\n                    if (data.exists()) {\n                      node.value[\"precondition\"] = data.val();\n                    }\n                  });\n              }\n            });\n        }\n      },\n      {\n        immediate: true\n      }\n    );\n\n    return {\n      isAuthorized: isAuthorized,\n      route,\n      node\n    };\n  }\n};\n</script>\n","\nimport { useRoute } from \"vue-router\";\nimport { useStore } from \"@/store\";\nimport { computed, watch, ref } from \"vue\";\nimport Markdown from \"@/components/node_content/Markdown.vue\";\nimport firebase from \"firebase/compat\";\n\nexport default {\n  name: \"NodeDescription\",\n  components: { Markdown },\n\n  setup() {\n    const store = useStore();\n    const isAuthorized = computed(\n      () => store.state.user.user && !store.state.user.user.isAnonymous\n    );\n    const route = useRoute();\n    const node = ref({} as any);\n\n    watch(\n      () => isAuthorized.value,\n      async () => {\n        console.log(\"isAuthorized.value\", isAuthorized.value);\n        if (isAuthorized.value) {\n          // fetch change from firestore\n          const docRef = firebase\n            .database()\n            .ref(`/trash/${route.params.id}`)\n            .once(\"value\", data => {\n              if (data.exists()) {\n                node.value = data.val();\n                node.value[\"is_in_trash\"] = true;\n                console.log(\"node.value\", node.value);\n              } else {\n                // not in /trash, try to get from /map, /node_content, /precondition\n                node.value[\"is_in_trash\"] = false;\n\n                // map\n                firebase\n                  .database()\n                  .ref(`/map/${route.params.id}`)\n                  .once(\"value\", data => {\n                    if (data.exists()) {\n                      node.value[\"map\"] = data.val();\n                    }\n                  });\n\n                // node_content\n                firebase\n                  .database()\n                  .ref(`/node_content/${route.params.id}`)\n                  .once(\"value\", data => {\n                    if (data.exists()) {\n                      node.value[\"node_content\"] = data.val();\n                    }\n                  });\n\n                // precondition\n                firebase\n                  .database()\n                  .ref(`/precondition/${route.params.id}`)\n                  .once(\"value\", data => {\n                    if (data.exists()) {\n                      node.value[\"precondition\"] = data.val();\n                    }\n                  });\n              }\n            });\n        }\n      },\n      {\n        immediate: true\n      }\n    );\n\n    return {\n      isAuthorized: isAuthorized,\n      route,\n      node\n    };\n  }\n};\n","import { render } from \"./NodeDescription.vue?vue&type=template&id=ab2b81b0\"\nimport script from \"./NodeDescription.vue?vue&type=script&lang=ts\"\nexport * from \"./NodeDescription.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\n  <h1>Oops, it looks like the page you're looking for doesn't exist.</h1>\n</template>\n","import { render } from \"./NotFound.vue?vue&type=template&id=600d9e34\"\nconst script = {}\nscript.render = render\n\nexport default script","import { createRouter, createWebHistory, RouteRecordRaw } from \"vue-router\";\nimport PasswordLogin from \"../views/PasswordLogin.vue\";\nimport Home from \"../views/Home.vue\";\nimport Change from \"../views/Change.vue\";\nimport NodeDescription from \"../views/NodeDescription.vue\";\nimport NotFound from \"../views/NotFound.vue\";\n\nconst routes: Array<RouteRecordRaw> = [\n  {\n    path: \"/passwordLogin\",\n    component: PasswordLogin\n  },\n  {\n    path: \"/node_description/:id?\",\n    name: \"node_description\",\n    component: NodeDescription\n  },\n  {\n    path: \"/change/:id?\",\n    name: \"change\",\n    component: Change\n  },\n  {\n    path: \"/:id?\",\n    name: \"node\",\n    component: Home\n  },\n  {\n    path: \"/:catchAll(.*)\",\n    component: NotFound\n  }\n];\n\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n});\n\nexport default router;\n","import { createApp } from \"vue\";\nimport App from \"./App.vue\";\nimport PrimeVue from \"primevue/config\";\nimport ConfirmationService from \"primevue/confirmationservice\";\nimport ToastService from \"primevue/toastservice\";\nimport router from \"./router\";\nimport { store, key } from \"./store\";\n// primevue ui stuff\nimport \"primevue/resources/themes/aura-light-green/theme.css\"; //theme\nimport \"primevue/resources/primevue.min.css\"; //core css\nimport \"primeicons/primeicons.css\"; //icons\nimport \"primeflex/primeflex.css\";\n\ncreateApp(App)\n  .use(store, key)\n  .use(router)\n  .use(PrimeVue)\n  .use(ConfirmationService)\n  .use(ToastService)\n  .mount(\"#app\");\n","var map = {\n\t\"./bmp\": \"0dcc\",\n\t\"./bmp.js\": \"0dcc\",\n\t\"./gif\": \"c416\",\n\t\"./gif.js\": \"c416\",\n\t\"./jpg\": \"135b\",\n\t\"./jpg.js\": \"135b\",\n\t\"./png\": \"e9ef\",\n\t\"./png.js\": \"e9ef\",\n\t\"./psd\": \"520c\",\n\t\"./psd.js\": \"520c\",\n\t\"./svg\": \"b0bf\",\n\t\"./svg.js\": \"b0bf\",\n\t\"./tiff\": \"f270\",\n\t\"./tiff.js\": \"f270\",\n\t\"./webp\": \"cf1e\",\n\t\"./webp.js\": \"cf1e\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"cd50\";","module.exports = __webpack_public_path__ + \"img/bottles.e96489fc.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Preconditions_title_1ANO_\"};","module.exports = __webpack_public_path__ + \"img/minus.aef7ecbb.svg\";","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./MapLayer.vue?vue&type=style&index=0&id=59d7967e&scoped=true&lang=css\"","module.exports = __webpack_public_path__ + \"img/pin-on-map.3e21aea9.svg\";","export { default } from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-0-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-0-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-0-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Preconditions.vue?vue&type=style&index=0&id=630684d1&module=true&lang=css\"; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-0-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-0-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-0-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Preconditions.vue?vue&type=style&index=0&id=630684d1&module=true&lang=css\"","module.exports = __webpack_public_path__ + \"img/add-off.32a0c20b.svg\";"],"sourceRoot":""}